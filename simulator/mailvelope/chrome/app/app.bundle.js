/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 4396:
/*!****************************************************************************!*\
  !*** ./node_modules/@hypnosphi/create-react-context/lib/implementation.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;

var _react = __webpack_require__(/*! react */ 1594);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(/*! prop-types */ 5556);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _gud = __webpack_require__(/*! gud */ 2611);

var _gud2 = _interopRequireDefault(_gud);

var _warning = __webpack_require__(/*! warning */ 9771);

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MAX_SIGNED_31_BIT_INT = 1073741823;

// Inlined Object.is polyfill.
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
function objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function (h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function (handler) {
        return handler(value, changedBits);
      });
    }
  };
}

function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}

function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;

  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';

  var Provider = function (_Component) {
    _inherits(Provider, _Component);

    function Provider() {
      var _temp, _this, _ret;

      _classCallCheck(this, Provider);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
    }

    Provider.prototype.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };

    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits = void 0;

        if (objectIs(oldValue, newValue)) {
          changedBits = 0; // No change
        } else {
          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
          if (false) {}

          changedBits |= 0;

          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };

    Provider.prototype.render = function render() {
      return this.props.children;
    };

    return Provider;
  }(_react.Component);

  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);

  var Consumer = function (_Component2) {
    _inherits(Consumer, _Component2);

    function Consumer() {
      var _temp2, _this2, _ret2;

      _classCallCheck(this, Consumer);

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
        value: _this2.getValue()
      }, _this2.onUpdate = function (newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;
        if ((observedBits & changedBits) !== 0) {
          _this2.setState({ value: _this2.getValue() });
        }
      }, _temp2), _possibleConstructorReturn(_this2, _ret2);
    }

    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;

      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
      : observedBits;
    };

    Consumer.prototype.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }
      var observedBits = this.props.observedBits;

      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
      : observedBits;
    };

    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };

    Consumer.prototype.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };

    Consumer.prototype.render = function render() {
      return onlyChild(this.props.children)(this.state.value);
    };

    return Consumer;
  }(_react.Component);

  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);


  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

exports["default"] = createReactContext;
module.exports = exports['default'];

/***/ }),

/***/ 2248:
/*!*******************************************************************!*\
  !*** ./node_modules/@hypnosphi/create-react-context/lib/index.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;

var _react = __webpack_require__(/*! react */ 1594);

var _react2 = _interopRequireDefault(_react);

var _implementation = __webpack_require__(/*! ./implementation */ 4396);

var _implementation2 = _interopRequireDefault(_implementation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports["default"] = _react2.default.createContext || _implementation2.default;
module.exports = exports['default'];

/***/ }),

/***/ 8075:
/*!*********************************************!*\
  !*** ./node_modules/call-bind/callBound.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ 453);

var callBind = __webpack_require__(/*! ./ */ 487);

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};


/***/ }),

/***/ 487:
/*!*****************************************!*\
  !*** ./node_modules/call-bind/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! function-bind */ 6743);
var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ 453);
var setFunctionLength = __webpack_require__(/*! set-function-length */ 6897);

var $TypeError = __webpack_require__(/*! es-errors/type */ 9675);
var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $defineProperty = __webpack_require__(/*! es-define-property */ 655);
var $max = GetIntrinsic('%Math.max%');

module.exports = function callBind(originalFunction) {
	if (typeof originalFunction !== 'function') {
		throw new $TypeError('a function is required');
	}
	var func = $reflectApply(bind, $call, arguments);
	return setFunctionLength(
		func,
		1 + $max(0, originalFunction.length - (arguments.length - 1)),
		true
	);
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}


/***/ }),

/***/ 2121:
/*!**************************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/BrowserStore.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BrowserStore = void 0;
var Store_1 = __webpack_require__(/*! ./Store */ 9559);
var storejs = __webpack_require__(/*! store/dist/store.modern */ 7369);
var BrowserStore = /** @class */ (function (_super) {
    __extends(BrowserStore, _super);
    function BrowserStore() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BrowserStore.prototype.load = function (args) {
        var data = storejs.get(BrowserStore.storeJsKey);
        if (data && typeof data === 'object'
            && ((data.consents && typeof data.consents === 'object')
                || (data.visits && Array.isArray(data.visits))
                || (data.events && Array.isArray(data.events)))) {
            return data;
        }
        return undefined;
    };
    BrowserStore.prototype.persist = function (async, callback) {
        // We're not supporting web workers or the like in the browser environment, yet,
        // to do async storing.
        storejs.set(BrowserStore.storeJsKey, this);
        callback();
    };
    BrowserStore.prototype.send = function (data, server, timeout, done) {
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function () {
            try {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status !== 200 && xhr.status !== 204) {
                        return done(new Error("HTTP Error ".concat(xhr.status, ": ").concat(xhr.responseText)));
                    }
                    done();
                }
            }
            catch (e) {
                done(e);
            }
        };
        xhr.timeout = timeout * 1000;
        xhr.open('POST', server);
        xhr.setRequestHeader('Content-type', 'application/json; charset=UTF-8');
        xhr.send(data);
    };
    BrowserStore.storeJsKey = 'clean-insights';
    return BrowserStore;
}(Store_1.Store));
exports.BrowserStore = BrowserStore;


/***/ }),

/***/ 3778:
/*!**********************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/Campaign.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Campaign = void 0;
var dayjs_1 = __importDefault(__webpack_require__(/*! dayjs */ 4353));
var duration_1 = __importDefault(__webpack_require__(/*! dayjs/plugin/duration */ 3522));
var isSameOrBefore_1 = __importDefault(__webpack_require__(/*! dayjs/plugin/isSameOrBefore */ 8906));
dayjs_1.default.extend(duration_1.default);
dayjs_1.default.extend(isSameOrBefore_1.default);
var EventAggregationRule_1 = __webpack_require__(/*! ./EventAggregationRule */ 40);
var Campaign = /** @class */ (function () {
    /**
     * @param {dayjs.Dayjs|CampaignData} start
     *      The start of the campaign. (inclusive)
     *
     * @param {dayjs.Dayjs=} end
     *      The end of the campaign. (inclusive) OPTIONAL if provided via an object as first argument.
     *
     * @param {number=} aggregationPeriodLength
     *      The length of the aggregation period in number of days. At the end of a period,
     *      the aggregated data will be sent to the analytics server.
     *      OPTIONAL if provided via an object as first argument.
     *
     * @param {number=} numberOfPeriods=1
     *      The number of periods you want to measure in a row. Therefore the total
     *      length in days you measure one user is `aggregationPeriodLength * numberOfPeriods`
     *      beginning with the first day of the next period after the user consented.
     *
     * @param {boolean=} onlyRecordOnce=false
     *      Will result in recording only the first time a visit or event happened
     *      per period. Useful for yes/no questions.
     *
     * @param {EventAggregationRule=} eventAggregationRule=.Sum
     *      The rule how to aggregate the value of an event (if any given)
     *      with subsequent calls.
     *
     * @param {boolean=} strengthenAnonymity=false
     *      When set to true, measurements only ever start at the next full period.
     *      This ensures, that anonymity guaranties aren't accidentally reduced because the
     *      first period is very short.
     */
    function Campaign(start, end, aggregationPeriodLength, numberOfPeriods, onlyRecordOnce, eventAggregationRule, strengthenAnonymity) {
        if ('isValid' in start) { // Just checks for an arbitrary Day.js function, because instanceof test throws.
            if (!end || !aggregationPeriodLength) {
                throw TypeError('You either need to provide all non-optional arguments in their place or in an object as the first argument.');
            }
            this.start = start;
            this.end = end;
            this.aggregationPeriodLength = aggregationPeriodLength;
            this.numberOfPeriods = typeof numberOfPeriods === 'number' ? numberOfPeriods : 1;
            this.onlyRecordOnce = onlyRecordOnce || false;
            this.eventAggregationRule = eventAggregationRule || EventAggregationRule_1.EventAggregationRule.Sum;
            this.strengthenAnonymity = strengthenAnonymity || false;
        }
        else {
            this.start = (0, dayjs_1.default)(start.start);
            this.end = (0, dayjs_1.default)(start.end);
            this.aggregationPeriodLength = start.aggregationPeriodLength;
            this.numberOfPeriods = typeof start.numberOfPeriods === 'number' ? start.numberOfPeriods : 1;
            this.onlyRecordOnce = start.onlyRecordOnce || false;
            this.eventAggregationRule = start.eventAggregationRule === "avg" ? EventAggregationRule_1.EventAggregationRule.Avg : EventAggregationRule_1.EventAggregationRule.Sum;
            this.strengthenAnonymity = start.strengthenAnonymity || false;
        }
    }
    Object.defineProperty(Campaign.prototype, "aggregationPeriod", {
        get: function () {
            return dayjs_1.default.duration(this.aggregationPeriodLength, 'days');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Campaign.prototype, "currentMeasurementPeriod", {
        /**
         * Returns the current measurement period, aka. the period where NOW is in.
         *
         * If NOW is outside any possible period, because the campaign hasn't started,
         * yet, or already ended, will return `null`.
         *
         * The first period is defined as `aggregationPeriodLength` number of days after
         * the `start` of the campaign.
         *
         * @returns {?{start: dayjs.Dayjs, end: dayjs.Dayjs}}
         */
        get: function () {
            if (this.numberOfPeriods <= 0) {
                return null;
            }
            var now = (0, dayjs_1.default)();
            var periodEnd = this.start;
            do {
                periodEnd = periodEnd.add(this.aggregationPeriod);
            } while (periodEnd.isSameOrBefore(now));
            var periodStart = periodEnd.subtract(this.aggregationPeriod).isAfter(this.start)
                ? periodEnd.subtract(this.aggregationPeriod)
                : this.start;
            if (periodEnd.isAfter(this.end)) {
                periodEnd = this.end;
            }
            now = (0, dayjs_1.default)();
            if (periodStart.isAfter(now) || periodEnd.isBefore(now)) {
                return null;
            }
            return { start: periodStart, end: periodEnd };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Campaign.prototype, "nextTotalMeasurementPeriod", {
        /**
         * @returns {?{start: dayjs.Dayjs, end: dayjs.Dayjs}}
         */
        get: function () {
            var current = this.currentMeasurementPeriod;
            if (!current) {
                return null;
            }
            var periodStart = this.strengthenAnonymity ? current.end : current.start;
            var periodEnd = periodStart;
            var counter = 0;
            while (counter < this.numberOfPeriods && periodEnd.add(this.aggregationPeriod) <= this.end) {
                periodEnd = periodEnd.add(this.aggregationPeriod);
                counter += 1;
            }
            if (periodStart.isSame(periodEnd)) {
                return null;
            }
            return { start: periodStart, end: periodEnd };
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Apply the `eventAggregationRule` to the given event with the given value.
     *
     * @param {Event} event
     *      The event to apply the value to.
     *
     * @param {number=} value
     *      The value to apply.
     */
    Campaign.prototype.apply = function (event, value) {
        if (this.onlyRecordOnce || typeof value !== 'number') {
            return;
        }
        var oldVal = typeof event.value === 'number' ? event.value : 0;
        switch (this.eventAggregationRule) {
            case "sum":
                event.value = oldVal + value;
                break;
            case "avg":
                // times was already increased in CleanInsights#getAndMeasure!
                event.value = (oldVal * (event.times - 1) + value) / event.times;
                break;
        }
    };
    Campaign.prototype.toString = function () {
        return "[".concat(this.constructor.name, ": start=").concat(this.start, ", end=").concat(this.end, ", aggregationPeriodLength=").concat(this.aggregationPeriodLength, ", numberOfPeriods=").concat(this.numberOfPeriods, ", onlyRecordOnce=").concat(this.onlyRecordOnce, ", eventAggregationRule=").concat(this.eventAggregationRule, "]");
    };
    return Campaign;
}());
exports.Campaign = Campaign;


/***/ }),

/***/ 3698:
/*!***************************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/CleanInsights.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CleanInsights = void 0;
var BrowserStore_1 = __webpack_require__(/*! ./BrowserStore */ 2121);
var consents_1 = __webpack_require__(/*! ./consents */ 6939);
var Configuration_1 = __webpack_require__(/*! ./Configuration */ 2148);
var DataPoint_1 = __webpack_require__(/*! ./DataPoint */ 1804);
var Event_1 = __webpack_require__(/*! ./Event */ 14);
var Insights_1 = __webpack_require__(/*! ./Insights */ 4013);
var Visit_1 = __webpack_require__(/*! ./Visit */ 3613);
var dayjs_1 = __importDefault(__webpack_require__(/*! dayjs */ 4353));
var duration_1 = __importDefault(__webpack_require__(/*! dayjs/plugin/duration */ 3522));
var isSameOrBefore_1 = __importDefault(__webpack_require__(/*! dayjs/plugin/isSameOrBefore */ 8906));
var isSameOrAfter_1 = __importDefault(__webpack_require__(/*! dayjs/plugin/isSameOrAfter */ 8867));
var localizedFormat_1 = __importDefault(__webpack_require__(/*! dayjs/plugin/localizedFormat */ 5750));
dayjs_1.default.extend(duration_1.default);
dayjs_1.default.extend(isSameOrBefore_1.default);
dayjs_1.default.extend(isSameOrAfter_1.default);
dayjs_1.default.extend(localizedFormat_1.default);
var CleanInsights = /** @class */ (function () {
    /**
     * @param {Object|Configuration} configuration
     *      The Configuration provided as a `Configuration` object or as a plain dictionary.
     *
     * @param {Store=} store=BrowserStore
     *      Either your own implementation of a `Store`. OPTIONAL.
     *      Defaults to `BrowserStore` which uses Store.js - an abstraction over LocalStorage.
     */
    function CleanInsights(configuration, store) {
        var _this = this;
        this.persistenceCounter = 0;
        this.sending = false;
        this.failedSubmissionCount = 0;
        this.lastFailedSubmission = dayjs_1.default.unix(0);
        if (typeof configuration === 'object') {
            if (configuration instanceof Configuration_1.Configuration) {
                this.conf = configuration;
            }
            else {
                this.conf = new Configuration_1.Configuration(configuration);
            }
        }
        else {
            throw new TypeError('Invalid configuration provided.');
        }
        var debug = function (message) { _this.debug(message); };
        if (!this.conf.check(debug)) {
            throw new TypeError('Invalid configuration provided.');
        }
        if (typeof store === 'object' && store) {
            this.store = store;
        }
        else {
            this.store = new BrowserStore_1.BrowserStore({}, debug);
        }
    }
    // noinspection JSUnusedGlobalSymbols
    /**
     * Track a scene visit.
     *
     * @param {string[]} scenePath
     *      A hierarchical path best describing the structure of your scenes. E.g. `['Main', 'Settings', 'Some Setting']`.
     * @param {string} campaignId
     *      The campaign ID as per your configuration, where this measurement belongs to.
     */
    CleanInsights.prototype.measureVisit = function (scenePath, campaignId) {
        var campaign = this.getCampaignIfGood(campaignId, scenePath.join("/"));
        if (campaign) {
            var visit = this.getAndMeasure(this.store.visits, campaignId, campaign, function (visit) {
                return visit.scenePath.join('/') === scenePath.join('/');
            });
            if (visit) {
                this.debug("Gain visit insight: ".concat(visit));
            }
            else {
                // Align first and last timestamps with campaign measurement period,
                // in order not to accidentally leak more information than promised.
                var period = campaign.currentMeasurementPeriod;
                if (period) {
                    visit = new Visit_1.Visit(scenePath, campaignId, undefined, period.start, period.end);
                    this.store.visits.push(visit);
                    this.debug("Gain visit insight: ".concat(visit));
                }
                else {
                    this.debug("campaign.currentMeasurementPeriod == null! This should not happen!");
                }
            }
        }
        this.persistAndSend();
    };
    /**
     * Track an event.
     *
     * @param {string} category
     *      The event category. Must not be empty. (e.g. Videos, Music, Games...)
     * @param {string} action
     *      The event action. Must not be empty. (e.g. Play, Pause, Duration, Add Playlist, Downloaded, Clicked...)
     * @param {string} campaignId
     *      The campaign ID as per your configuration, where this measurement belongs to.
     * @param {string=} name
     *      The event name. OPTIONAL.
     * @param {number=} value
     *      The event value. OPTIONAL.
     */
    CleanInsights.prototype.measureEvent = function (category, action, campaignId, name, value) {
        var campaign = this.getCampaignIfGood(campaignId, "".concat(category, "/").concat(action));
        if (campaign) {
            var event_1 = this.getAndMeasure(this.store.events, campaignId, campaign, function (event) {
                return event.category === category
                    && event.action === action
                    && event.name === name;
            });
            if (event_1) {
                campaign.apply(event_1, value);
                this.debug("Gain event insight: ".concat(event_1));
            }
            else {
                // Align first and last timestamps with campaign measurement period,
                // in order not to accidentally leak more information than promised.
                var period = campaign.currentMeasurementPeriod;
                if (period) {
                    event_1 = new Event_1.Event(category, action, name, value, campaignId, undefined, period.start, period.end);
                    this.store.events.push(event_1);
                    this.debug("Gain event insight: ".concat(event_1));
                }
                else {
                    this.debug("campaign.currentMeasurementPeriod == null! This should not happen!");
                }
            }
        }
        this.persistAndSend();
    };
    Object.defineProperty(CleanInsights.prototype, "featureConsents", {
        get: function () {
            return Object.keys(this.store.consents.features);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CleanInsights.prototype, "campaignConsents", {
        get: function () {
            return Object.keys(this.store.consents.campaigns);
        },
        enumerable: false,
        configurable: true
    });
    CleanInsights.prototype.getFeatureConsentByIndex = function (index) {
        var feature = Object.keys(this.store.consents.features)[index];
        return this.store.consents.consentForFeature(feature);
    };
    CleanInsights.prototype.getCampaignConsentByIndex = function (index) {
        var campaignId = Object.keys(this.store.consents.campaigns)[index];
        return this.store.consents.consentForCampaign(campaignId);
    };
    CleanInsights.prototype.grantFeature = function (feature) {
        var consent = this.store.consents.grantFeature(feature);
        this.persistAndSend();
        return consent;
    };
    CleanInsights.prototype.denyFeature = function (feature) {
        var consent = this.store.consents.denyFeature(feature);
        this.persistAndSend();
        return consent;
    };
    /**
     * Returns the consent for a given feature, if any available.
     *
     * @param {Feature} feature The feature to get the consent for.
     * @returns {?FeatureConsent} the `FeatureConsent` for the given feature or `null`, if consent unknown.
     */
    CleanInsights.prototype.consentForFeature = function (feature) {
        if (this.conf.serverSideAnonymousUsage)
            return new consents_1.FeatureConsent(feature, new consents_1.Consent(false));
        return this.store.consents.consentForFeature(feature);
    };
    /**
     * Checks the consent state of a feature.
     *
     * @param {Feature} feature The feature to check the consent state of.
     * @returns {ConsentState} the current state of consent.
     */
    CleanInsights.prototype.stateOfFeature = function (feature) {
        if (this.conf.serverSideAnonymousUsage)
            return consents_1.ConsentState.denied;
        return this.store.consents.stateOfFeature(feature);
    };
    CleanInsights.prototype.grantCampaign = function (campaignId) {
        if (!this.conf.campaigns.hasOwnProperty(campaignId)) {
            return null;
        }
        var campaign = this.conf.campaigns[campaignId];
        var consent = this.store.consents.grantCampaign(campaignId, campaign);
        this.persistAndSend();
        return consent;
    };
    CleanInsights.prototype.denyCampaign = function (campaignId) {
        if (!this.conf.campaigns.hasOwnProperty(campaignId)) {
            return null;
        }
        var consent = this.store.consents.denyCampaign(campaignId);
        this.persistAndSend();
        return consent;
    };
    CleanInsights.prototype.isCampaignCurrentlyGranted = function (campaignId) {
        return this.stateOfCampaign(campaignId) == consents_1.ConsentState.granted;
    };
    /**
     * Returns the consent for a given campaign, if any available.
     *
     * @param {string} campaignId The campaign ID to get the consent for.
     * @return {?CampaignConsent} the `CampaignConsent` for the given campaign or `null`, if consent unknown.
     */
    CleanInsights.prototype.consentForCampaign = function (campaignId) {
        if (this.conf.serverSideAnonymousUsage)
            return new consents_1.CampaignConsent(campaignId, new consents_1.Consent(true));
        if (!this.conf.campaigns.hasOwnProperty(campaignId))
            return null;
        if ((0, dayjs_1.default)().isSameOrAfter(this.conf.campaigns[campaignId].end))
            return null;
        return this.store.consents.consentForCampaign(campaignId);
    };
    /**
     * Checks the consent state of a campaign.
     *
     * @param {string} campaignId The campaign ID to check the consent state of.
     * @return {ConsentState} the current state of consent.
     */
    CleanInsights.prototype.stateOfCampaign = function (campaignId) {
        if (this.conf.serverSideAnonymousUsage)
            return consents_1.ConsentState.granted;
        if (!this.conf.campaigns.hasOwnProperty(campaignId))
            return consents_1.ConsentState.unconfigured;
        if ((0, dayjs_1.default)().isSameOrAfter(this.conf.campaigns[campaignId].end))
            return consents_1.ConsentState.unconfigured;
        return this.store.consents.stateOfCampaign(campaignId);
    };
    CleanInsights.prototype.requestConsentForCampaign = function (campaignId, consentRequestUi, completed) {
        var _this = this;
        if (typeof completed !== 'function') {
            completed = function () { };
        }
        if (!this.conf.campaigns.hasOwnProperty(campaignId)) {
            this.debug("Cannot request consent: Campaign '".concat(campaignId, "' not configured."));
            completed(false);
            return '';
        }
        var campaign = this.conf.campaigns[campaignId];
        if ((0, dayjs_1.default)().isSameOrAfter(campaign.end)) {
            this.debug("Cannot request consent: End of campaign '".concat(campaignId, "' reached."));
            completed(false);
            return '';
        }
        if (campaign.nextTotalMeasurementPeriod === null) {
            this.debug("Cannot request consent: Campaign '".concat(campaignId, "' configuration seems messed up."));
            completed(false);
            return '';
        }
        if (this.store.consents.campaigns.hasOwnProperty(campaignId)) {
            var consent = this.store.consents.campaigns[campaignId];
            this.debug("Already asked for consent for campaign '".concat(campaignId, "'. It was ").concat(consent.granted ? "granted between ".concat(consent.start.format(), " and ").concat(consent.end.format()) : "denied on ".concat(consent.start.format()), "."));
            completed(consent.granted);
            return '';
        }
        var complete = function (granted) {
            if (granted) {
                _this.store.consents.grantCampaign(campaignId, campaign);
            }
            else {
                _this.store.consents.denyCampaign(campaignId);
            }
            if (completed) {
                completed(granted);
            }
        };
        return consentRequestUi.showForCampaign(campaignId, campaign, complete);
    };
    CleanInsights.prototype.requestConsentForFeature = function (feature, consentRequestUi, completed) {
        var _this = this;
        if (typeof completed !== 'function') {
            completed = function () { };
        }
        if (this.store.consents.features.hasOwnProperty(feature)) {
            var consent = this.store.consents.features[feature];
            this.debug("Already asked for consent for feature '".concat(feature, "'. It was ").concat(consent.granted ? "granted" : "denied", " on ").concat(consent.start.format(), "."));
            completed(consent.granted);
            return '';
        }
        var complete = function (granted) {
            if (granted) {
                _this.store.consents.grantFeature(feature);
            }
            else {
                _this.store.consents.denyFeature(feature);
            }
            if (completed) {
                completed(_this.store.consents.stateOfFeature(feature) == consents_1.ConsentState.granted);
            }
        };
        return consentRequestUi.showForFeature(feature, complete);
    };
    /**
     * Sends an empty body to the server for easy debugging of server-related issues like TLS and CORS problems.
     *
     * **DON'T LEAVE THIS IN PRODUCTION**, once you're done fixing any server issues. There's absolutely no point in
     * pinging the server with this all the time, it will undermine your privacy promise to your users!
     *
     * @param {function(?Error)} done
     *      Callback, when the operation is finished, either successfully or not.
     */
    CleanInsights.prototype.testServer = function (done) {
        var _this = this;
        this.store.send('', this.conf.server, this.conf.timeout, function (error) {
            if (!error) {
                error = new Error('Server replied with no error while it should have responded with HTTP 400 Bad Request!');
            }
            if (error.message.startsWith('HTTP Error 400:')) {
                _this.debug('Successfully tested server.');
                if (done)
                    done();
                return;
            }
            _this.debug(error);
            if (done)
                done(error);
        });
    };
    /**
     * Persist accumulated data to the filesystem/local storage.
     *
     * A website should call this in an `onUnload` event, a Node.JS app should call this when the
     * process exits for whatever reason. (See [node-cleanup](https://github.com/jtlapp/node-cleanup)).
     */
    CleanInsights.prototype.persist = function () {
        this._persist(false, true);
    };
    /**
     * Persist accumulated data to the filesystem/local storage.
     *
     * @param {boolean} async
     *      If true, returns immediately and does persistence asynchronously, only if it's already due.
     *
     * @param {boolean=} force=false
     *      Write regardless of threshold reached.
     */
    CleanInsights.prototype._persist = function (async, force) {
        var _this = this;
        this.persistenceCounter += 1;
        var callback = function (error) {
            if (error) {
                _this.debug(error);
            }
            else {
                _this.persistenceCounter = 0;
                _this.debug("Data persisted to storage.");
            }
        };
        if (force || this.persistenceCounter >= this.conf.persistEveryNTimes) {
            this.store.persist(async, callback);
        }
    };
    CleanInsights.prototype.persistAndSend = function () {
        var _this = this;
        this._persist(true);
        if (this.sending) {
            this.debug("Data sending already in progress.");
            return;
        }
        this.sending = true;
        if (this.failedSubmissionCount > 0) {
            // Calculate a delay for the next retry:
            // Minimum is 2 times the configured network timeout after the first failure,
            // exponentially increasing with number of retries.
            // Maximum is every conf.maxRetryDelay interval.
            var exp = this.lastFailedSubmission.add(this.conf.timeout * Math.pow(2, this.failedSubmissionCount), 'seconds');
            var tru = this.lastFailedSubmission.add(this.conf.maxRetryDelay, 'seconds');
            if ((0, dayjs_1.default)().isBefore(exp.isBefore(tru) ? exp : tru)) {
                this.sending = false;
                this.debug("Waiting longer to send data after ".concat(this.failedSubmissionCount, " failed attempts."));
                return;
            }
        }
        var insights = new Insights_1.Insights(this.conf, this.store);
        if (insights.isEmpty) {
            this.sending = false;
            this.debug("No data to send.");
            return;
        }
        var done = function (error) {
            if (error) {
                _this.lastFailedSubmission = (0, dayjs_1.default)();
                _this.failedSubmissionCount++;
                _this.debug(error);
            }
            else {
                _this.lastFailedSubmission = dayjs_1.default.unix(0);
                _this.failedSubmissionCount = 0;
                insights.clean(_this.store);
                _this.debug('Successfully sent data.');
                _this._persist(true, true);
            }
            _this.sending = false;
        };
        var data = JSON.stringify(insights);
        this.store.send(data, this.conf.server, this.conf.timeout, done);
    };
    CleanInsights.prototype.getCampaignIfGood = function (campaignId, debugString) {
        if (!this.conf.campaigns.hasOwnProperty(campaignId)) {
            return null;
        }
        var campaign = this.conf.campaigns[campaignId];
        var now = (0, dayjs_1.default)();
        if (now.isBefore(campaign.start)) {
            this.debug("Measurement '".concat(debugString, "' discarded, because campaign '").concat(campaignId, "' didn't start, yet."));
            return null;
        }
        if (now.isAfter(campaign.end)) {
            this.debug("Measurement '".concat(debugString, "' discarded, because campaign '").concat(campaignId, "' already ended."));
            return null;
        }
        if (!this.isCampaignCurrentlyGranted(campaignId)) {
            this.debug("Measurement '".concat(debugString, "' discarded, because campaign '").concat(campaignId, "' has no user consent yet, any more or we're outside the measurement period."));
            return null;
        }
        return campaign;
    };
    /**
     * Get a `DataPoint` subclass out of the `haystack`, as long as it fits the `campaign`.
     * Increases `times` according to the campaigns rules.
     *
     * Create a new `DataPoint` if nothing is returned here.
     *
     * @param {DataPoint[]|Visit[]|Event[]} haystack
     *      The haystack full of `DataPoint` subclasses.
     *
     * @param {string} campaignId
     *      The campaign ID it must match.
     *
     * @param {Campaign} campaign
     *      The campaign parameters to match against.
     *
     * @param {function(DataPoint):boolean} where
     *      Additional condition for selection.
     *
     * @returns: {?(DataPoint|Visit|Event)} a `DataPoint` subclass out of the `haystack`, as long as it fits the `campaign`.
     */
    CleanInsights.prototype.getAndMeasure = function (haystack, campaignId, campaign, where) {
        var period = campaign.currentMeasurementPeriod;
        if (!period) {
            this.debug("campaign.currentMeasurementPeriod == null! This should not happen!");
            return null;
        }
        var dataPoint = haystack.find(function (value) {
            return value.campaignId === campaignId
                && value.first.isSameOrAfter(period.start)
                && value.first.isSameOrBefore(period.end)
                && value.last.isSameOrAfter(period.start)
                && value.last.isSameOrBefore(period.end)
                && where(value);
        });
        if (dataPoint instanceof DataPoint_1.DataPoint) {
            if (!campaign.onlyRecordOnce) {
                dataPoint.times += 1;
            }
            return dataPoint;
        }
        return null;
    };
    CleanInsights.prototype.debug = function (message) {
        if (!this.conf.debug) {
            return;
        }
        if (typeof message === 'object' && message) {
            console.debug("[CleanInsightsSDK] ".concat(message.name, ": ").concat(message.message, "\n\n").concat(message.stack));
        }
        else {
            console.debug("[CleanInsightsSDK] ".concat(message));
        }
    };
    return CleanInsights;
}());
exports.CleanInsights = CleanInsights;


/***/ }),

/***/ 2148:
/*!***************************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/Configuration.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Configuration = void 0;
var Campaign_1 = __webpack_require__(/*! ./Campaign */ 3778);
var Configuration = /** @class */ (function () {
    /**
     * @param {string} server
     *      The server URL should look like `https://myhost.example.com/ci/cleaninsights.php`.
     *
     * @param {number=} siteId
     *      The Matomo site ID to record this data for. OPTIONAL if provided via an object as first argument.
     *
     * @param {Object.<string, Campaign>=} campaigns
     *      Campaign configuration. OPTIONAL if provided via an object as first argument.
     *
     * @param {number=} timeout=5
     *      Connection timeout in seconds. OPTIONAL.
     *
     * @param {number=} maxRetryDelay=3600
     *      The SDK uses a truncated exponential backoff strategy on server failures.
     *      So the delay until it retries will rise exponentially, until it reaches
     *      `maxRetryDelay` seconds. OPTIONAL.
     *
     * @param {number=} maxAgeOfOldData=100
     *      The number in days of how long the SDK will try to keep sending old measurements.
     *      If the measurements become older than that, they will be purged. OPTIONAL.
     *
     * @param {number=} persistEveryNTimes=10
     *      Regulates, how often data persistence is done. OPTIONAL.
     *
     *      If set to 1, every time something is tracked, *ALL* data is stored to disk.
     *      The more you track, the higher you should set this to avoid heavy load due
     *      to disk I/O.
     *
     * @param {boolean=} serverSideAnonymousUsage=false
     *      When set to true, assumes consent for all campaigns and none for features.
     *      Only use this, when you're running on the server and don't measure anything users
     *      might need to give consent to!
     *
     * @param {boolean=} debug=false
     *      When set, CleanInsights SDK will print some debug output to STDOUT. OPTIONAL.
     */
    function Configuration(server, siteId, campaigns, timeout, maxRetryDelay, maxAgeOfOldData, persistEveryNTimes, serverSideAnonymousUsage, debug) {
        if (typeof server === 'string') {
            if (!siteId || !campaigns) {
                throw TypeError('You either need to provide all non-optional arguments in their place or in an object as the first argument.');
            }
            this.server = server;
            this.siteId = siteId;
            this.campaigns = campaigns;
            this.timeout = typeof timeout === 'number' ? timeout : 5;
            this.maxRetryDelay = typeof maxRetryDelay === 'number' ? maxRetryDelay : 3600;
            this.maxAgeOfOldData = typeof maxAgeOfOldData === 'number' ? maxAgeOfOldData : 100;
            this.persistEveryNTimes = typeof persistEveryNTimes === 'number' ? persistEveryNTimes : 10;
            this.serverSideAnonymousUsage = serverSideAnonymousUsage || false;
            this.debug = debug || false;
        }
        else {
            this.server = server.server;
            this.siteId = server.siteId;
            this.campaigns = {};
            for (var campaignId in server.campaigns) {
                if (server.campaigns.hasOwnProperty(campaignId)) {
                    this.campaigns[campaignId] = new Campaign_1.Campaign(server.campaigns[campaignId]);
                }
            }
            this.timeout = typeof server.timeout === 'number' ? server.timeout : 5;
            this.maxRetryDelay = typeof server.maxRetryDelay === 'number' ? server.maxRetryDelay : 3600;
            this.maxAgeOfOldData = typeof server.maxAgeOfOldData === 'number' ? server.maxAgeOfOldData : 100;
            this.persistEveryNTimes = typeof server.persistEveryNTimes === 'number' ? server.persistEveryNTimes : 10;
            this.serverSideAnonymousUsage = server.serverSideAnonymousUsage || false;
            this.debug = server.debug || false;
        }
    }
    Configuration.prototype.toString = function () {
        return "[".concat(this.constructor.name, ": server=").concat(this.server.toString(), ", siteId=").concat(this.siteId, ", timeout=").concat(this.timeout, ", maxRetryDelay=").concat(this.maxRetryDelay, ", maxAgeOfOldData=").concat(this.maxAgeOfOldData, ", persistEveryNTimes=").concat(this.persistEveryNTimes, ", debug=").concat(this.debug, ", campaigns=").concat(this.campaigns, "]");
    };
    /**
     * Checks configuration for some well-known problems, emits a debug message and returns false, if one found.
     *
     * @param {function} debug
     *      Function to handle the debug message.
     * @return {boolean} `true`, if config seems ok, `false` if known problems exist.
     */
    Configuration.prototype.check = function (debug) {
        if (!this.server || !this.server.startsWith('http')) {
            debug("Configuration problem: 'server' is not defined properly. It needs to be a full URL like this: 'https://example.org/cleaninsights.php'!");
            return false;
        }
        if (!this.siteId || this.siteId < 1) {
            debug("Configuration problem: 'siteId' is not defined properly. It needs to be a positive integer value!");
            return false;
        }
        for (var c in this.campaigns) {
            if (this.campaigns.hasOwnProperty(c)) {
                return true;
            }
        }
        debug("Configuration problem: No campaign defined!");
        return false;
    };
    return Configuration;
}());
exports.Configuration = Configuration;


/***/ }),

/***/ 1645:
/*!******************************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/ConsentRequestUi.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConsentRequestUi = void 0;
/**
 * Implement this to provide a UI which explains your campaigns.
 *
 * Questions you should answer to the user:
 *
 * - Why do you need these measurements?
 * - How long will they get collected?
 * - What might attackers learn from these numbers?
 * - How long will you store them on your servers?
 * - What are you going to do with these measurements?
 * - How will the user benefit from these measurements?
 */
var ConsentRequestUi = /** @class */ (function () {
    function ConsentRequestUi() {
    }
    /**
     * Will be called if it is necessary to ask the user for consent to a measurement campaign.
     *
     * @param {string} campaignId
     *      The campaign identifier.
     *
     * @param {Campaign} campaign
     *      The campaign configuration.
     *
     * @param {function(boolean)} complete
     *      The callback which will store the consent or the denial of it.
     * @returns {string} HTML output to show to the user, in case the user needs to get asked for consent.
     */
    ConsentRequestUi.prototype.showForCampaign = function (campaignId, campaign, complete) {
        throw new Error('Override `ConsentRequestUi#showForCampaign` in your subclass!');
    };
    /**
     * Will be called if it is necessary to ask the user for consent to record a
     * common feature while measuring a campaign.
     *
     * @param {Feature} feature
     *      The feature to record. (e.g. user agent, locale)
     *
     * @param {function(boolean)} complete
     *      The callback which will store the consent or the denial of it.
     * @returns {string} HTML output to show to the user, in case the user needs to get asked for consent.
     */
    ConsentRequestUi.prototype.showForFeature = function (feature, complete) {
        throw new Error('Override `ConsentRequestUi#showForFeature` in your subclass!');
    };
    return ConsentRequestUi;
}());
exports.ConsentRequestUi = ConsentRequestUi;


/***/ }),

/***/ 1804:
/*!***********************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/DataPoint.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DataPoint = void 0;
var dayjs_1 = __importDefault(__webpack_require__(/*! dayjs */ 4353));
var DataPoint = /** @class */ (function () {
    /**
     * @param {string} campaignId
     *      The campaign ID this data point is for.
     *
     * @param {number=} times=1
     *      Number of times this data point has arisen between `first` and `last`. OPTIONAL.
     *
     * @param {dayjs.Dayjs=} first=NOW
     *      The first time this data point has arisen. OPTIONAL.
     *
     * @param {dayjs.Dayjs=} last=NOW
     *      The last time this data point has arisen. OPTIONAL.
     */
    function DataPoint(campaignId, times, first, last) {
        this.campaignId = campaignId;
        this.times = typeof times === 'number' ? times : 1;
        this.first = first ? (0, dayjs_1.default)(first) : (0, dayjs_1.default)();
        this.last = last ? (0, dayjs_1.default)(last) : (0, dayjs_1.default)();
    }
    DataPoint.prototype.toString = function () {
        return "[".concat(this.constructor.name, ": campaignId=").concat(this.campaignId, ", times=").concat(this.times, ", first=").concat(this.first.format(), ", last=").concat(this.last.format(), "]");
    };
    return DataPoint;
}());
exports.DataPoint = DataPoint;


/***/ }),

/***/ 14:
/*!*******************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/Event.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Event = void 0;
var DataPoint_1 = __webpack_require__(/*! ./DataPoint */ 1804);
var Event = /** @class */ (function (_super) {
    __extends(Event, _super);
    /**
     * @param {string|EventData} category
     *      The event category or an object containing all arguments. Must not be empty. (eg. Videos, Music, Games...)
     *
     * @param {string=} action
     *      The event action. Must not be empty. (eg. Play, Pause, Duration, Add Playlist, Downloaded, Clicked...)
     *      OPTIONAL if provided via an object as first argument.
     *
     * @param {string=} name
     *      The event name. OPTIONAL.
     *
     * @param {number=} value
     *      The event value. OPTIONAL.
     *
     * @param {string=} campaignId
     *      The campaign ID this data point is for.
     *      OPTIONAL if constructed with an object instead.
     *
     * @param {number=} times=1
     *      Number of times this data point has arisen between `first` and `last`. OPTIONAL.
     *
     * @param {dayjs.Dayjs=} first=NOW
     *      The first time this data point has arisen. OPTIONAL.
     *
     * @param {dayjs.Dayjs=} last=NOW
     *      The last time this data point has arisen. OPTIONAL.
     */
    function Event(category, action, name, value, campaignId, times, first, last) {
        var _this = this;
        if (typeof category === 'string') {
            if (typeof campaignId === 'string' && typeof action === 'string') {
                _this = _super.call(this, campaignId, times, first, last) || this;
                _this.category = category;
                _this.action = action;
                _this.name = name;
                _this.value = value;
            }
            else {
                throw TypeError('You either need to provide all non-optional arguments in their place or in an object as the first argument.');
            }
        }
        else {
            _this = _super.call(this, category.campaignId, category.times, category.first, category.last) || this;
            _this.category = category.category;
            _this.action = category.action;
            _this.name = category.name;
            _this.value = category.value;
        }
        return _this;
    }
    Event.prototype.toString = function () {
        return "[".concat(this.constructor.name, ": category=").concat(this.category, ", action=").concat(this.action, ", name=").concat(this.name, ", value=").concat(this.value, ", campaignId=").concat(this.campaignId, ", times=").concat(this.times, ", first=").concat(this.first.format(), ", last=").concat(this.last.format(), "]");
    };
    return Event;
}(DataPoint_1.DataPoint));
exports.Event = Event;


/***/ }),

/***/ 40:
/*!**********************************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/EventAggregationRule.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EventAggregationRule = void 0;
/**
 * The rule how to aggregate the value of an event (if any given) with
 * subsequent calls.
 *
 * @type {{Avg: string, Sum: string}}
 */
var EventAggregationRule;
(function (EventAggregationRule) {
    /**
     * Calculate the sum of the values.
     */
    EventAggregationRule["Sum"] = "sum";
    /**
     * Calculate the mean average of the values.
     */
    EventAggregationRule["Avg"] = "avg";
})(EventAggregationRule || (exports.EventAggregationRule = EventAggregationRule = {}));


/***/ }),

/***/ 4013:
/*!**********************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/Insights.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Insights = void 0;
var consents_1 = __webpack_require__(/*! ./consents */ 6939);
var dayjs_1 = __importDefault(__webpack_require__(/*! dayjs */ 4353));
var duration_1 = __importDefault(__webpack_require__(/*! dayjs/plugin/duration */ 3522));
dayjs_1.default.extend(duration_1.default);
var Insights = /** @class */ (function () {
    /**
     * Create an `Insights` object according to configuration with all data from the store which
     * is due for offloading to the server.
     *
     * @param {Configuration} conf
     *      The current configuration.
     *
     * @param {{consents: Consents, visits: Visit[], events: Event[]}} store
     *      The current measurement and consents store.
     */
    function Insights(conf, store) {
        var _this = this;
        /**
         * Matomo site ID.
         */
        this.idsite = 0;
        /**
         * Preferred user languages as an HTTP Accept header.
         */
        this.lang = undefined;
        /**
         * User Agent string.
         */
        this.ua = undefined;
        /**
         * `Visit` data points.
         */
        this.visits = [];
        /**
         * `Event` data points.
         */
        this.events = [];
        this.idsite = conf.siteId;
        if (!conf.serverSideAnonymousUsage
            && store.consents.stateOfFeature(consents_1.Feature.lang) == consents_1.ConsentState.granted
            && typeof navigator === 'object' && navigator) {
            this.lang = Insights.acceptLanguages();
        }
        if (!conf.serverSideAnonymousUsage
            && store.consents.stateOfFeature(consents_1.Feature.ua) == consents_1.ConsentState.granted
            && typeof navigator === 'object' && navigator) {
            this.ua = navigator.userAgent;
        }
        Insights.purge(conf, store);
        var now = (0, dayjs_1.default)();
        store.visits.forEach(function (visit) {
            if (!conf.campaigns.hasOwnProperty(visit.campaignId)) {
                return;
            }
            // Only send, after aggregation period is over. `last` should contain that date!
            if (now.isAfter(visit.last)) {
                _this.visits.push({
                    action_name: visit.scenePath.join('/'),
                    period_start: visit.first.unix(),
                    period_end: visit.last.unix(),
                    times: visit.times
                });
            }
        });
        store.events.forEach(function (event) {
            if (!conf.campaigns.hasOwnProperty(event.campaignId)) {
                return;
            }
            // Only send, after aggregation period is over. `last` should contain that date!
            if (now.isAfter(event.last)) {
                _this.events.push({
                    category: event.category,
                    action: event.action,
                    name: event.name,
                    value: event.value,
                    period_start: event.first.unix(),
                    period_end: event.last.unix(),
                    times: event.times
                });
            }
        });
    }
    Object.defineProperty(Insights.prototype, "isEmpty", {
        /**
         * @returns {boolean}
         */
        get: function () {
            return this.visits.length < 1 && this.events.length < 1;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Removes all visits and events from the given `Store`, which are also available in here.
     *
     * This should be called, when all `Insights` were offloaded at the server successfully.
     *
     * @param {{consents: Consents, visits: Visit[], events: Event[]}} store
     *      The store where the `Visit`s and `Event`s in here came from.
     */
    Insights.prototype.clean = function (store) {
        this.visits.forEach(function (d) {
            var i = store.visits.length;
            while (i--) {
                var v = store.visits[i];
                if (v.scenePath.join('/') === d.action_name && Insights.equals(v, d)) {
                    store.visits.splice(i, 1);
                }
            }
        });
        this.events.forEach(function (d) {
            var i = store.events.length;
            while (i--) {
                var e = store.events[i];
                // noinspection EqualityComparisonWithCoercionJS
                if (e.category === d.category && e.action === d.action
                    && e.name == d.name && e.value == d.value && Insights.equals(e, d)) {
                    store.events.splice(i, 1);
                }
            }
        });
    };
    /**
     *
     * @param {DataPoint} dp
     * @param {{period_start: number, period_end: number, times: number}} data
     * @return {boolean}
     */
    Insights.equals = function (dp, data) {
        return dp.first.unix() === data.period_start && dp.last.unix() === data.period_end && dp.times === data.times;
    };
    /**
     * Create an HTTP-accept-language-header-like string from the information
     * we can get from inside JavaScript.
     *
     * @private
     * @return {string}
     */
    Insights.acceptLanguages = function () {
        var components = [];
        var languages = navigator.languages || [navigator.language];
        for (var i = 0; i < languages.length; i++) {
            var quality = 1.0 - (i * 0.1);
            components.push("".concat(languages[i], ";q=").concat(quality));
            if (quality <= 0.5) {
                break;
            }
        }
        return components.join(',');
    };
    /**
     Removes `DataPoint`s, which are too old. These were never been sent, otherwise, they would have
     been removed, already.

     Remove them now, if they're over the threshold, to not accumulate too many `DataPoints` and
     therefore reduce privacy.
     */
    Insights.purge = function (conf, store) {
        var threshold = (0, dayjs_1.default)().subtract(dayjs_1.default.duration(conf.maxAgeOfOldData, 'days'));
        var i = store.visits.length;
        while (i--) {
            if (store.visits[i].last.isBefore(threshold)) {
                store.visits.splice(i, 1);
            }
        }
        i = store.events.length;
        while (i--) {
            if (store.events[i].last.isBefore(threshold)) {
                store.events.splice(i, 1);
            }
        }
    };
    return Insights;
}());
exports.Insights = Insights;


/***/ }),

/***/ 9559:
/*!*******************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/Store.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Store = void 0;
var consents_1 = __webpack_require__(/*! ./consents */ 6939);
var Event_1 = __webpack_require__(/*! ./Event */ 14);
var Visit_1 = __webpack_require__(/*! ./Visit */ 3613);
/**
 * The store holds the user's consents to the different `Feature`s and `Campaign`s,
 * and their `Visit` and `Event` measurements.
 *
 * If you want to implement your own persistence of the store (e.g. because you
 * want to write it in a database instead of the file system) and your own
 * implementation of the transmission to the Matomo/CIMP backend (e.g. because
 * you want to tunnel the requests through a proxy or add your own encryption layer),
 * then create a subclass of this class and implement the `#constructor`,
 * `#persist` and `#send` methods.
 *
 * If you only want to change either one or the other, you can use `NodejsStore`
 * (found in the backend example) or `BrowserStore` as a base and work from there.
 */
var Store = /** @class */ (function () {
    /**
     * @param {Object.<string, *>=} args={}
     *      Optional arguments your implementation might need for loading the store.
     * @param {function(string)=} debug=undefined
     *      Optional function to output debug messages.
     */
    function Store(args, debug) {
        var _this = this;
        this.consents = new consents_1.Consents();
        this.visits = [];
        this.events = [];
        if (typeof debug === 'undefined') {
            debug = function () { };
        }
        debug("Store created from the following arguments: ".concat(JSON.stringify(args)));
        args = args || {};
        args.debug = debug;
        var data = this.load(args);
        if (typeof data === 'undefined') {
            debug("Storage doesn't exist or isn't readable.");
        }
        else {
            this.consents = new consents_1.Consents(data.consents);
            data.visits.forEach(function (visit) {
                _this.visits.push(new Visit_1.Visit(visit));
            });
            data.events.forEach(function (event) {
                _this.events.push(new Event_1.Event(event));
            });
            debug('Data loaded from storage.');
        }
    }
    return Store;
}());
exports.Store = Store;


/***/ }),

/***/ 3613:
/*!*******************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/Visit.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Visit = void 0;
var DataPoint_1 = __webpack_require__(/*! ./DataPoint */ 1804);
var Visit = /** @class */ (function (_super) {
    __extends(Visit, _super);
    /**
     * @param {string[]|VisitData} scenePath
     *      A hierarchical path to the scene visited or an object containing all arguments.
     *
     * @param {string=} campaignId
     *      The campaign ID this data point is for. OPTIONAL if provided via an object as first argument.
     *
     * @param {number=} times=1
     *      Number of times this data point has arisen between `first` and `last`. OPTIONAL.
     *
     * @param {dayjs.Dayjs=} first=NOW
     *      The first time this data point has arisen. OPTIONAL.
     *
     * @param {dayjs.Dayjs=} last=NOW
     *      The last time this data point has arisen. OPTIONAL.
     */
    function Visit(scenePath, campaignId, times, first, last) {
        var _this = this;
        if (Array.isArray(scenePath)) {
            if (typeof campaignId === 'string') {
                _this = _super.call(this, campaignId, times, first, last) || this;
                _this.scenePath = scenePath;
            }
            else {
                throw TypeError('You either need to provide all non-optional arguments in their place or in an object as the first argument.');
            }
        }
        else {
            _this = _super.call(this, scenePath.campaignId, scenePath.times, scenePath.first, scenePath.last) || this;
            _this.scenePath = scenePath.scenePath;
        }
        return _this;
    }
    Visit.prototype.toString = function () {
        return "[".concat(this.constructor.name, ": scenePath=").concat(this.scenePath, ", campaignId=").concat(this.campaignId, ", times=").concat(this.times, ", first=").concat(this.first.format(), ", last=").concat(this.last.format(), "]");
    };
    return Visit;
}(DataPoint_1.DataPoint));
exports.Visit = Visit;


/***/ }),

/***/ 6939:
/*!**********************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/consents.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CampaignConsent = exports.FeatureConsent = exports.Consents = exports.Consent = exports.ConsentState = exports.Feature = void 0;
var dayjs_1 = __importDefault(__webpack_require__(/*! dayjs */ 4353));
var Feature;
(function (Feature) {
    Feature["lang"] = "lang";
    Feature["ua"] = "ua";
})(Feature || (exports.Feature = Feature = {}));
var ConsentState;
(function (ConsentState) {
    /**
     A campaign with that ID doesn't exist or already expired.
     */
    ConsentState["unconfigured"] = "unconfigured";
    /**
     There's no record of consent. User was probably never asked.
     */
    ConsentState["unknown"] = "unknown";
    /**
     User denied consent. Don't ask again!
     */
    ConsentState["denied"] = "denied";
    /**
     Consent was given, but consent period has not yet started.
     */
    ConsentState["notStarted"] = "notStarted";
    /**
     Consent was given, but consent period is over. You might ask again for a new period.
     */
    ConsentState["expired"] = "expired";
    /**
     Consent was given and is currently valid.
     */
    ConsentState["granted"] = "granted";
})(ConsentState || (exports.ConsentState = ConsentState = {}));
var Consent = /** @class */ (function () {
    /**
     * @param {boolean|ConsentData} granted
     * @param {dayjs.Dayjs=} start=NOW
     * @param {dayjs.Dayjs=} end=NOW
     */
    function Consent(granted, start, end) {
        if (typeof granted === 'object' && granted) {
            this.granted = granted.granted;
            this.start = (0, dayjs_1.default)(granted.start);
            this.end = (0, dayjs_1.default)(granted.end);
        }
        else {
            this.granted = granted;
            this.start = start ? (0, dayjs_1.default)(start) : (0, dayjs_1.default)();
            this.end = end ? (0, dayjs_1.default)(end) : (0, dayjs_1.default)();
        }
    }
    Object.defineProperty(Consent.prototype, "state", {
        get: function () {
            return this.granted ? ConsentState.granted : ConsentState.denied;
        },
        enumerable: false,
        configurable: true
    });
    return Consent;
}());
exports.Consent = Consent;
var FeatureConsent = /** @class */ (function (_super) {
    __extends(FeatureConsent, _super);
    /**
     * @param {Feature|string} feature
     * @param {Consent} consent
     */
    function FeatureConsent(feature, consent) {
        var _this = _super.call(this, consent.granted, consent.start, consent.end) || this;
        _this.feature = feature;
        return _this;
    }
    return FeatureConsent;
}(Consent));
exports.FeatureConsent = FeatureConsent;
var CampaignConsent = /** @class */ (function (_super) {
    __extends(CampaignConsent, _super);
    /**
     * @param {string} campaignId
     * @param {Consent} consent
     */
    function CampaignConsent(campaignId, consent) {
        var _this = _super.call(this, consent.granted, consent.start, consent.end) || this;
        _this.campaignId = campaignId;
        return _this;
    }
    Object.defineProperty(CampaignConsent.prototype, "state", {
        get: function () {
            if (!this.granted) {
                return ConsentState.denied;
            }
            var now = (0, dayjs_1.default)();
            if (now.isBefore(this.start)) {
                return ConsentState.notStarted;
            }
            if (now.isAfter(this.end)) {
                return ConsentState.expired;
            }
            return ConsentState.granted;
        },
        enumerable: false,
        configurable: true
    });
    return CampaignConsent;
}(Consent));
exports.CampaignConsent = CampaignConsent;
/**
 * This class keeps track of all granted or denied consents of a user.
 *
 * There are two different types of consents:
 * - Consents for common features like if we're allowed to evaluate the locale or a user agent.
 * - Consents per measurement campaign.
 *
 * The time of the consent is recorded along with its state: If it was actually granted or denied.
 *
 * Consents for common features are given indefinitely, since they are only ever recorded along
 * with running campaigns.
 *
 * Consents for campaigns only last for a certain amount of days.
 */
var Consents = /** @class */ (function () {
    /**
     *
     * @param {Object=}json Optional data from JSON deserialization to assign.
     */
    function Consents(json) {
        this.features = {};
        this.campaigns = {};
        if (typeof json === 'object' && json) {
            for (var feature in json.features) {
                if (json.features.hasOwnProperty(feature)) {
                    this.features[feature] = new Consent(json.features[feature]);
                }
            }
            for (var campaign in json.campaigns) {
                if (json.campaigns.hasOwnProperty(campaign)) {
                    this.campaigns[campaign] = new Consent(json.campaigns[campaign]);
                }
            }
        }
    }
    /**
     * User consents to evaluate a `Feature`.
     *
     * @param {Feature} feature
     * @returns {FeatureConsent}
     */
    Consents.prototype.grantFeature = function (feature) {
        // Don't overwrite original grant timestamp.
        if (!this.features.hasOwnProperty(feature) || !this.features[feature].granted) {
            this.features[feature] = new Consent(true);
        }
        return new FeatureConsent(feature, this.features[feature]);
    };
    /**
     * User denies consent to evaluate a `Feature`.
     *
     * @param {Feature} feature
     * @returns {FeatureConsent}
     */
    Consents.prototype.denyFeature = function (feature) {
        // Don't overwrite original deny timestamp.
        if (!this.features.hasOwnProperty(feature) || this.features[feature].granted) {
            this.features[feature] = new Consent(false);
        }
        return new FeatureConsent(feature, this.features[feature]);
    };
    /**
     * Returns the consent for a given feature, if any available.
     *
     * @param {Feature|string} feature The feature to get the consent for.
     * @returns {?FeatureConsent} the `FeatureConsent` for the given feature or `null`, if consent unknown.
     */
    Consents.prototype.consentForFeature = function (feature) {
        if (!this.features.hasOwnProperty(feature)) {
            return null;
        }
        return new FeatureConsent(feature, this.features[feature]);
    };
    /**
     * Checks the consent state of a feature.
     *
     * @param {Feature} feature The feature to check the consent state of.
     * @returns {ConsentState} the current state of consent.
     */
    Consents.prototype.stateOfFeature = function (feature) {
        var _a, _b;
        return (_b = (_a = this.consentForFeature(feature)) === null || _a === void 0 ? void 0 : _a.state) !== null && _b !== void 0 ? _b : ConsentState.unknown;
    };
    /**
     * User consents to run a specific campaign.
     *
     * @param {string} campaignId
     *      The campaign ID.
     * @param {Campaign} campaign
     *      The campaign.
     * @returns {CampaignConsent}
     */
    Consents.prototype.grantCampaign = function (campaignId, campaign) {
        var period = campaign.nextTotalMeasurementPeriod;
        if (period) {
            // Always overwrite, since this might be a refreshed consent for a new period.
            this.campaigns[campaignId] = new Consent(true, period.start, period.end);
        }
        else {
            // Consent is technically granted, but has no effect, as start and end
            // will be set the same.
            this.campaigns[campaignId] = new Consent(true);
        }
        return new CampaignConsent(campaignId, this.campaigns[campaignId]);
    };
    /**
     * User denies consent to run a specific campaign.
     *
     * @param {string} campaignId
     * @returns {CampaignConsent}
     */
    Consents.prototype.denyCampaign = function (campaignId) {
        // Don't overwrite original deny timestamp.
        if (!this.campaigns.hasOwnProperty(campaignId) || this.campaigns[campaignId].granted) {
            this.campaigns[campaignId] = new Consent(false);
        }
        return new CampaignConsent(campaignId, this.campaigns[campaignId]);
    };
    /**
     * Returns the consent for a given campaign, if any available.
     *
     * @param {string} campaignId The campaign ID to get the consent for.
     * @returns {?CampaignConsent} the `CampaignConsent` for the given campaign or `null`, if consent unknown.
     */
    Consents.prototype.consentForCampaign = function (campaignId) {
        if (!this.campaigns.hasOwnProperty(campaignId)) {
            return null;
        }
        return new CampaignConsent(campaignId, this.campaigns[campaignId]);
    };
    /**
     * Checks the consent state of a campaign.
     *
     * @param {string} campaignId The campaign ID to check the consent state of.
     * @returns {ConsentState} the current state of consent.
     */
    Consents.prototype.stateOfCampaign = function (campaignId) {
        var _a, _b;
        return (_b = (_a = this.consentForCampaign(campaignId)) === null || _a === void 0 ? void 0 : _a.state) !== null && _b !== void 0 ? _b : ConsentState.unknown;
    };
    return Consents;
}());
exports.Consents = Consents;


/***/ }),

/***/ 617:
/*!*******************************************************!*\
  !*** ./node_modules/clean-insights-sdk/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;

__webpack_unused_export__ = ({ value: true });
__webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = __webpack_unused_export__ = exports.SQ = void 0;
/**
 * index.ts
 * CleanInsightsSDK
 *
 * Created by Benjamin Erhart on 19.01.21.
 * Copyright © 2021 Guardian Project. All rights reserved.
 */
var BrowserStore_1 = __webpack_require__(/*! ./BrowserStore */ 2121);
Object.defineProperty(exports, "SQ", ({ enumerable: true, get: function () { return BrowserStore_1.BrowserStore; } }));
var Campaign_1 = __webpack_require__(/*! ./Campaign */ 3778);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return Campaign_1.Campaign; } });
var CleanInsights_1 = __webpack_require__(/*! ./CleanInsights */ 3698);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return CleanInsights_1.CleanInsights; } });
var consents_1 = __webpack_require__(/*! ./consents */ 6939);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return consents_1.CampaignConsent; } });
__webpack_unused_export__ = ({ enumerable: true, get: function () { return consents_1.Consent; } });
__webpack_unused_export__ = ({ enumerable: true, get: function () { return consents_1.Consents; } });
__webpack_unused_export__ = ({ enumerable: true, get: function () { return consents_1.ConsentState; } });
__webpack_unused_export__ = ({ enumerable: true, get: function () { return consents_1.Feature; } });
__webpack_unused_export__ = ({ enumerable: true, get: function () { return consents_1.FeatureConsent; } });
var Configuration_1 = __webpack_require__(/*! ./Configuration */ 2148);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return Configuration_1.Configuration; } });
var ConsentRequestUi_1 = __webpack_require__(/*! ./ConsentRequestUi */ 1645);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return ConsentRequestUi_1.ConsentRequestUi; } });
var Event_1 = __webpack_require__(/*! ./Event */ 14);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return Event_1.Event; } });
var EventAggregationRule_1 = __webpack_require__(/*! ./EventAggregationRule */ 40);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return EventAggregationRule_1.EventAggregationRule; } });
var Insights_1 = __webpack_require__(/*! ./Insights */ 4013);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return Insights_1.Insights; } });
var Store_1 = __webpack_require__(/*! ./Store */ 9559);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return Store_1.Store; } });
var Visit_1 = __webpack_require__(/*! ./Visit */ 3613);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return Visit_1.Visit; } });


/***/ }),

/***/ 6288:
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/app.scss ***!
  \***********************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `html{position:relative;min-height:100%}body.modal-open{overflow-y:auto !important;padding-right:0 !important}nav.navbar{box-shadow:0 5px 15px 0 rgba(64,64,64,0.2),0 0 2px 0 rgba(64,64,64,0.2)}nav.navbar .feature-banner{border:1px solid rgba(105,148,150,0.05);background-color:rgba(105,148,150,0.1);margin-bottom:-.5rem;margin-left:-1rem;margin-right:-1rem}main{padding-top:7.5rem}main.featured{padding-top:11.5rem}main>.jumbotron{padding:.5rem;margin-bottom:1.5rem;background-color:#fff;box-shadow:0 5px 15px 0 rgba(64,64,64,0.2),0 0 2px 0 rgba(64,64,64,0.2)}main>.jumbotron>section.card{border:0}main>.jumbotron>section.card>.card-body{padding:2.2rem}main>.jumbotron>section.card>.card-body>.card-title{padding-right:0;margin-bottom:2rem}main>.toastWrapper{z-index:1051;position:fixed;top:5.75rem;left:50%;transform:translateX(-50%)}footer>div{font-size:0.75rem;color:#757575;padding-left:1rem;padding-right:1rem}input[readonly]{cursor:text !important}.busy{cursor:wait !important}.lockBtnIcon{width:30px !important;height:30px;margin-right:-44px}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 7784:
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/dashboard/Dashboard.scss ***!
  \***************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.dashboard a.card{background-color:#fff;text-decoration:none;padding:2rem;border:0;box-shadow:0 5px 15px 0 rgba(64,64,64,0.2),0 0 2px 0 rgba(64,64,64,0.2);transition:background-color 0.3s ease}.dashboard a.card:hover{background-color:#fafafa;text-decoration:none}.dashboard a.card:hover .card-footer{color:#404040}.dashboard a.card .card-body{flex-grow:0}.dashboard a.card .card-body img{width:80px;height:80px}.dashboard a.card .card-footer{flex-grow:1;display:flex;align-items:center;justify-content:center;font-family:CeraRoundPro,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";font-size:1.09375rem;font-weight:500;color:#757575;padding:0.5em;background-color:transparent;border-top:0}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5624:
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/decrypt/Decrypt.scss ***!
  \***********************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.decrypt textarea{color:#404040;resize:none}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8716:
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/encrypt/Encrypt.scss ***!
  \***********************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.encrypt .plain-text iframe{width:100%;height:100%;margin-bottom:0;color:#404040;resize:none}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5002:
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/keyring/KeyGrid.scss ***!
  \***********************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `#keyRingTable td{vertical-align:middle;word-wrap:break-word}#keyRingTable .monospaced{white-space:normal;word-wrap:break-word}@media (min-width: 992px){#keyRingTable .monospaced{white-space:nowrap}}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2034:
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/keyring/components/DatePicker.scss ***!
  \*************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/getUrl.js */ 4417);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%278%27 height=%278%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23fff%27 d=%27M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z%27/%3e%3c/svg%3e */ 792), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%274%27 height=%274%27 viewBox=%270 0 4 4%27%3e%3cpath stroke=%27%23fff%27 d=%27M0 2h4%27/%3e%3c/svg%3e */ 1285), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2712%27 height=%2712%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e */ 3969), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml,%3Csvg viewBox=%270 0 14 14%27 xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cg stroke=%27none%27 stroke-width=%271%27 fill=%27none%27 fill-rule=%27evenodd%27%3E%3Cpath fill=%27%23949494%27 d=%27M8.93933983,7 L3.46966991,1.53033009 C3.1767767,1.23743687 3.1767767,0.762563133 3.46966991,0.469669914 C3.76256313,0.176776695 4.23743687,0.176776695 4.53033009,0.469669914 L10.5303301,6.46966991 C10.8232233,6.76256313 10.8232233,7.23743687 10.5303301,7.53033009 L4.53033009,13.5303301 C4.23743687,13.8232233 3.76256313,13.8232233 3.46966991,13.5303301 C3.1767767,13.2374369 3.1767767,12.7625631 3.46966991,12.4696699 L8.93933983,7 Z%27 transform=%27translate%287.000000, 7.000000%29 scale%281, -1%29 rotate%28-90.000000%29 translate%28-7.000000, -7.000000%29 %27%3E%3C/path%3E%3C/g%3E%3C/svg%3E */ 3088), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.react-datepicker__navigation-icon::before,.react-datepicker__year-read-view--down-arrow,.react-datepicker__month-read-view--down-arrow,.react-datepicker__month-year-read-view--down-arrow{border-color:#949494;border-style:solid;border-width:3px 3px 0 0;content:"";display:block;height:9px;position:absolute;top:6px;width:9px}.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle,.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle{margin-left:-4px;position:absolute;width:0}.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::before,.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::before,.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::after,.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::after{box-sizing:content-box;position:absolute;border:8px solid transparent;height:0;width:1px;content:"";z-index:-1;border-width:8px;left:-8px}.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::before,.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::before{border-bottom-color:#f0f0f0}.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle{top:0;margin-top:-8px}.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::before,.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::after{border-top:none;border-bottom-color:#fff}.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::after{top:0}.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::before{top:-1px;border-bottom-color:#f0f0f0}.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle{bottom:0;margin-bottom:-8px}.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::before,.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::after{border-bottom:none;border-top-color:#fff}.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::after{bottom:0}.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::before{bottom:-1px;border-top-color:#f0f0f0}.react-datepicker-wrapper{display:inline-block;padding:0;border:0}.react-datepicker{font-family:CeraPro,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";font-size:.875rem;background-color:#fff;color:#404040;border:1px solid #f0f0f0;border-radius:.5rem;display:inline-block;position:relative}.react-datepicker--time-only .react-datepicker__triangle{left:35px}.react-datepicker--time-only .react-datepicker__time-container{border-left:0}.react-datepicker--time-only .react-datepicker__time,.react-datepicker--time-only .react-datepicker__time-box{border-bottom-left-radius:0.3rem;border-bottom-right-radius:0.3rem}.react-datepicker__triangle{position:absolute;left:50px}.react-datepicker-popper{z-index:1}.react-datepicker-popper[data-placement^="bottom"]{padding-top:10px}.react-datepicker-popper[data-placement="bottom-end"] .react-datepicker__triangle,.react-datepicker-popper[data-placement="top-end"] .react-datepicker__triangle{left:auto;right:50px}.react-datepicker-popper[data-placement^="top"]{padding-bottom:10px}.react-datepicker-popper[data-placement^="right"]{padding-left:8px}.react-datepicker-popper[data-placement^="right"] .react-datepicker__triangle{left:auto;right:42px}.react-datepicker-popper[data-placement^="left"]{padding-right:8px}.react-datepicker-popper[data-placement^="left"] .react-datepicker__triangle{left:42px;right:auto}.react-datepicker__header{text-align:center;background-color:#fff;border-bottom:1px solid #f0f0f0;border-top-left-radius:.5rem;padding:8px 0;position:relative}.react-datepicker__header--time{padding-bottom:8px;padding-left:5px;padding-right:5px}.react-datepicker__header--time:not(.react-datepicker__header--time--only){border-top-left-radius:0}.react-datepicker__header:not(.react-datepicker__header--has-time-select){border-top-right-radius:.5rem}.react-datepicker__year-dropdown-container--select,.react-datepicker__month-dropdown-container--select,.react-datepicker__month-year-dropdown-container--select,.react-datepicker__year-dropdown-container--scroll,.react-datepicker__month-dropdown-container--scroll,.react-datepicker__month-year-dropdown-container--scroll{display:inline-block;margin:0 15px}.react-datepicker__current-month,.react-datepicker-time__header,.react-datepicker-year-header{margin-top:0;color:#404040;font-weight:bold;font-size:1.0325rem}.react-datepicker-time__header{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.react-datepicker__navigation{align-items:center;background:none;display:flex;justify-content:center;text-align:center;cursor:pointer;position:absolute;top:2px;padding:0;border:none;z-index:1;height:32px;width:32px;text-indent:-999em;overflow:hidden}.react-datepicker__navigation--previous{left:2px}.react-datepicker__navigation--next{right:2px}.react-datepicker__navigation--next--with-time:not(.react-datepicker__navigation--next--with-today-button){right:85px}.react-datepicker__navigation--years{position:relative;top:0;display:block;margin-left:auto;margin-right:auto}.react-datepicker__navigation--years-previous{top:4px}.react-datepicker__navigation--years-upcoming{top:-4px}.react-datepicker__navigation:hover *::before{border-color:#6e6e6e}.react-datepicker__navigation-icon{position:relative;top:-1px;font-size:20px;width:0}.react-datepicker__navigation-icon--next{left:-2px}.react-datepicker__navigation-icon--next::before{transform:rotate(45deg);left:-7px}.react-datepicker__navigation-icon--previous{right:-2px}.react-datepicker__navigation-icon--previous::before{transform:rotate(225deg);right:-7px}.react-datepicker__month-container{float:left}.react-datepicker__year{margin:.5rem;text-align:center}.react-datepicker__year-wrapper{display:flex;flex-wrap:wrap;max-width:180px}.react-datepicker__year .react-datepicker__year-text{display:inline-block;width:4rem;margin:2px}.react-datepicker__month{margin:.5rem;text-align:center}.react-datepicker__month .react-datepicker__month-text,.react-datepicker__month .react-datepicker__quarter-text{display:inline-block;width:4rem;margin:2px}.react-datepicker__input-time-container{clear:both;width:100%;float:left;margin:5px 0 10px 15px;text-align:left}.react-datepicker__input-time-container .react-datepicker-time__caption{display:inline-block}.react-datepicker__input-time-container .react-datepicker-time__input-container{display:inline-block}.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input{display:inline-block;margin-left:10px}.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input input{width:auto}.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input input[type="time"]::-webkit-inner-spin-button,.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input input[type="time"]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input input[type="time"]{-moz-appearance:textfield}.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__delimiter{margin-left:5px;display:inline-block}.react-datepicker__time-container{float:right;border-left:1px solid #f0f0f0;width:85px}.react-datepicker__time-container--with-today-button{display:inline;border:1px solid #aeaeae;border-radius:0.3rem;position:absolute;right:-87px;top:0}.react-datepicker__time-container .react-datepicker__time{position:relative;background:white;border-bottom-right-radius:0.3rem}.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box{width:85px;overflow-x:hidden;margin:0 auto;text-align:center;border-bottom-right-radius:0.3rem}.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list{list-style:none;margin:0;height:calc(195px + (1.8rem / 2));overflow-y:scroll;padding-right:0;padding-left:0;width:100%;box-sizing:content-box}.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item{height:30px;padding:5px 10px;white-space:nowrap}.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item:hover{cursor:pointer;background-color:#fff}.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected{background-color:#e30048;color:white;font-weight:bold}.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected:hover{background-color:#e30048}.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--disabled{color:#949494}.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--disabled:hover{cursor:default;background-color:transparent}.react-datepicker__week-number{color:#949494;display:inline-block;width:1.8rem;line-height:1.8rem;text-align:center;margin:.075rem}.react-datepicker__week-number.react-datepicker__week-number--clickable{cursor:pointer}.react-datepicker__week-number.react-datepicker__week-number--clickable :hover{border-radius:.5rem;background-color:#fff}.react-datepicker__week-number--selected{border-radius:.5rem;background-color:#e30048;color:#fff}.react-datepicker__week-number--selected:hover{background-color:#ca0040}.react-datepicker__week-number--keyboard-selected{border-radius:.5rem;background-color:#ff1761;color:#fff}.react-datepicker__week-number--keyboard-selected:hover{background-color:#ca0040}.react-datepicker__day-names{white-space:nowrap;margin-bottom:-8px}.react-datepicker__week{white-space:nowrap}.react-datepicker__day-name,.react-datepicker__day,.react-datepicker__time-name{color:#404040;display:inline-block;width:1.8rem;line-height:1.8rem;text-align:center;margin:.075rem}.react-datepicker__day,.react-datepicker__month-text,.react-datepicker__quarter-text,.react-datepicker__year-text{cursor:pointer}.react-datepicker__day:hover,.react-datepicker__month-text:hover,.react-datepicker__quarter-text:hover,.react-datepicker__year-text:hover{border-radius:.5rem;background-color:#fff}.react-datepicker__day--today,.react-datepicker__month-text--today,.react-datepicker__quarter-text--today,.react-datepicker__year-text--today{font-weight:bold}.react-datepicker__day--highlighted,.react-datepicker__month-text--highlighted,.react-datepicker__quarter-text--highlighted,.react-datepicker__year-text--highlighted{border-radius:.5rem;background-color:#404040;color:#fff}.react-datepicker__day--highlighted:hover,.react-datepicker__month-text--highlighted:hover,.react-datepicker__quarter-text--highlighted:hover,.react-datepicker__year-text--highlighted:hover{background-color:#333}.react-datepicker__day--highlighted-custom-1,.react-datepicker__month-text--highlighted-custom-1,.react-datepicker__quarter-text--highlighted-custom-1,.react-datepicker__year-text--highlighted-custom-1{color:magenta}.react-datepicker__day--highlighted-custom-2,.react-datepicker__month-text--highlighted-custom-2,.react-datepicker__quarter-text--highlighted-custom-2,.react-datepicker__year-text--highlighted-custom-2{color:green}.react-datepicker__day--holidays,.react-datepicker__month-text--holidays,.react-datepicker__quarter-text--holidays,.react-datepicker__year-text--holidays{position:relative;border-radius:.5rem;background-color:#ff6803;color:#fff}.react-datepicker__day--holidays .holiday-overlay,.react-datepicker__month-text--holidays .holiday-overlay,.react-datepicker__quarter-text--holidays .holiday-overlay,.react-datepicker__year-text--holidays .holiday-overlay{position:absolute;bottom:100%;left:50%;transform:translateX(-50%);background-color:#333;color:#fff;padding:4px;border-radius:4px;white-space:nowrap;visibility:hidden;opacity:0;transition:visibility 0s, opacity 0.3s ease-in-out}.react-datepicker__day--holidays:hover,.react-datepicker__month-text--holidays:hover,.react-datepicker__quarter-text--holidays:hover,.react-datepicker__year-text--holidays:hover{background-color:#cf5300}.react-datepicker__day--holidays:hover .holiday-overlay,.react-datepicker__month-text--holidays:hover .holiday-overlay,.react-datepicker__quarter-text--holidays:hover .holiday-overlay,.react-datepicker__year-text--holidays:hover .holiday-overlay{visibility:visible;opacity:1}.react-datepicker__day--selected,.react-datepicker__day--in-selecting-range,.react-datepicker__day--in-range,.react-datepicker__month-text--selected,.react-datepicker__month-text--in-selecting-range,.react-datepicker__month-text--in-range,.react-datepicker__quarter-text--selected,.react-datepicker__quarter-text--in-selecting-range,.react-datepicker__quarter-text--in-range,.react-datepicker__year-text--selected,.react-datepicker__year-text--in-selecting-range,.react-datepicker__year-text--in-range{border-radius:.5rem;background-color:#e30048;color:#fff}.react-datepicker__day--selected:hover,.react-datepicker__day--in-selecting-range:hover,.react-datepicker__day--in-range:hover,.react-datepicker__month-text--selected:hover,.react-datepicker__month-text--in-selecting-range:hover,.react-datepicker__month-text--in-range:hover,.react-datepicker__quarter-text--selected:hover,.react-datepicker__quarter-text--in-selecting-range:hover,.react-datepicker__quarter-text--in-range:hover,.react-datepicker__year-text--selected:hover,.react-datepicker__year-text--in-selecting-range:hover,.react-datepicker__year-text--in-range:hover{background-color:#ca0040}.react-datepicker__day--keyboard-selected,.react-datepicker__month-text--keyboard-selected,.react-datepicker__quarter-text--keyboard-selected,.react-datepicker__year-text--keyboard-selected{border-radius:.5rem;background-color:#ffcada;color:#000}.react-datepicker__day--keyboard-selected:hover,.react-datepicker__month-text--keyboard-selected:hover,.react-datepicker__quarter-text--keyboard-selected:hover,.react-datepicker__year-text--keyboard-selected:hover{background-color:#ca0040}.react-datepicker__day--in-selecting-range ,.react-datepicker__month-text--in-selecting-range ,.react-datepicker__quarter-text--in-selecting-range ,.react-datepicker__year-text--in-selecting-range {background-color:rgba(227,0,72,0.5)}.react-datepicker__month--selecting-range .react-datepicker__day--in-range ,.react-datepicker__year--selecting-range .react-datepicker__day--in-range ,.react-datepicker__month--selecting-range .react-datepicker__month-text--in-range ,.react-datepicker__year--selecting-range .react-datepicker__month-text--in-range ,.react-datepicker__month--selecting-range .react-datepicker__quarter-text--in-range ,.react-datepicker__year--selecting-range .react-datepicker__quarter-text--in-range ,.react-datepicker__month--selecting-range .react-datepicker__year-text--in-range ,.react-datepicker__year--selecting-range .react-datepicker__year-text--in-range {background-color:#fff;color:#404040}.react-datepicker__day--disabled,.react-datepicker__month-text--disabled,.react-datepicker__quarter-text--disabled,.react-datepicker__year-text--disabled{cursor:default;color:#949494}.react-datepicker__day--disabled:hover,.react-datepicker__month-text--disabled:hover,.react-datepicker__quarter-text--disabled:hover,.react-datepicker__year-text--disabled:hover{background-color:transparent}.react-datepicker__input-container{position:relative;display:inline-block;width:100%}.react-datepicker__input-container .react-datepicker__calendar-icon{position:absolute;padding:0.5rem;box-sizing:content-box}.react-datepicker__view-calendar-icon input{padding:6px 10px 5px 25px}.react-datepicker__year-read-view,.react-datepicker__month-read-view,.react-datepicker__month-year-read-view{border:1px solid transparent;border-radius:.5rem;position:relative}.react-datepicker__year-read-view:hover,.react-datepicker__month-read-view:hover,.react-datepicker__month-year-read-view:hover{cursor:pointer}.react-datepicker__year-read-view:hover .react-datepicker__year-read-view--down-arrow,.react-datepicker__year-read-view:hover .react-datepicker__month-read-view--down-arrow,.react-datepicker__month-read-view:hover .react-datepicker__year-read-view--down-arrow,.react-datepicker__month-read-view:hover .react-datepicker__month-read-view--down-arrow,.react-datepicker__month-year-read-view:hover .react-datepicker__year-read-view--down-arrow,.react-datepicker__month-year-read-view:hover .react-datepicker__month-read-view--down-arrow{border-top-color:#7b7b7b}.react-datepicker__year-read-view--down-arrow,.react-datepicker__month-read-view--down-arrow,.react-datepicker__month-year-read-view--down-arrow{transform:rotate(135deg);right:-16px;top:0}.react-datepicker__year-dropdown,.react-datepicker__month-dropdown,.react-datepicker__month-year-dropdown{background-color:#fff;position:absolute;width:50%;left:25%;top:30px;z-index:1;text-align:center;border-radius:.5rem;border:1px solid #f0f0f0}.react-datepicker__year-dropdown:hover,.react-datepicker__month-dropdown:hover,.react-datepicker__month-year-dropdown:hover{cursor:pointer}.react-datepicker__year-dropdown--scrollable,.react-datepicker__month-dropdown--scrollable,.react-datepicker__month-year-dropdown--scrollable{height:150px;overflow-y:scroll}.react-datepicker__year-option,.react-datepicker__month-option,.react-datepicker__month-year-option{line-height:20px;width:100%;display:block;margin-left:auto;margin-right:auto}.react-datepicker__year-option:first-of-type,.react-datepicker__month-option:first-of-type,.react-datepicker__month-year-option:first-of-type{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.react-datepicker__year-option:last-of-type,.react-datepicker__month-option:last-of-type,.react-datepicker__month-year-option:last-of-type{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.react-datepicker__year-option:hover,.react-datepicker__month-option:hover,.react-datepicker__month-year-option:hover{background-color:#949494}.react-datepicker__year-option:hover .react-datepicker__navigation--years-upcoming,.react-datepicker__month-option:hover .react-datepicker__navigation--years-upcoming,.react-datepicker__month-year-option:hover .react-datepicker__navigation--years-upcoming{border-bottom-color:#7b7b7b}.react-datepicker__year-option:hover .react-datepicker__navigation--years-previous,.react-datepicker__month-option:hover .react-datepicker__navigation--years-previous,.react-datepicker__month-year-option:hover .react-datepicker__navigation--years-previous{border-top-color:#7b7b7b}.react-datepicker__year-option--selected,.react-datepicker__month-option--selected,.react-datepicker__month-year-option--selected{position:absolute;left:15px}.react-datepicker__close-icon{cursor:pointer;background-color:transparent;border:0;outline:0;padding:0 6px 0 0;position:absolute;top:0;right:0;height:100%;display:table-cell;vertical-align:middle}.react-datepicker__close-icon::after{cursor:pointer;background-color:#e30048;color:#fff;border-radius:50%;height:16px;width:16px;padding:2px;font-size:12px;line-height:1;text-align:center;display:table-cell;vertical-align:middle;content:"\\00d7"}.react-datepicker__close-icon--disabled{cursor:default}.react-datepicker__close-icon--disabled::after{cursor:default;background-color:#949494}.react-datepicker__today-button{background:#fff;border-top:1px solid #f0f0f0;cursor:pointer;text-align:center;font-weight:bold;padding:5px 0;clear:left}.react-datepicker__portal{position:fixed;width:100vw;height:100vh;background-color:rgba(0,0,0,0.8);left:0;top:0;justify-content:center;align-items:center;display:flex;z-index:2147483647}.react-datepicker__portal .react-datepicker__day-name,.react-datepicker__portal .react-datepicker__day,.react-datepicker__portal .react-datepicker__time-name{width:3rem;line-height:3rem}@media (max-width: 400px), (max-height: 550px){.react-datepicker__portal .react-datepicker__day-name,.react-datepicker__portal .react-datepicker__day,.react-datepicker__portal .react-datepicker__time-name{width:2rem;line-height:2rem}}.react-datepicker__portal .react-datepicker__current-month,.react-datepicker__portal .react-datepicker-time__header{font-size:1.575rem}.react-datepicker__children-container{width:13.8rem;margin:0.4rem;padding-right:0.2rem;padding-left:0.2rem;height:auto}.react-datepicker__aria-live{position:absolute;clip-path:circle(0);border:0;height:1px;margin:-1px;overflow:hidden;padding:0;width:1px;white-space:nowrap}.react-datepicker__calendar-icon{width:1em;height:1em;vertical-align:-0.125em}.custom-control{position:relative;display:block;min-height:1.3125rem;padding-left:1.5rem}.custom-control-inline{display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;left:0;z-index:-1;width:1rem;height:1.15625rem;opacity:0}.custom-control-input:checked ~ .custom-control-label::before{color:#fff;border-color:#628788;background-color:#699496;box-shadow:inset 0 -1px 0 #628788}.custom-control-input:focus ~ .custom-control-label::before{box-shadow:inset 0 2px 0 rgba(219,219,219,0.3),0 0 0 .2rem rgba(105,148,150,0.25)}.custom-control-input:focus:not(:checked) ~ .custom-control-label::before{border-color:#b4cacb}.custom-control-input:not(:disabled):active ~ .custom-control-label::before{color:#fff;background-color:#a5bfc0;border-color:#a5bfc0;box-shadow:none}.custom-control-input[disabled] ~ .custom-control-label,.custom-control-input:disabled ~ .custom-control-label{color:#dbdbdb}.custom-control-input[disabled] ~ .custom-control-label::before,.custom-control-input:disabled ~ .custom-control-label::before{background-color:#fafafa}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:.15625rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:"";background-color:#fff;border:#dbdbdb solid 1px;box-shadow:inset 0 2px 0 rgba(219,219,219,0.3)}.custom-control-label::after{position:absolute;top:.15625rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:"";background:no-repeat 50% / 50% 50%}.custom-checkbox .custom-control-label::before{border-radius:.25rem}.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___})}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before{border-color:#699496;background-color:#699496;box-shadow:none}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::after{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_1___})}.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(105,148,150,0.5)}.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-control-label::before{background-color:rgba(105,148,150,0.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked ~ .custom-control-label::after{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_2___})}.custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(105,148,150,0.5)}.custom-switch{padding-left:3rem}.custom-switch .custom-control-label::before{left:-3rem;width:2.5rem;pointer-events:all;border-radius:.625rem}.custom-switch .custom-control-label::after{top:calc(.15625rem + 2px);left:calc(-3rem + 2px);width:calc(1.25rem - 4px);height:calc(1.25rem - 4px);background-color:#dbdbdb;border-radius:.625rem;transition:transform 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-switch .custom-control-label::after{transition:none}}.custom-switch .custom-control-input:checked ~ .custom-control-label::after{background-color:#fff;transform:translateX(1.5rem)}.custom-switch .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(105,148,150,0.5)}.custom-select,.react-datepicker__header__dropdown select{display:inline-block;width:100%;height:calc(1em + 1.27rem + 2px);padding:.635rem 1.625rem .635rem .625rem;font-size:.875rem;font-weight:400;line-height:1;color:#404040;vertical-align:middle;background:#fff url(${___CSS_LOADER_URL_REPLACEMENT_3___}) no-repeat right .625rem center/8px 10px;border:1px solid #dbdbdb;border-radius:.5rem;box-shadow:inset 0 1px 2px rgba(64,64,64,0.075);appearance:none}.custom-select:focus,.react-datepicker__header__dropdown select:focus{border-color:#b4cacb;outline:0;box-shadow:inset 0 1px 2px rgba(64,64,64,0.075),0 0 0 .2rem rgba(105,148,150,0.25)}.custom-select:focus::-ms-value,.react-datepicker__header__dropdown select:focus::-ms-value{color:#404040;background-color:#fff}.custom-select[multiple],.react-datepicker__header__dropdown select[multiple],.custom-select[size]:not([size="1"]),.react-datepicker__header__dropdown select[size]:not([size="1"]){height:auto;padding-right:.625rem;background-image:none}.custom-select:disabled,.react-datepicker__header__dropdown select:disabled{color:#dbdbdb;background-color:#f7f7f7}.custom-select::-ms-expand,.react-datepicker__header__dropdown select::-ms-expand{display:none}.custom-select:-moz-focusring,.react-datepicker__header__dropdown select:-moz-focusring{color:transparent;text-shadow:0 0 0 #404040}.custom-select-sm,.react-datepicker__header__dropdown select{height:calc(1em + .875rem + 2px);padding-top:.4375rem;padding-bottom:.4375rem;padding-left:.625rem;font-size:.76562rem}.custom-select-lg{height:calc(1em + 1rem + 2px);padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.09375rem}.custom-file{position:relative;display:inline-block;width:100%;height:calc(1em + 1.27rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(1em + 1.27rem + 2px);margin:0;opacity:0}.custom-file-input:focus ~ .custom-file-label{border-color:#b4cacb;box-shadow:0 0 0 .2rem rgba(105,148,150,0.25)}.custom-file-input[disabled] ~ .custom-file-label,.custom-file-input:disabled ~ .custom-file-label{background-color:#fafafa}.custom-file-input:lang(en) ~ .custom-file-label::after{content:"Browse"}.custom-file-input ~ .custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1em + 1.27rem + 2px);padding:.635rem .625rem;font-weight:400;line-height:1;color:#404040;background-color:#fff;border:1px solid #dbdbdb;border-radius:.25rem;box-shadow:inset 0 2px 0 rgba(219,219,219,0.3)}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1em + 1.27rem);padding:.635rem .625rem;line-height:1;color:#404040;content:"Browse";background-color:#f7f7f7;border-left:inherit;border-radius:0 .25rem .25rem 0}.custom-range{width:100%;height:1.65rem;padding:0;background-color:transparent;appearance:none}.custom-range:focus{outline:none}.custom-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(105,148,150,0.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(105,148,150,0.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(105,148,150,0.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1.25rem;height:1.25rem;margin-top:-.25rem;background-color:#699496;border:1px solid #628788;border-radius:1rem;box-shadow:inset 0 -1px 0 #628788;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-webkit-slider-thumb{transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#a5bfc0}.custom-range::-webkit-slider-runnable-track{width:100%;height:.75rem;color:transparent;cursor:pointer;background-color:#f7f7f7;border-color:transparent;border-radius:1rem;box-shadow:inset 0 2px 0 #ebebeb,inset 0 -1px 0 #ebebeb,inset 1px 0 0 #ebebeb,inset -1px 0 0 #ebebeb}.custom-range::-moz-range-thumb{width:1.25rem;height:1.25rem;background-color:#699496;border:1px solid #628788;border-radius:1rem;box-shadow:inset 0 -1px 0 #628788;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-moz-range-thumb{transition:none}}.custom-range::-moz-range-thumb:active{background-color:#a5bfc0}.custom-range::-moz-range-track{width:100%;height:.75rem;color:transparent;cursor:pointer;background-color:#f7f7f7;border-color:transparent;border-radius:1rem;box-shadow:inset 0 2px 0 #ebebeb,inset 0 -1px 0 #ebebeb,inset 1px 0 0 #ebebeb,inset -1px 0 0 #ebebeb}.custom-range::-ms-thumb{width:1.25rem;height:1.25rem;margin-top:0;margin-right:.2rem;margin-left:.2rem;background-color:#699496;border:1px solid #628788;border-radius:1rem;box-shadow:inset 0 -1px 0 #628788;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-ms-thumb{transition:none}}.custom-range::-ms-thumb:active{background-color:#a5bfc0}.custom-range::-ms-track{width:100%;height:.75rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.625rem;box-shadow:inset 0 2px 0 #ebebeb,inset 0 -1px 0 #ebebeb,inset 1px 0 0 #ebebeb,inset -1px 0 0 #ebebeb}.custom-range::-ms-fill-lower{background-color:#f7f7f7;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#f7f7f7;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#ebebeb}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#ebebeb}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#ebebeb}.custom-control-label::before,.custom-file-label,.custom-select,.react-datepicker__header__dropdown select{transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-control-label::before,.custom-file-label,.custom-select,.react-datepicker__header__dropdown select{transition:none}}.react-datepicker{border:0;box-shadow:0 5px 15px 0 rgba(64,64,64,0.2),0 0 2px 0 rgba(64,64,64,0.2)}.react-datepicker__header__dropdown{margin-top:.25rem;margin-bottom:.25rem}.react-datepicker__header{padding-left:0.75rem;padding-right:0.75rem;border-bottom:0}.react-datepicker__navigation,.react-datepicker__current-month{display:none}.react-datepicker__header__dropdown{margin-bottom:0.75rem}.react-datepicker__day-names{border-radius:.25rem;background-color:#f7f7f7}.react-datepicker__day-name,.react-datepicker__day,.react-datepicker__time-name{font-size:.76562rem}.react-datepicker__day{cursor:pointer}.react-datepicker__day:hover{border-radius:.9rem;background-color:#ebebeb}.react-datepicker__day--highlighted{border-radius:.9rem}.react-datepicker__day--selected,.react-datepicker__day--in-selecting-range,.react-datepicker__day--in-range{border-radius:.9rem;background-color:#e30048;box-shadow:inset 0 -2px 0 #c90a47;color:#fff}.react-datepicker__day--selected:hover,.react-datepicker__day--in-selecting-range:hover,.react-datepicker__day--in-range:hover{background-color:#bd003c}.react-datepicker__day--keyboard-selected{border-radius:.9rem;background-color:#e30048;box-shadow:inset 0 -2px 0 #c90a47;color:#fff}.react-datepicker__day--keyboard-selected:hover{background-color:#bd003c}.form-control-clear{z-index:10;pointer-events:auto;cursor:pointer}.react-datepicker-wrapper,.react-datepicker__input-container{width:100%}.react-datepicker-wrapper input{background-color:#FFF !important}.react-datepicker-wrapper .input-group-text{padding-right:1rem;box-shadow:inset 0 2px 0 rgba(219,219,219,0.3)}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 529:
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/keyring/components/KeyringSelect.scss ***!
  \****************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `#keyringSelect h5,#keyringSelect p{color:#757575}#keyringSelect .dropdown-menu a button{visibility:hidden}#keyringSelect .dropdown-menu a:hover button{visibility:visible}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3636:
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/settings/Provider.scss ***!
  \*************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.licensing-dialog .btn{text-align:left;padding:1.5rem}.licensing-dialog .btn img{max-height:96px;width:auto}.licensing-dialog .btn .price-tag{color:#404040;font-family:CeraRoundPro,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";font-size:2rem;font-weight:700;margin-bottom:0.25rem}.table-provider caption{cursor:default}.table-provider tr .actions{text-align:right;white-space:nowrap}.gSignInButton{border-radius:1px;box-shadow:0 2px 4px 0 rgba(0,0,0,0.25);box-sizing:border-box;transition:background-color .218s, border-color .218s, box-shadow .218s;background-color:#fff;background-image:none;color:#262626;cursor:pointer;outline:none;overflow:hidden;position:relative;text-align:center;vertical-align:middle;white-space:nowrap;padding:0}.gSignInButton:hover{box-shadow:0 0 3px 3px rgba(66,133,244,0.3)}.gSignInButtonBlue{background-color:#4285f4;border:none;color:#fff}.gSignInButtonBlue:hover{background-color:#4285f4}.gSignInButtonBlue:active{background-color:#3367d6}.gSignInButtonIcon{float:left;padding:10px}.gSignInButtonBlue .gSignInButtonIcon{background-color:#fff;border-radius:1px}.gSignInButtonSvg{display:block}.gSignInButtonContents{font-family:Roboto, arial, sans-serif;font-size:14px;font-weight:500;line-height:38px;letter-spacing:.21px;margin-left:14px;margin-right:14px;vertical-align:top}.gSignInButtonContentWrapper{height:100%;width:100%}.gSignInButtonBlue .gSignInButtonContentWrapper{border:1px solid transparent}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8747:
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/settings/SecurityBackground.scss ***!
  \***********************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/getUrl.js */ 4417);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/african_mask.svg */ 9258), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/big_ben.svg */ 7915), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/boat.svg */ 6483), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/brandenburg_gate.svg */ 4127), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_4___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/chichen_itza.svg */ 2040), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_5___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/colosseum.svg */ 4669), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_6___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/eagle.svg */ 7543), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_7___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/eiffel_tower.svg */ 6102), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_8___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/elephant.svg */ 9458), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_9___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/forbidden_city.svg */ 2814), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_10___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/golden_gate_bridge.svg */ 3876), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_11___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/great_wall.svg */ 4879), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_12___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/kilimanjaro.svg */ 8402), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_13___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/moai_easter_island.svg */ 4660), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_14___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/mountain_fuji.svg */ 9503), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_15___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/opera_house.svg */ 6927), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_16___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/pisa_tower.svg */ 2998), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_17___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/pyramid.svg */ 8631), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_18___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/rhinoceros.svg */ 6876), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_19___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/saint_basils_cathedral.svg */ 7054), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_20___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/statue_of_liberty.svg */ 8391), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_21___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/torii_shrine.svg */ 8640), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_22___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/toucan.svg */ 6115), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_23___ = new URL(/* asset import */ __webpack_require__(/*! ../../img/security/whale.svg */ 9652), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_24___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cg fill=%27none%27 fill-rule=%27evenodd%27%3E%3Ccircle fill=%27%23E30048%27 fill-rule=%27nonzero%27 cx=%2710%27 cy=%2710%27 r=%2710%27/%3E%3Cpath d=%27M13.1056 4.5528c.247-.494.8476-.6942 1.3416-.4472.494.247.6942.8476.4472 1.3416l-5 10c-.3324.665-1.2484.7475-1.6944.1528l-3-4c-.3314-.4418-.2418-1.0686.2-1.4.4418-.3314 1.0686-.2418 1.4.2l2.0292 2.7056 4.2764-8.5528z%27 fill=%27%23FFF%27/%3E%3C/g%3E%3C/svg%3E */ 8434), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_4___);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_5___);
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_6___);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_7___);
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_8___);
var ___CSS_LOADER_URL_REPLACEMENT_9___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_9___);
var ___CSS_LOADER_URL_REPLACEMENT_10___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_10___);
var ___CSS_LOADER_URL_REPLACEMENT_11___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_11___);
var ___CSS_LOADER_URL_REPLACEMENT_12___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_12___);
var ___CSS_LOADER_URL_REPLACEMENT_13___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_13___);
var ___CSS_LOADER_URL_REPLACEMENT_14___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_14___);
var ___CSS_LOADER_URL_REPLACEMENT_15___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_15___);
var ___CSS_LOADER_URL_REPLACEMENT_16___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_16___);
var ___CSS_LOADER_URL_REPLACEMENT_17___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_17___);
var ___CSS_LOADER_URL_REPLACEMENT_18___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_18___);
var ___CSS_LOADER_URL_REPLACEMENT_19___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_19___);
var ___CSS_LOADER_URL_REPLACEMENT_20___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_20___);
var ___CSS_LOADER_URL_REPLACEMENT_21___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_21___);
var ___CSS_LOADER_URL_REPLACEMENT_22___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_22___);
var ___CSS_LOADER_URL_REPLACEMENT_23___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_23___);
var ___CSS_LOADER_URL_REPLACEMENT_24___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_24___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `#securityBgContainer{margin:0 -0.375rem}#securityBgContainer .securityBgLink{margin:0.375rem;cursor:pointer}#securityBgContainer .securityBgLink .securityBgItem{position:relative;height:80px;width:80px;border-radius:40px;border:2px solid #f2f2f2;background-color:#fff;background-position:center center;background-repeat:no-repeat;background-size:auto 48px}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgAfricanMask{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgBigBen{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_1___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgBoat{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_2___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgBrandenburgGate{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_3___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgChichenItza{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_4___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgColosseum{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_5___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgEagle{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_6___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgEiffelTower{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_7___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgElephant{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_8___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgForbiddenCity{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_9___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgGoldenGateBridge{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_10___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgGreatWall{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_11___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgKilimanjaro{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_12___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgMoaiEasterIsland{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_13___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgMountainFuji{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_14___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgOperaHouse{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_15___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgPisaTower{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_16___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgPyramid{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_17___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgRhinoceros{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_18___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgSaintBasilsCathedral{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_19___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgStatueOfLiberty{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_20___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgToriiShrine{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_21___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgToucan{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_22___})}#securityBgContainer .securityBgLink .securityBgItem.symbol.bgWhale{background-image:url(${___CSS_LOADER_URL_REPLACEMENT_23___})}#securityBgContainer .securityBgLink .securityBgItem.color.petrol{background-color:#caebdd;border-color:#85c9af}#securityBgContainer .securityBgLink .securityBgItem.color.corn{background-color:#faebae;border-color:#e3d18b}#securityBgContainer .securityBgLink .securityBgItem.color.salmon{background-color:#f7cab5;border-color:#e0a98e}#securityBgContainer .securityBgLink .securityBgItem.color.lavender{background-color:#d9caeb;border-color:#baa7d9}#securityBgContainer .securityBgLink .securityBgItem.color.sky{background-color:#cadaeb;border-color:#90b5da}#securityBgContainer .securityBgLink:hover .securityBgItem.symbol{border-color:#d6d6d6}#securityBgContainer .securityBgLink:hover.active .securityBgItem.symbol,#securityBgContainer .securityBgLink:active .securityBgItem.symbol{border-color:#f07aa0}#securityBgContainer .securityBgLink.active .securityBgItem::after{position:absolute;height:20px;width:20px;bottom:8px;right:0px;content:url(${___CSS_LOADER_URL_REPLACEMENT_24___})}#securityBgContainer .securityBgLink.active .securityBgItem.symbol{border-color:#f9ccda}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2004:
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/editor/components/RecipientInput.scss ***!
  \***********************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.recipients-input tags-input .tags .tag-item{font-family:CeraPro,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";font-weight:500;background-color:#fce0e9;border-color:#f9ccda;transition:background-color 0.3s, border-color 0.3s}.recipients-input tags-input .tags .remove-button{color:inherit}.recipients-input tags-input .tags .tag-primary{color:#e30048;background-color:#fce0e9;border-color:#f9ccda}.recipients-input tags-input .tags .tag-primary hr{border-top-color:#f6b5c9}.recipients-input tags-input .tags .tag-primary .alert-link{color:#b00038}.recipients-input tags-input .tags .tag-primary .remove-button{color:#e30048}.recipients-input tags-input .tags .tag-secondary{color:#f7f7f7;background-color:#fefefe;border-color:#fdfdfd}.recipients-input tags-input .tags .tag-secondary hr{border-top-color:#f0f0f0}.recipients-input tags-input .tags .tag-secondary .alert-link{color:#dedede}.recipients-input tags-input .tags .tag-secondary .remove-button{color:#f7f7f7}.recipients-input tags-input .tags .tag-success{color:#2db37a;background-color:#e6f6ef;border-color:#d5f0e4}.recipients-input tags-input .tags .tag-success hr{border-top-color:#c2e9d8}.recipients-input tags-input .tags .tag-success .alert-link{color:#238a5e}.recipients-input tags-input .tags .tag-success .remove-button{color:#2db37a}.recipients-input tags-input .tags .tag-info{color:#699496;background-color:#edf2f2;border-color:#e1eaea}.recipients-input tags-input .tags .tag-info hr{border-top-color:#d2e0e0}.recipients-input tags-input .tags .tag-info .alert-link{color:#547678}.recipients-input tags-input .tags .tag-info .remove-button{color:#699496}.recipients-input tags-input .tags .tag-warning{color:#e38200;background-color:#fcf0e0;border-color:#f9e6cc}.recipients-input tags-input .tags .tag-warning hr{border-top-color:#f6dbb5}.recipients-input tags-input .tags .tag-warning .alert-link{color:#b06500}.recipients-input tags-input .tags .tag-warning .remove-button{color:#e38200}.recipients-input tags-input .tags .tag-danger{color:#e30048;background-color:#fce0e9;border-color:#f9ccda}.recipients-input tags-input .tags .tag-danger hr{border-top-color:#f6b5c9}.recipients-input tags-input .tags .tag-danger .alert-link{color:#b00038}.recipients-input tags-input .tags .tag-danger .remove-button{color:#e30048}.recipients-input tags-input .tags .tag-light{color:#fafafa;background-color:#fefefe;border-color:#fefefe}.recipients-input tags-input .tags .tag-light hr{border-top-color:#f1f1f1}.recipients-input tags-input .tags .tag-light .alert-link{color:#e1e1e1}.recipients-input tags-input .tags .tag-light .remove-button{color:#fafafa}.recipients-input tags-input .tags .tag-dark{color:#949494;background-color:#f2f2f2;border-color:#eaeaea}.recipients-input tags-input .tags .tag-dark hr{border-top-color:#ddd}.recipients-input tags-input .tags .tag-dark .alert-link{color:#7b7b7b}.recipients-input tags-input .tags .tag-dark .remove-button{color:#949494}.recipients-input tags-input .tags.focused{background-color:#fff;border-color:#b4cacb;box-shadow:0 0 0 .2rem rgba(105,148,150,0.25)}.recipients-input tags-input .tags .tag-item:before{font-family:'MailvelopeIcons' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.recipients-input tags-input .tags .tag-success:before{content:"\\e90f \\00a0"}.recipients-input tags-input .tags .tag-danger:before{content:"\\e909 \\00a0"}.recipients-input tags-input.ng-invalid .tags,.recipients-input.has-error tags-input .tags{border-color:#e30048;box-shadow:none}.recipients-input tags-input.ng-invalid .tags.focused,.recipients-input.has-error tags-input .tags.focused{border-color:#e30048;box-shadow:0 0 0 .2rem rgba(227,0,72,0.25)}.recipients-input tags-input .tags .input{font-family:CeraPro,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";width:auto !important}.recipients-input .alert{margin:10px 0 5px}.recipients-input tags-input .tags{transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5465:
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/util/FilePanel.scss ***!
  \*****************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.file-panel .file-element{display:inline-flex;flex-direction:column;padding:0.45rem 0.5rem;margin-bottom:0.5rem;background-color:#fff;box-shadow:0 0 4px 0 rgba(64,64,64,0.15),0 0 1px 0 rgba(64,64,64,0.15);border-radius:.25rem;margin-right:0.375rem;font-size:.76562rem}.file-panel .file-element .file-header{display:inline-flex;align-items:center;cursor:default;line-height:1}.file-panel .file-element .file-header>img{margin-right:-0.875rem;z-index:1}.file-panel .file-element .file-header>img+.file-extension{padding-left:1.375rem}.file-panel .file-element .file-header .file-extension{display:inline-block;font-weight:500;border:solid 1px #f0f0f0;border-radius:4px;background-color:#f7f7f7;padding:0.3rem 0.5rem;text-transform:uppercase}.file-panel .file-element .file-header .file-name{font-family:CeraRoundPro,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";text-decoration:none;white-space:nowrap;display:inline-block;margin:0 0.5rem}.file-panel .file-element .file-header .icon{font-size:.875rem;color:#757575;cursor:pointer}.file-panel .file-element a.file-header{color:inherit;text-decoration:none;cursor:pointer}.file-panel .file-element textarea{background-color:#fff;margin-top:0.45rem;width:100%;resize:none}@media (min-width: 576px){.file-panel .file-element textarea{min-width:405px}}@media (min-width: 768px){.file-panel .file-element textarea{min-width:585px}}@media (min-width: 992px){.file-panel .file-element textarea{min-width:825px}}@media (min-width: 1200px){.file-panel .file-element textarea{min-width:1005px}}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 380:
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/util/FileUpload.scss ***!
  \******************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.fileUpload{position:relative}.fileUpload .area{background-color:rgba(247,247,247,0.75);border:2px dashed #dbdbdb;padding:0.75rem}.fileUpload .overlay{position:absolute;top:0;width:100%;height:100%;visibility:hidden;border:2px dashed #949494;background-color:rgba(247,247,247,0.9);opacity:0;transition:visibility 0.3s 0s, opacity 0.3s ease-out}.fileUpload .overlay.active{visibility:visible;opacity:1}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4348:
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/util/Spinner.scss ***!
  \***************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.m-spinner-fullscreen{position:absolute;z-index:1049;height:2em;width:2em;overflow:visible;margin:auto;top:0;left:0;bottom:0;right:0}.m-spinner-fullscreen:before{content:'';display:block;position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(255,255,255,0.5)}.m-spinner-inline{display:flex;justify-content:center;margin:60px auto 60px}.m-spinner-fullscreen .symbol,.m-spinner-inline .symbol{position:relative;display:flex;justify-content:space-between;width:40px;height:40px}.m-spinner-fullscreen .symbol>div,.m-spinner-inline .symbol>div{width:100%;height:100%;border-radius:50%;background-color:#e30048;opacity:0.6;position:absolute;top:0;left:0;animation:bouncedelay 2.0s infinite ease-in-out;animation-fill-mode:both}.m-spinner-fullscreen .symbol .bounce2,.m-spinner-inline .symbol .bounce2{animation-delay:-1.0s}@keyframes bouncedelay{0%,100%{transform:scale(0)}50%{transform:scale(1)}}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9950:
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/util/Terminate.scss ***!
  \*****************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.terminate{position:fixed;z-index:1050}.terminate .backdrop{display:block;position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,0.8)}.terminate>.symbol{font-size:8em;color:#fff;opacity:0.85;width:100%;height:100%;position:fixed;display:flex;justify-content:center;align-items:center}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 774:
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/react-datepicker/dist/react-datepicker.css ***!
  \***********************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `@charset "UTF-8";
.react-datepicker__year-read-view--down-arrow,
.react-datepicker__month-read-view--down-arrow,
.react-datepicker__month-year-read-view--down-arrow, .react-datepicker__navigation-icon::before {
  border-color: #ccc;
  border-style: solid;
  border-width: 3px 3px 0 0;
  content: "";
  display: block;
  height: 9px;
  position: absolute;
  top: 6px;
  width: 9px;
}
.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle, .react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle {
  margin-left: -4px;
  position: absolute;
  width: 0;
}
.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::before, .react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::before, .react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::after, .react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::after {
  box-sizing: content-box;
  position: absolute;
  border: 8px solid transparent;
  height: 0;
  width: 1px;
  content: "";
  z-index: -1;
  border-width: 8px;
  left: -8px;
}
.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::before, .react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::before {
  border-bottom-color: #aeaeae;
}

.react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle {
  top: 0;
  margin-top: -8px;
}
.react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::before, .react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::after {
  border-top: none;
  border-bottom-color: #f0f0f0;
}
.react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::after {
  top: 0;
}
.react-datepicker-popper[data-placement^=bottom] .react-datepicker__triangle::before {
  top: -1px;
  border-bottom-color: #aeaeae;
}

.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle {
  bottom: 0;
  margin-bottom: -8px;
}
.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::before, .react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::after {
  border-bottom: none;
  border-top-color: #fff;
}
.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::after {
  bottom: 0;
}
.react-datepicker-popper[data-placement^=top] .react-datepicker__triangle::before {
  bottom: -1px;
  border-top-color: #aeaeae;
}

.react-datepicker-wrapper {
  display: inline-block;
  padding: 0;
  border: 0;
}

.react-datepicker {
  font-family: "Helvetica Neue", helvetica, arial, sans-serif;
  font-size: 0.8rem;
  background-color: #fff;
  color: #000;
  border: 1px solid #aeaeae;
  border-radius: 0.3rem;
  display: inline-block;
  position: relative;
}

.react-datepicker--time-only .react-datepicker__triangle {
  left: 35px;
}
.react-datepicker--time-only .react-datepicker__time-container {
  border-left: 0;
}
.react-datepicker--time-only .react-datepicker__time,
.react-datepicker--time-only .react-datepicker__time-box {
  border-bottom-left-radius: 0.3rem;
  border-bottom-right-radius: 0.3rem;
}

.react-datepicker__triangle {
  position: absolute;
  left: 50px;
}

.react-datepicker-popper {
  z-index: 1;
}
.react-datepicker-popper[data-placement^=bottom] {
  padding-top: 10px;
}
.react-datepicker-popper[data-placement=bottom-end] .react-datepicker__triangle, .react-datepicker-popper[data-placement=top-end] .react-datepicker__triangle {
  left: auto;
  right: 50px;
}
.react-datepicker-popper[data-placement^=top] {
  padding-bottom: 10px;
}
.react-datepicker-popper[data-placement^=right] {
  padding-left: 8px;
}
.react-datepicker-popper[data-placement^=right] .react-datepicker__triangle {
  left: auto;
  right: 42px;
}
.react-datepicker-popper[data-placement^=left] {
  padding-right: 8px;
}
.react-datepicker-popper[data-placement^=left] .react-datepicker__triangle {
  left: 42px;
  right: auto;
}

.react-datepicker__header {
  text-align: center;
  background-color: #f0f0f0;
  border-bottom: 1px solid #aeaeae;
  border-top-left-radius: 0.3rem;
  padding: 8px 0;
  position: relative;
}
.react-datepicker__header--time {
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}
.react-datepicker__header--time:not(.react-datepicker__header--time--only) {
  border-top-left-radius: 0;
}
.react-datepicker__header:not(.react-datepicker__header--has-time-select) {
  border-top-right-radius: 0.3rem;
}

.react-datepicker__year-dropdown-container--select,
.react-datepicker__month-dropdown-container--select,
.react-datepicker__month-year-dropdown-container--select,
.react-datepicker__year-dropdown-container--scroll,
.react-datepicker__month-dropdown-container--scroll,
.react-datepicker__month-year-dropdown-container--scroll {
  display: inline-block;
  margin: 0 15px;
}

.react-datepicker__current-month,
.react-datepicker-time__header,
.react-datepicker-year-header {
  margin-top: 0;
  color: #000;
  font-weight: bold;
  font-size: 0.944rem;
}

.react-datepicker-time__header {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.react-datepicker__navigation {
  align-items: center;
  background: none;
  display: flex;
  justify-content: center;
  text-align: center;
  cursor: pointer;
  position: absolute;
  top: 2px;
  padding: 0;
  border: none;
  z-index: 1;
  height: 32px;
  width: 32px;
  text-indent: -999em;
  overflow: hidden;
}
.react-datepicker__navigation--previous {
  left: 2px;
}
.react-datepicker__navigation--next {
  right: 2px;
}
.react-datepicker__navigation--next--with-time:not(.react-datepicker__navigation--next--with-today-button) {
  right: 85px;
}
.react-datepicker__navigation--years {
  position: relative;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.react-datepicker__navigation--years-previous {
  top: 4px;
}
.react-datepicker__navigation--years-upcoming {
  top: -4px;
}
.react-datepicker__navigation:hover *::before {
  border-color: #a6a6a6;
}

.react-datepicker__navigation-icon {
  position: relative;
  top: -1px;
  font-size: 20px;
  width: 0;
}
.react-datepicker__navigation-icon--next {
  left: -2px;
}
.react-datepicker__navigation-icon--next::before {
  transform: rotate(45deg);
  left: -7px;
}
.react-datepicker__navigation-icon--previous {
  right: -2px;
}
.react-datepicker__navigation-icon--previous::before {
  transform: rotate(225deg);
  right: -7px;
}

.react-datepicker__month-container {
  float: left;
}

.react-datepicker__year {
  margin: 0.4rem;
  text-align: center;
}
.react-datepicker__year-wrapper {
  display: flex;
  flex-wrap: wrap;
  max-width: 180px;
}
.react-datepicker__year .react-datepicker__year-text {
  display: inline-block;
  width: 4rem;
  margin: 2px;
}

.react-datepicker__month {
  margin: 0.4rem;
  text-align: center;
}
.react-datepicker__month .react-datepicker__month-text,
.react-datepicker__month .react-datepicker__quarter-text {
  display: inline-block;
  width: 4rem;
  margin: 2px;
}

.react-datepicker__input-time-container {
  clear: both;
  width: 100%;
  float: left;
  margin: 5px 0 10px 15px;
  text-align: left;
}
.react-datepicker__input-time-container .react-datepicker-time__caption {
  display: inline-block;
}
.react-datepicker__input-time-container .react-datepicker-time__input-container {
  display: inline-block;
}
.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input {
  display: inline-block;
  margin-left: 10px;
}
.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input input {
  width: auto;
}
.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input input[type=time]::-webkit-inner-spin-button,
.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input input[type=time]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__input input[type=time] {
  -moz-appearance: textfield;
}
.react-datepicker__input-time-container .react-datepicker-time__input-container .react-datepicker-time__delimiter {
  margin-left: 5px;
  display: inline-block;
}

.react-datepicker__time-container {
  float: right;
  border-left: 1px solid #aeaeae;
  width: 85px;
}
.react-datepicker__time-container--with-today-button {
  display: inline;
  border: 1px solid #aeaeae;
  border-radius: 0.3rem;
  position: absolute;
  right: -87px;
  top: 0;
}
.react-datepicker__time-container .react-datepicker__time {
  position: relative;
  background: white;
  border-bottom-right-radius: 0.3rem;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {
  width: 85px;
  overflow-x: hidden;
  margin: 0 auto;
  text-align: center;
  border-bottom-right-radius: 0.3rem;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list {
  list-style: none;
  margin: 0;
  height: calc(195px + 1.7rem / 2);
  overflow-y: scroll;
  padding-right: 0;
  padding-left: 0;
  width: 100%;
  box-sizing: content-box;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item {
  height: 30px;
  padding: 5px 10px;
  white-space: nowrap;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item:hover {
  cursor: pointer;
  background-color: #f0f0f0;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected {
  background-color: #216ba5;
  color: white;
  font-weight: bold;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected:hover {
  background-color: #216ba5;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--disabled {
  color: #ccc;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--disabled:hover {
  cursor: default;
  background-color: transparent;
}

.react-datepicker__week-number {
  color: #ccc;
  display: inline-block;
  width: 1.7rem;
  line-height: 1.7rem;
  text-align: center;
  margin: 0.166rem;
}
.react-datepicker__week-number.react-datepicker__week-number--clickable {
  cursor: pointer;
}
.react-datepicker__week-number.react-datepicker__week-number--clickable:not(.react-datepicker__week-number--selected,
.react-datepicker__week-number--keyboard-selected):hover {
  border-radius: 0.3rem;
  background-color: #f0f0f0;
}
.react-datepicker__week-number--selected {
  border-radius: 0.3rem;
  background-color: #216ba5;
  color: #fff;
}
.react-datepicker__week-number--selected:hover {
  background-color: #1d5d90;
}
.react-datepicker__week-number--keyboard-selected {
  border-radius: 0.3rem;
  background-color: #2a87d0;
  color: #fff;
}
.react-datepicker__week-number--keyboard-selected:hover {
  background-color: #1d5d90;
}

.react-datepicker__day-names {
  white-space: nowrap;
  margin-bottom: -8px;
}

.react-datepicker__week {
  white-space: nowrap;
}

.react-datepicker__day-name,
.react-datepicker__day,
.react-datepicker__time-name {
  color: #000;
  display: inline-block;
  width: 1.7rem;
  line-height: 1.7rem;
  text-align: center;
  margin: 0.166rem;
}

.react-datepicker__day,
.react-datepicker__month-text,
.react-datepicker__quarter-text,
.react-datepicker__year-text {
  cursor: pointer;
}
.react-datepicker__day:hover,
.react-datepicker__month-text:hover,
.react-datepicker__quarter-text:hover,
.react-datepicker__year-text:hover {
  border-radius: 0.3rem;
  background-color: #f0f0f0;
}
.react-datepicker__day--today,
.react-datepicker__month-text--today,
.react-datepicker__quarter-text--today,
.react-datepicker__year-text--today {
  font-weight: bold;
}
.react-datepicker__day--highlighted,
.react-datepicker__month-text--highlighted,
.react-datepicker__quarter-text--highlighted,
.react-datepicker__year-text--highlighted {
  border-radius: 0.3rem;
  background-color: #3dcc4a;
  color: #fff;
}
.react-datepicker__day--highlighted:hover,
.react-datepicker__month-text--highlighted:hover,
.react-datepicker__quarter-text--highlighted:hover,
.react-datepicker__year-text--highlighted:hover {
  background-color: #32be3f;
}
.react-datepicker__day--highlighted-custom-1,
.react-datepicker__month-text--highlighted-custom-1,
.react-datepicker__quarter-text--highlighted-custom-1,
.react-datepicker__year-text--highlighted-custom-1 {
  color: magenta;
}
.react-datepicker__day--highlighted-custom-2,
.react-datepicker__month-text--highlighted-custom-2,
.react-datepicker__quarter-text--highlighted-custom-2,
.react-datepicker__year-text--highlighted-custom-2 {
  color: green;
}
.react-datepicker__day--holidays,
.react-datepicker__month-text--holidays,
.react-datepicker__quarter-text--holidays,
.react-datepicker__year-text--holidays {
  position: relative;
  border-radius: 0.3rem;
  background-color: #ff6803;
  color: #fff;
}
.react-datepicker__day--holidays .holiday-overlay,
.react-datepicker__month-text--holidays .holiday-overlay,
.react-datepicker__quarter-text--holidays .holiday-overlay,
.react-datepicker__year-text--holidays .holiday-overlay {
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background-color: #333;
  color: #fff;
  padding: 4px;
  border-radius: 4px;
  white-space: nowrap;
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s, opacity 0.3s ease-in-out;
}
.react-datepicker__day--holidays:hover,
.react-datepicker__month-text--holidays:hover,
.react-datepicker__quarter-text--holidays:hover,
.react-datepicker__year-text--holidays:hover {
  background-color: #cf5300;
}
.react-datepicker__day--holidays:hover .holiday-overlay,
.react-datepicker__month-text--holidays:hover .holiday-overlay,
.react-datepicker__quarter-text--holidays:hover .holiday-overlay,
.react-datepicker__year-text--holidays:hover .holiday-overlay {
  visibility: visible;
  opacity: 1;
}
.react-datepicker__day--selected, .react-datepicker__day--in-selecting-range, .react-datepicker__day--in-range,
.react-datepicker__month-text--selected,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__month-text--in-range,
.react-datepicker__quarter-text--selected,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__quarter-text--in-range,
.react-datepicker__year-text--selected,
.react-datepicker__year-text--in-selecting-range,
.react-datepicker__year-text--in-range {
  border-radius: 0.3rem;
  background-color: #216ba5;
  color: #fff;
}
.react-datepicker__day--selected:hover, .react-datepicker__day--in-selecting-range:hover, .react-datepicker__day--in-range:hover,
.react-datepicker__month-text--selected:hover,
.react-datepicker__month-text--in-selecting-range:hover,
.react-datepicker__month-text--in-range:hover,
.react-datepicker__quarter-text--selected:hover,
.react-datepicker__quarter-text--in-selecting-range:hover,
.react-datepicker__quarter-text--in-range:hover,
.react-datepicker__year-text--selected:hover,
.react-datepicker__year-text--in-selecting-range:hover,
.react-datepicker__year-text--in-range:hover {
  background-color: #1d5d90;
}
.react-datepicker__day--keyboard-selected,
.react-datepicker__month-text--keyboard-selected,
.react-datepicker__quarter-text--keyboard-selected,
.react-datepicker__year-text--keyboard-selected {
  border-radius: 0.3rem;
  background-color: #bad9f1;
  color: rgb(0, 0, 0);
}
.react-datepicker__day--keyboard-selected:hover,
.react-datepicker__month-text--keyboard-selected:hover,
.react-datepicker__quarter-text--keyboard-selected:hover,
.react-datepicker__year-text--keyboard-selected:hover {
  background-color: #1d5d90;
}
.react-datepicker__day--in-selecting-range:not(.react-datepicker__day--in-range,
.react-datepicker__month-text--in-range,
.react-datepicker__quarter-text--in-range,
.react-datepicker__year-text--in-range),
.react-datepicker__month-text--in-selecting-range:not(.react-datepicker__day--in-range,
.react-datepicker__month-text--in-range,
.react-datepicker__quarter-text--in-range,
.react-datepicker__year-text--in-range),
.react-datepicker__quarter-text--in-selecting-range:not(.react-datepicker__day--in-range,
.react-datepicker__month-text--in-range,
.react-datepicker__quarter-text--in-range,
.react-datepicker__year-text--in-range),
.react-datepicker__year-text--in-selecting-range:not(.react-datepicker__day--in-range,
.react-datepicker__month-text--in-range,
.react-datepicker__quarter-text--in-range,
.react-datepicker__year-text--in-range) {
  background-color: rgba(33, 107, 165, 0.5);
}
.react-datepicker__month--selecting-range .react-datepicker__day--in-range:not(.react-datepicker__day--in-selecting-range,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__year-text--in-selecting-range), .react-datepicker__year--selecting-range .react-datepicker__day--in-range:not(.react-datepicker__day--in-selecting-range,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__year-text--in-selecting-range),
.react-datepicker__month--selecting-range .react-datepicker__month-text--in-range:not(.react-datepicker__day--in-selecting-range,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__year-text--in-selecting-range),
.react-datepicker__year--selecting-range .react-datepicker__month-text--in-range:not(.react-datepicker__day--in-selecting-range,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__year-text--in-selecting-range),
.react-datepicker__month--selecting-range .react-datepicker__quarter-text--in-range:not(.react-datepicker__day--in-selecting-range,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__year-text--in-selecting-range),
.react-datepicker__year--selecting-range .react-datepicker__quarter-text--in-range:not(.react-datepicker__day--in-selecting-range,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__year-text--in-selecting-range),
.react-datepicker__month--selecting-range .react-datepicker__year-text--in-range:not(.react-datepicker__day--in-selecting-range,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__year-text--in-selecting-range),
.react-datepicker__year--selecting-range .react-datepicker__year-text--in-range:not(.react-datepicker__day--in-selecting-range,
.react-datepicker__month-text--in-selecting-range,
.react-datepicker__quarter-text--in-selecting-range,
.react-datepicker__year-text--in-selecting-range) {
  background-color: #f0f0f0;
  color: #000;
}
.react-datepicker__day--disabled,
.react-datepicker__month-text--disabled,
.react-datepicker__quarter-text--disabled,
.react-datepicker__year-text--disabled {
  cursor: default;
  color: #ccc;
}
.react-datepicker__day--disabled:hover,
.react-datepicker__month-text--disabled:hover,
.react-datepicker__quarter-text--disabled:hover,
.react-datepicker__year-text--disabled:hover {
  background-color: transparent;
}

.react-datepicker__input-container {
  position: relative;
  display: inline-block;
  width: 100%;
}
.react-datepicker__input-container .react-datepicker__calendar-icon {
  position: absolute;
  padding: 0.5rem;
  box-sizing: content-box;
}

.react-datepicker__view-calendar-icon input {
  padding: 6px 10px 5px 25px;
}

.react-datepicker__year-read-view,
.react-datepicker__month-read-view,
.react-datepicker__month-year-read-view {
  border: 1px solid transparent;
  border-radius: 0.3rem;
  position: relative;
}
.react-datepicker__year-read-view:hover,
.react-datepicker__month-read-view:hover,
.react-datepicker__month-year-read-view:hover {
  cursor: pointer;
}
.react-datepicker__year-read-view:hover .react-datepicker__year-read-view--down-arrow,
.react-datepicker__year-read-view:hover .react-datepicker__month-read-view--down-arrow,
.react-datepicker__month-read-view:hover .react-datepicker__year-read-view--down-arrow,
.react-datepicker__month-read-view:hover .react-datepicker__month-read-view--down-arrow,
.react-datepicker__month-year-read-view:hover .react-datepicker__year-read-view--down-arrow,
.react-datepicker__month-year-read-view:hover .react-datepicker__month-read-view--down-arrow {
  border-top-color: #b3b3b3;
}
.react-datepicker__year-read-view--down-arrow,
.react-datepicker__month-read-view--down-arrow,
.react-datepicker__month-year-read-view--down-arrow {
  transform: rotate(135deg);
  right: -16px;
  top: 0;
}

.react-datepicker__year-dropdown,
.react-datepicker__month-dropdown,
.react-datepicker__month-year-dropdown {
  background-color: #f0f0f0;
  position: absolute;
  width: 50%;
  left: 25%;
  top: 30px;
  z-index: 1;
  text-align: center;
  border-radius: 0.3rem;
  border: 1px solid #aeaeae;
}
.react-datepicker__year-dropdown:hover,
.react-datepicker__month-dropdown:hover,
.react-datepicker__month-year-dropdown:hover {
  cursor: pointer;
}
.react-datepicker__year-dropdown--scrollable,
.react-datepicker__month-dropdown--scrollable,
.react-datepicker__month-year-dropdown--scrollable {
  height: 150px;
  overflow-y: scroll;
}

.react-datepicker__year-option,
.react-datepicker__month-option,
.react-datepicker__month-year-option {
  line-height: 20px;
  width: 100%;
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.react-datepicker__year-option:first-of-type,
.react-datepicker__month-option:first-of-type,
.react-datepicker__month-year-option:first-of-type {
  border-top-left-radius: 0.3rem;
  border-top-right-radius: 0.3rem;
}
.react-datepicker__year-option:last-of-type,
.react-datepicker__month-option:last-of-type,
.react-datepicker__month-year-option:last-of-type {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border-bottom-left-radius: 0.3rem;
  border-bottom-right-radius: 0.3rem;
}
.react-datepicker__year-option:hover,
.react-datepicker__month-option:hover,
.react-datepicker__month-year-option:hover {
  background-color: #ccc;
}
.react-datepicker__year-option:hover .react-datepicker__navigation--years-upcoming,
.react-datepicker__month-option:hover .react-datepicker__navigation--years-upcoming,
.react-datepicker__month-year-option:hover .react-datepicker__navigation--years-upcoming {
  border-bottom-color: #b3b3b3;
}
.react-datepicker__year-option:hover .react-datepicker__navigation--years-previous,
.react-datepicker__month-option:hover .react-datepicker__navigation--years-previous,
.react-datepicker__month-year-option:hover .react-datepicker__navigation--years-previous {
  border-top-color: #b3b3b3;
}
.react-datepicker__year-option--selected,
.react-datepicker__month-option--selected,
.react-datepicker__month-year-option--selected {
  position: absolute;
  left: 15px;
}

.react-datepicker__close-icon {
  cursor: pointer;
  background-color: transparent;
  border: 0;
  outline: 0;
  padding: 0 6px 0 0;
  position: absolute;
  top: 0;
  right: 0;
  height: 100%;
  display: table-cell;
  vertical-align: middle;
}
.react-datepicker__close-icon::after {
  cursor: pointer;
  background-color: #216ba5;
  color: #fff;
  border-radius: 50%;
  height: 16px;
  width: 16px;
  padding: 2px;
  font-size: 12px;
  line-height: 1;
  text-align: center;
  display: table-cell;
  vertical-align: middle;
  content: "×";
}
.react-datepicker__close-icon--disabled {
  cursor: default;
}
.react-datepicker__close-icon--disabled::after {
  cursor: default;
  background-color: #ccc;
}

.react-datepicker__today-button {
  background: #f0f0f0;
  border-top: 1px solid #aeaeae;
  cursor: pointer;
  text-align: center;
  font-weight: bold;
  padding: 5px 0;
  clear: left;
}

.react-datepicker__portal {
  position: fixed;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.8);
  left: 0;
  top: 0;
  justify-content: center;
  align-items: center;
  display: flex;
  z-index: 2147483647;
}
.react-datepicker__portal .react-datepicker__day-name,
.react-datepicker__portal .react-datepicker__day,
.react-datepicker__portal .react-datepicker__time-name {
  width: 3rem;
  line-height: 3rem;
}
@media (max-width: 400px), (max-height: 550px) {
  .react-datepicker__portal .react-datepicker__day-name,
  .react-datepicker__portal .react-datepicker__day,
  .react-datepicker__portal .react-datepicker__time-name {
    width: 2rem;
    line-height: 2rem;
  }
}
.react-datepicker__portal .react-datepicker__current-month,
.react-datepicker__portal .react-datepicker-time__header {
  font-size: 1.44rem;
}

.react-datepicker__children-container {
  width: 13.8rem;
  margin: 0.4rem;
  padding-right: 0.2rem;
  padding-left: 0.2rem;
  height: auto;
}

.react-datepicker__aria-live {
  position: absolute;
  clip-path: circle(0);
  border: 0;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  width: 1px;
  white-space: nowrap;
}

.react-datepicker__calendar-icon {
  width: 1em;
  height: 1em;
  vertical-align: -0.125em;
}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3981:
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./src/app/keyring/components/AdvancedExpand.css ***!
  \*************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/**
 * Copyright (C) 2016 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */

.key-advanced-open::before {
  content: '<< ';
}

.key-advanced-closed::after {
  content: ' >>';
}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 7924:
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./src/app/keyring/components/KeyUsers.css ***!
  \*******************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */

.keyUsers .table>tbody>tr {
    cursor: pointer;
}

.keyUsers .table>tbody>tr>th, .table>tbody>tr>td {
    vertical-align: middle;
}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3673:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./src/components/util/SecurityBG.css ***!
  \**************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ 1601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 6314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.securityBG {
  position: absolute;
  width: 100%;
  min-height: 100%;
}
`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 6314:
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ 4417:
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    options = {};
  }
  if (!url) {
    return url;
  }
  url = String(url.__esModule ? url.default : url);

  // If url is already wrapped in quotes, remove them
  if (/^['"].*['"]$/.test(url)) {
    url = url.slice(1, -1);
  }
  if (options.hash) {
    url += options.hash;
  }

  // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls
  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }
  return url;
};

/***/ }),

/***/ 1601:
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (i) {
  return i[1];
};

/***/ }),

/***/ 4353:
/*!*****************************************!*\
  !*** ./node_modules/dayjs/dayjs.min.js ***!
  \*****************************************/
/***/ (function(module) {

!function(t,e){ true?module.exports=e():0}(this,(function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",f="month",h="quarter",c="year",d="date",l="Invalid Date",$=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},g="en",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if("string"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split("-");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v="set"+(this.$u?"UTC":"");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+"Hours",0);case u:return $(v+"Minutes",1);case s:return $(v+"Seconds",2);case i:return $(v+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h="set"+(this.$u?"UTC":""),l=(n={},n[a]=h+"Date",n[d]=h+"Date",n[f]=h+"Month",n[c]=h+"FullYear",n[u]=h+"Hours",n[s]=h+"Minutes",n[i]=h+"Seconds",n[r]=h+"Milliseconds",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,"0")},d=n.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:O.s(this.$y,4,"0"),M:a+1,MM:O.s(a+1,2,"0"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,"0"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,"0"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,"0"),s:String(this.$s),ss:O.s(this.$s,2,"0"),SSS:O.s(this.$ms,3,"0"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",f],["$y",c],["$D",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));

/***/ }),

/***/ 3522:
/*!***********************************************!*\
  !*** ./node_modules/dayjs/plugin/duration.js ***!
  \***********************************************/
/***/ (function(module) {

!function(t,s){ true?module.exports=s():0}(this,(function(){"use strict";var t,s,n=1e3,i=6e4,e=36e5,r=864e5,o=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,u=31536e6,h=2592e6,a=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/,d={years:u,months:h,days:r,hours:e,minutes:i,seconds:n,milliseconds:1,weeks:6048e5},c=function(t){return t instanceof g},f=function(t,s,n){return new g(t,n,s.$l)},l=function(t){return s.p(t)+"s"},m=function(t){return t<0},$=function(t){return m(t)?Math.ceil(t):Math.floor(t)},y=function(t){return Math.abs(t)},v=function(t,s){return t?m(t)?{negative:!0,format:""+y(t)+s}:{negative:!1,format:""+t+s}:{negative:!1,format:""}},g=function(){function m(t,s,n){var i=this;if(this.$d={},this.$l=n,void 0===t&&(this.$ms=0,this.parseFromMilliseconds()),s)return f(t*d[l(s)],this);if("number"==typeof t)return this.$ms=t,this.parseFromMilliseconds(),this;if("object"==typeof t)return Object.keys(t).forEach((function(s){i.$d[l(s)]=t[s]})),this.calMilliseconds(),this;if("string"==typeof t){var e=t.match(a);if(e){var r=e.slice(2).map((function(t){return null!=t?Number(t):0}));return this.$d.years=r[0],this.$d.months=r[1],this.$d.weeks=r[2],this.$d.days=r[3],this.$d.hours=r[4],this.$d.minutes=r[5],this.$d.seconds=r[6],this.calMilliseconds(),this}}return this}var y=m.prototype;return y.calMilliseconds=function(){var t=this;this.$ms=Object.keys(this.$d).reduce((function(s,n){return s+(t.$d[n]||0)*d[n]}),0)},y.parseFromMilliseconds=function(){var t=this.$ms;this.$d.years=$(t/u),t%=u,this.$d.months=$(t/h),t%=h,this.$d.days=$(t/r),t%=r,this.$d.hours=$(t/e),t%=e,this.$d.minutes=$(t/i),t%=i,this.$d.seconds=$(t/n),t%=n,this.$d.milliseconds=t},y.toISOString=function(){var t=v(this.$d.years,"Y"),s=v(this.$d.months,"M"),n=+this.$d.days||0;this.$d.weeks&&(n+=7*this.$d.weeks);var i=v(n,"D"),e=v(this.$d.hours,"H"),r=v(this.$d.minutes,"M"),o=this.$d.seconds||0;this.$d.milliseconds&&(o+=this.$d.milliseconds/1e3);var u=v(o,"S"),h=t.negative||s.negative||i.negative||e.negative||r.negative||u.negative,a=e.format||r.format||u.format?"T":"",d=(h?"-":"")+"P"+t.format+s.format+i.format+a+e.format+r.format+u.format;return"P"===d||"-P"===d?"P0D":d},y.toJSON=function(){return this.toISOString()},y.format=function(t){var n=t||"YYYY-MM-DDTHH:mm:ss",i={Y:this.$d.years,YY:s.s(this.$d.years,2,"0"),YYYY:s.s(this.$d.years,4,"0"),M:this.$d.months,MM:s.s(this.$d.months,2,"0"),D:this.$d.days,DD:s.s(this.$d.days,2,"0"),H:this.$d.hours,HH:s.s(this.$d.hours,2,"0"),m:this.$d.minutes,mm:s.s(this.$d.minutes,2,"0"),s:this.$d.seconds,ss:s.s(this.$d.seconds,2,"0"),SSS:s.s(this.$d.milliseconds,3,"0")};return n.replace(o,(function(t,s){return s||String(i[t])}))},y.as=function(t){return this.$ms/d[l(t)]},y.get=function(t){var s=this.$ms,n=l(t);return"milliseconds"===n?s%=1e3:s="weeks"===n?$(s/d[n]):this.$d[n],0===s?0:s},y.add=function(t,s,n){var i;return i=s?t*d[l(s)]:c(t)?t.$ms:f(t,this).$ms,f(this.$ms+i*(n?-1:1),this)},y.subtract=function(t,s){return this.add(t,s,!0)},y.locale=function(t){var s=this.clone();return s.$l=t,s},y.clone=function(){return f(this.$ms,this)},y.humanize=function(s){return t().add(this.$ms,"ms").locale(this.$l).fromNow(!s)},y.valueOf=function(){return this.asMilliseconds()},y.milliseconds=function(){return this.get("milliseconds")},y.asMilliseconds=function(){return this.as("milliseconds")},y.seconds=function(){return this.get("seconds")},y.asSeconds=function(){return this.as("seconds")},y.minutes=function(){return this.get("minutes")},y.asMinutes=function(){return this.as("minutes")},y.hours=function(){return this.get("hours")},y.asHours=function(){return this.as("hours")},y.days=function(){return this.get("days")},y.asDays=function(){return this.as("days")},y.weeks=function(){return this.get("weeks")},y.asWeeks=function(){return this.as("weeks")},y.months=function(){return this.get("months")},y.asMonths=function(){return this.as("months")},y.years=function(){return this.get("years")},y.asYears=function(){return this.as("years")},m}();return function(n,i,e){t=e,s=e().$utils(),e.duration=function(t,s){var n=e.locale();return f(t,{$l:n},s)},e.isDuration=c;var r=i.prototype.add,o=i.prototype.subtract;i.prototype.add=function(t,s){return c(t)&&(t=t.asMilliseconds()),r.bind(this)(t,s)},i.prototype.subtract=function(t,s){return c(t)&&(t=t.asMilliseconds()),o.bind(this)(t,s)}}}));

/***/ }),

/***/ 8867:
/*!****************************************************!*\
  !*** ./node_modules/dayjs/plugin/isSameOrAfter.js ***!
  \****************************************************/
/***/ (function(module) {

!function(e,t){ true?module.exports=t():0}(this,(function(){"use strict";return function(e,t){t.prototype.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)}}}));

/***/ }),

/***/ 8906:
/*!*****************************************************!*\
  !*** ./node_modules/dayjs/plugin/isSameOrBefore.js ***!
  \*****************************************************/
/***/ (function(module) {

!function(e,i){ true?module.exports=i():0}(this,(function(){"use strict";return function(e,i){i.prototype.isSameOrBefore=function(e,i){return this.isSame(e,i)||this.isBefore(e,i)}}}));

/***/ }),

/***/ 5750:
/*!******************************************************!*\
  !*** ./node_modules/dayjs/plugin/localizedFormat.js ***!
  \******************************************************/
/***/ (function(module) {

!function(e,t){ true?module.exports=t():0}(this,(function(){"use strict";var e={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};return function(t,o,n){var r=o.prototype,i=r.format;n.en.formats=e,r.format=function(t){void 0===t&&(t="YYYY-MM-DDTHH:mm:ssZ");var o=this.$locale().formats,n=function(t,o){return t.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var i=r&&r.toUpperCase();return n||o[r]||e[r]||o[i].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,o){return t||o.slice(1)}))}))}(t,void 0===o?{}:o);return i.call(this,n)}}}));

/***/ }),

/***/ 4982:
/*!******************************************!*\
  !*** ./node_modules/deep-equal/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var objectKeys = __webpack_require__(/*! object-keys */ 1189);
var isArguments = __webpack_require__(/*! is-arguments */ 7244);
var is = __webpack_require__(/*! object-is */ 7653);
var isRegex = __webpack_require__(/*! is-regex */ 4035);
var flags = __webpack_require__(/*! regexp.prototype.flags */ 1589);
var isDate = __webpack_require__(/*! is-date-object */ 2120);

var getTime = Date.prototype.getTime;

function deepEqual(actual, expected, options) {
  var opts = options || {};

  // 7.1. All identical values are equivalent, as determined by ===.
  if (opts.strict ? is(actual, expected) : actual === expected) {
    return true;
  }

  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
    return opts.strict ? is(actual, expected) : actual == expected;
  }

  /*
   * 7.4. For all other Object pairs, including Array objects, equivalence is
   * determined by having the same number of owned properties (as verified
   * with Object.prototype.hasOwnProperty.call), the same set of keys
   * (although not necessarily the same order), equivalent values for every
   * corresponding key, and an identical 'prototype' property. Note: this
   * accounts for both named and indexed properties on Arrays.
   */
  // eslint-disable-next-line no-use-before-define
  return objEquiv(actual, expected, opts);
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer(x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
    return false;
  }
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') {
    return false;
  }
  return true;
}

function objEquiv(a, b, opts) {
  /* eslint max-statements: [2, 50] */
  var i, key;
  if (typeof a !== typeof b) { return false; }
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) { return false; }

  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) { return false; }

  if (isArguments(a) !== isArguments(b)) { return false; }

  var aIsRegex = isRegex(a);
  var bIsRegex = isRegex(b);
  if (aIsRegex !== bIsRegex) { return false; }
  if (aIsRegex || bIsRegex) {
    return a.source === b.source && flags(a) === flags(b);
  }

  if (isDate(a) && isDate(b)) {
    return getTime.call(a) === getTime.call(b);
  }

  var aIsBuffer = isBuffer(a);
  var bIsBuffer = isBuffer(b);
  if (aIsBuffer !== bIsBuffer) { return false; }
  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
    if (a.length !== b.length) { return false; }
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) { return false; }
    }
    return true;
  }

  if (typeof a !== typeof b) { return false; }

  try {
    var ka = objectKeys(a);
    var kb = objectKeys(b);
  } catch (e) { // happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates hasOwnProperty)
  if (ka.length !== kb.length) { return false; }

  // the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  // ~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i]) { return false; }
  }
  // equivalent values for every corresponding key, and ~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) { return false; }
  }

  return true;
}

module.exports = deepEqual;


/***/ }),

/***/ 41:
/*!****************************************************!*\
  !*** ./node_modules/define-data-property/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $defineProperty = __webpack_require__(/*! es-define-property */ 655);

var $SyntaxError = __webpack_require__(/*! es-errors/syntax */ 8068);
var $TypeError = __webpack_require__(/*! es-errors/type */ 9675);

var gopd = __webpack_require__(/*! gopd */ 5795);

/** @type {import('.')} */
module.exports = function defineDataProperty(
	obj,
	property,
	value
) {
	if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
		throw new $TypeError('`obj` must be an object or a function`');
	}
	if (typeof property !== 'string' && typeof property !== 'symbol') {
		throw new $TypeError('`property` must be a string or a symbol`');
	}
	if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {
		throw new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {
		throw new $TypeError('`nonWritable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {
		throw new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {
		throw new $TypeError('`loose`, if provided, must be a boolean');
	}

	var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
	var nonWritable = arguments.length > 4 ? arguments[4] : null;
	var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
	var loose = arguments.length > 6 ? arguments[6] : false;

	/* @type {false | TypedPropertyDescriptor<unknown>} */
	var desc = !!gopd && gopd(obj, property);

	if ($defineProperty) {
		$defineProperty(obj, property, {
			configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
			enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
			value: value,
			writable: nonWritable === null && desc ? desc.writable : !nonWritable
		});
	} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {
		// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable
		obj[property] = value; // eslint-disable-line no-param-reassign
	} else {
		throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');
	}
};


/***/ }),

/***/ 8452:
/*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var keys = __webpack_require__(/*! object-keys */ 1189);
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var defineDataProperty = __webpack_require__(/*! define-data-property */ 41);

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var supportsDescriptors = __webpack_require__(/*! has-property-descriptors */ 592)();

var defineProperty = function (object, name, value, predicate) {
	if (name in object) {
		if (predicate === true) {
			if (object[name] === value) {
				return;
			}
		} else if (!isFunction(predicate) || !predicate()) {
			return;
		}
	}

	if (supportsDescriptors) {
		defineDataProperty(object, name, value, true);
	} else {
		defineDataProperty(object, name, value);
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),

/***/ 2963:
/*!****************************************************!*\
  !*** ./node_modules/dom-helpers/class/addClass.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4994);

exports.__esModule = true;
exports["default"] = addClass;

var _hasClass = _interopRequireDefault(__webpack_require__(/*! ./hasClass */ 598));

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
}

module.exports = exports["default"];

/***/ }),

/***/ 598:
/*!****************************************************!*\
  !*** ./node_modules/dom-helpers/class/hasClass.js ***!
  \****************************************************/
/***/ ((module, exports) => {

"use strict";


exports.__esModule = true;
exports["default"] = hasClass;

function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

module.exports = exports["default"];

/***/ }),

/***/ 788:
/*!*******************************************************!*\
  !*** ./node_modules/dom-helpers/class/removeClass.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";


function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

module.exports = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
};

/***/ }),

/***/ 655:
/*!**************************************************!*\
  !*** ./node_modules/es-define-property/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ 453);

/** @type {import('.')} */
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;
if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = false;
	}
}

module.exports = $defineProperty;


/***/ }),

/***/ 1237:
/*!****************************************!*\
  !*** ./node_modules/es-errors/eval.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./eval')} */
module.exports = EvalError;


/***/ }),

/***/ 9383:
/*!*****************************************!*\
  !*** ./node_modules/es-errors/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";


/** @type {import('.')} */
module.exports = Error;


/***/ }),

/***/ 9290:
/*!*****************************************!*\
  !*** ./node_modules/es-errors/range.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./range')} */
module.exports = RangeError;


/***/ }),

/***/ 9538:
/*!***************************************!*\
  !*** ./node_modules/es-errors/ref.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./ref')} */
module.exports = ReferenceError;


/***/ }),

/***/ 8068:
/*!******************************************!*\
  !*** ./node_modules/es-errors/syntax.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./syntax')} */
module.exports = SyntaxError;


/***/ }),

/***/ 9675:
/*!****************************************!*\
  !*** ./node_modules/es-errors/type.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./type')} */
module.exports = TypeError;


/***/ }),

/***/ 5345:
/*!***************************************!*\
  !*** ./node_modules/es-errors/uri.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./uri')} */
module.exports = URIError;


/***/ }),

/***/ 9353:
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";


/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr = Object.prototype.toString;
var max = Math.max;
var funcType = '[object Function]';

var concatty = function concatty(a, b) {
    var arr = [];

    for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
    }
    for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
    }

    return arr;
};

var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
    }
    return arr;
};

var joiny = function (arr, joiner) {
    var str = '';
    for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                concatty(args, arguments)
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(
            that,
            concatty(args, arguments)
        );

    };

    var boundLength = max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = '$' + i;
    }

    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


/***/ }),

/***/ 6743:
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ 9353);

module.exports = Function.prototype.bind || implementation;


/***/ }),

/***/ 4462:
/*!****************************************************!*\
  !*** ./node_modules/functions-have-names/index.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";


var functionsHaveNames = function functionsHaveNames() {
	return typeof function f() {}.name === 'string';
};

var gOPD = Object.getOwnPropertyDescriptor;
if (gOPD) {
	try {
		gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		gOPD = null;
	}
}

functionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {
	if (!functionsHaveNames() || !gOPD) {
		return false;
	}
	var desc = gOPD(function () {}, 'name');
	return !!desc && !!desc.configurable;
};

var $bind = Function.prototype.bind;

functionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {
	return functionsHaveNames() && typeof $bind === 'function' && function f() {}.bind().name !== '';
};

module.exports = functionsHaveNames;


/***/ }),

/***/ 453:
/*!*********************************************!*\
  !*** ./node_modules/get-intrinsic/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var undefined;

var $Error = __webpack_require__(/*! es-errors */ 9383);
var $EvalError = __webpack_require__(/*! es-errors/eval */ 1237);
var $RangeError = __webpack_require__(/*! es-errors/range */ 9290);
var $ReferenceError = __webpack_require__(/*! es-errors/ref */ 9538);
var $SyntaxError = __webpack_require__(/*! es-errors/syntax */ 8068);
var $TypeError = __webpack_require__(/*! es-errors/type */ 9675);
var $URIError = __webpack_require__(/*! es-errors/uri */ 5345);

var $Function = Function;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = __webpack_require__(/*! has-symbols */ 4039)();
var hasProto = __webpack_require__(/*! has-proto */ 24)();

var getProto = Object.getPrototypeOf || (
	hasProto
		? function (x) { return x.__proto__; } // eslint-disable-line no-proto
		: null
);

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	__proto__: null,
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': $Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': $EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': $RangeError,
	'%ReferenceError%': $ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': $URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	__proto__: null,
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(/*! function-bind */ 6743);
var hasOwn = __webpack_require__(/*! hasown */ 9957);
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};


/***/ }),

/***/ 5795:
/*!************************************!*\
  !*** ./node_modules/gopd/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ 453);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;


/***/ }),

/***/ 2611:
/*!***********************************!*\
  !*** ./node_modules/gud/index.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// @flow


var key = '__global_unique_id__';

module.exports = function() {
  return __webpack_require__.g[key] = (__webpack_require__.g[key] || 0) + 1;
};


/***/ }),

/***/ 592:
/*!********************************************************!*\
  !*** ./node_modules/has-property-descriptors/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $defineProperty = __webpack_require__(/*! es-define-property */ 655);

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	return !!$defineProperty;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!$defineProperty) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;


/***/ }),

/***/ 24:
/*!*****************************************!*\
  !*** ./node_modules/has-proto/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";


var test = {
	__proto__: null,
	foo: {}
};

var $Object = Object;

/** @type {import('.')} */
module.exports = function hasProto() {
	// @ts-expect-error: TS errors on an inherited property for some reason
	return { __proto__: test }.foo === test.foo
		&& !(test instanceof $Object);
};


/***/ }),

/***/ 4039:
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = __webpack_require__(/*! ./shams */ 1333);

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};


/***/ }),

/***/ 1333:
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";


/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};


/***/ }),

/***/ 9092:
/*!***********************************************!*\
  !*** ./node_modules/has-tostringtag/shams.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hasSymbols = __webpack_require__(/*! has-symbols/shams */ 1333);

/** @type {import('.')} */
module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};


/***/ }),

/***/ 9957:
/*!**************************************!*\
  !*** ./node_modules/hasown/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = __webpack_require__(/*! function-bind */ 6743);

/** @type {import('.')} */
module.exports = bind.call(call, $hasOwn);


/***/ }),

/***/ 4146:
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var reactIs = __webpack_require__(/*! react-is */ 4363);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ 7244:
/*!********************************************!*\
  !*** ./node_modules/is-arguments/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ 9092)();
var callBound = __webpack_require__(/*! call-bind/callBound */ 8075);

var $toString = callBound('Object.prototype.toString');

var isStandardArguments = function isArguments(value) {
	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null &&
		typeof value === 'object' &&
		typeof value.length === 'number' &&
		value.length >= 0 &&
		$toString(value) !== '[object Array]' &&
		$toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;


/***/ }),

/***/ 2120:
/*!**********************************************!*\
  !*** ./node_modules/is-date-object/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var getDay = Date.prototype.getDay;
var tryDateObject = function tryDateGetDayCall(value) {
	try {
		getDay.call(value);
		return true;
	} catch (e) {
		return false;
	}
};

var toStr = Object.prototype.toString;
var dateClass = '[object Date]';
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ 9092)();

module.exports = function isDateObject(value) {
	if (typeof value !== 'object' || value === null) {
		return false;
	}
	return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
};


/***/ }),

/***/ 4035:
/*!****************************************!*\
  !*** ./node_modules/is-regex/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var callBound = __webpack_require__(/*! call-bind/callBound */ 8075);
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ 9092)();
var has;
var $exec;
var isRegexMarker;
var badStringifier;

if (hasToStringTag) {
	has = callBound('Object.prototype.hasOwnProperty');
	$exec = callBound('RegExp.prototype.exec');
	isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}
}

var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';

module.exports = hasToStringTag
	// eslint-disable-next-line consistent-return
	? function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		var descriptor = gOPD(value, 'lastIndex');
		var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			$exec(value, badStringifier);
		} catch (e) {
			return e === isRegexMarker;
		}
	}
	: function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};


/***/ }),

/***/ 9211:
/*!**************************************************!*\
  !*** ./node_modules/object-is/implementation.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";


var numberIsNaN = function (value) {
	return value !== value;
};

module.exports = function is(a, b) {
	if (a === 0 && b === 0) {
		return 1 / a === 1 / b;
	}
	if (a === b) {
		return true;
	}
	if (numberIsNaN(a) && numberIsNaN(b)) {
		return true;
	}
	return false;
};



/***/ }),

/***/ 7653:
/*!*****************************************!*\
  !*** ./node_modules/object-is/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var define = __webpack_require__(/*! define-properties */ 8452);
var callBind = __webpack_require__(/*! call-bind */ 487);

var implementation = __webpack_require__(/*! ./implementation */ 9211);
var getPolyfill = __webpack_require__(/*! ./polyfill */ 9394);
var shim = __webpack_require__(/*! ./shim */ 6576);

var polyfill = callBind(getPolyfill(), Object);

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


/***/ }),

/***/ 9394:
/*!********************************************!*\
  !*** ./node_modules/object-is/polyfill.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ 9211);

module.exports = function getPolyfill() {
	return typeof Object.is === 'function' ? Object.is : implementation;
};


/***/ }),

/***/ 6576:
/*!****************************************!*\
  !*** ./node_modules/object-is/shim.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var getPolyfill = __webpack_require__(/*! ./polyfill */ 9394);
var define = __webpack_require__(/*! define-properties */ 8452);

module.exports = function shimObjectIs() {
	var polyfill = getPolyfill();
	define(Object, { is: polyfill }, {
		is: function testObjectIs() {
			return Object.is !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),

/***/ 8875:
/*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = __webpack_require__(/*! ./isArguments */ 1093); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;


/***/ }),

/***/ 1189:
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var slice = Array.prototype.slice;
var isArgs = __webpack_require__(/*! ./isArguments */ 1093);

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ 8875);

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;


/***/ }),

/***/ 1093:
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};


/***/ }),

/***/ 5302:
/*!**********************************************!*\
  !*** ./node_modules/path-to-regexp/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isarray = __webpack_require__(/*! isarray */ 7291)

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp
module.exports.parse = parse
module.exports.compile = compile
module.exports.tokensToFunction = tokensToFunction
module.exports.tokensToRegExp = tokensToRegExp

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g')

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = []
  var key = 0
  var index = 0
  var path = ''
  var defaultDelimiter = options && options.delimiter || '/'
  var res

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0]
    var escaped = res[1]
    var offset = res.index
    path += str.slice(index, offset)
    index = offset + m.length

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1]
      continue
    }

    var next = str[index]
    var prefix = res[2]
    var name = res[3]
    var capture = res[4]
    var group = res[5]
    var modifier = res[6]
    var asterisk = res[7]

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path)
      path = ''
    }

    var partial = prefix != null && next != null && next !== prefix
    var repeat = modifier === '+' || modifier === '*'
    var optional = modifier === '?' || modifier === '*'
    var delimiter = prefix || defaultDelimiter
    var pattern = capture || group
    var prevText = prefix || (typeof tokens[tokens.length - 1] === 'string' ? tokens[tokens.length - 1] : '')

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : restrictBacktrack(delimiter, prevText))
    })
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index)
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path)
  }

  return tokens
}

function restrictBacktrack(delimiter, prevText) {
  if (!prevText || prevText.indexOf(delimiter) > -1) {
    return '[^' + escapeString(delimiter) + ']+?'
  }

  return escapeString(prevText) + '|(?:(?!' + escapeString(prevText) + ')[^' + escapeString(delimiter) + '])+?'
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options), options)
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length)

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))
    }
  }

  return function (obj, opts) {
    var path = ''
    var data = obj || {}
    var options = opts || {}
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        path += token

        continue
      }

      var value = data[token.name]
      var segment

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j])

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options && options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g)

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      })
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = []

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source)
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  var strict = options.strict
  var end = options.end !== false
  var route = ''

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i]

    if (typeof token === 'string') {
      route += escapeString(token)
    } else {
      var prefix = escapeString(token.prefix)
      var capture = '(?:' + token.pattern + ')'

      keys.push(token)

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*'
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?'
        } else {
          capture = prefix + '(' + capture + ')?'
        }
      } else {
        capture = prefix + '(' + capture + ')'
      }

      route += capture
    }
  }

  var delimiter = escapeString(options.delimiter || '/')
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
  }

  if (end) {
    route += '$'
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}


/***/ }),

/***/ 7291:
/*!*******************************************************************!*\
  !*** ./node_modules/path-to-regexp/node_modules/isarray/index.js ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ 2694:
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithThrowingShims.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ 6925);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ 5556:
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(/*! ./factoryWithThrowingShims */ 2694)();
}


/***/ }),

/***/ 6925:
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ 9386:
/*!********************************************************************!*\
  !*** ./node_modules/react-datepicker/dist/react-datepicker.min.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

!function(e,t){ true?t(exports,__webpack_require__(/*! react */ 1594),__webpack_require__(/*! prop-types */ 5556),__webpack_require__(/*! classnames */ 6942),__webpack_require__(/*! date-fns/isDate */ 7586),__webpack_require__(/*! date-fns/isValid */ 2964),__webpack_require__(/*! date-fns/format */ 6658),__webpack_require__(/*! date-fns/addMinutes */ 2658),__webpack_require__(/*! date-fns/addHours */ 2908),__webpack_require__(/*! date-fns/addDays */ 7806),__webpack_require__(/*! date-fns/addWeeks */ 2454),__webpack_require__(/*! date-fns/addMonths */ 3214),__webpack_require__(/*! date-fns/addQuarters */ 8980),__webpack_require__(/*! date-fns/addYears */ 8733),__webpack_require__(/*! date-fns/subDays */ 443),__webpack_require__(/*! date-fns/subWeeks */ 5377),__webpack_require__(/*! date-fns/subMonths */ 5231),__webpack_require__(/*! date-fns/subQuarters */ 3801),__webpack_require__(/*! date-fns/subYears */ 486),__webpack_require__(/*! date-fns/getSeconds */ 187),__webpack_require__(/*! date-fns/getMinutes */ 9691),__webpack_require__(/*! date-fns/getHours */ 161),__webpack_require__(/*! date-fns/getDay */ 2928),__webpack_require__(/*! date-fns/getDate */ 4234),__webpack_require__(/*! date-fns/getISOWeek */ 7066),__webpack_require__(/*! date-fns/getMonth */ 8308),__webpack_require__(/*! date-fns/getQuarter */ 7286),__webpack_require__(/*! date-fns/getYear */ 3571),__webpack_require__(/*! date-fns/getTime */ 2335),__webpack_require__(/*! date-fns/setSeconds */ 8991),__webpack_require__(/*! date-fns/setMinutes */ 2231),__webpack_require__(/*! date-fns/setHours */ 3701),__webpack_require__(/*! date-fns/setMonth */ 9864),__webpack_require__(/*! date-fns/setQuarter */ 5618),__webpack_require__(/*! date-fns/setYear */ 2455),__webpack_require__(/*! date-fns/min */ 8990),__webpack_require__(/*! date-fns/max */ 136),__webpack_require__(/*! date-fns/differenceInCalendarDays */ 3511),__webpack_require__(/*! date-fns/differenceInCalendarMonths */ 8195),__webpack_require__(/*! date-fns/differenceInCalendarYears */ 8138),__webpack_require__(/*! date-fns/startOfDay */ 4495),__webpack_require__(/*! date-fns/startOfWeek */ 5163),__webpack_require__(/*! date-fns/startOfMonth */ 4631),__webpack_require__(/*! date-fns/startOfQuarter */ 3501),__webpack_require__(/*! date-fns/startOfYear */ 8918),__webpack_require__(/*! date-fns/endOfDay */ 5068),__webpack_require__(/*! date-fns/endOfWeek */ 3494),__webpack_require__(/*! date-fns/endOfMonth */ 9128),__webpack_require__(/*! date-fns/endOfYear */ 1191),__webpack_require__(/*! date-fns/isEqual */ 5898),__webpack_require__(/*! date-fns/isSameDay */ 6010),__webpack_require__(/*! date-fns/isSameMonth */ 3238),__webpack_require__(/*! date-fns/isSameYear */ 5269),__webpack_require__(/*! date-fns/isSameQuarter */ 8840),__webpack_require__(/*! date-fns/isAfter */ 5104),__webpack_require__(/*! date-fns/isBefore */ 5549),__webpack_require__(/*! date-fns/isWithinInterval */ 940),__webpack_require__(/*! date-fns/toDate */ 9699),__webpack_require__(/*! date-fns/parse */ 9000),__webpack_require__(/*! date-fns/parseISO */ 5670),__webpack_require__(/*! react-onclickoutside */ 3908),__webpack_require__(/*! react-dom */ 5206),__webpack_require__(/*! react-popper */ 2430),__webpack_require__(/*! date-fns/set */ 2402)):0}(this,(function(e,t,r,a,n,o,s,i,p,l,c,d,u,f,h,m,y,v,D,g,k,w,b,S,C,_,M,P,E,N,x,Y,O,I,T,R,L,F,A,W,q,K,B,Q,H,j,V,U,z,$,G,J,X,Z,ee,te,re,ae,ne,oe,se,ie,pe,le){"use strict";function ce(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var de=ce(t),ue=ce(a),fe=ce(n),he=ce(o),me=ce(s),ye=ce(i),ve=ce(p),De=ce(l),ge=ce(c),ke=ce(d),we=ce(u),be=ce(f),Se=ce(h),Ce=ce(m),_e=ce(y),Me=ce(v),Pe=ce(D),Ee=ce(g),Ne=ce(k),xe=ce(w),Ye=ce(b),Oe=ce(S),Ie=ce(C),Te=ce(_),Re=ce(M),Le=ce(P),Fe=ce(E),Ae=ce(N),We=ce(x),qe=ce(Y),Ke=ce(O),Be=ce(I),Qe=ce(T),He=ce(R),je=ce(L),Ve=ce(F),Ue=ce(A),ze=ce(W),$e=ce(q),Ge=ce(K),Je=ce(B),Xe=ce(Q),Ze=ce(H),et=ce(j),tt=ce(U),rt=ce(z),at=ce($),nt=ce(G),ot=ce(J),st=ce(X),it=ce(Z),pt=ce(ee),lt=ce(te),ct=ce(re),dt=ce(ae),ut=ce(ne),ft=ce(oe),ht=ce(se),mt=ce(ie),yt=ce(le);function vt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function Dt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?vt(Object(r),!0).forEach((function(t){St(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):vt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function gt(e){return gt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},gt(e)}function kt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function wt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,Ot(a.key),a)}}function bt(e,t,r){return t&&wt(e.prototype,t),r&&wt(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function St(e,t,r){return(t=Ot(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ct(){return Ct=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},Ct.apply(this,arguments)}function _t(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Pt(e,t)}function Mt(e){return Mt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Mt(e)}function Pt(e,t){return Pt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Pt(e,t)}function Et(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Nt(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,a=Mt(e);if(t){var n=Mt(this).constructor;r=Reflect.construct(a,arguments,n)}else r=a.apply(this,arguments);return function(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Et(e)}(this,r)}}function xt(e){return function(e){if(Array.isArray(e))return Yt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return Yt(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Yt(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Yt(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,a=new Array(t);r<t;r++)a[r]=e[r];return a}function Ot(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var a=r.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}var It=function(e,t){switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});default:return t.date({width:"full"})}},Tt=function(e,t){switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});default:return t.time({width:"full"})}},Rt={p:Tt,P:function(e,t){var r,a=e.match(/(P+)(p+)?/)||[],n=a[1],o=a[2];if(!o)return It(e,t);switch(n){case"P":r=t.dateTime({width:"short"});break;case"PP":r=t.dateTime({width:"medium"});break;case"PPP":r=t.dateTime({width:"long"});break;default:r=t.dateTime({width:"full"})}return r.replace("{{date}}",It(n,t)).replace("{{time}}",Tt(o,t))}},Lt=12,Ft=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;function At(e){var t=e?"string"==typeof e||e instanceof String?ft.default(e):dt.default(e):new Date;return Wt(t)?t:null}function Wt(e,t){return t=t||new Date("1/1/1000"),he.default(e)&&!lt.default(e,t)}function qt(e,t,r){if("en"===r)return me.default(e,t,{awareOfUnicodeTokens:!0});var a=tr(r);return r&&!a&&console.warn('A locale object was not found for the provided string ["'.concat(r,'"].')),!a&&er()&&tr(er())&&(a=tr(er())),me.default(e,t,{locale:a||null,awareOfUnicodeTokens:!0})}function Kt(e,t){var r=t.dateFormat,a=t.locale;return e&&qt(e,Array.isArray(r)?r[0]:r,a)||""}function Bt(e,t){var r=t.hour,a=void 0===r?0:r,n=t.minute,o=void 0===n?0:n,s=t.second,i=void 0===s?0:s;return qe.default(We.default(Ae.default(e,i),o),a)}function Qt(e,t,r){var a=tr(t||er());return Ge.default(e,{locale:a,weekStartsOn:r})}function Ht(e){return Je.default(e)}function jt(e){return Ze.default(e)}function Vt(e){return Xe.default(e)}function Ut(){return $e.default(At())}function zt(e,t){return e&&t?st.default(e,t):!e&&!t}function $t(e,t){return e&&t?ot.default(e,t):!e&&!t}function Gt(e,t){return e&&t?it.default(e,t):!e&&!t}function Jt(e,t){return e&&t?nt.default(e,t):!e&&!t}function Xt(e,t){return e&&t?at.default(e,t):!e&&!t}function Zt(e,t,r){var a,n=$e.default(t),o=et.default(r);try{a=ct.default(e,{start:n,end:o})}catch(e){a=!1}return a}function er(){return("undefined"!=typeof window?window:globalThis).__localeId__}function tr(e){if("string"==typeof e){var t="undefined"!=typeof window?window:globalThis;return t.__localeData__?t.__localeData__[e]:null}return e}function rr(e,t){return qt(Ke.default(At(),e),"LLLL",t)}function ar(e,t){return qt(Ke.default(At(),e),"LLL",t)}function nr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,a=t.maxDate,n=t.excludeDates,o=t.excludeDateIntervals,s=t.includeDates,i=t.includeDateIntervals,p=t.filterDate;return ur(e,{minDate:r,maxDate:a})||n&&n.some((function(t){return Jt(e,t)}))||o&&o.some((function(t){var r=t.start,a=t.end;return ct.default(e,{start:r,end:a})}))||s&&!s.some((function(t){return Jt(e,t)}))||i&&!i.some((function(t){var r=t.start,a=t.end;return ct.default(e,{start:r,end:a})}))||p&&!p(At(e))||!1}function or(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.excludeDates,a=t.excludeDateIntervals;return a&&a.length>0?a.some((function(t){var r=t.start,a=t.end;return ct.default(e,{start:r,end:a})})):r&&r.some((function(t){return Jt(e,t)}))||!1}function sr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,a=t.maxDate,n=t.excludeDates,o=t.includeDates,s=t.filterDate;return ur(e,{minDate:Je.default(r),maxDate:tt.default(a)})||n&&n.some((function(t){return $t(e,t)}))||o&&!o.some((function(t){return $t(e,t)}))||s&&!s(At(e))||!1}function ir(e,t,r,a){var n=Le.default(e),o=Te.default(e),s=Le.default(t),i=Te.default(t),p=Le.default(a);return n===s&&n===p?o<=r&&r<=i:n<s?p===n&&o<=r||p===s&&i>=r||p<s&&p>n:void 0}function pr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,a=t.maxDate,n=t.excludeDates,o=t.includeDates,s=t.filterDate;return ur(e,{minDate:r,maxDate:a})||n&&n.some((function(t){return Gt(e,t)}))||o&&!o.some((function(t){return Gt(e,t)}))||s&&!s(At(e))||!1}function lr(e,t,r){if(!he.default(t)||!he.default(r))return!1;var a=Le.default(t),n=Le.default(r);return a<=e&&n>=e}function cr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,a=t.maxDate,n=t.excludeDates,o=t.includeDates,s=t.filterDate,i=new Date(e,0,1);return ur(i,{minDate:Ze.default(r),maxDate:rt.default(a)})||n&&n.some((function(e){return zt(i,e)}))||o&&!o.some((function(e){return zt(i,e)}))||s&&!s(At(i))||!1}function dr(e,t,r,a){var n=Le.default(e),o=Re.default(e),s=Le.default(t),i=Re.default(t),p=Le.default(a);return n===s&&n===p?o<=r&&r<=i:n<s?p===n&&o<=r||p===s&&i>=r||p<s&&p>n:void 0}function ur(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,a=t.maxDate;return r&&Ve.default(e,r)<0||a&&Ve.default(e,a)>0}function fr(e,t){return t.some((function(t){return xe.default(t)===xe.default(e)&&Ne.default(t)===Ne.default(e)}))}function hr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.excludeTimes,a=t.includeTimes,n=t.filterTime;return r&&fr(e,r)||a&&!fr(e,a)||n&&!n(e)||!1}function mr(e,t){var r=t.minTime,a=t.maxTime;if(!r||!a)throw new Error("Both minTime and maxTime props required");var n,o=At(),s=qe.default(We.default(o,Ne.default(e)),xe.default(e)),i=qe.default(We.default(o,Ne.default(r)),xe.default(r)),p=qe.default(We.default(o,Ne.default(a)),xe.default(a));try{n=!ct.default(s,{start:i,end:p})}catch(e){n=!1}return n}function yr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,a=t.includeDates,n=_e.default(e,1);return r&&Ue.default(r,n)>0||a&&a.every((function(e){return Ue.default(e,n)>0}))||!1}function vr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.maxDate,a=t.includeDates,n=ke.default(e,1);return r&&Ue.default(n,r)>0||a&&a.every((function(e){return Ue.default(n,e)>0}))||!1}function Dr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,a=t.includeDates,n=Pe.default(e,1);return r&&ze.default(r,n)>0||a&&a.every((function(e){return ze.default(e,n)>0}))||!1}function gr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.maxDate,a=t.includeDates,n=be.default(e,1);return r&&ze.default(n,r)>0||a&&a.every((function(e){return ze.default(n,e)>0}))||!1}function kr(e){var t=e.minDate,r=e.includeDates;if(r&&t){var a=r.filter((function(e){return Ve.default(e,t)>=0}));return He.default(a)}return r?He.default(r):t}function wr(e){var t=e.maxDate,r=e.includeDates;if(r&&t){var a=r.filter((function(e){return Ve.default(e,t)<=0}));return je.default(a)}return r?je.default(r):t}function br(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"react-datepicker__day--highlighted",r=new Map,a=0,n=e.length;a<n;a++){var o=e[a];if(fe.default(o)){var s=qt(o,"MM.dd.yyyy"),i=r.get(s)||[];i.includes(t)||(i.push(t),r.set(s,i))}else if("object"===gt(o)){var p=Object.keys(o),l=p[0],c=o[p[0]];if("string"==typeof l&&c.constructor===Array)for(var d=0,u=c.length;d<u;d++){var f=qt(c[d],"MM.dd.yyyy"),h=r.get(f)||[];h.includes(l)||(h.push(l),r.set(f,h))}}}return r}function Sr(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"react-datepicker__day--holidays",r=new Map;return e.forEach((function(e){var a=e.date,n=e.holidayName;if(fe.default(a)){var o=qt(a,"MM.dd.yyyy"),s=r.get(o)||{};if(!("className"in s)||s.className!==t||(i=s.holidayNames,p=[n],i.length!==p.length||!i.every((function(e,t){return e===p[t]})))){var i,p;s.className=t;var l=s.holidayNames;s.holidayNames=l?[].concat(xt(l),[n]):[n],r.set(o,s)}}})),r}function Cr(e,t,r,a,n){for(var o=n.length,s=[],i=0;i<o;i++){var p=ye.default(ve.default(e,xe.default(n[i])),Ne.default(n[i])),l=ye.default(e,(r+1)*a);pt.default(p,t)&&lt.default(p,l)&&s.push(n[i])}return s}function _r(e){return e<10?"0".concat(e):"".concat(e)}function Mr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Lt,r=Math.ceil(Le.default(e)/t)*t;return{startPeriod:r-(t-1),endPeriod:r}}function Pr(e){var t=e.getSeconds(),r=e.getMilliseconds();return dt.default(e.getTime()-1e3*t-r)}function Er(e,t,r,a){for(var n=[],o=0;o<2*t+1;o++){var s=e+t-o,i=!0;r&&(i=Le.default(r)<=s),a&&i&&(i=Le.default(a)>=s),i&&n.push(s)}return n}var Nr=function(e){_t(a,e);var r=Nt(a);function a(e){var n;kt(this,a),St(Et(n=r.call(this,e)),"renderOptions",(function(){var e=n.props.year,t=n.state.yearsList.map((function(t){return de.default.createElement("div",{className:e===t?"react-datepicker__year-option react-datepicker__year-option--selected_year":"react-datepicker__year-option",key:t,onClick:n.onChange.bind(Et(n),t),"aria-selected":e===t?"true":void 0},e===t?de.default.createElement("span",{className:"react-datepicker__year-option--selected"},"✓"):"",t)})),r=n.props.minDate?Le.default(n.props.minDate):null,a=n.props.maxDate?Le.default(n.props.maxDate):null;return a&&n.state.yearsList.find((function(e){return e===a}))||t.unshift(de.default.createElement("div",{className:"react-datepicker__year-option",key:"upcoming",onClick:n.incrementYears},de.default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming"}))),r&&n.state.yearsList.find((function(e){return e===r}))||t.push(de.default.createElement("div",{className:"react-datepicker__year-option",key:"previous",onClick:n.decrementYears},de.default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous"}))),t})),St(Et(n),"onChange",(function(e){n.props.onChange(e)})),St(Et(n),"handleClickOutside",(function(){n.props.onCancel()})),St(Et(n),"shiftYears",(function(e){var t=n.state.yearsList.map((function(t){return t+e}));n.setState({yearsList:t})})),St(Et(n),"incrementYears",(function(){return n.shiftYears(1)})),St(Et(n),"decrementYears",(function(){return n.shiftYears(-1)}));var o=e.yearDropdownItemNumber,s=e.scrollableYearDropdown,i=o||(s?10:5);return n.state={yearsList:Er(n.props.year,i,n.props.minDate,n.props.maxDate)},n.dropdownRef=t.createRef(),n}return bt(a,[{key:"componentDidMount",value:function(){var e=this.dropdownRef.current;if(e){var t=e.children?Array.from(e.children):null,r=t?t.find((function(e){return e.ariaSelected})):null;e.scrollTop=r?r.offsetTop+(r.clientHeight-e.clientHeight)/2:(e.scrollHeight-e.clientHeight)/2}}},{key:"render",value:function(){var e=ue.default({"react-datepicker__year-dropdown":!0,"react-datepicker__year-dropdown--scrollable":this.props.scrollableYearDropdown});return de.default.createElement("div",{className:e,ref:this.dropdownRef},this.renderOptions())}}]),a}(de.default.Component),xr=ht.default(Nr),Yr=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"state",{dropdownVisible:!1}),St(Et(e),"renderSelectOptions",(function(){for(var t=e.props.minDate?Le.default(e.props.minDate):1900,r=e.props.maxDate?Le.default(e.props.maxDate):2100,a=[],n=t;n<=r;n++)a.push(de.default.createElement("option",{key:n,value:n},n));return a})),St(Et(e),"onSelectChange",(function(t){e.onChange(t.target.value)})),St(Et(e),"renderSelectMode",(function(){return de.default.createElement("select",{value:e.props.year,className:"react-datepicker__year-select",onChange:e.onSelectChange},e.renderSelectOptions())})),St(Et(e),"renderReadView",(function(t){return de.default.createElement("div",{key:"read",style:{visibility:t?"visible":"hidden"},className:"react-datepicker__year-read-view",onClick:function(t){return e.toggleDropdown(t)}},de.default.createElement("span",{className:"react-datepicker__year-read-view--down-arrow"}),de.default.createElement("span",{className:"react-datepicker__year-read-view--selected-year"},e.props.year))})),St(Et(e),"renderDropdown",(function(){return de.default.createElement(xr,{key:"dropdown",year:e.props.year,onChange:e.onChange,onCancel:e.toggleDropdown,minDate:e.props.minDate,maxDate:e.props.maxDate,scrollableYearDropdown:e.props.scrollableYearDropdown,yearDropdownItemNumber:e.props.yearDropdownItemNumber})})),St(Et(e),"renderScrollMode",(function(){var t=e.state.dropdownVisible,r=[e.renderReadView(!t)];return t&&r.unshift(e.renderDropdown()),r})),St(Et(e),"onChange",(function(t){e.toggleDropdown(),t!==e.props.year&&e.props.onChange(t)})),St(Et(e),"toggleDropdown",(function(t){e.setState({dropdownVisible:!e.state.dropdownVisible},(function(){e.props.adjustDateOnChange&&e.handleYearChange(e.props.date,t)}))})),St(Et(e),"handleYearChange",(function(t,r){e.onSelect(t,r),e.setOpen()})),St(Et(e),"onSelect",(function(t,r){e.props.onSelect&&e.props.onSelect(t,r)})),St(Et(e),"setOpen",(function(){e.props.setOpen&&e.props.setOpen(!0)})),e}return bt(r,[{key:"render",value:function(){var e;switch(this.props.dropdownMode){case"scroll":e=this.renderScrollMode();break;case"select":e=this.renderSelectMode()}return de.default.createElement("div",{className:"react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--".concat(this.props.dropdownMode)},e)}}]),r}(de.default.Component),Or=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"isSelectedMonth",(function(t){return e.props.month===t})),St(Et(e),"renderOptions",(function(){return e.props.monthNames.map((function(t,r){return de.default.createElement("div",{className:e.isSelectedMonth(r)?"react-datepicker__month-option react-datepicker__month-option--selected_month":"react-datepicker__month-option",key:t,onClick:e.onChange.bind(Et(e),r),"aria-selected":e.isSelectedMonth(r)?"true":void 0},e.isSelectedMonth(r)?de.default.createElement("span",{className:"react-datepicker__month-option--selected"},"✓"):"",t)}))})),St(Et(e),"onChange",(function(t){return e.props.onChange(t)})),St(Et(e),"handleClickOutside",(function(){return e.props.onCancel()})),e}return bt(r,[{key:"render",value:function(){return de.default.createElement("div",{className:"react-datepicker__month-dropdown"},this.renderOptions())}}]),r}(de.default.Component),Ir=ht.default(Or),Tr=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"state",{dropdownVisible:!1}),St(Et(e),"renderSelectOptions",(function(e){return e.map((function(e,t){return de.default.createElement("option",{key:t,value:t},e)}))})),St(Et(e),"renderSelectMode",(function(t){return de.default.createElement("select",{value:e.props.month,className:"react-datepicker__month-select",onChange:function(t){return e.onChange(t.target.value)}},e.renderSelectOptions(t))})),St(Et(e),"renderReadView",(function(t,r){return de.default.createElement("div",{key:"read",style:{visibility:t?"visible":"hidden"},className:"react-datepicker__month-read-view",onClick:e.toggleDropdown},de.default.createElement("span",{className:"react-datepicker__month-read-view--down-arrow"}),de.default.createElement("span",{className:"react-datepicker__month-read-view--selected-month"},r[e.props.month]))})),St(Et(e),"renderDropdown",(function(t){return de.default.createElement(Ir,{key:"dropdown",month:e.props.month,monthNames:t,onChange:e.onChange,onCancel:e.toggleDropdown})})),St(Et(e),"renderScrollMode",(function(t){var r=e.state.dropdownVisible,a=[e.renderReadView(!r,t)];return r&&a.unshift(e.renderDropdown(t)),a})),St(Et(e),"onChange",(function(t){e.toggleDropdown(),t!==e.props.month&&e.props.onChange(t)})),St(Et(e),"toggleDropdown",(function(){return e.setState({dropdownVisible:!e.state.dropdownVisible})})),e}return bt(r,[{key:"render",value:function(){var e,t=this,r=[0,1,2,3,4,5,6,7,8,9,10,11].map(this.props.useShortMonthInDropdown?function(e){return ar(e,t.props.locale)}:function(e){return rr(e,t.props.locale)});switch(this.props.dropdownMode){case"scroll":e=this.renderScrollMode(r);break;case"select":e=this.renderSelectMode(r)}return de.default.createElement("div",{className:"react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--".concat(this.props.dropdownMode)},e)}}]),r}(de.default.Component);function Rr(e,t){for(var r=[],a=Ht(e),n=Ht(t);!pt.default(a,n);)r.push(At(a)),a=ke.default(a,1);return r}var Lr=function(e){_t(r,e);var t=Nt(r);function r(e){var a;return kt(this,r),St(Et(a=t.call(this,e)),"renderOptions",(function(){return a.state.monthYearsList.map((function(e){var t=Fe.default(e),r=zt(a.props.date,e)&&$t(a.props.date,e);return de.default.createElement("div",{className:r?"react-datepicker__month-year-option--selected_month-year":"react-datepicker__month-year-option",key:t,onClick:a.onChange.bind(Et(a),t),"aria-selected":r?"true":void 0},r?de.default.createElement("span",{className:"react-datepicker__month-year-option--selected"},"✓"):"",qt(e,a.props.dateFormat,a.props.locale))}))})),St(Et(a),"onChange",(function(e){return a.props.onChange(e)})),St(Et(a),"handleClickOutside",(function(){a.props.onCancel()})),a.state={monthYearsList:Rr(a.props.minDate,a.props.maxDate)},a}return bt(r,[{key:"render",value:function(){var e=ue.default({"react-datepicker__month-year-dropdown":!0,"react-datepicker__month-year-dropdown--scrollable":this.props.scrollableMonthYearDropdown});return de.default.createElement("div",{className:e},this.renderOptions())}}]),r}(de.default.Component),Fr=ht.default(Lr),Ar=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"state",{dropdownVisible:!1}),St(Et(e),"renderSelectOptions",(function(){for(var t=Ht(e.props.minDate),r=Ht(e.props.maxDate),a=[];!pt.default(t,r);){var n=Fe.default(t);a.push(de.default.createElement("option",{key:n,value:n},qt(t,e.props.dateFormat,e.props.locale))),t=ke.default(t,1)}return a})),St(Et(e),"onSelectChange",(function(t){e.onChange(t.target.value)})),St(Et(e),"renderSelectMode",(function(){return de.default.createElement("select",{value:Fe.default(Ht(e.props.date)),className:"react-datepicker__month-year-select",onChange:e.onSelectChange},e.renderSelectOptions())})),St(Et(e),"renderReadView",(function(t){var r=qt(e.props.date,e.props.dateFormat,e.props.locale);return de.default.createElement("div",{key:"read",style:{visibility:t?"visible":"hidden"},className:"react-datepicker__month-year-read-view",onClick:function(t){return e.toggleDropdown(t)}},de.default.createElement("span",{className:"react-datepicker__month-year-read-view--down-arrow"}),de.default.createElement("span",{className:"react-datepicker__month-year-read-view--selected-month-year"},r))})),St(Et(e),"renderDropdown",(function(){return de.default.createElement(Fr,{key:"dropdown",date:e.props.date,dateFormat:e.props.dateFormat,onChange:e.onChange,onCancel:e.toggleDropdown,minDate:e.props.minDate,maxDate:e.props.maxDate,scrollableMonthYearDropdown:e.props.scrollableMonthYearDropdown,locale:e.props.locale})})),St(Et(e),"renderScrollMode",(function(){var t=e.state.dropdownVisible,r=[e.renderReadView(!t)];return t&&r.unshift(e.renderDropdown()),r})),St(Et(e),"onChange",(function(t){e.toggleDropdown();var r=At(parseInt(t));zt(e.props.date,r)&&$t(e.props.date,r)||e.props.onChange(r)})),St(Et(e),"toggleDropdown",(function(){return e.setState({dropdownVisible:!e.state.dropdownVisible})})),e}return bt(r,[{key:"render",value:function(){var e;switch(this.props.dropdownMode){case"scroll":e=this.renderScrollMode();break;case"select":e=this.renderSelectMode()}return de.default.createElement("div",{className:"react-datepicker__month-year-dropdown-container react-datepicker__month-year-dropdown-container--".concat(this.props.dropdownMode)},e)}}]),r}(de.default.Component),Wr=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"dayEl",de.default.createRef()),St(Et(e),"handleClick",(function(t){!e.isDisabled()&&e.props.onClick&&e.props.onClick(t)})),St(Et(e),"handleMouseEnter",(function(t){!e.isDisabled()&&e.props.onMouseEnter&&e.props.onMouseEnter(t)})),St(Et(e),"handleOnKeyDown",(function(t){" "===t.key&&(t.preventDefault(),t.key="Enter"),e.props.handleOnKeyDown(t)})),St(Et(e),"isSameDay",(function(t){return Jt(e.props.day,t)})),St(Et(e),"isKeyboardSelected",(function(){return!e.props.disabledKeyboardNavigation&&!(e.isSameDay(e.props.selected)||e.isSameWeek(e.props.selected))&&(e.isSameDay(e.props.preSelection)||e.isSameWeek(e.props.preSelection))})),St(Et(e),"isDisabled",(function(){return nr(e.props.day,e.props)})),St(Et(e),"isExcluded",(function(){return or(e.props.day,e.props)})),St(Et(e),"isStartOfWeek",(function(){return Jt(e.props.day,Qt(e.props.day,e.props.locale,e.props.calendarStartDay))})),St(Et(e),"isSameWeek",(function(t){return e.props.showWeekPicker&&Jt(t,Qt(e.props.day,e.props.locale,e.props.calendarStartDay))})),St(Et(e),"getHighLightedClass",(function(){var t=e.props,r=t.day,a=t.highlightDates;if(!a)return!1;var n=qt(r,"MM.dd.yyyy");return a.get(n)})),St(Et(e),"getHolidaysClass",(function(){var t=e.props,r=t.day,a=t.holidays;if(!a)return!1;var n=qt(r,"MM.dd.yyyy");return a.has(n)?[a.get(n).className]:void 0})),St(Et(e),"isInRange",(function(){var t=e.props,r=t.day,a=t.startDate,n=t.endDate;return!(!a||!n)&&Zt(r,a,n)})),St(Et(e),"isInSelectingRange",(function(){var t,r=e.props,a=r.day,n=r.selectsStart,o=r.selectsEnd,s=r.selectsRange,i=r.selectsDisabledDaysInRange,p=r.startDate,l=r.endDate,c=null!==(t=e.props.selectingDate)&&void 0!==t?t:e.props.preSelection;return!(!(n||o||s)||!c||!i&&e.isDisabled())&&(n&&l&&(lt.default(c,l)||Xt(c,l))?Zt(a,c,l):(o&&p&&(pt.default(c,p)||Xt(c,p))||!(!s||!p||l||!pt.default(c,p)&&!Xt(c,p)))&&Zt(a,p,c))})),St(Et(e),"isSelectingRangeStart",(function(){var t;if(!e.isInSelectingRange())return!1;var r=e.props,a=r.day,n=r.startDate,o=r.selectsStart,s=null!==(t=e.props.selectingDate)&&void 0!==t?t:e.props.preSelection;return Jt(a,o?s:n)})),St(Et(e),"isSelectingRangeEnd",(function(){var t;if(!e.isInSelectingRange())return!1;var r=e.props,a=r.day,n=r.endDate,o=r.selectsEnd,s=r.selectsRange,i=null!==(t=e.props.selectingDate)&&void 0!==t?t:e.props.preSelection;return Jt(a,o||s?i:n)})),St(Et(e),"isRangeStart",(function(){var t=e.props,r=t.day,a=t.startDate,n=t.endDate;return!(!a||!n)&&Jt(a,r)})),St(Et(e),"isRangeEnd",(function(){var t=e.props,r=t.day,a=t.startDate,n=t.endDate;return!(!a||!n)&&Jt(n,r)})),St(Et(e),"isWeekend",(function(){var t=Ye.default(e.props.day);return 0===t||6===t})),St(Et(e),"isAfterMonth",(function(){return void 0!==e.props.month&&(e.props.month+1)%12===Te.default(e.props.day)})),St(Et(e),"isBeforeMonth",(function(){return void 0!==e.props.month&&(Te.default(e.props.day)+1)%12===e.props.month})),St(Et(e),"isCurrentDay",(function(){return e.isSameDay(At())})),St(Et(e),"isSelected",(function(){return e.isSameDay(e.props.selected)||e.isSameWeek(e.props.selected)})),St(Et(e),"getClassNames",(function(t){var r,a=e.props.dayClassName?e.props.dayClassName(t):void 0;return ue.default("react-datepicker__day",a,"react-datepicker__day--"+qt(e.props.day,"ddd",r),{"react-datepicker__day--disabled":e.isDisabled(),"react-datepicker__day--excluded":e.isExcluded(),"react-datepicker__day--selected":e.isSelected(),"react-datepicker__day--keyboard-selected":e.isKeyboardSelected(),"react-datepicker__day--range-start":e.isRangeStart(),"react-datepicker__day--range-end":e.isRangeEnd(),"react-datepicker__day--in-range":e.isInRange(),"react-datepicker__day--in-selecting-range":e.isInSelectingRange(),"react-datepicker__day--selecting-range-start":e.isSelectingRangeStart(),"react-datepicker__day--selecting-range-end":e.isSelectingRangeEnd(),"react-datepicker__day--today":e.isCurrentDay(),"react-datepicker__day--weekend":e.isWeekend(),"react-datepicker__day--outside-month":e.isAfterMonth()||e.isBeforeMonth()},e.getHighLightedClass("react-datepicker__day--highlighted"),e.getHolidaysClass())})),St(Et(e),"getAriaLabel",(function(){var t=e.props,r=t.day,a=t.ariaLabelPrefixWhenEnabled,n=void 0===a?"Choose":a,o=t.ariaLabelPrefixWhenDisabled,s=void 0===o?"Not available":o,i=e.isDisabled()||e.isExcluded()?s:n;return"".concat(i," ").concat(qt(r,"PPPP",e.props.locale))})),St(Et(e),"getTitle",(function(){var t=e.props,r=t.day,a=t.holidays,n=void 0===a?new Map:a,o=qt(r,"MM.dd.yyyy");return n.has(o)&&n.get(o).holidayNames.length>0?n.get(o).holidayNames.join(", "):""})),St(Et(e),"getTabIndex",(function(t,r){var a=t||e.props.selected,n=r||e.props.preSelection;return(!e.props.showWeekPicker||!e.props.showWeekNumber&&e.isStartOfWeek())&&(e.isKeyboardSelected()||e.isSameDay(a)&&Jt(n,a))?0:-1})),St(Et(e),"handleFocusDay",(function(){var t,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=!1;0===e.getTabIndex()&&!r.isInputFocused&&e.isSameDay(e.props.preSelection)&&(document.activeElement&&document.activeElement!==document.body||(a=!0),e.props.inline&&!e.props.shouldFocusDayInline&&(a=!1),e.props.containerRef&&e.props.containerRef.current&&e.props.containerRef.current.contains(document.activeElement)&&document.activeElement.classList.contains("react-datepicker__day")&&(a=!0),e.props.monthShowsDuplicateDaysEnd&&e.isAfterMonth()&&(a=!1),e.props.monthShowsDuplicateDaysStart&&e.isBeforeMonth()&&(a=!1)),a&&(null===(t=e.dayEl.current)||void 0===t||t.focus({preventScroll:!0}))})),St(Et(e),"renderDayContents",(function(){return e.props.monthShowsDuplicateDaysEnd&&e.isAfterMonth()||e.props.monthShowsDuplicateDaysStart&&e.isBeforeMonth()?null:e.props.renderDayContents?e.props.renderDayContents(Oe.default(e.props.day),e.props.day):Oe.default(e.props.day)})),St(Et(e),"render",(function(){return de.default.createElement("div",{ref:e.dayEl,className:e.getClassNames(e.props.day),onKeyDown:e.handleOnKeyDown,onClick:e.handleClick,onMouseEnter:e.handleMouseEnter,tabIndex:e.getTabIndex(),"aria-label":e.getAriaLabel(),role:"option",title:e.getTitle(),"aria-disabled":e.isDisabled(),"aria-current":e.isCurrentDay()?"date":void 0,"aria-selected":e.isSelected()||e.isInRange()},e.renderDayContents(),""!==e.getTitle()&&de.default.createElement("span",{className:"holiday-overlay"},e.getTitle()))})),e}return bt(r,[{key:"componentDidMount",value:function(){this.handleFocusDay()}},{key:"componentDidUpdate",value:function(e){this.handleFocusDay(e)}}]),r}(de.default.Component),qr=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"weekNumberEl",de.default.createRef()),St(Et(e),"handleClick",(function(t){e.props.onClick&&e.props.onClick(t)})),St(Et(e),"handleOnKeyDown",(function(t){" "===t.key&&(t.preventDefault(),t.key="Enter"),e.props.handleOnKeyDown(t)})),St(Et(e),"isKeyboardSelected",(function(){return!e.props.disabledKeyboardNavigation&&!Jt(e.props.date,e.props.selected)&&Jt(e.props.date,e.props.preSelection)})),St(Et(e),"getTabIndex",(function(){return e.props.showWeekPicker&&e.props.showWeekNumber&&(e.isKeyboardSelected()||Jt(e.props.date,e.props.selected)&&Jt(e.props.preSelection,e.props.selected))?0:-1})),St(Et(e),"handleFocusWeekNumber",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=!1;0===e.getTabIndex()&&!t.isInputFocused&&Jt(e.props.date,e.props.preSelection)&&(document.activeElement&&document.activeElement!==document.body||(r=!0),e.props.inline&&!e.props.shouldFocusDayInline&&(r=!1),e.props.containerRef&&e.props.containerRef.current&&e.props.containerRef.current.contains(document.activeElement)&&document.activeElement&&document.activeElement.classList.contains("react-datepicker__week-number")&&(r=!0)),r&&e.weekNumberEl.current&&e.weekNumberEl.current.focus({preventScroll:!0})})),e}return bt(r,[{key:"componentDidMount",value:function(){this.handleFocusWeekNumber()}},{key:"componentDidUpdate",value:function(e){this.handleFocusWeekNumber(e)}},{key:"render",value:function(){var e=this.props,t=e.weekNumber,r=e.ariaLabelPrefix,a=void 0===r?"week ":r,n={"react-datepicker__week-number":!0,"react-datepicker__week-number--clickable":!!e.onClick,"react-datepicker__week-number--selected":Jt(this.props.date,this.props.selected),"react-datepicker__week-number--keyboard-selected":this.isKeyboardSelected()};return de.default.createElement("div",{ref:this.weekNumberEl,className:ue.default(n),"aria-label":"".concat(a," ").concat(this.props.weekNumber),onClick:this.handleClick,onKeyDown:this.handleOnKeyDown,tabIndex:this.getTabIndex()},t)}}],[{key:"defaultProps",get:function(){return{ariaLabelPrefix:"week "}}}]),r}(de.default.Component),Kr=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"handleDayClick",(function(t,r){e.props.onDayClick&&e.props.onDayClick(t,r)})),St(Et(e),"handleDayMouseEnter",(function(t){e.props.onDayMouseEnter&&e.props.onDayMouseEnter(t)})),St(Et(e),"handleWeekClick",(function(t,r,a){if("function"==typeof e.props.onWeekSelect&&e.props.onWeekSelect(t,r,a),e.props.showWeekPicker){var n=Qt(t,e.props.locale,e.props.calendarStartDay);e.handleDayClick(n,a)}e.props.shouldCloseOnSelect&&e.props.setOpen(!1)})),St(Et(e),"formatWeekNumber",(function(t){return e.props.formatWeekNumber?e.props.formatWeekNumber(t):function(e,t){var r=t&&tr(t)||er()&&tr(er());return Ie.default(e,r?{locale:r}:null)}(t)})),St(Et(e),"renderDays",(function(){var t=Qt(e.props.day,e.props.locale,e.props.calendarStartDay),r=[],a=e.formatWeekNumber(t);if(e.props.showWeekNumber){var n=e.props.onWeekSelect||e.props.showWeekPicker?e.handleWeekClick.bind(Et(e),t,a):void 0;r.push(de.default.createElement(qr,{key:"W",weekNumber:a,date:t,onClick:n,selected:e.props.selected,preSelection:e.props.preSelection,ariaLabelPrefix:e.props.ariaLabelPrefix,showWeekPicker:e.props.showWeekPicker,showWeekNumber:e.props.showWeekNumber,disabledKeyboardNavigation:e.props.disabledKeyboardNavigation,handleOnKeyDown:e.props.handleOnKeyDown,isInputFocused:e.props.isInputFocused,containerRef:e.props.containerRef}))}return r.concat([0,1,2,3,4,5,6].map((function(r){var a=De.default(t,r);return de.default.createElement(Wr,{ariaLabelPrefixWhenEnabled:e.props.chooseDayAriaLabelPrefix,ariaLabelPrefixWhenDisabled:e.props.disabledDayAriaLabelPrefix,key:a.valueOf(),day:a,month:e.props.month,onClick:e.handleDayClick.bind(Et(e),a),onMouseEnter:e.handleDayMouseEnter.bind(Et(e),a),minDate:e.props.minDate,maxDate:e.props.maxDate,excludeDates:e.props.excludeDates,excludeDateIntervals:e.props.excludeDateIntervals,includeDates:e.props.includeDates,includeDateIntervals:e.props.includeDateIntervals,highlightDates:e.props.highlightDates,holidays:e.props.holidays,selectingDate:e.props.selectingDate,filterDate:e.props.filterDate,preSelection:e.props.preSelection,selected:e.props.selected,selectsStart:e.props.selectsStart,selectsEnd:e.props.selectsEnd,selectsRange:e.props.selectsRange,showWeekPicker:e.props.showWeekPicker,showWeekNumber:e.props.showWeekNumber,selectsDisabledDaysInRange:e.props.selectsDisabledDaysInRange,startDate:e.props.startDate,endDate:e.props.endDate,dayClassName:e.props.dayClassName,renderDayContents:e.props.renderDayContents,disabledKeyboardNavigation:e.props.disabledKeyboardNavigation,handleOnKeyDown:e.props.handleOnKeyDown,isInputFocused:e.props.isInputFocused,containerRef:e.props.containerRef,inline:e.props.inline,shouldFocusDayInline:e.props.shouldFocusDayInline,monthShowsDuplicateDaysEnd:e.props.monthShowsDuplicateDaysEnd,monthShowsDuplicateDaysStart:e.props.monthShowsDuplicateDaysStart,locale:e.props.locale})})))})),St(Et(e),"startOfWeek",(function(){return Qt(e.props.day,e.props.locale,e.props.calendarStartDay)})),St(Et(e),"isKeyboardSelected",(function(){return!e.props.disabledKeyboardNavigation&&!Jt(e.startOfWeek(),e.props.selected)&&Jt(e.startOfWeek(),e.props.preSelection)})),e}return bt(r,[{key:"render",value:function(){var e={"react-datepicker__week":!0,"react-datepicker__week--selected":Jt(this.startOfWeek(),this.props.selected),"react-datepicker__week--keyboard-selected":this.isKeyboardSelected()};return de.default.createElement("div",{className:ue.default(e)},this.renderDays())}}],[{key:"defaultProps",get:function(){return{shouldCloseOnSelect:!0}}}]),r}(de.default.Component),Br="two_columns",Qr="three_columns",Hr="four_columns",jr=St(St(St({},Br,{grid:[[0,1],[2,3],[4,5],[6,7],[8,9],[10,11]],verticalNavigationOffset:2}),Qr,{grid:[[0,1,2],[3,4,5],[6,7,8],[9,10,11]],verticalNavigationOffset:3}),Hr,{grid:[[0,1,2,3],[4,5,6,7],[8,9,10,11]],verticalNavigationOffset:4});function Vr(e,t){return e?Hr:t?Br:Qr}var Ur=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"MONTH_REFS",xt(Array(12)).map((function(){return de.default.createRef()}))),St(Et(e),"QUARTER_REFS",xt(Array(4)).map((function(){return de.default.createRef()}))),St(Et(e),"isDisabled",(function(t){return nr(t,e.props)})),St(Et(e),"isExcluded",(function(t){return or(t,e.props)})),St(Et(e),"handleDayClick",(function(t,r){e.props.onDayClick&&e.props.onDayClick(t,r,e.props.orderInDisplay)})),St(Et(e),"handleDayMouseEnter",(function(t){e.props.onDayMouseEnter&&e.props.onDayMouseEnter(t)})),St(Et(e),"handleMouseLeave",(function(){e.props.onMouseLeave&&e.props.onMouseLeave()})),St(Et(e),"isRangeStartMonth",(function(t){var r=e.props,a=r.day,n=r.startDate,o=r.endDate;return!(!n||!o)&&$t(Ke.default(a,t),n)})),St(Et(e),"isRangeStartQuarter",(function(t){var r=e.props,a=r.day,n=r.startDate,o=r.endDate;return!(!n||!o)&&Gt(Be.default(a,t),n)})),St(Et(e),"isRangeEndMonth",(function(t){var r=e.props,a=r.day,n=r.startDate,o=r.endDate;return!(!n||!o)&&$t(Ke.default(a,t),o)})),St(Et(e),"isRangeEndQuarter",(function(t){var r=e.props,a=r.day,n=r.startDate,o=r.endDate;return!(!n||!o)&&Gt(Be.default(a,t),o)})),St(Et(e),"isInSelectingRangeMonth",(function(t){var r,a=e.props,n=a.day,o=a.selectsStart,s=a.selectsEnd,i=a.selectsRange,p=a.startDate,l=a.endDate,c=null!==(r=e.props.selectingDate)&&void 0!==r?r:e.props.preSelection;return!(!(o||s||i)||!c)&&(o&&l?ir(c,l,t,n):(s&&p||!(!i||!p||l))&&ir(p,c,t,n))})),St(Et(e),"isSelectingMonthRangeStart",(function(t){var r;if(!e.isInSelectingRangeMonth(t))return!1;var a=e.props,n=a.day,o=a.startDate,s=a.selectsStart,i=Ke.default(n,t),p=null!==(r=e.props.selectingDate)&&void 0!==r?r:e.props.preSelection;return $t(i,s?p:o)})),St(Et(e),"isSelectingMonthRangeEnd",(function(t){var r;if(!e.isInSelectingRangeMonth(t))return!1;var a=e.props,n=a.day,o=a.endDate,s=a.selectsEnd,i=a.selectsRange,p=Ke.default(n,t),l=null!==(r=e.props.selectingDate)&&void 0!==r?r:e.props.preSelection;return $t(p,s||i?l:o)})),St(Et(e),"isInSelectingRangeQuarter",(function(t){var r,a=e.props,n=a.day,o=a.selectsStart,s=a.selectsEnd,i=a.selectsRange,p=a.startDate,l=a.endDate,c=null!==(r=e.props.selectingDate)&&void 0!==r?r:e.props.preSelection;return!(!(o||s||i)||!c)&&(o&&l?dr(c,l,t,n):(s&&p||!(!i||!p||l))&&dr(p,c,t,n))})),St(Et(e),"isWeekInMonth",(function(t){var r=e.props.day,a=De.default(t,6);return $t(t,r)||$t(a,r)})),St(Et(e),"isCurrentMonth",(function(e,t){return Le.default(e)===Le.default(At())&&t===Te.default(At())})),St(Et(e),"isCurrentQuarter",(function(e,t){return Le.default(e)===Le.default(At())&&t===Re.default(At())})),St(Et(e),"isSelectedMonth",(function(e,t,r){return Te.default(r)===t&&Le.default(e)===Le.default(r)})),St(Et(e),"isSelectedQuarter",(function(e,t,r){return Re.default(e)===t&&Le.default(e)===Le.default(r)})),St(Et(e),"renderWeeks",(function(){for(var t=[],r=e.props.fixedHeight,a=0,n=!1,o=Qt(Ht(e.props.day),e.props.locale,e.props.calendarStartDay);t.push(de.default.createElement(Kr,{ariaLabelPrefix:e.props.weekAriaLabelPrefix,chooseDayAriaLabelPrefix:e.props.chooseDayAriaLabelPrefix,disabledDayAriaLabelPrefix:e.props.disabledDayAriaLabelPrefix,key:a,day:o,month:Te.default(e.props.day),onDayClick:e.handleDayClick,onDayMouseEnter:e.handleDayMouseEnter,onWeekSelect:e.props.onWeekSelect,formatWeekNumber:e.props.formatWeekNumber,locale:e.props.locale,minDate:e.props.minDate,maxDate:e.props.maxDate,excludeDates:e.props.excludeDates,excludeDateIntervals:e.props.excludeDateIntervals,includeDates:e.props.includeDates,includeDateIntervals:e.props.includeDateIntervals,inline:e.props.inline,shouldFocusDayInline:e.props.shouldFocusDayInline,highlightDates:e.props.highlightDates,holidays:e.props.holidays,selectingDate:e.props.selectingDate,filterDate:e.props.filterDate,preSelection:e.props.preSelection,selected:e.props.selected,selectsStart:e.props.selectsStart,selectsEnd:e.props.selectsEnd,selectsRange:e.props.selectsRange,selectsDisabledDaysInRange:e.props.selectsDisabledDaysInRange,showWeekNumber:e.props.showWeekNumbers,showWeekPicker:e.props.showWeekPicker,startDate:e.props.startDate,endDate:e.props.endDate,dayClassName:e.props.dayClassName,setOpen:e.props.setOpen,shouldCloseOnSelect:e.props.shouldCloseOnSelect,disabledKeyboardNavigation:e.props.disabledKeyboardNavigation,renderDayContents:e.props.renderDayContents,handleOnKeyDown:e.props.handleOnKeyDown,isInputFocused:e.props.isInputFocused,containerRef:e.props.containerRef,calendarStartDay:e.props.calendarStartDay,monthShowsDuplicateDaysEnd:e.props.monthShowsDuplicateDaysEnd,monthShowsDuplicateDaysStart:e.props.monthShowsDuplicateDaysStart})),!n;){a++,o=ge.default(o,1);var s=r&&a>=6,i=!r&&!e.isWeekInMonth(o);if(s||i){if(!e.props.peekNextMonth)break;n=!0}}return t})),St(Et(e),"onMonthClick",(function(t,r){e.handleDayClick(Ht(Ke.default(e.props.day,r)),t)})),St(Et(e),"onMonthMouseEnter",(function(t){e.handleDayMouseEnter(Ht(Ke.default(e.props.day,t)))})),St(Et(e),"handleMonthNavigation",(function(t,r){e.isDisabled(r)||e.isExcluded(r)||(e.props.setPreSelection(r),e.MONTH_REFS[t].current&&e.MONTH_REFS[t].current.focus())})),St(Et(e),"onMonthKeyDown",(function(t,r){var a=e.props,n=a.selected,o=a.preSelection,s=a.disabledKeyboardNavigation,i=a.showTwoColumnMonthYearPicker,p=a.showFourColumnMonthYearPicker,l=a.setPreSelection,c=t.key;if("Tab"!==c&&t.preventDefault(),!s){var d=Vr(p,i),u=jr[d].verticalNavigationOffset,f=jr[d].grid;switch(c){case"Enter":e.onMonthClick(t,r),l(n);break;case"ArrowRight":e.handleMonthNavigation(11===r?0:r+1,ke.default(o,1));break;case"ArrowLeft":e.handleMonthNavigation(0===r?11:r-1,_e.default(o,1));break;case"ArrowUp":e.handleMonthNavigation(f[0].includes(r)?r+12-u:r-u,_e.default(o,u));break;case"ArrowDown":e.handleMonthNavigation(f[f.length-1].includes(r)?r-12+u:r+u,ke.default(o,u))}}})),St(Et(e),"onQuarterClick",(function(t,r){e.handleDayClick(Vt(Be.default(e.props.day,r)),t)})),St(Et(e),"onQuarterMouseEnter",(function(t){e.handleDayMouseEnter(Vt(Be.default(e.props.day,t)))})),St(Et(e),"handleQuarterNavigation",(function(t,r){e.isDisabled(r)||e.isExcluded(r)||(e.props.setPreSelection(r),e.QUARTER_REFS[t-1].current&&e.QUARTER_REFS[t-1].current.focus())})),St(Et(e),"onQuarterKeyDown",(function(t,r){var a=t.key;if(!e.props.disabledKeyboardNavigation)switch(a){case"Enter":e.onQuarterClick(t,r),e.props.setPreSelection(e.props.selected);break;case"ArrowRight":e.handleQuarterNavigation(4===r?1:r+1,we.default(e.props.preSelection,1));break;case"ArrowLeft":e.handleQuarterNavigation(1===r?4:r-1,Me.default(e.props.preSelection,1))}})),St(Et(e),"getMonthClassNames",(function(t){var r=e.props,a=r.day,n=r.startDate,o=r.endDate,s=r.selected,i=r.minDate,p=r.maxDate,l=r.preSelection,c=r.monthClassName,d=r.excludeDates,u=r.includeDates,f=c?c(Ke.default(a,t)):void 0,h=Ke.default(a,t);return ue.default("react-datepicker__month-text","react-datepicker__month-".concat(t),f,{"react-datepicker__month-text--disabled":(i||p||d||u)&&sr(h,e.props),"react-datepicker__month-text--selected":e.isSelectedMonth(a,t,s),"react-datepicker__month-text--keyboard-selected":!e.props.disabledKeyboardNavigation&&Te.default(l)===t,"react-datepicker__month-text--in-selecting-range":e.isInSelectingRangeMonth(t),"react-datepicker__month-text--in-range":ir(n,o,t,a),"react-datepicker__month-text--range-start":e.isRangeStartMonth(t),"react-datepicker__month-text--range-end":e.isRangeEndMonth(t),"react-datepicker__month-text--selecting-range-start":e.isSelectingMonthRangeStart(t),"react-datepicker__month-text--selecting-range-end":e.isSelectingMonthRangeEnd(t),"react-datepicker__month-text--today":e.isCurrentMonth(a,t)})})),St(Et(e),"getTabIndex",(function(t){var r=Te.default(e.props.preSelection);return e.props.disabledKeyboardNavigation||t!==r?"-1":"0"})),St(Et(e),"getQuarterTabIndex",(function(t){var r=Re.default(e.props.preSelection);return e.props.disabledKeyboardNavigation||t!==r?"-1":"0"})),St(Et(e),"getAriaLabel",(function(t){var r=e.props,a=r.chooseDayAriaLabelPrefix,n=void 0===a?"Choose":a,o=r.disabledDayAriaLabelPrefix,s=void 0===o?"Not available":o,i=r.day,p=Ke.default(i,t),l=e.isDisabled(p)||e.isExcluded(p)?s:n;return"".concat(l," ").concat(qt(p,"MMMM yyyy"))})),St(Et(e),"getQuarterClassNames",(function(t){var r=e.props,a=r.day,n=r.startDate,o=r.endDate,s=r.selected,i=r.minDate,p=r.maxDate,l=r.preSelection,c=r.disabledKeyboardNavigation;return ue.default("react-datepicker__quarter-text","react-datepicker__quarter-".concat(t),{"react-datepicker__quarter-text--disabled":(i||p)&&pr(Be.default(a,t),e.props),"react-datepicker__quarter-text--selected":e.isSelectedQuarter(a,t,s),"react-datepicker__quarter-text--keyboard-selected":!c&&Re.default(l)===t,"react-datepicker__quarter-text--in-selecting-range":e.isInSelectingRangeQuarter(t),"react-datepicker__quarter-text--in-range":dr(n,o,t,a),"react-datepicker__quarter-text--range-start":e.isRangeStartQuarter(t),"react-datepicker__quarter-text--range-end":e.isRangeEndQuarter(t)})})),St(Et(e),"getMonthContent",(function(t){var r=e.props,a=r.showFullMonthYearPicker,n=r.renderMonthContent,o=r.locale,s=r.day,i=ar(t,o),p=rr(t,o);return n?n(t,i,p,s):a?p:i})),St(Et(e),"getQuarterContent",(function(t){var r=e.props,a=r.renderQuarterContent,n=function(e,t){return qt(Be.default(At(),e),"QQQ",t)}(t,r.locale);return a?a(t,n):n})),St(Et(e),"renderMonths",(function(){var t=e.props,r=t.showTwoColumnMonthYearPicker,a=t.showFourColumnMonthYearPicker,n=t.day,o=t.selected;return jr[Vr(a,r)].grid.map((function(t,r){return de.default.createElement("div",{className:"react-datepicker__month-wrapper",key:r},t.map((function(t,r){return de.default.createElement("div",{ref:e.MONTH_REFS[t],key:r,onClick:function(r){e.onMonthClick(r,t)},onKeyDown:function(r){e.onMonthKeyDown(r,t)},onMouseEnter:function(){return e.onMonthMouseEnter(t)},tabIndex:e.getTabIndex(t),className:e.getMonthClassNames(t),role:"option","aria-label":e.getAriaLabel(t),"aria-current":e.isCurrentMonth(n,t)?"date":void 0,"aria-selected":e.isSelectedMonth(n,t,o)},e.getMonthContent(t))})))}))})),St(Et(e),"renderQuarters",(function(){var t=e.props,r=t.day,a=t.selected;return de.default.createElement("div",{className:"react-datepicker__quarter-wrapper"},[1,2,3,4].map((function(t,n){return de.default.createElement("div",{key:n,ref:e.QUARTER_REFS[n],role:"option",onClick:function(r){e.onQuarterClick(r,t)},onKeyDown:function(r){e.onQuarterKeyDown(r,t)},onMouseEnter:function(){return e.onQuarterMouseEnter(t)},className:e.getQuarterClassNames(t),"aria-selected":e.isSelectedQuarter(r,t,a),tabIndex:e.getQuarterTabIndex(t),"aria-current":e.isCurrentQuarter(r,t)?"date":void 0},e.getQuarterContent(t))})))})),St(Et(e),"getClassNames",(function(){var t=e.props,r=t.selectingDate,a=t.selectsStart,n=t.selectsEnd,o=t.showMonthYearPicker,s=t.showQuarterYearPicker,i=t.showWeekPicker;return ue.default("react-datepicker__month",{"react-datepicker__month--selecting-range":r&&(a||n)},{"react-datepicker__monthPicker":o},{"react-datepicker__quarterPicker":s},{"react-datepicker__weekPicker":i})})),e}return bt(r,[{key:"render",value:function(){var e=this.props,t=e.showMonthYearPicker,r=e.showQuarterYearPicker,a=e.day,n=e.ariaLabelPrefix,o=void 0===n?"month ":n;return de.default.createElement("div",{className:this.getClassNames(),onMouseLeave:this.handleMouseLeave,"aria-label":"".concat(o," ").concat(qt(a,"yyyy-MM")),role:"listbox"},t?this.renderMonths():r?this.renderQuarters():this.renderWeeks())}}]),r}(de.default.Component),zr=function(e){_t(r,e);var t=Nt(r);function r(){var e;kt(this,r);for(var a=arguments.length,n=new Array(a),o=0;o<a;o++)n[o]=arguments[o];return St(Et(e=t.call.apply(t,[this].concat(n))),"state",{height:null}),St(Et(e),"scrollToTheSelectedTime",(function(){requestAnimationFrame((function(){e.list&&(e.list.scrollTop=e.centerLi&&r.calcCenterPosition(e.props.monthRef?e.props.monthRef.clientHeight-e.header.clientHeight:e.list.clientHeight,e.centerLi))}))})),St(Et(e),"handleClick",(function(t){(e.props.minTime||e.props.maxTime)&&mr(t,e.props)||(e.props.excludeTimes||e.props.includeTimes||e.props.filterTime)&&hr(t,e.props)||e.props.onChange(t)})),St(Et(e),"isSelectedTime",(function(t){return e.props.selected&&(r=e.props.selected,a=t,Pr(r).getTime()===Pr(a).getTime());var r,a})),St(Et(e),"isDisabledTime",(function(t){return(e.props.minTime||e.props.maxTime)&&mr(t,e.props)||(e.props.excludeTimes||e.props.includeTimes||e.props.filterTime)&&hr(t,e.props)})),St(Et(e),"liClasses",(function(t){var r=["react-datepicker__time-list-item",e.props.timeClassName?e.props.timeClassName(t):void 0];return e.isSelectedTime(t)&&r.push("react-datepicker__time-list-item--selected"),e.isDisabledTime(t)&&r.push("react-datepicker__time-list-item--disabled"),e.props.injectTimes&&(60*xe.default(t)+Ne.default(t))%e.props.intervals!=0&&r.push("react-datepicker__time-list-item--injected"),r.join(" ")})),St(Et(e),"handleOnKeyDown",(function(t,r){" "===t.key&&(t.preventDefault(),t.key="Enter"),"ArrowUp"!==t.key&&"ArrowLeft"!==t.key||!t.target.previousSibling||(t.preventDefault(),t.target.previousSibling.focus()),"ArrowDown"!==t.key&&"ArrowRight"!==t.key||!t.target.nextSibling||(t.preventDefault(),t.target.nextSibling.focus()),"Enter"===t.key&&e.handleClick(r),e.props.handleOnKeyDown(t)})),St(Et(e),"renderTimes",(function(){for(var t,r=[],a=e.props.format?e.props.format:"p",n=e.props.intervals,o=e.props.selected||e.props.openToDate||At(),s=(t=o,$e.default(t)),i=e.props.injectTimes&&e.props.injectTimes.sort((function(e,t){return e-t})),p=60*function(e){var t=new Date(e.getFullYear(),e.getMonth(),e.getDate()),r=new Date(e.getFullYear(),e.getMonth(),e.getDate(),24);return Math.round((+r-+t)/36e5)}(o),l=p/n,c=0;c<l;c++){var d=ye.default(s,c*n);if(r.push(d),i){var u=Cr(s,d,c,n,i);r=r.concat(u)}}var f=r.reduce((function(e,t){return t.getTime()<=o.getTime()?t:e}),r[0]);return r.map((function(t,r){return de.default.createElement("li",{key:r,onClick:e.handleClick.bind(Et(e),t),className:e.liClasses(t),ref:function(r){t===f&&(e.centerLi=r)},onKeyDown:function(r){e.handleOnKeyDown(r,t)},tabIndex:t===f?0:-1,role:"option","aria-selected":e.isSelectedTime(t)?"true":void 0,"aria-disabled":e.isDisabledTime(t)?"true":void 0},qt(t,a,e.props.locale))}))})),e}return bt(r,[{key:"componentDidMount",value:function(){this.scrollToTheSelectedTime(),this.props.monthRef&&this.header&&this.setState({height:this.props.monthRef.clientHeight-this.header.clientHeight})}},{key:"render",value:function(){var e=this,t=this.state.height;return de.default.createElement("div",{className:"react-datepicker__time-container ".concat(this.props.todayButton?"react-datepicker__time-container--with-today-button":"")},de.default.createElement("div",{className:"react-datepicker__header react-datepicker__header--time ".concat(this.props.showTimeSelectOnly?"react-datepicker__header--time--only":""),ref:function(t){e.header=t}},de.default.createElement("div",{className:"react-datepicker-time__header"},this.props.timeCaption)),de.default.createElement("div",{className:"react-datepicker__time"},de.default.createElement("div",{className:"react-datepicker__time-box"},de.default.createElement("ul",{className:"react-datepicker__time-list",ref:function(t){e.list=t},style:t?{height:t}:{},role:"listbox","aria-label":this.props.timeCaption},this.renderTimes()))))}}],[{key:"defaultProps",get:function(){return{intervals:30,onTimeChange:function(){},todayButton:null,timeCaption:"Time"}}}]),r}(de.default.Component);St(zr,"calcCenterPosition",(function(e,t){return t.offsetTop-(e/2-t.clientHeight/2)}));var $r=function(e){_t(r,e);var t=Nt(r);function r(e){var a;return kt(this,r),St(Et(a=t.call(this,e)),"YEAR_REFS",xt(Array(a.props.yearItemNumber)).map((function(){return de.default.createRef()}))),St(Et(a),"isDisabled",(function(e){return nr(e,a.props)})),St(Et(a),"isExcluded",(function(e){return or(e,a.props)})),St(Et(a),"selectingDate",(function(){var e;return null!==(e=a.props.selectingDate)&&void 0!==e?e:a.props.preSelection})),St(Et(a),"updateFocusOnPaginate",(function(e){var t=function(){this.YEAR_REFS[e].current.focus()}.bind(Et(a));window.requestAnimationFrame(t)})),St(Et(a),"handleYearClick",(function(e,t){a.props.onDayClick&&a.props.onDayClick(e,t)})),St(Et(a),"handleYearNavigation",(function(e,t){var r=a.props,n=r.date,o=r.yearItemNumber,s=Mr(n,o).startPeriod;a.isDisabled(t)||a.isExcluded(t)||(a.props.setPreSelection(t),e-s==-1?a.updateFocusOnPaginate(o-1):e-s===o?a.updateFocusOnPaginate(0):a.YEAR_REFS[e-s].current.focus())})),St(Et(a),"isSameDay",(function(e,t){return Jt(e,t)})),St(Et(a),"isCurrentYear",(function(e){return e===Le.default(At())})),St(Et(a),"isRangeStart",(function(e){return a.props.startDate&&a.props.endDate&&zt(Qe.default(At(),e),a.props.startDate)})),St(Et(a),"isRangeEnd",(function(e){return a.props.startDate&&a.props.endDate&&zt(Qe.default(At(),e),a.props.endDate)})),St(Et(a),"isInRange",(function(e){return lr(e,a.props.startDate,a.props.endDate)})),St(Et(a),"isInSelectingRange",(function(e){var t=a.props,r=t.selectsStart,n=t.selectsEnd,o=t.selectsRange,s=t.startDate,i=t.endDate;return!(!(r||n||o)||!a.selectingDate())&&(r&&i?lr(e,a.selectingDate(),i):(n&&s||!(!o||!s||i))&&lr(e,s,a.selectingDate()))})),St(Et(a),"isSelectingRangeStart",(function(e){if(!a.isInSelectingRange(e))return!1;var t=a.props,r=t.startDate,n=t.selectsStart,o=Qe.default(At(),e);return zt(o,n?a.selectingDate():r)})),St(Et(a),"isSelectingRangeEnd",(function(e){if(!a.isInSelectingRange(e))return!1;var t=a.props,r=t.endDate,n=t.selectsEnd,o=t.selectsRange,s=Qe.default(At(),e);return zt(s,n||o?a.selectingDate():r)})),St(Et(a),"isKeyboardSelected",(function(e){var t=jt(Qe.default(a.props.date,e));return!a.props.disabledKeyboardNavigation&&!a.props.inline&&!Jt(t,jt(a.props.selected))&&Jt(t,jt(a.props.preSelection))})),St(Et(a),"onYearClick",(function(e,t){var r=a.props.date;a.handleYearClick(jt(Qe.default(r,t)),e)})),St(Et(a),"onYearKeyDown",(function(e,t){var r=e.key;if(!a.props.disabledKeyboardNavigation)switch(r){case"Enter":a.onYearClick(e,t),a.props.setPreSelection(a.props.selected);break;case"ArrowRight":a.handleYearNavigation(t+1,be.default(a.props.preSelection,1));break;case"ArrowLeft":a.handleYearNavigation(t-1,Pe.default(a.props.preSelection,1))}})),St(Et(a),"getYearClassNames",(function(e){var t=a.props,r=t.minDate,n=t.maxDate,o=t.selected,s=t.excludeDates,i=t.includeDates,p=t.filterDate;return ue.default("react-datepicker__year-text",{"react-datepicker__year-text--selected":e===Le.default(o),"react-datepicker__year-text--disabled":(r||n||s||i||p)&&cr(e,a.props),"react-datepicker__year-text--keyboard-selected":a.isKeyboardSelected(e),"react-datepicker__year-text--range-start":a.isRangeStart(e),"react-datepicker__year-text--range-end":a.isRangeEnd(e),"react-datepicker__year-text--in-range":a.isInRange(e),"react-datepicker__year-text--in-selecting-range":a.isInSelectingRange(e),"react-datepicker__year-text--selecting-range-start":a.isSelectingRangeStart(e),"react-datepicker__year-text--selecting-range-end":a.isSelectingRangeEnd(e),"react-datepicker__year-text--today":a.isCurrentYear(e)})})),St(Et(a),"getYearTabIndex",(function(e){return a.props.disabledKeyboardNavigation?"-1":e===Le.default(a.props.preSelection)?"0":"-1"})),St(Et(a),"getYearContainerClassNames",(function(){var e=a.props,t=e.selectingDate,r=e.selectsStart,n=e.selectsEnd,o=e.selectsRange;return ue.default("react-datepicker__year",{"react-datepicker__year--selecting-range":t&&(r||n||o)})})),St(Et(a),"getYearContent",(function(e){return a.props.renderYearContent?a.props.renderYearContent(e):e})),a}return bt(r,[{key:"render",value:function(){for(var e=this,t=[],r=this.props,a=r.date,n=r.yearItemNumber,o=r.onYearMouseEnter,s=r.onYearMouseLeave,i=Mr(a,n),p=i.startPeriod,l=i.endPeriod,c=function(r){t.push(de.default.createElement("div",{ref:e.YEAR_REFS[r-p],onClick:function(t){e.onYearClick(t,r)},onKeyDown:function(t){e.onYearKeyDown(t,r)},tabIndex:e.getYearTabIndex(r),className:e.getYearClassNames(r),onMouseEnter:function(e){return o(e,r)},onMouseLeave:function(e){return s(e,r)},key:r,"aria-current":e.isCurrentYear(r)?"date":void 0},e.getYearContent(r)))},d=p;d<=l;d++)c(d);return de.default.createElement("div",{className:this.getYearContainerClassNames()},de.default.createElement("div",{className:"react-datepicker__year-wrapper",onMouseLeave:this.props.clearSelectingDate},t))}}]),r}(de.default.Component),Gr=function(e){_t(r,e);var t=Nt(r);function r(e){var a;return kt(this,r),St(Et(a=t.call(this,e)),"onTimeChange",(function(e){a.setState({time:e});var t=a.props.date,r=t instanceof Date&&!isNaN(t)?t:new Date;r.setHours(e.split(":")[0]),r.setMinutes(e.split(":")[1]),a.props.onChange(r)})),St(Et(a),"renderTimeInput",(function(){var e=a.state.time,t=a.props,r=t.date,n=t.timeString,o=t.customTimeInput;return o?de.default.cloneElement(o,{date:r,value:e,onChange:a.onTimeChange}):de.default.createElement("input",{type:"time",className:"react-datepicker-time__input",placeholder:"Time",name:"time-input",required:!0,value:e,onChange:function(e){a.onTimeChange(e.target.value||n)}})})),a.state={time:a.props.timeString},a}return bt(r,[{key:"render",value:function(){return de.default.createElement("div",{className:"react-datepicker__input-time-container"},de.default.createElement("div",{className:"react-datepicker-time__caption"},this.props.timeInputLabel),de.default.createElement("div",{className:"react-datepicker-time__input-container"},de.default.createElement("div",{className:"react-datepicker-time__input"},this.renderTimeInput())))}}],[{key:"getDerivedStateFromProps",value:function(e,t){return e.timeString!==t.time?{time:e.timeString}:null}}]),r}(de.default.Component);function Jr(e){var t=e.className,r=e.children,a=e.showPopperArrow,n=e.arrowProps,o=void 0===n?{}:n;return de.default.createElement("div",{className:t},a&&de.default.createElement("div",Ct({className:"react-datepicker__triangle"},o)),r)}var Xr=["react-datepicker__year-select","react-datepicker__month-select","react-datepicker__month-year-select"],Zr=function(e){_t(r,e);var t=Nt(r);function r(e){var a;return kt(this,r),St(Et(a=t.call(this,e)),"handleClickOutside",(function(e){a.props.onClickOutside(e)})),St(Et(a),"setClickOutsideRef",(function(){return a.containerRef.current})),St(Et(a),"handleDropdownFocus",(function(e){(function(){var e=((arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).className||"").split(/\s+/);return Xr.some((function(t){return e.indexOf(t)>=0}))})(e.target)&&a.props.onDropdownFocus()})),St(Et(a),"getDateInView",(function(){var e=a.props,t=e.preSelection,r=e.selected,n=e.openToDate,o=kr(a.props),s=wr(a.props),i=At(),p=n||r||t;return p||(o&&lt.default(i,o)?o:s&&pt.default(i,s)?s:i)})),St(Et(a),"increaseMonth",(function(){a.setState((function(e){var t=e.date;return{date:ke.default(t,1)}}),(function(){return a.handleMonthChange(a.state.date)}))})),St(Et(a),"decreaseMonth",(function(){a.setState((function(e){var t=e.date;return{date:_e.default(t,1)}}),(function(){return a.handleMonthChange(a.state.date)}))})),St(Et(a),"handleDayClick",(function(e,t,r){a.props.onSelect(e,t,r),a.props.setPreSelection&&a.props.setPreSelection(e)})),St(Et(a),"handleDayMouseEnter",(function(e){a.setState({selectingDate:e}),a.props.onDayMouseEnter&&a.props.onDayMouseEnter(e)})),St(Et(a),"handleMonthMouseLeave",(function(){a.setState({selectingDate:null}),a.props.onMonthMouseLeave&&a.props.onMonthMouseLeave()})),St(Et(a),"handleYearMouseEnter",(function(e,t){a.setState({selectingDate:Qe.default(At(),t)}),a.props.onYearMouseEnter&&a.props.onYearMouseEnter(e,t)})),St(Et(a),"handleYearMouseLeave",(function(e,t){a.props.onYearMouseLeave&&a.props.onYearMouseLeave(e,t)})),St(Et(a),"handleYearChange",(function(e){a.props.onYearChange&&(a.props.onYearChange(e),a.setState({isRenderAriaLiveMessage:!0})),a.props.adjustDateOnChange&&(a.props.onSelect&&a.props.onSelect(e),a.props.setOpen&&a.props.setOpen(!0)),a.props.setPreSelection&&a.props.setPreSelection(e)})),St(Et(a),"handleMonthChange",(function(e){a.handleCustomMonthChange(e),a.props.adjustDateOnChange&&(a.props.onSelect&&a.props.onSelect(e),a.props.setOpen&&a.props.setOpen(!0)),a.props.setPreSelection&&a.props.setPreSelection(e)})),St(Et(a),"handleCustomMonthChange",(function(e){a.props.onMonthChange&&(a.props.onMonthChange(e),a.setState({isRenderAriaLiveMessage:!0}))})),St(Et(a),"handleMonthYearChange",(function(e){a.handleYearChange(e),a.handleMonthChange(e)})),St(Et(a),"changeYear",(function(e){a.setState((function(t){var r=t.date;return{date:Qe.default(r,e)}}),(function(){return a.handleYearChange(a.state.date)}))})),St(Et(a),"changeMonth",(function(e){a.setState((function(t){var r=t.date;return{date:Ke.default(r,e)}}),(function(){return a.handleMonthChange(a.state.date)}))})),St(Et(a),"changeMonthYear",(function(e){a.setState((function(t){var r=t.date;return{date:Qe.default(Ke.default(r,Te.default(e)),Le.default(e))}}),(function(){return a.handleMonthYearChange(a.state.date)}))})),St(Et(a),"header",(function(){var e=Qt(arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.state.date,a.props.locale,a.props.calendarStartDay),t=[];return a.props.showWeekNumbers&&t.push(de.default.createElement("div",{key:"W",className:"react-datepicker__day-name"},a.props.weekLabel||"#")),t.concat([0,1,2,3,4,5,6].map((function(t){var r=De.default(e,t),n=a.formatWeekday(r,a.props.locale),o=a.props.weekDayClassName?a.props.weekDayClassName(r):void 0;return de.default.createElement("div",{key:t,className:ue.default("react-datepicker__day-name",o)},n)})))})),St(Et(a),"formatWeekday",(function(e,t){return a.props.formatWeekDay?function(e,t,r){return t(qt(e,"EEEE",r))}(e,a.props.formatWeekDay,t):a.props.useWeekdaysShort?function(e,t){return qt(e,"EEE",t)}(e,t):function(e,t){return qt(e,"EEEEEE",t)}(e,t)})),St(Et(a),"decreaseYear",(function(){a.setState((function(e){var t=e.date;return{date:Pe.default(t,a.props.showYearPicker?a.props.yearItemNumber:1)}}),(function(){return a.handleYearChange(a.state.date)}))})),St(Et(a),"clearSelectingDate",(function(){a.setState({selectingDate:null})})),St(Et(a),"renderPreviousButton",(function(){if(!a.props.renderCustomHeader){var e;switch(!0){case a.props.showMonthYearPicker:e=Dr(a.state.date,a.props);break;case a.props.showYearPicker:e=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minDate,a=t.yearItemNumber,n=void 0===a?Lt:a,o=Mr(jt(Pe.default(e,n)),n).endPeriod,s=r&&Le.default(r);return s&&s>o||!1}(a.state.date,a.props);break;default:e=yr(a.state.date,a.props)}if((a.props.forceShowMonthNavigation||a.props.showDisabledMonthNavigation||!e)&&!a.props.showTimeSelectOnly){var t=["react-datepicker__navigation","react-datepicker__navigation--previous"],r=a.decreaseMonth;(a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker)&&(r=a.decreaseYear),e&&a.props.showDisabledMonthNavigation&&(t.push("react-datepicker__navigation--previous--disabled"),r=null);var n=a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker,o=a.props,s=o.previousMonthButtonLabel,i=o.previousYearButtonLabel,p=a.props,l=p.previousMonthAriaLabel,c=void 0===l?"string"==typeof s?s:"Previous Month":l,d=p.previousYearAriaLabel,u=void 0===d?"string"==typeof i?i:"Previous Year":d;return de.default.createElement("button",{type:"button",className:t.join(" "),onClick:r,onKeyDown:a.props.handleOnKeyDown,"aria-label":n?u:c},de.default.createElement("span",{className:["react-datepicker__navigation-icon","react-datepicker__navigation-icon--previous"].join(" ")},n?a.props.previousYearButtonLabel:a.props.previousMonthButtonLabel))}}})),St(Et(a),"increaseYear",(function(){a.setState((function(e){var t=e.date;return{date:be.default(t,a.props.showYearPicker?a.props.yearItemNumber:1)}}),(function(){return a.handleYearChange(a.state.date)}))})),St(Et(a),"renderNextButton",(function(){if(!a.props.renderCustomHeader){var e;switch(!0){case a.props.showMonthYearPicker:e=gr(a.state.date,a.props);break;case a.props.showYearPicker:e=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.maxDate,a=t.yearItemNumber,n=void 0===a?Lt:a,o=Mr(be.default(e,n),n).startPeriod,s=r&&Le.default(r);return s&&s<o||!1}(a.state.date,a.props);break;default:e=vr(a.state.date,a.props)}if((a.props.forceShowMonthNavigation||a.props.showDisabledMonthNavigation||!e)&&!a.props.showTimeSelectOnly){var t=["react-datepicker__navigation","react-datepicker__navigation--next"];a.props.showTimeSelect&&t.push("react-datepicker__navigation--next--with-time"),a.props.todayButton&&t.push("react-datepicker__navigation--next--with-today-button");var r=a.increaseMonth;(a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker)&&(r=a.increaseYear),e&&a.props.showDisabledMonthNavigation&&(t.push("react-datepicker__navigation--next--disabled"),r=null);var n=a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker,o=a.props,s=o.nextMonthButtonLabel,i=o.nextYearButtonLabel,p=a.props,l=p.nextMonthAriaLabel,c=void 0===l?"string"==typeof s?s:"Next Month":l,d=p.nextYearAriaLabel,u=void 0===d?"string"==typeof i?i:"Next Year":d;return de.default.createElement("button",{type:"button",className:t.join(" "),onClick:r,onKeyDown:a.props.handleOnKeyDown,"aria-label":n?u:c},de.default.createElement("span",{className:["react-datepicker__navigation-icon","react-datepicker__navigation-icon--next"].join(" ")},n?a.props.nextYearButtonLabel:a.props.nextMonthButtonLabel))}}})),St(Et(a),"renderCurrentMonth",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.state.date,t=["react-datepicker__current-month"];return a.props.showYearDropdown&&t.push("react-datepicker__current-month--hasYearDropdown"),a.props.showMonthDropdown&&t.push("react-datepicker__current-month--hasMonthDropdown"),a.props.showMonthYearDropdown&&t.push("react-datepicker__current-month--hasMonthYearDropdown"),de.default.createElement("div",{className:t.join(" ")},qt(e,a.props.dateFormat,a.props.locale))})),St(Et(a),"renderYearDropdown",(function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(a.props.showYearDropdown&&!e)return de.default.createElement(Yr,{adjustDateOnChange:a.props.adjustDateOnChange,date:a.state.date,onSelect:a.props.onSelect,setOpen:a.props.setOpen,dropdownMode:a.props.dropdownMode,onChange:a.changeYear,minDate:a.props.minDate,maxDate:a.props.maxDate,year:Le.default(a.state.date),scrollableYearDropdown:a.props.scrollableYearDropdown,yearDropdownItemNumber:a.props.yearDropdownItemNumber})})),St(Et(a),"renderMonthDropdown",(function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(a.props.showMonthDropdown&&!e)return de.default.createElement(Tr,{dropdownMode:a.props.dropdownMode,locale:a.props.locale,onChange:a.changeMonth,month:Te.default(a.state.date),useShortMonthInDropdown:a.props.useShortMonthInDropdown})})),St(Et(a),"renderMonthYearDropdown",(function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(a.props.showMonthYearDropdown&&!e)return de.default.createElement(Ar,{dropdownMode:a.props.dropdownMode,locale:a.props.locale,dateFormat:a.props.dateFormat,onChange:a.changeMonthYear,minDate:a.props.minDate,maxDate:a.props.maxDate,date:a.state.date,scrollableMonthYearDropdown:a.props.scrollableMonthYearDropdown})})),St(Et(a),"handleTodayButtonClick",(function(e){a.props.onSelect(Ut(),e),a.props.setPreSelection&&a.props.setPreSelection(Ut())})),St(Et(a),"renderTodayButton",(function(){if(a.props.todayButton&&!a.props.showTimeSelectOnly)return de.default.createElement("div",{className:"react-datepicker__today-button",onClick:function(e){return a.handleTodayButtonClick(e)}},a.props.todayButton)})),St(Et(a),"renderDefaultHeader",(function(e){var t=e.monthDate,r=e.i;return de.default.createElement("div",{className:"react-datepicker__header ".concat(a.props.showTimeSelect?"react-datepicker__header--has-time-select":"")},a.renderCurrentMonth(t),de.default.createElement("div",{className:"react-datepicker__header__dropdown react-datepicker__header__dropdown--".concat(a.props.dropdownMode),onFocus:a.handleDropdownFocus},a.renderMonthDropdown(0!==r),a.renderMonthYearDropdown(0!==r),a.renderYearDropdown(0!==r)),de.default.createElement("div",{className:"react-datepicker__day-names"},a.header(t)))})),St(Et(a),"renderCustomHeader",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.monthDate,r=e.i;if(a.props.showTimeSelect&&!a.state.monthContainer||a.props.showTimeSelectOnly)return null;var n=yr(a.state.date,a.props),o=vr(a.state.date,a.props),s=Dr(a.state.date,a.props),i=gr(a.state.date,a.props),p=!a.props.showMonthYearPicker&&!a.props.showQuarterYearPicker&&!a.props.showYearPicker;return de.default.createElement("div",{className:"react-datepicker__header react-datepicker__header--custom",onFocus:a.props.onDropdownFocus},a.props.renderCustomHeader(Dt(Dt({},a.state),{},{customHeaderCount:r,monthDate:t,changeMonth:a.changeMonth,changeYear:a.changeYear,decreaseMonth:a.decreaseMonth,increaseMonth:a.increaseMonth,decreaseYear:a.decreaseYear,increaseYear:a.increaseYear,prevMonthButtonDisabled:n,nextMonthButtonDisabled:o,prevYearButtonDisabled:s,nextYearButtonDisabled:i})),p&&de.default.createElement("div",{className:"react-datepicker__day-names"},a.header(t)))})),St(Et(a),"renderYearHeader",(function(){var e=a.state.date,t=a.props,r=t.showYearPicker,n=Mr(e,t.yearItemNumber),o=n.startPeriod,s=n.endPeriod;return de.default.createElement("div",{className:"react-datepicker__header react-datepicker-year-header"},r?"".concat(o," - ").concat(s):Le.default(e))})),St(Et(a),"renderHeader",(function(e){switch(!0){case void 0!==a.props.renderCustomHeader:return a.renderCustomHeader(e);case a.props.showMonthYearPicker||a.props.showQuarterYearPicker||a.props.showYearPicker:return a.renderYearHeader(e);default:return a.renderDefaultHeader(e)}})),St(Et(a),"renderMonths",(function(){var e;if(!a.props.showTimeSelectOnly&&!a.props.showYearPicker){for(var t=[],r=a.props.showPreviousMonths?a.props.monthsShown-1:0,n=_e.default(a.state.date,r),o=null!==(e=a.props.monthSelectedIn)&&void 0!==e?e:r,s=0;s<a.props.monthsShown;++s){var i=s-o+r,p=ke.default(n,i),l="month-".concat(s),c=s<a.props.monthsShown-1,d=s>0;t.push(de.default.createElement("div",{key:l,ref:function(e){a.monthContainer=e},className:"react-datepicker__month-container"},a.renderHeader({monthDate:p,i:s}),de.default.createElement(Ur,{chooseDayAriaLabelPrefix:a.props.chooseDayAriaLabelPrefix,disabledDayAriaLabelPrefix:a.props.disabledDayAriaLabelPrefix,weekAriaLabelPrefix:a.props.weekAriaLabelPrefix,ariaLabelPrefix:a.props.monthAriaLabelPrefix,onChange:a.changeMonthYear,day:p,dayClassName:a.props.dayClassName,calendarStartDay:a.props.calendarStartDay,monthClassName:a.props.monthClassName,onDayClick:a.handleDayClick,handleOnKeyDown:a.props.handleOnDayKeyDown,onDayMouseEnter:a.handleDayMouseEnter,onMouseLeave:a.handleMonthMouseLeave,onWeekSelect:a.props.onWeekSelect,orderInDisplay:s,formatWeekNumber:a.props.formatWeekNumber,locale:a.props.locale,minDate:a.props.minDate,maxDate:a.props.maxDate,excludeDates:a.props.excludeDates,excludeDateIntervals:a.props.excludeDateIntervals,highlightDates:a.props.highlightDates,holidays:a.props.holidays,selectingDate:a.state.selectingDate,includeDates:a.props.includeDates,includeDateIntervals:a.props.includeDateIntervals,inline:a.props.inline,shouldFocusDayInline:a.props.shouldFocusDayInline,fixedHeight:a.props.fixedHeight,filterDate:a.props.filterDate,preSelection:a.props.preSelection,setPreSelection:a.props.setPreSelection,selected:a.props.selected,selectsStart:a.props.selectsStart,selectsEnd:a.props.selectsEnd,selectsRange:a.props.selectsRange,selectsDisabledDaysInRange:a.props.selectsDisabledDaysInRange,showWeekNumbers:a.props.showWeekNumbers,startDate:a.props.startDate,endDate:a.props.endDate,peekNextMonth:a.props.peekNextMonth,setOpen:a.props.setOpen,shouldCloseOnSelect:a.props.shouldCloseOnSelect,renderDayContents:a.props.renderDayContents,renderMonthContent:a.props.renderMonthContent,renderQuarterContent:a.props.renderQuarterContent,renderYearContent:a.props.renderYearContent,disabledKeyboardNavigation:a.props.disabledKeyboardNavigation,showMonthYearPicker:a.props.showMonthYearPicker,showFullMonthYearPicker:a.props.showFullMonthYearPicker,showTwoColumnMonthYearPicker:a.props.showTwoColumnMonthYearPicker,showFourColumnMonthYearPicker:a.props.showFourColumnMonthYearPicker,showYearPicker:a.props.showYearPicker,showQuarterYearPicker:a.props.showQuarterYearPicker,showWeekPicker:a.props.showWeekPicker,isInputFocused:a.props.isInputFocused,containerRef:a.containerRef,monthShowsDuplicateDaysEnd:c,monthShowsDuplicateDaysStart:d})))}return t}})),St(Et(a),"renderYears",(function(){if(!a.props.showTimeSelectOnly)return a.props.showYearPicker?de.default.createElement("div",{className:"react-datepicker__year--container"},a.renderHeader(),de.default.createElement($r,Ct({onDayClick:a.handleDayClick,selectingDate:a.state.selectingDate,clearSelectingDate:a.clearSelectingDate,date:a.state.date},a.props,{onYearMouseEnter:a.handleYearMouseEnter,onYearMouseLeave:a.handleYearMouseLeave}))):void 0})),St(Et(a),"renderTimeSection",(function(){if(a.props.showTimeSelect&&(a.state.monthContainer||a.props.showTimeSelectOnly))return de.default.createElement(zr,{selected:a.props.selected,openToDate:a.props.openToDate,onChange:a.props.onTimeChange,timeClassName:a.props.timeClassName,format:a.props.timeFormat,includeTimes:a.props.includeTimes,intervals:a.props.timeIntervals,minTime:a.props.minTime,maxTime:a.props.maxTime,excludeTimes:a.props.excludeTimes,filterTime:a.props.filterTime,timeCaption:a.props.timeCaption,todayButton:a.props.todayButton,showMonthDropdown:a.props.showMonthDropdown,showMonthYearDropdown:a.props.showMonthYearDropdown,showYearDropdown:a.props.showYearDropdown,withPortal:a.props.withPortal,monthRef:a.state.monthContainer,injectTimes:a.props.injectTimes,locale:a.props.locale,handleOnKeyDown:a.props.handleOnKeyDown,showTimeSelectOnly:a.props.showTimeSelectOnly})})),St(Et(a),"renderInputTimeSection",(function(){var e=new Date(a.props.selected),t=Wt(e)&&Boolean(a.props.selected)?"".concat(_r(e.getHours()),":").concat(_r(e.getMinutes())):"";if(a.props.showTimeInput)return de.default.createElement(Gr,{date:e,timeString:t,timeInputLabel:a.props.timeInputLabel,onChange:a.props.onTimeChange,customTimeInput:a.props.customTimeInput})})),St(Et(a),"renderAriaLiveRegion",(function(){var e,t=Mr(a.state.date,a.props.yearItemNumber),r=t.startPeriod,n=t.endPeriod;return e=a.props.showYearPicker?"".concat(r," - ").concat(n):a.props.showMonthYearPicker||a.props.showQuarterYearPicker?Le.default(a.state.date):"".concat(rr(Te.default(a.state.date),a.props.locale)," ").concat(Le.default(a.state.date)),de.default.createElement("span",{role:"alert","aria-live":"polite",className:"react-datepicker__aria-live"},a.state.isRenderAriaLiveMessage&&e)})),St(Et(a),"renderChildren",(function(){if(a.props.children)return de.default.createElement("div",{className:"react-datepicker__children-container"},a.props.children)})),a.containerRef=de.default.createRef(),a.state={date:a.getDateInView(),selectingDate:null,monthContainer:null,isRenderAriaLiveMessage:!1},a}return bt(r,[{key:"componentDidMount",value:function(){var e=this;this.props.showTimeSelect&&(this.assignMonthContainer=void e.setState({monthContainer:e.monthContainer}))}},{key:"componentDidUpdate",value:function(e){var t=this;if(!this.props.preSelection||Jt(this.props.preSelection,e.preSelection)&&this.props.monthSelectedIn===e.monthSelectedIn)this.props.openToDate&&!Jt(this.props.openToDate,e.openToDate)&&this.setState({date:this.props.openToDate});else{var r=!$t(this.state.date,this.props.preSelection);this.setState({date:this.props.preSelection},(function(){return r&&t.handleCustomMonthChange(t.state.date)}))}}},{key:"render",value:function(){var e=this.props.container||Jr;return de.default.createElement("div",{style:{display:"contents"},ref:this.containerRef},de.default.createElement(e,{className:ue.default("react-datepicker",this.props.className,{"react-datepicker--time-only":this.props.showTimeSelectOnly}),showPopperArrow:this.props.showPopperArrow,arrowProps:this.props.arrowProps},this.renderAriaLiveRegion(),this.renderPreviousButton(),this.renderNextButton(),this.renderMonths(),this.renderYears(),this.renderTodayButton(),this.renderTimeSection(),this.renderInputTimeSection(),this.renderChildren()))}}],[{key:"defaultProps",get:function(){return{onDropdownFocus:function(){},monthsShown:1,forceShowMonthNavigation:!1,timeCaption:"Time",previousYearButtonLabel:"Previous Year",nextYearButtonLabel:"Next Year",previousMonthButtonLabel:"Previous Month",nextMonthButtonLabel:"Next Month",customTimeInput:null,yearItemNumber:Lt}}}]),r}(de.default.Component),ea=function(e){var t=e.icon,r=e.className,a=void 0===r?"":r,n=e.onClick,o="react-datepicker__calendar-icon";return de.default.isValidElement(t)?de.default.cloneElement(t,{className:"".concat(t.props.className||""," ").concat(o," ").concat(a),onClick:function(e){"function"==typeof t.props.onClick&&t.props.onClick(e),"function"==typeof n&&n(e)}}):"string"==typeof t?de.default.createElement("i",{className:"".concat(o," ").concat(t," ").concat(a),"aria-hidden":"true",onClick:n}):de.default.createElement("svg",{className:"".concat(o," ").concat(a),xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 448 512",onClick:n},de.default.createElement("path",{d:"M96 32V64H48C21.5 64 0 85.5 0 112v48H448V112c0-26.5-21.5-48-48-48H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32V64H160V32c0-17.7-14.3-32-32-32S96 14.3 96 32zM448 192H0V464c0 26.5 21.5 48 48 48H400c26.5 0 48-21.5 48-48V192z"}))},ta=function(e){_t(r,e);var t=Nt(r);function r(e){var a;return kt(this,r),(a=t.call(this,e)).el=document.createElement("div"),a}return bt(r,[{key:"componentDidMount",value:function(){this.portalRoot=(this.props.portalHost||document).getElementById(this.props.portalId),this.portalRoot||(this.portalRoot=document.createElement("div"),this.portalRoot.setAttribute("id",this.props.portalId),(this.props.portalHost||document.body).appendChild(this.portalRoot)),this.portalRoot.appendChild(this.el)}},{key:"componentWillUnmount",value:function(){this.portalRoot.removeChild(this.el)}},{key:"render",value:function(){return mt.default.createPortal(this.props.children,this.el)}}]),r}(de.default.Component),ra=function(e){return!e.disabled&&-1!==e.tabIndex},aa=function(e){_t(r,e);var t=Nt(r);function r(e){var a;return kt(this,r),St(Et(a=t.call(this,e)),"getTabChildren",(function(){return Array.prototype.slice.call(a.tabLoopRef.current.querySelectorAll("[tabindex], a, button, input, select, textarea"),1,-1).filter(ra)})),St(Et(a),"handleFocusStart",(function(){var e=a.getTabChildren();e&&e.length>1&&e[e.length-1].focus()})),St(Et(a),"handleFocusEnd",(function(){var e=a.getTabChildren();e&&e.length>1&&e[0].focus()})),a.tabLoopRef=de.default.createRef(),a}return bt(r,[{key:"render",value:function(){return this.props.enableTabLoop?de.default.createElement("div",{className:"react-datepicker__tab-loop",ref:this.tabLoopRef},de.default.createElement("div",{className:"react-datepicker__tab-loop__start",tabIndex:"0",onFocus:this.handleFocusStart}),this.props.children,de.default.createElement("div",{className:"react-datepicker__tab-loop__end",tabIndex:"0",onFocus:this.handleFocusEnd})):this.props.children}}],[{key:"defaultProps",get:function(){return{enableTabLoop:!0}}}]),r}(de.default.Component),na=function(e){_t(r,e);var t=Nt(r);function r(){return kt(this,r),t.apply(this,arguments)}return bt(r,[{key:"render",value:function(){var e,t=this.props,r=t.className,a=t.wrapperClassName,n=t.hidePopper,o=t.popperComponent,s=t.popperModifiers,i=t.popperPlacement,p=t.popperProps,l=t.targetComponent,c=t.enableTabLoop,d=t.popperOnKeyDown,u=t.portalId,f=t.portalHost;if(!n){var h=ue.default("react-datepicker-popper",r);e=de.default.createElement(pe.Popper,Ct({modifiers:s,placement:i},p),(function(e){var t=e.ref,r=e.style,a=e.placement,n=e.arrowProps;return de.default.createElement(aa,{enableTabLoop:c},de.default.createElement("div",{ref:t,style:r,className:h,"data-placement":a,onKeyDown:d},de.default.cloneElement(o,{arrowProps:n})))}))}this.props.popperContainer&&(e=de.default.createElement(this.props.popperContainer,{},e)),u&&!n&&(e=de.default.createElement(ta,{portalId:u,portalHost:f},e));var m=ue.default("react-datepicker-wrapper",a);return de.default.createElement(pe.Manager,{className:"react-datepicker-manager"},de.default.createElement(pe.Reference,null,(function(e){var t=e.ref;return de.default.createElement("div",{ref:t,className:m},l)})),e)}}],[{key:"defaultProps",get:function(){return{hidePopper:!0,popperModifiers:[],popperProps:{},popperPlacement:"bottom-start"}}}]),r}(de.default.Component),oa="react-datepicker-ignore-onclickoutside",sa=ht.default(Zr);var ia="Date input not valid.",pa=function(e){_t(r,e);var t=Nt(r);function r(e){var a;return kt(this,r),St(Et(a=t.call(this,e)),"getPreSelection",(function(){return a.props.openToDate?a.props.openToDate:a.props.selectsEnd&&a.props.startDate?a.props.startDate:a.props.selectsStart&&a.props.endDate?a.props.endDate:At()})),St(Et(a),"modifyHolidays",(function(){var e;return null===(e=a.props.holidays)||void 0===e?void 0:e.reduce((function(e,t){var r=new Date(t.date);return he.default(r)?[].concat(xt(e),[Dt(Dt({},t),{},{date:r})]):e}),[])})),St(Et(a),"calcInitialState",(function(){var e,t=a.getPreSelection(),r=kr(a.props),n=wr(a.props),o=r&&lt.default(t,$e.default(r))?r:n&&pt.default(t,et.default(n))?n:t;return{open:a.props.startOpen||!1,preventFocus:!1,preSelection:null!==(e=a.props.selectsRange?a.props.startDate:a.props.selected)&&void 0!==e?e:o,highlightDates:br(a.props.highlightDates),focused:!1,shouldFocusDayInline:!1,isRenderAriaLiveMessage:!1}})),St(Et(a),"clearPreventFocusTimeout",(function(){a.preventFocusTimeout&&clearTimeout(a.preventFocusTimeout)})),St(Et(a),"setFocus",(function(){a.input&&a.input.focus&&a.input.focus({preventScroll:!0})})),St(Et(a),"setBlur",(function(){a.input&&a.input.blur&&a.input.blur(),a.cancelFocusInput()})),St(Et(a),"setOpen",(function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];a.setState({open:e,preSelection:e&&a.state.open?a.state.preSelection:a.calcInitialState().preSelection,lastPreSelectChange:ca},(function(){e||a.setState((function(e){return{focused:!!t&&e.focused}}),(function(){!t&&a.setBlur(),a.setState({inputValue:null})}))}))})),St(Et(a),"inputOk",(function(){return fe.default(a.state.preSelection)})),St(Et(a),"isCalendarOpen",(function(){return void 0===a.props.open?a.state.open&&!a.props.disabled&&!a.props.readOnly:a.props.open})),St(Et(a),"handleFocus",(function(e){a.state.preventFocus||(a.props.onFocus(e),a.props.preventOpenOnFocus||a.props.readOnly||a.setOpen(!0)),a.setState({focused:!0})})),St(Et(a),"sendFocusBackToInput",(function(){a.preventFocusTimeout&&a.clearPreventFocusTimeout(),a.setState({preventFocus:!0},(function(){a.preventFocusTimeout=setTimeout((function(){a.setFocus(),a.setState({preventFocus:!1})}))}))})),St(Et(a),"cancelFocusInput",(function(){clearTimeout(a.inputFocusTimeout),a.inputFocusTimeout=null})),St(Et(a),"deferFocusInput",(function(){a.cancelFocusInput(),a.inputFocusTimeout=setTimeout((function(){return a.setFocus()}),1)})),St(Et(a),"handleDropdownFocus",(function(){a.cancelFocusInput()})),St(Et(a),"handleBlur",(function(e){(!a.state.open||a.props.withPortal||a.props.showTimeInput)&&a.props.onBlur(e),a.setState({focused:!1})})),St(Et(a),"handleCalendarClickOutside",(function(e){a.props.inline||a.setOpen(!1),a.props.onClickOutside(e),a.props.withPortal&&e.preventDefault()})),St(Et(a),"handleChange",(function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n=t[0];if(!a.props.onChangeRaw||(a.props.onChangeRaw.apply(Et(a),t),"function"==typeof n.isDefaultPrevented&&!n.isDefaultPrevented())){a.setState({inputValue:n.target.value,lastPreSelectChange:la});var o,s,i,p,l,c,d,u,f=(o=n.target.value,s=a.props.dateFormat,i=a.props.locale,p=a.props.strictParsing,l=a.props.minDate,c=null,d=tr(i)||tr(er()),u=!0,Array.isArray(s)?(s.forEach((function(e){var t=ut.default(o,e,new Date,{locale:d});p&&(u=Wt(t,l)&&o===qt(t,e,i)),Wt(t,l)&&u&&(c=t)})),c):(c=ut.default(o,s,new Date,{locale:d}),p?u=Wt(c)&&o===qt(c,s,i):Wt(c)||(s=s.match(Ft).map((function(e){var t=e[0];return"p"===t||"P"===t?d?(0,Rt[t])(e,d.formatLong):t:e})).join(""),o.length>0&&(c=ut.default(o,s.slice(0,o.length),new Date)),Wt(c)||(c=new Date(o))),Wt(c)&&u?c:null));a.props.showTimeSelectOnly&&a.props.selected&&f&&!Jt(f,a.props.selected)&&(f=yt.default(a.props.selected,{hours:xe.default(f),minutes:Ne.default(f),seconds:Ee.default(f)})),!f&&n.target.value||(a.props.showWeekPicker&&(f=Qt(f,a.props.locale,a.props.calendarStartDay)),a.setSelected(f,n,!0))}})),St(Et(a),"handleSelect",(function(e,t,r){if(a.props.shouldCloseOnSelect&&!a.props.showTimeSelect&&a.sendFocusBackToInput(),a.props.onChangeRaw&&a.props.onChangeRaw(t),a.props.showWeekPicker&&(e=Qt(e,a.props.locale,a.props.calendarStartDay)),a.setSelected(e,t,!1,r),a.props.showDateSelect&&a.setState({isRenderAriaLiveMessage:!0}),!a.props.shouldCloseOnSelect||a.props.showTimeSelect)a.setPreSelection(e);else if(!a.props.inline){a.props.selectsRange||a.setOpen(!1);var n=a.props,o=n.startDate,s=n.endDate;!o||s||lt.default(e,o)||a.setOpen(!1)}})),St(Et(a),"setSelected",(function(e,t,r,n){var o=e;if(a.props.showYearPicker){if(null!==o&&cr(Le.default(o),a.props))return}else if(a.props.showMonthYearPicker){if(null!==o&&sr(o,a.props))return}else if(null!==o&&nr(o,a.props))return;var s=a.props,i=s.onChange,p=s.selectsRange,l=s.startDate,c=s.endDate;if(!Xt(a.props.selected,o)||a.props.allowSameDay||p)if(null!==o&&(!a.props.selected||r&&(a.props.showTimeSelect||a.props.showTimeSelectOnly||a.props.showTimeInput)||(o=Bt(o,{hour:xe.default(a.props.selected),minute:Ne.default(a.props.selected),second:Ee.default(a.props.selected)})),a.props.inline||a.setState({preSelection:o}),a.props.focusSelectedMonth||a.setState({monthSelectedIn:n})),p){var d=l&&!c,u=l&&c;!l&&!c?i([o,null],t):d&&(lt.default(o,l)?i([o,null],t):i([l,o],t)),u&&i([o,null],t)}else i(o,t);r||(a.props.onSelect(o,t),a.setState({inputValue:null}))})),St(Et(a),"setPreSelection",(function(e){var t=void 0!==a.props.minDate,r=void 0!==a.props.maxDate,n=!0;if(e){a.props.showWeekPicker&&(e=Qt(e,a.props.locale,a.props.calendarStartDay));var o=$e.default(e);if(t&&r)n=Zt(e,a.props.minDate,a.props.maxDate);else if(t){var s=$e.default(a.props.minDate);n=pt.default(e,s)||Xt(o,s)}else if(r){var i=et.default(a.props.maxDate);n=lt.default(e,i)||Xt(o,i)}}n&&a.setState({preSelection:e})})),St(Et(a),"toggleCalendar",(function(){a.setOpen(!a.state.open)})),St(Et(a),"handleTimeChange",(function(e){var t=a.props.selected?a.props.selected:a.getPreSelection(),r=a.props.selected?e:Bt(t,{hour:xe.default(e),minute:Ne.default(e)});a.setState({preSelection:r}),a.props.onChange(r),a.props.shouldCloseOnSelect&&(a.sendFocusBackToInput(),a.setOpen(!1)),a.props.showTimeInput&&a.setOpen(!0),(a.props.showTimeSelectOnly||a.props.showTimeSelect)&&a.setState({isRenderAriaLiveMessage:!0}),a.setState({inputValue:null})})),St(Et(a),"onInputClick",(function(){a.props.disabled||a.props.readOnly||a.setOpen(!0),a.props.onInputClick()})),St(Et(a),"onInputKeyDown",(function(e){a.props.onKeyDown(e);var t=e.key;if(a.state.open||a.props.inline||a.props.preventOpenOnFocus){if(a.state.open){if("ArrowDown"===t||"ArrowUp"===t){e.preventDefault();var r=a.props.showWeekPicker&&a.props.showWeekNumbers?'.react-datepicker__week-number[tabindex="0"]':'.react-datepicker__day[tabindex="0"]',n=a.calendar.componentNode&&a.calendar.componentNode.querySelector(r);return void(n&&n.focus({preventScroll:!0}))}var o=At(a.state.preSelection);"Enter"===t?(e.preventDefault(),a.inputOk()&&a.state.lastPreSelectChange===ca?(a.handleSelect(o,e),!a.props.shouldCloseOnSelect&&a.setPreSelection(o)):a.setOpen(!1)):"Escape"===t?(e.preventDefault(),a.sendFocusBackToInput(),a.setOpen(!1)):"Tab"===t&&a.setOpen(!1),a.inputOk()||a.props.onInputError({code:1,msg:ia})}}else"ArrowDown"!==t&&"ArrowUp"!==t&&"Enter"!==t||a.onInputClick()})),St(Et(a),"onPortalKeyDown",(function(e){"Escape"===e.key&&(e.preventDefault(),a.setState({preventFocus:!0},(function(){a.setOpen(!1),setTimeout((function(){a.setFocus(),a.setState({preventFocus:!1})}))})))})),St(Et(a),"onDayKeyDown",(function(e){a.props.onKeyDown(e);var t=e.key,r=At(a.state.preSelection);if("Enter"===t)e.preventDefault(),a.handleSelect(r,e),!a.props.shouldCloseOnSelect&&a.setPreSelection(r);else if("Escape"===t)e.preventDefault(),a.setOpen(!1),a.inputOk()||a.props.onInputError({code:1,msg:ia});else if(!a.props.disabledKeyboardNavigation){var n;switch(t){case"ArrowLeft":n=a.props.showWeekPicker?Ce.default(r,1):Se.default(r,1);break;case"ArrowRight":n=a.props.showWeekPicker?ge.default(r,1):De.default(r,1);break;case"ArrowUp":n=Ce.default(r,1);break;case"ArrowDown":n=ge.default(r,1);break;case"PageUp":n=_e.default(r,1);break;case"PageDown":n=ke.default(r,1);break;case"Home":n=Pe.default(r,1);break;case"End":n=be.default(r,1);break;default:n=null}if(!n)return void(a.props.onInputError&&a.props.onInputError({code:1,msg:ia}));if(e.preventDefault(),a.setState({lastPreSelectChange:ca}),a.props.adjustDateOnChange&&a.setSelected(n),a.setPreSelection(n),a.props.inline){var o=Te.default(r),s=Te.default(n),i=Le.default(r),p=Le.default(n);o!==s||i!==p?a.setState({shouldFocusDayInline:!0}):a.setState({shouldFocusDayInline:!1})}}})),St(Et(a),"onPopperKeyDown",(function(e){"Escape"===e.key&&(e.preventDefault(),a.sendFocusBackToInput())})),St(Et(a),"onClearClick",(function(e){e&&e.preventDefault&&e.preventDefault(),a.sendFocusBackToInput(),a.props.selectsRange?a.props.onChange([null,null],e):a.props.onChange(null,e),a.setState({inputValue:null})})),St(Et(a),"clear",(function(){a.onClearClick()})),St(Et(a),"onScroll",(function(e){"boolean"==typeof a.props.closeOnScroll&&a.props.closeOnScroll?e.target!==document&&e.target!==document.documentElement&&e.target!==document.body||a.setOpen(!1):"function"==typeof a.props.closeOnScroll&&a.props.closeOnScroll(e)&&a.setOpen(!1)})),St(Et(a),"renderCalendar",(function(){return a.props.inline||a.isCalendarOpen()?de.default.createElement(sa,{ref:function(e){a.calendar=e},locale:a.props.locale,calendarStartDay:a.props.calendarStartDay,chooseDayAriaLabelPrefix:a.props.chooseDayAriaLabelPrefix,disabledDayAriaLabelPrefix:a.props.disabledDayAriaLabelPrefix,weekAriaLabelPrefix:a.props.weekAriaLabelPrefix,monthAriaLabelPrefix:a.props.monthAriaLabelPrefix,adjustDateOnChange:a.props.adjustDateOnChange,setOpen:a.setOpen,shouldCloseOnSelect:a.props.shouldCloseOnSelect,dateFormat:a.props.dateFormatCalendar,useWeekdaysShort:a.props.useWeekdaysShort,formatWeekDay:a.props.formatWeekDay,dropdownMode:a.props.dropdownMode,selected:a.props.selected,preSelection:a.state.preSelection,onSelect:a.handleSelect,onWeekSelect:a.props.onWeekSelect,openToDate:a.props.openToDate,minDate:a.props.minDate,maxDate:a.props.maxDate,selectsStart:a.props.selectsStart,selectsEnd:a.props.selectsEnd,selectsRange:a.props.selectsRange,startDate:a.props.startDate,endDate:a.props.endDate,excludeDates:a.props.excludeDates,excludeDateIntervals:a.props.excludeDateIntervals,filterDate:a.props.filterDate,onClickOutside:a.handleCalendarClickOutside,formatWeekNumber:a.props.formatWeekNumber,highlightDates:a.state.highlightDates,holidays:Sr(a.modifyHolidays()),includeDates:a.props.includeDates,includeDateIntervals:a.props.includeDateIntervals,includeTimes:a.props.includeTimes,injectTimes:a.props.injectTimes,inline:a.props.inline,shouldFocusDayInline:a.state.shouldFocusDayInline,peekNextMonth:a.props.peekNextMonth,showMonthDropdown:a.props.showMonthDropdown,showPreviousMonths:a.props.showPreviousMonths,useShortMonthInDropdown:a.props.useShortMonthInDropdown,showMonthYearDropdown:a.props.showMonthYearDropdown,showWeekNumbers:a.props.showWeekNumbers,showYearDropdown:a.props.showYearDropdown,withPortal:a.props.withPortal,forceShowMonthNavigation:a.props.forceShowMonthNavigation,showDisabledMonthNavigation:a.props.showDisabledMonthNavigation,scrollableYearDropdown:a.props.scrollableYearDropdown,scrollableMonthYearDropdown:a.props.scrollableMonthYearDropdown,todayButton:a.props.todayButton,weekLabel:a.props.weekLabel,outsideClickIgnoreClass:oa,fixedHeight:a.props.fixedHeight,monthsShown:a.props.monthsShown,monthSelectedIn:a.state.monthSelectedIn,onDropdownFocus:a.handleDropdownFocus,onMonthChange:a.props.onMonthChange,onYearChange:a.props.onYearChange,dayClassName:a.props.dayClassName,weekDayClassName:a.props.weekDayClassName,monthClassName:a.props.monthClassName,timeClassName:a.props.timeClassName,showDateSelect:a.props.showDateSelect,showTimeSelect:a.props.showTimeSelect,showTimeSelectOnly:a.props.showTimeSelectOnly,onTimeChange:a.handleTimeChange,timeFormat:a.props.timeFormat,timeIntervals:a.props.timeIntervals,minTime:a.props.minTime,maxTime:a.props.maxTime,excludeTimes:a.props.excludeTimes,filterTime:a.props.filterTime,timeCaption:a.props.timeCaption,className:a.props.calendarClassName,container:a.props.calendarContainer,yearItemNumber:a.props.yearItemNumber,yearDropdownItemNumber:a.props.yearDropdownItemNumber,previousMonthAriaLabel:a.props.previousMonthAriaLabel,previousMonthButtonLabel:a.props.previousMonthButtonLabel,nextMonthAriaLabel:a.props.nextMonthAriaLabel,nextMonthButtonLabel:a.props.nextMonthButtonLabel,previousYearAriaLabel:a.props.previousYearAriaLabel,previousYearButtonLabel:a.props.previousYearButtonLabel,nextYearAriaLabel:a.props.nextYearAriaLabel,nextYearButtonLabel:a.props.nextYearButtonLabel,timeInputLabel:a.props.timeInputLabel,disabledKeyboardNavigation:a.props.disabledKeyboardNavigation,renderCustomHeader:a.props.renderCustomHeader,popperProps:a.props.popperProps,renderDayContents:a.props.renderDayContents,renderMonthContent:a.props.renderMonthContent,renderQuarterContent:a.props.renderQuarterContent,renderYearContent:a.props.renderYearContent,onDayMouseEnter:a.props.onDayMouseEnter,onMonthMouseLeave:a.props.onMonthMouseLeave,onYearMouseEnter:a.props.onYearMouseEnter,onYearMouseLeave:a.props.onYearMouseLeave,selectsDisabledDaysInRange:a.props.selectsDisabledDaysInRange,showTimeInput:a.props.showTimeInput,showMonthYearPicker:a.props.showMonthYearPicker,showFullMonthYearPicker:a.props.showFullMonthYearPicker,showTwoColumnMonthYearPicker:a.props.showTwoColumnMonthYearPicker,showFourColumnMonthYearPicker:a.props.showFourColumnMonthYearPicker,showYearPicker:a.props.showYearPicker,showQuarterYearPicker:a.props.showQuarterYearPicker,showWeekPicker:a.props.showWeekPicker,showPopperArrow:a.props.showPopperArrow,excludeScrollbar:a.props.excludeScrollbar,handleOnKeyDown:a.props.onKeyDown,handleOnDayKeyDown:a.onDayKeyDown,isInputFocused:a.state.focused,customTimeInput:a.props.customTimeInput,setPreSelection:a.setPreSelection},a.props.children):null})),St(Et(a),"renderAriaLiveRegion",(function(){var e,t=a.props,r=t.dateFormat,n=t.locale,o=a.props.showTimeInput||a.props.showTimeSelect?"PPPPp":"PPPP";return e=a.props.selectsRange?"Selected start date: ".concat(Kt(a.props.startDate,{dateFormat:o,locale:n}),". ").concat(a.props.endDate?"End date: "+Kt(a.props.endDate,{dateFormat:o,locale:n}):""):a.props.showTimeSelectOnly?"Selected time: ".concat(Kt(a.props.selected,{dateFormat:r,locale:n})):a.props.showYearPicker?"Selected year: ".concat(Kt(a.props.selected,{dateFormat:"yyyy",locale:n})):a.props.showMonthYearPicker?"Selected month: ".concat(Kt(a.props.selected,{dateFormat:"MMMM yyyy",locale:n})):a.props.showQuarterYearPicker?"Selected quarter: ".concat(Kt(a.props.selected,{dateFormat:"yyyy, QQQ",locale:n})):"Selected date: ".concat(Kt(a.props.selected,{dateFormat:o,locale:n})),de.default.createElement("span",{role:"alert","aria-live":"polite",className:"react-datepicker__aria-live"},e)})),St(Et(a),"renderDateInput",(function(){var e,t=ue.default(a.props.className,St({},oa,a.state.open)),r=a.props.customInput||de.default.createElement("input",{type:"text"}),n=a.props.customInputRef||"ref",o="string"==typeof a.props.value?a.props.value:"string"==typeof a.state.inputValue?a.state.inputValue:a.props.selectsRange?function(e,t,r){if(!e)return"";var a=Kt(e,r),n=t?Kt(t,r):"";return"".concat(a," - ").concat(n)}(a.props.startDate,a.props.endDate,a.props):Kt(a.props.selected,a.props);return de.default.cloneElement(r,(St(St(St(St(St(St(St(St(St(St(e={},n,(function(e){a.input=e})),"value",o),"onBlur",a.handleBlur),"onChange",a.handleChange),"onClick",a.onInputClick),"onFocus",a.handleFocus),"onKeyDown",a.onInputKeyDown),"id",a.props.id),"name",a.props.name),"form",a.props.form),St(St(St(St(St(St(St(St(St(St(e,"autoFocus",a.props.autoFocus),"placeholder",a.props.placeholderText),"disabled",a.props.disabled),"autoComplete",a.props.autoComplete),"className",ue.default(r.props.className,t)),"title",a.props.title),"readOnly",a.props.readOnly),"required",a.props.required),"tabIndex",a.props.tabIndex),"aria-describedby",a.props.ariaDescribedBy),St(St(St(e,"aria-invalid",a.props.ariaInvalid),"aria-labelledby",a.props.ariaLabelledBy),"aria-required",a.props.ariaRequired)))})),St(Et(a),"renderClearButton",(function(){var e=a.props,t=e.isClearable,r=e.disabled,n=e.selected,o=e.startDate,s=e.endDate,i=e.clearButtonTitle,p=e.clearButtonClassName,l=void 0===p?"":p,c=e.ariaLabelClose,d=void 0===c?"Close":c;return!t||null==n&&null==o&&null==s?null:de.default.createElement("button",{type:"button",className:ue.default("react-datepicker__close-icon",l,{"react-datepicker__close-icon--disabled":r}),disabled:r,"aria-label":d,onClick:a.onClearClick,title:i,tabIndex:-1})})),a.state=a.calcInitialState(),a.preventFocusTimeout=null,a}return bt(r,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.onScroll,!0)}},{key:"componentDidUpdate",value:function(e,t){var r,a;e.inline&&(r=e.selected,a=this.props.selected,r&&a?Te.default(r)!==Te.default(a)||Le.default(r)!==Le.default(a):r!==a)&&this.setPreSelection(this.props.selected),void 0!==this.state.monthSelectedIn&&e.monthsShown!==this.props.monthsShown&&this.setState({monthSelectedIn:0}),e.highlightDates!==this.props.highlightDates&&this.setState({highlightDates:br(this.props.highlightDates)}),t.focused||Xt(e.selected,this.props.selected)||this.setState({inputValue:null}),t.open!==this.state.open&&(!1===t.open&&!0===this.state.open&&this.props.onCalendarOpen(),!0===t.open&&!1===this.state.open&&this.props.onCalendarClose())}},{key:"componentWillUnmount",value:function(){this.clearPreventFocusTimeout(),window.removeEventListener("scroll",this.onScroll,!0)}},{key:"renderInputContainer",value:function(){var e=this.props,t=e.showIcon,r=e.icon,a=e.calendarIconClassname,n=e.toggleCalendarOnIconClick,o=this.state.open;return de.default.createElement("div",{className:"react-datepicker__input-container".concat(t?" react-datepicker__view-calendar-icon":"")},t&&de.default.createElement(ea,Ct({icon:r,className:"".concat(a," ").concat(o&&"react-datepicker-ignore-onclickoutside")},n?{onClick:this.toggleCalendar}:null)),this.state.isRenderAriaLiveMessage&&this.renderAriaLiveRegion(),this.renderDateInput(),this.renderClearButton())}},{key:"render",value:function(){var e=this.renderCalendar();if(this.props.inline)return e;if(this.props.withPortal){var t=this.state.open?de.default.createElement(aa,{enableTabLoop:this.props.enableTabLoop},de.default.createElement("div",{className:"react-datepicker__portal",tabIndex:-1,onKeyDown:this.onPortalKeyDown},e)):null;return this.state.open&&this.props.portalId&&(t=de.default.createElement(ta,{portalId:this.props.portalId,portalHost:this.props.portalHost},t)),de.default.createElement("div",null,this.renderInputContainer(),t)}return de.default.createElement(na,{className:this.props.popperClassName,wrapperClassName:this.props.wrapperClassName,hidePopper:!this.isCalendarOpen(),portalId:this.props.portalId,portalHost:this.props.portalHost,popperModifiers:this.props.popperModifiers,targetComponent:this.renderInputContainer(),popperContainer:this.props.popperContainer,popperComponent:e,popperPlacement:this.props.popperPlacement,popperProps:this.props.popperProps,popperOnKeyDown:this.onPopperKeyDown,enableTabLoop:this.props.enableTabLoop})}}],[{key:"defaultProps",get:function(){return{allowSameDay:!1,dateFormat:"MM/dd/yyyy",dateFormatCalendar:"LLLL yyyy",onChange:function(){},disabled:!1,disabledKeyboardNavigation:!1,dropdownMode:"scroll",onFocus:function(){},onBlur:function(){},onKeyDown:function(){},onInputClick:function(){},onSelect:function(){},onClickOutside:function(){},onMonthChange:function(){},onCalendarOpen:function(){},onCalendarClose:function(){},preventOpenOnFocus:!1,onYearChange:function(){},onInputError:function(){},monthsShown:1,readOnly:!1,withPortal:!1,selectsDisabledDaysInRange:!1,shouldCloseOnSelect:!0,showTimeSelect:!1,showTimeInput:!1,showPreviousMonths:!1,showMonthYearPicker:!1,showFullMonthYearPicker:!1,showTwoColumnMonthYearPicker:!1,showFourColumnMonthYearPicker:!1,showYearPicker:!1,showQuarterYearPicker:!1,showWeekPicker:!1,strictParsing:!1,timeIntervals:30,timeCaption:"Time",previousMonthAriaLabel:"Previous Month",previousMonthButtonLabel:"Previous Month",nextMonthAriaLabel:"Next Month",nextMonthButtonLabel:"Next Month",previousYearAriaLabel:"Previous Year",previousYearButtonLabel:"Previous Year",nextYearAriaLabel:"Next Year",nextYearButtonLabel:"Next Year",timeInputLabel:"Time",enableTabLoop:!0,yearItemNumber:Lt,focusSelectedMonth:!1,showPopperArrow:!0,excludeScrollbar:!0,customTimeInput:null,calendarStartDay:void 0,toggleCalendarOnIconClick:!1}}}]),r}(de.default.Component),la="input",ca="navigate";e.CalendarContainer=Jr,e.default=pa,e.getDefaultLocale=er,e.registerLocale=function(e,t){var r="undefined"!=typeof window?window:globalThis;r.__localeData__||(r.__localeData__={}),r.__localeData__[e]=t},e.setDefaultLocale=function(e){("undefined"!=typeof window?window:globalThis).__localeId__=e},Object.defineProperty(e,"__esModule",{value:!0})}));


/***/ }),

/***/ 8090:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/defaultLocale/index.js + 10 modules ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ defaultLocale)
});

;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXWeeks: {
    one: 'about 1 week',
    other: 'about {{count}} weeks'
  },
  xWeeks: {
    one: '1 week',
    other: '{{count}} weeks'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === 'string') {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace('{{count}}', count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }
  return result;
};
/* harmony default export */ const _lib_formatDistance = (formatDistance);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    // TODO: Remove String()
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};
/* harmony default export */ const _lib_formatLong = (formatLong);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
/* harmony default export */ const _lib_formatRelative = (formatRelative);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function (dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';
    var valuesArray;
    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!
    return valuesArray[index];
  };
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber);

  // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`.
  //
  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'.

  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';
      case 2:
        return number + 'nd';
      case 3:
        return number + 'rd';
    }
  }
  return number + 'th';
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};
/* harmony default export */ const _lib_localize = (localize);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return undefined;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return undefined;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/en-US/_lib/match/index.js


var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function valueCallback(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};
/* harmony default export */ const _lib_match = (match);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/locale/en-US/index.js





/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */
var locale = {
  code: 'en-US',
  formatDistance: _lib_formatDistance,
  formatLong: _lib_formatLong,
  formatRelative: _lib_formatRelative,
  localize: _lib_localize,
  match: _lib_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1
  }
};
/* harmony default export */ const en_US = (locale);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/defaultLocale/index.js

/* harmony default export */ const defaultLocale = (en_US);

/***/ }),

/***/ 8458:
/*!**********************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/defaultOptions/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: () => (/* binding */ getDefaultOptions)
/* harmony export */ });
/* unused harmony export setDefaultOptions */
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}
function setDefaultOptions(newOptions) {
  defaultOptions = newOptions;
}

/***/ }),

/***/ 9668:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/format/longFormatters/index.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'P':
      return formatLong.date({
        width: 'short'
      });
    case 'PP':
      return formatLong.date({
        width: 'medium'
      });
    case 'PPP':
      return formatLong.date({
        width: 'long'
      });
    case 'PPPP':
    default:
      return formatLong.date({
        width: 'full'
      });
  }
};
var timeLongFormatter = function timeLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'p':
      return formatLong.time({
        width: 'short'
      });
    case 'pp':
      return formatLong.time({
        width: 'medium'
      });
    case 'ppp':
      return formatLong.time({
        width: 'long'
      });
    case 'pppp':
    default:
      return formatLong.time({
        width: 'full'
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({
        width: 'short'
      });
      break;
    case 'PP':
      dateTimeFormat = formatLong.dateTime({
        width: 'medium'
      });
      break;
    case 'PPP':
      dateTimeFormat = formatLong.dateTime({
        width: 'long'
      });
      break;
    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({
        width: 'full'
      });
      break;
  }
  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (longFormatters);

/***/ }),

/***/ 460:
/*!***************************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ getTimezoneOffsetInMilliseconds)
/* harmony export */ });
/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}

/***/ }),

/***/ 9717:
/*!*********************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js + 1 modules ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ getUTCISOWeek)
});

// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/toDate/index.js
var toDate = __webpack_require__(9699);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
var startOfUTCISOWeek = __webpack_require__(4715);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
var getUTCISOWeekYear = __webpack_require__(6535);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/requiredArgs/index.js
var requiredArgs = __webpack_require__(1151);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js



function startOfUTCISOWeekYear(dirtyDate) {
  (0,requiredArgs/* default */.A)(1, arguments);
  var year = (0,getUTCISOWeekYear/* default */.A)(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = (0,startOfUTCISOWeek/* default */.A)(fourthOfJanuary);
  return date;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js




var MILLISECONDS_IN_WEEK = 604800000;
function getUTCISOWeek(dirtyDate) {
  (0,requiredArgs/* default */.A)(1, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var diff = (0,startOfUTCISOWeek/* default */.A)(date).getTime() - startOfUTCISOWeekYear(date).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),

/***/ 6535:
/*!*************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ getUTCISOWeekYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ 9699);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ 1151);
/* harmony import */ var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../startOfUTCISOWeek/index.js */ 4715);



function getUTCISOWeekYear(dirtyDate) {
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = (0,_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = (0,_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),

/***/ 9478:
/*!******************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCWeek/index.js + 1 modules ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ getUTCWeek)
});

// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/toDate/index.js
var toDate = __webpack_require__(9699);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
var startOfUTCWeek = __webpack_require__(7350);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
var getUTCWeekYear = __webpack_require__(8888);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/requiredArgs/index.js
var requiredArgs = __webpack_require__(1151);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/toInteger/index.js
var toInteger = __webpack_require__(7668);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/defaultOptions/index.js
var _lib_defaultOptions = __webpack_require__(8458);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js





function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,requiredArgs/* default */.A)(1, arguments);
  var defaultOptions = (0,_lib_defaultOptions/* getDefaultOptions */.q)();
  var firstWeekContainsDate = (0,toInteger/* default */.A)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = (0,getUTCWeekYear/* default */.A)(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = (0,startOfUTCWeek/* default */.A)(firstWeek, options);
  return date;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCWeek/index.js




var MILLISECONDS_IN_WEEK = 604800000;
function getUTCWeek(dirtyDate, options) {
  (0,requiredArgs/* default */.A)(1, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var diff = (0,startOfUTCWeek/* default */.A)(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),

/***/ 8888:
/*!**********************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ getUTCWeekYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ 9699);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ 1151);
/* harmony import */ var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../startOfUTCWeek/index.js */ 7350);
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../toInteger/index.js */ 7668);
/* harmony import */ var _defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../defaultOptions/index.js */ 8458);





function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions = (0,_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_2__/* .getDefaultOptions */ .q)();
  var firstWeekContainsDate = (0,_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .A)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = (0,_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A)(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = (0,_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A)(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),

/***/ 9581:
/*!***********************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/protectedTokens/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ef: () => (/* binding */ isProtectedDayOfYearToken),
/* harmony export */   lJ: () => (/* binding */ throwProtectedError),
/* harmony export */   xM: () => (/* binding */ isProtectedWeekYearToken)
/* harmony export */ });
var protectedDayOfYearTokens = ['D', 'DD'];
var protectedWeekYearTokens = ['YY', 'YYYY'];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format, input) {
  if (token === 'YYYY') {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'YY') {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'D') {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'DD') {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}

/***/ }),

/***/ 1151:
/*!********************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ requiredArgs)
/* harmony export */ });
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
  }
}

/***/ }),

/***/ 4715:
/*!*************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ startOfUTCISOWeek)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ 9699);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ 1151);


function startOfUTCISOWeek(dirtyDate) {
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var weekStartsOn = 1;
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ 7350:
/*!**********************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ startOfUTCWeek)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../toDate/index.js */ 9699);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ 1151);
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toInteger/index.js */ 7668);
/* harmony import */ var _defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../defaultOptions/index.js */ 8458);




function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var defaultOptions = (0,_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__/* .getDefaultOptions */ .q)();
  var weekStartsOn = (0,_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ 7668:
/*!*****************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/toInteger/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ toInteger)
/* harmony export */ });
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

/***/ }),

/***/ 7806:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/addDays/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addDays)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} - the new date with the days added
 * @throws {TypeError} - 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * const result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */
function addDays(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    // If 0 days, no-op to avoid changing times in the hour before end of DST
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}

/***/ }),

/***/ 2908:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/addHours/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addHours)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addMilliseconds/index.js */ 7871);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



var MILLISECONDS_IN_HOUR = 3600000;

/**
 * @name addHours
 * @category Hour Helpers
 * @summary Add the specified number of hours to the given date.
 *
 * @description
 * Add the specified number of hours to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the hours added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 2 hours to 10 July 2014 23:00:00:
 * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)
 * //=> Fri Jul 11 2014 01:00:00
 */
function addHours(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyDate, amount * MILLISECONDS_IN_HOUR);
}

/***/ }),

/***/ 7871:
/*!******************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/addMilliseconds/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ addMilliseconds)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */
function addMilliseconds(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var timestamp = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate).getTime();
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyAmount);
  return new Date(timestamp + amount);
}

/***/ }),

/***/ 2658:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/addMinutes/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addMinutes)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addMilliseconds/index.js */ 7871);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



var MILLISECONDS_IN_MINUTE = 60000;

/**
 * @name addMinutes
 * @category Minute Helpers
 * @summary Add the specified number of minutes to the given date.
 *
 * @description
 * Add the specified number of minutes to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the minutes added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 30 minutes to 10 July 2014 12:00:00:
 * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
 * //=> Thu Jul 10 2014 12:30:00
 */
function addMinutes(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
}

/***/ }),

/***/ 3214:
/*!************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/addMonths/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addMonths)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * const result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 */
function addMonths(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    // If 0 months, no-op to avoid changing times in the hour before end of DST
    return date;
  }
  var dayOfMonth = date.getDate();

  // The JS Date object supports date math by accepting out-of-bounds values for
  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
  // want except that dates will wrap around the end of a month, meaning that
  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
  // we'll default to the end of the desired month by adding 1 to the desired
  // month and using a date of 0 to back up one day to the end of the desired
  // month.
  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
  } else {
    // Otherwise, we now know that setting the original day-of-month value won't
    // cause an overflow, so set the desired day-of-month. Note that we can't
    // just set the date of `endOfDesiredMonth` because that object may have had
    // its time changed in the unusual case where where a DST transition was on
    // the last day of the month and its local time was in the hour skipped or
    // repeated next to a DST transition.  So we use `date` instead which is
    // guaranteed to still have the original time.
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}

/***/ }),

/***/ 8980:
/*!**************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/addQuarters/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addQuarters)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addMonths/index.js */ 3214);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name addQuarters
 * @category Quarter Helpers
 * @summary Add the specified number of year quarters to the given date.
 *
 * @description
 * Add the specified number of year quarters to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the quarters added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 1 quarter to 1 September 2014:
 * const result = addQuarters(new Date(2014, 8, 1), 1)
 * //=> Mon Dec 01 2014 00:00:00
 */
function addQuarters(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  var months = amount * 3;
  return (0,_addMonths_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, months);
}

/***/ }),

/***/ 2454:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/addWeeks/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addWeeks)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addDays/index.js */ 7806);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name addWeeks
 * @category Week Helpers
 * @summary Add the specified number of weeks to the given date.
 *
 * @description
 * Add the specified number of week to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the weeks added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 4 weeks to 1 September 2014:
 * const result = addWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Sep 29 2014 00:00:00
 */
function addWeeks(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  var days = amount * 7;
  return (0,_addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, days);
}

/***/ }),

/***/ 8733:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/addYears/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addYears)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addMonths/index.js */ 3214);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * const result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */
function addYears(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addMonths_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, amount * 12);
}

/***/ }),

/***/ 4019:
/*!************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/constants/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Cg: () => (/* binding */ millisecondsInMinute),
/* harmony export */   _m: () => (/* binding */ millisecondsInSecond),
/* harmony export */   s0: () => (/* binding */ millisecondsInHour)
/* harmony export */ });
/* unused harmony exports daysInWeek, daysInYear, maxTime, minTime, minutesInHour, monthsInQuarter, monthsInYear, quartersInYear, secondsInHour, secondsInMinute, secondsInDay, secondsInWeek, secondsInYear, secondsInMonth, secondsInQuarter */
/**
 * Days in 1 week.
 *
 * @name daysInWeek
 * @constant
 * @type {number}
 * @default
 */
var daysInWeek = 7;

/**
 * Days in 1 year
 * One years equals 365.2425 days according to the formula:
 *
 * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.
 * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days
 *
 * @name daysInYear
 * @constant
 * @type {number}
 * @default
 */
var daysInYear = 365.2425;

/**
 * Maximum allowed time.
 *
 * @name maxTime
 * @constant
 * @type {number}
 * @default
 */
var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;

/**
 * Milliseconds in 1 minute
 *
 * @name millisecondsInMinute
 * @constant
 * @type {number}
 * @default
 */
var millisecondsInMinute = 60000;

/**
 * Milliseconds in 1 hour
 *
 * @name millisecondsInHour
 * @constant
 * @type {number}
 * @default
 */
var millisecondsInHour = 3600000;

/**
 * Milliseconds in 1 second
 *
 * @name millisecondsInSecond
 * @constant
 * @type {number}
 * @default
 */
var millisecondsInSecond = 1000;

/**
 * Minimum allowed time.
 *
 * @name minTime
 * @constant
 * @type {number}
 * @default
 */
var minTime = -maxTime;

/**
 * Minutes in 1 hour
 *
 * @name minutesInHour
 * @constant
 * @type {number}
 * @default
 */
var minutesInHour = 60;

/**
 * Months in 1 quarter
 *
 * @name monthsInQuarter
 * @constant
 * @type {number}
 * @default
 */
var monthsInQuarter = 3;

/**
 * Months in 1 year
 *
 * @name monthsInYear
 * @constant
 * @type {number}
 * @default
 */
var monthsInYear = 12;

/**
 * Quarters in 1 year
 *
 * @name quartersInYear
 * @constant
 * @type {number}
 * @default
 */
var quartersInYear = 4;

/**
 * Seconds in 1 hour
 *
 * @name secondsInHour
 * @constant
 * @type {number}
 * @default
 */
var secondsInHour = 3600;

/**
 * Seconds in 1 minute
 *
 * @name secondsInMinute
 * @constant
 * @type {number}
 * @default
 */
var secondsInMinute = 60;

/**
 * Seconds in 1 day
 *
 * @name secondsInDay
 * @constant
 * @type {number}
 * @default
 */
var secondsInDay = secondsInHour * 24;

/**
 * Seconds in 1 week
 *
 * @name secondsInWeek
 * @constant
 * @type {number}
 * @default
 */
var secondsInWeek = secondsInDay * 7;

/**
 * Seconds in 1 year
 *
 * @name secondsInYear
 * @constant
 * @type {number}
 * @default
 */
var secondsInYear = secondsInDay * daysInYear;

/**
 * Seconds in 1 month
 *
 * @name secondsInMonth
 * @constant
 * @type {number}
 * @default
 */
var secondsInMonth = secondsInYear / 12;

/**
 * Seconds in 1 quarter
 *
 * @name secondsInQuarter
 * @constant
 * @type {number}
 * @default
 */
var secondsInQuarter = secondsInMonth * 3;

/***/ }),

/***/ 3511:
/*!***************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/differenceInCalendarDays/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ differenceInCalendarDays)
/* harmony export */ });
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */ 460);
/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfDay/index.js */ 4495);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



var MILLISECONDS_IN_DAY = 86400000;

/**
 * @name differenceInCalendarDays
 * @category Day Helpers
 * @summary Get the number of calendar days between the given dates.
 *
 * @description
 * Get the number of calendar days between the given dates. This means that the times are removed
 * from the dates and then the difference in days is calculated.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar days
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * const result = differenceInCalendarDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 366
 * // How many calendar days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * const result = differenceInCalendarDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 1
 */
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var startOfDayLeft = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var startOfDayRight = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - (0,_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - (0,_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(startOfDayRight);

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a day is not constant
  // (e.g. it's different in the day of the daylight saving time clock shift)
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}

/***/ }),

/***/ 8195:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/differenceInCalendarMonths/index.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ differenceInCalendarMonths)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name differenceInCalendarMonths
 * @category Month Helpers
 * @summary Get the number of calendar months between the given dates.
 *
 * @description
 * Get the number of calendar months between the given dates.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar months
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar months are between 31 January 2014 and 1 September 2014?
 * const result = differenceInCalendarMonths(
 *   new Date(2014, 8, 1),
 *   new Date(2014, 0, 31)
 * )
 * //=> 8
 */
function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var dateLeft = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var dateRight = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}

/***/ }),

/***/ 8138:
/*!****************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/differenceInCalendarYears/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ differenceInCalendarYears)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name differenceInCalendarYears
 * @category Year Helpers
 * @summary Get the number of calendar years between the given dates.
 *
 * @description
 * Get the number of calendar years between the given dates.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar years
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar years are between 31 December 2013 and 11 February 2015?
 * const result = differenceInCalendarYears(
 *   new Date(2015, 1, 11),
 *   new Date(2013, 11, 31)
 * )
 * //=> 2
 */
function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var dateLeft = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var dateRight = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  return dateLeft.getFullYear() - dateRight.getFullYear();
}

/***/ }),

/***/ 5068:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/endOfDay/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ endOfDay)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name endOfDay
 * @category Day Helpers
 * @summary Return the end of a day for the given date.
 *
 * @description
 * Return the end of a day for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a day for 2 September 2014 11:55:00:
 * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 23:59:59.999
 */
function endOfDay(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),

/***/ 9128:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/endOfMonth/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ endOfMonth)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name endOfMonth
 * @category Month Helpers
 * @summary Return the end of a month for the given date.
 *
 * @description
 * Return the end of a month for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a month for 2 September 2014 11:55:00:
 * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */
function endOfMonth(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),

/***/ 3494:
/*!************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/endOfWeek/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ endOfWeek)
/* harmony export */ });
/* harmony import */ var _lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/defaultOptions/index.js */ 8458);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);




/**
 * @name endOfWeek
 * @category Week Helpers
 * @summary Return the end of a week for the given date.
 *
 * @description
 * Return the end of a week for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the end of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The end of a week for 2 September 2014 11:55:00:
 * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sat Sep 06 2014 23:59:59.999
 *
 * @example
 * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
 * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Sun Sep 07 2014 23:59:59.999
 */
function endOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var defaultOptions = (0,_lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__/* .getDefaultOptions */ .q)();
  var weekStartsOn = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
  date.setDate(date.getDate() + diff);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),

/***/ 1191:
/*!************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/endOfYear/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ endOfYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name endOfYear
 * @category Year Helpers
 * @summary Return the end of a year for the given date.
 *
 * @description
 * Return the end of a year for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a year for 2 September 2014 11:55:00:
 * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 23:59:59.999
 */
function endOfYear(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var year = date.getFullYear();
  date.setFullYear(year + 1, 0, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),

/***/ 6658:
/*!*********************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/format/index.js + 4 modules ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ format)
});

// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/isValid/index.js
var isValid = __webpack_require__(2964);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/subMilliseconds/index.js
var subMilliseconds = __webpack_require__(670);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/toDate/index.js
var toDate = __webpack_require__(9699);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/requiredArgs/index.js
var requiredArgs = __webpack_require__(1151);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js


var MILLISECONDS_IN_DAY = 86400000;
function getUTCDayOfYear(dirtyDate) {
  (0,requiredArgs/* default */.A)(1, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js + 1 modules
var getUTCISOWeek = __webpack_require__(9717);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
var getUTCISOWeekYear = __webpack_require__(6535);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCWeek/index.js + 1 modules
var getUTCWeek = __webpack_require__(9478);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
var getUTCWeekYear = __webpack_require__(8888);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = '0' + output;
  }
  return sign + output;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/format/lightFormatters/index.js

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */
var formatters = {
  // Year
  y: function y(date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

    var signedYear = date.getUTCFullYear();
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);
  },
  // Month
  M: function M(date, token) {
    var month = date.getUTCMonth();
    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function d(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function a(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';
    switch (token) {
      case 'a':
      case 'aa':
        return dayPeriodEnumValue.toUpperCase();
      case 'aaa':
        return dayPeriodEnumValue;
      case 'aaaaa':
        return dayPeriodEnumValue[0];
      case 'aaaa':
      default:
        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
    }
  },
  // Hour [1-12]
  h: function h(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function H(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function m(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function s(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function S(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
/* harmony default export */ const lightFormatters = (formatters);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/format/formatters/index.js







var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
};
/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */

var formatters_formatters = {
  // Era
  G: function G(date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {
          width: 'abbreviated'
        });
      // A, B
      case 'GGGGG':
        return localize.era(era, {
          width: 'narrow'
        });
      // Anno Domini, Before Christ
      case 'GGGG':
      default:
        return localize.era(era, {
          width: 'wide'
        });
    }
  },
  // Year
  y: function y(date, token, localize) {
    // Ordinal number
    if (token === 'yo') {
      var signedYear = date.getUTCFullYear();
      // Returns 1 for 1 BC (which is year 0 in JavaScript)
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, {
        unit: 'year'
      });
    }
    return lightFormatters.y(date, token);
  },
  // Local week-numbering year
  Y: function Y(date, token, localize, options) {
    var signedWeekYear = (0,getUTCWeekYear/* default */.A)(date, options);
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;

    // Two digit year
    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }

    // Ordinal number
    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {
        unit: 'year'
      });
    }

    // Padding
    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function R(date, token) {
    var isoWeekYear = (0,getUTCISOWeekYear/* default */.A)(date);

    // Padding
    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function u(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function Q(date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter);
      // 01, 02, 03, 04
      case 'QQ':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case 'Qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4
      case 'QQQ':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case 'QQQQQ':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'formatting'
        });
      // 1st quarter, 2nd quarter, ...
      case 'QQQQ':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone quarter
  q: function q(date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter);
      // 01, 02, 03, 04
      case 'qq':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case 'qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4
      case 'qqq':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case 'qqqqq':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'standalone'
        });
      // 1st quarter, 2nd quarter, ...
      case 'qqqq':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Month
  M: function M(date, token, localize) {
    var month = date.getUTCMonth();
    switch (token) {
      case 'M':
      case 'MM':
        return lightFormatters.M(date, token);
      // 1st, 2nd, ..., 12th
      case 'Mo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec
      case 'MMM':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // J, F, ..., D
      case 'MMMMM':
        return localize.month(month, {
          width: 'narrow',
          context: 'formatting'
        });
      // January, February, ..., December
      case 'MMMM':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone month
  L: function L(date, token, localize) {
    var month = date.getUTCMonth();
    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1);
      // 01, 02, ..., 12
      case 'LL':
        return addLeadingZeros(month + 1, 2);
      // 1st, 2nd, ..., 12th
      case 'Lo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec
      case 'LLL':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // J, F, ..., D
      case 'LLLLL':
        return localize.month(month, {
          width: 'narrow',
          context: 'standalone'
        });
      // January, February, ..., December
      case 'LLLL':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Local week of year
  w: function w(date, token, localize, options) {
    var week = (0,getUTCWeek/* default */.A)(date, options);
    if (token === 'wo') {
      return localize.ordinalNumber(week, {
        unit: 'week'
      });
    }
    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function I(date, token, localize) {
    var isoWeek = (0,getUTCISOWeek/* default */.A)(date);
    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {
        unit: 'week'
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function d(date, token, localize) {
    if (token === 'do') {
      return localize.ordinalNumber(date.getUTCDate(), {
        unit: 'date'
      });
    }
    return lightFormatters.d(date, token);
  },
  // Day of year
  D: function D(date, token, localize) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {
        unit: 'dayOfYear'
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function E(date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'EEEEE':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'EEEEEE':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Local day of week
  e: function e(date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek);
      // Padded numerical value
      case 'ee':
        return addLeadingZeros(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th
      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });
      case 'eee':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'eeeee':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'eeeeee':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'eeee':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone local day of week
  c: function c(date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek);
      // Padded numerical value
      case 'cc':
        return addLeadingZeros(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th
      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });
      case 'ccc':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // T
      case 'ccccc':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'standalone'
        });
      // Tu
      case 'cccccc':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'standalone'
        });
      // Tuesday
      case 'cccc':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // ISO day of week
  i: function i(date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek);
      // 02
      case 'ii':
        return addLeadingZeros(isoDayOfWeek, token.length);
      // 2nd
      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {
          unit: 'day'
        });
      // Tue
      case 'iii':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'iiiii':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'iiiiii':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'iiii':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM or PM
  a: function a(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    switch (token) {
      case 'a':
      case 'aa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();
      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM, PM, midnight, noon
  b: function b(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    }
    switch (token) {
      case 'b':
      case 'bb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();
      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function B(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Hour [1-12]
  h: function h(date, token, localize) {
    if (token === 'ho') {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return lightFormatters.h(date, token);
  },
  // Hour [0-23]
  H: function H(date, token, localize) {
    if (token === 'Ho') {
      return localize.ordinalNumber(date.getUTCHours(), {
        unit: 'hour'
      });
    }
    return lightFormatters.H(date, token);
  },
  // Hour [0-11]
  K: function K(date, token, localize) {
    var hours = date.getUTCHours() % 12;
    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function k(date, token, localize) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;
    if (token === 'ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function m(date, token, localize) {
    if (token === 'mo') {
      return localize.ordinalNumber(date.getUTCMinutes(), {
        unit: 'minute'
      });
    }
    return lightFormatters.m(date, token);
  },
  // Second
  s: function s(date, token, localize) {
    if (token === 'so') {
      return localize.ordinalNumber(date.getUTCSeconds(), {
        unit: 'second'
      });
    }
    return lightFormatters.s(date, token);
  },
  // Fraction of second
  S: function S(date, token) {
    return lightFormatters.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function X(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return 'Z';
    }
    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`
      case 'XXXX':
      case 'XX':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`
      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function x(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`
      case 'xxxx':
      case 'xx':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`
      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (GMT)
  O: function O(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long
      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (specific non-location)
  z: function z(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long
      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Seconds timestamp
  t: function t(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function T(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || '';
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
/* harmony default export */ const format_formatters = (formatters_formatters);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/format/longFormatters/index.js
var longFormatters = __webpack_require__(9668);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
var getTimezoneOffsetInMilliseconds = __webpack_require__(460);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedTokens = __webpack_require__(9581);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/toInteger/index.js
var toInteger = __webpack_require__(7668);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/defaultOptions/index.js
var _lib_defaultOptions = __webpack_require__(8458);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/defaultLocale/index.js + 10 modules
var defaultLocale = __webpack_require__(8090);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/format/index.js










 // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;

/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          | a..aa   | AM, PM                            |       |
 * |                                 | aaa     | am, pm                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
 * |                                 | bbb     | am, pm, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 001, ..., 999                |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 04/29/1453                        | 7     |
 * |                                 | PP      | Apr 29, 1453                      | 7     |
 * |                                 | PPP     | April 29th, 1453                  | 7     |
 * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
 * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * const result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  (0,requiredArgs/* default */.A)(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions = (0,_lib_defaultOptions/* getDefaultOptions */.q)();
  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale/* default */.A;
  var firstWeekContainsDate = (0,toInteger/* default */.A)((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var weekStartsOn = (0,toInteger/* default */.A)((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  if (!locale.localize) {
    throw new RangeError('locale must contain localize property');
  }
  if (!locale.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }
  var originalDate = (0,toDate["default"])(dirtyDate);
  if (!(0,isValid["default"])(originalDate)) {
    throw new RangeError('Invalid time value');
  }

  // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376
  var timezoneOffset = (0,getTimezoneOffsetInMilliseconds/* default */.A)(originalDate);
  var utcDate = (0,subMilliseconds/* default */.A)(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = longFormatters/* default */.A[firstCharacter];
      return longFormatter(substring, locale.formatLong);
    }
    return substring;
  }).join('').match(formattingTokensRegExp).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = format_formatters[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && (0,protectedTokens/* isProtectedWeekYearToken */.xM)(substring)) {
        (0,protectedTokens/* throwProtectedError */.lJ)(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && (0,protectedTokens/* isProtectedDayOfYearToken */.ef)(substring)) {
        (0,protectedTokens/* throwProtectedError */.lJ)(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }
    return substring;
  }).join('');
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}

/***/ }),

/***/ 4234:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getDate/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getDate)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getDate
 * @category Day Helpers
 * @summary Get the day of the month of the given date.
 *
 * @description
 * Get the day of the month of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the day of month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which day of the month is 29 February 2012?
 * const result = getDate(new Date(2012, 1, 29))
 * //=> 29
 */
function getDate(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var dayOfMonth = date.getDate();
  return dayOfMonth;
}

/***/ }),

/***/ 2928:
/*!*********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getDay/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getDay)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getDay
 * @category Weekday Helpers
 * @summary Get the day of the week of the given date.
 *
 * @description
 * Get the day of the week of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which day of the week is 29 February 2012?
 * const result = getDay(new Date(2012, 1, 29))
 * //=> 3
 */
function getDay(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var day = date.getDay();
  return day;
}

/***/ }),

/***/ 161:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getHours/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getHours)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getHours
 * @category Hour Helpers
 * @summary Get the hours of the given date.
 *
 * @description
 * Get the hours of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the hours
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the hours of 29 February 2012 11:45:00:
 * const result = getHours(new Date(2012, 1, 29, 11, 45))
 * //=> 11
 */
function getHours(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var hours = date.getHours();
  return hours;
}

/***/ }),

/***/ 7066:
/*!*************************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getISOWeek/index.js + 3 modules ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ getISOWeek)
});

// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/toDate/index.js
var toDate = __webpack_require__(9699);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/startOfWeek/index.js
var startOfWeek = __webpack_require__(5163);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/requiredArgs/index.js
var requiredArgs = __webpack_require__(1151);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/startOfISOWeek/index.js


/**
 * @name startOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the start of an ISO week for the given date.
 *
 * @description
 * Return the start of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of an ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of an ISO week for 2 September 2014 11:55:00:
 * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfISOWeek(dirtyDate) {
  (0,requiredArgs/* default */.A)(1, arguments);
  return (0,startOfWeek["default"])(dirtyDate, {
    weekStartsOn: 1
  });
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/getISOWeekYear/index.js



/**
 * @name getISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the ISO week-numbering year of the given date.
 *
 * @description
 * Get the ISO week-numbering year of the given date,
 * which always starts 3 days before the year's first Thursday.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the ISO week-numbering year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which ISO-week numbering year is 2 January 2005?
 * const result = getISOWeekYear(new Date(2005, 0, 2))
 * //=> 2004
 */
function getISOWeekYear(dirtyDate) {
  (0,requiredArgs/* default */.A)(1, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var year = date.getFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/startOfISOWeekYear/index.js



/**
 * @name startOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the start of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the start of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of an ISO week-numbering year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of an ISO week-numbering year for 2 July 2005:
 * const result = startOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Mon Jan 03 2005 00:00:00
 */
function startOfISOWeekYear(dirtyDate) {
  (0,requiredArgs/* default */.A)(1, arguments);
  var year = getISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setFullYear(year, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  var date = startOfISOWeek(fourthOfJanuary);
  return date;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/getISOWeek/index.js




var MILLISECONDS_IN_WEEK = 604800000;

/**
 * @name getISOWeek
 * @category ISO Week Helpers
 * @summary Get the ISO week of the given date.
 *
 * @description
 * Get the ISO week of the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which week of the ISO-week numbering year is 2 January 2005?
 * const result = getISOWeek(new Date(2005, 0, 2))
 * //=> 53
 */
function getISOWeek(dirtyDate) {
  (0,requiredArgs/* default */.A)(1, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),

/***/ 9691:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getMinutes/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getMinutes)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getMinutes
 * @category Minute Helpers
 * @summary Get the minutes of the given date.
 *
 * @description
 * Get the minutes of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the minutes
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the minutes of 29 February 2012 11:45:05:
 * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))
 * //=> 45
 */
function getMinutes(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var minutes = date.getMinutes();
  return minutes;
}

/***/ }),

/***/ 8308:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getMonth/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getMonth)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getMonth
 * @category Month Helpers
 * @summary Get the month of the given date.
 *
 * @description
 * Get the month of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which month is 29 February 2012?
 * const result = getMonth(new Date(2012, 1, 29))
 * //=> 1
 */
function getMonth(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var month = date.getMonth();
  return month;
}

/***/ }),

/***/ 7286:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getQuarter/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getQuarter)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getQuarter
 * @category Quarter Helpers
 * @summary Get the year quarter of the given date.
 *
 * @description
 * Get the year quarter of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the quarter
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which quarter is 2 July 2014?
 * const result = getQuarter(new Date(2014, 6, 2))
 * //=> 3
 */
function getQuarter(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var quarter = Math.floor(date.getMonth() / 3) + 1;
  return quarter;
}

/***/ }),

/***/ 187:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getSeconds/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getSeconds)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getSeconds
 * @category Second Helpers
 * @summary Get the seconds of the given date.
 *
 * @description
 * Get the seconds of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the seconds
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the seconds of 29 February 2012 11:45:05.123:
 * const result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 5
 */
function getSeconds(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var seconds = date.getSeconds();
  return seconds;
}

/***/ }),

/***/ 2335:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getTime/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getTime)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getTime
 * @category Timestamp Helpers
 * @summary Get the milliseconds timestamp of the given date.
 *
 * @description
 * Get the milliseconds timestamp of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the timestamp
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the timestamp of 29 February 2012 11:45:05.123:
 * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 1330515905123
 */
function getTime(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var timestamp = date.getTime();
  return timestamp;
}

/***/ }),

/***/ 3571:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/getYear/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name getYear
 * @category Year Helpers
 * @summary Get the year of the given date.
 *
 * @description
 * Get the year of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which year is 2 July 2014?
 * const result = getYear(new Date(2014, 6, 2))
 * //=> 2014
 */
function getYear(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  return (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate).getFullYear();
}

/***/ }),

/***/ 5104:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isAfter/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isAfter)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isAfter
 * @category Common Helpers
 * @summary Is the first date after the second one?
 *
 * @description
 * Is the first date after the second one?
 *
 * @param {Date|Number} date - the date that should be after the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is after the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 after 11 February 1987?
 * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> true
 */
function isAfter(dirtyDate, dirtyDateToCompare) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var dateToCompare = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}

/***/ }),

/***/ 5549:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isBefore/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isBefore)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isBefore
 * @category Common Helpers
 * @summary Is the first date before the second one?
 *
 * @description
 * Is the first date before the second one?
 *
 * @param {Date|Number} date - the date that should be before the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is before the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 before 11 February 1987?
 * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> false
 */
function isBefore(dirtyDate, dirtyDateToCompare) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var dateToCompare = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateToCompare);
  return date.getTime() < dateToCompare.getTime();
}

/***/ }),

/***/ 7586:
/*!*********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isDate/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isDate)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ 2284);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isDate
 * @category Common Helpers
 * @summary Is the given value a date?
 *
 * @description
 * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
 *
 * @param {*} value - the value to check
 * @returns {boolean} true if the given value is a date
 * @throws {TypeError} 1 arguments required
 *
 * @example
 * // For a valid date:
 * const result = isDate(new Date())
 * //=> true
 *
 * @example
 * // For an invalid date:
 * const result = isDate(new Date(NaN))
 * //=> true
 *
 * @example
 * // For some value:
 * const result = isDate('2014-02-31')
 * //=> false
 *
 * @example
 * // For an object:
 * const result = isDate({})
 * //=> false
 */
function isDate(value) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  return value instanceof Date || (0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';
}

/***/ }),

/***/ 5898:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isEqual/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isEqual)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isEqual
 * @category Common Helpers
 * @summary Are the given dates equal?
 *
 * @description
 * Are the given dates equal?
 *
 * @param {Date|Number} dateLeft - the first date to compare
 * @param {Date|Number} dateRight - the second date to compare
 * @returns {Boolean} the dates are equal
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
 * const result = isEqual(
 *   new Date(2014, 6, 2, 6, 30, 45, 0),
 *   new Date(2014, 6, 2, 6, 30, 45, 500)
 * )
 * //=> false
 */
function isEqual(dirtyLeftDate, dirtyRightDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var dateLeft = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyLeftDate);
  var dateRight = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyRightDate);
  return dateLeft.getTime() === dateRight.getTime();
}

/***/ }),

/***/ 6010:
/*!************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isSameDay/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isSameDay)
/* harmony export */ });
/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfDay/index.js */ 4495);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isSameDay
 * @category Day Helpers
 * @summary Are the given dates in the same day (and year and month)?
 *
 * @description
 * Are the given dates in the same day (and year and month)?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same day (and year and month)
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
 * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
 * //=> true
 *
 * @example
 * // Are 4 September and 4 October in the same day?
 * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))
 * //=> false
 *
 * @example
 * // Are 4 September, 2014 and 4 September, 2015 in the same day?
 * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))
 * //=> false
 */
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var dateLeftStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var dateRightStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

/***/ }),

/***/ 3238:
/*!**************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isSameMonth/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isSameMonth)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isSameMonth
 * @category Month Helpers
 * @summary Are the given dates in the same month (and year)?
 *
 * @description
 * Are the given dates in the same month (and year)?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same month (and year)
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same month?
 * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 *
 * @example
 * // Are 2 September 2014 and 25 September 2015 in the same month?
 * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))
 * //=> false
 */
function isSameMonth(dirtyDateLeft, dirtyDateRight) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var dateLeft = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var dateRight = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}

/***/ }),

/***/ 8840:
/*!****************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isSameQuarter/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isSameQuarter)
/* harmony export */ });
/* harmony import */ var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfQuarter/index.js */ 3501);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isSameQuarter
 * @category Quarter Helpers
 * @summary Are the given dates in the same quarter (and year)?
 *
 * @description
 * Are the given dates in the same quarter (and year)?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same quarter (and year)
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 1 January 2014 and 8 March 2014 in the same quarter?
 * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))
 * //=> true
 *
 * @example
 * // Are 1 January 2014 and 1 January 2015 in the same quarter?
 * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))
 * //=> false
 */
function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var dateLeftStartOfQuarter = (0,_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var dateRightStartOfQuarter = (0,_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
}

/***/ }),

/***/ 5269:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isSameYear/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isSameYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isSameYear
 * @category Year Helpers
 * @summary Are the given dates in the same year?
 *
 * @description
 * Are the given dates in the same year?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same year
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same year?
 * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 */
function isSameYear(dirtyDateLeft, dirtyDateRight) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var dateLeft = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var dateRight = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear();
}

/***/ }),

/***/ 2964:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isValid/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isValid)
/* harmony export */ });
/* harmony import */ var _isDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isDate/index.js */ 7586);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * const result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * const result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * const result = isValid(new Date(''))
 * //=> false
 */
function isValid(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  if (!(0,_isDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate) && typeof dirtyDate !== 'number') {
    return false;
  }
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
  return !isNaN(Number(date));
}

/***/ }),

/***/ 940:
/*!*******************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/isWithinInterval/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isWithinInterval)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name isWithinInterval
 * @category Interval Helpers
 * @summary Is the given date within the interval?
 *
 * @description
 * Is the given date within the interval? (Including start and end.)
 *
 * @param {Date|Number} date - the date to check
 * @param {Interval} interval - the interval to check
 * @returns {Boolean} the date is within the interval
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // For the date within the interval:
 * isWithinInterval(new Date(2014, 0, 3), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> true
 *
 * @example
 * // For the date outside of the interval:
 * isWithinInterval(new Date(2014, 0, 10), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> false
 *
 * @example
 * // For date equal to interval start:
 * isWithinInterval(date, { start, end: date }) // => true
 *
 * @example
 * // For date equal to interval end:
 * isWithinInterval(date, { start: date, end }) // => true
 */
function isWithinInterval(dirtyDate, interval) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var time = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate).getTime();
  var startTime = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(interval.start).getTime();
  var endTime = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(interval.end).getTime();

  // Throw an exception if start date is after end date or if any date is `Invalid Date`
  if (!(startTime <= endTime)) {
    throw new RangeError('Invalid interval');
  }
  return time >= startTime && time <= endTime;
}

/***/ }),

/***/ 136:
/*!******************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/max/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ max)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ 2284);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name max
 * @category Common Helpers
 * @summary Return the latest of the given dates.
 *
 * @description
 * Return the latest of the given dates.
 *
 * @param {Date[]|Number[]} datesArray - the dates to compare
 * @returns {Date} the latest of the dates
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which of these dates is the latest?
 * const result = max([
 *   new Date(1989, 6, 10),
 *   new Date(1987, 1, 11),
 *   new Date(1995, 6, 2),
 *   new Date(1990, 0, 1)
 * ])
 * //=> Sun Jul 02 1995 00:00:00
 */
function max(dirtyDatesArray) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var datesArray;
  // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
    datesArray = dirtyDatesArray;

    // If `dirtyDatesArray` is Array-like Object, convert to Array.
  } else if ((0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    // `dirtyDatesArray` is non-iterable, return Invalid Date
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function (dirtyDate) {
    var currentDate = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
    if (result === undefined || result < currentDate || isNaN(Number(currentDate))) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

/***/ }),

/***/ 8990:
/*!******************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/min/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ min)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ 2284);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name min
 * @category Common Helpers
 * @summary Returns the earliest of the given dates.
 *
 * @description
 * Returns the earliest of the given dates.
 *
 * @param {Date[]|Number[]} datesArray - the dates to compare
 * @returns {Date} - the earliest of the dates
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which of these dates is the earliest?
 * const result = min([
 *   new Date(1989, 6, 10),
 *   new Date(1987, 1, 11),
 *   new Date(1995, 6, 2),
 *   new Date(1990, 0, 1)
 * ])
 * //=> Wed Feb 11 1987 00:00:00
 */
function min(dirtyDatesArray) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var datesArray;
  // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
    datesArray = dirtyDatesArray;
    // If `dirtyDatesArray` is Array-like Object, convert to Array.
  } else if ((0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    // `dirtyDatesArray` is non-iterable, return Invalid Date
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function (dirtyDate) {
    var currentDate = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
    if (result === undefined || result > currentDate || isNaN(currentDate.getDate())) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

/***/ }),

/***/ 9000:
/*!*********************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/index.js + 51 modules ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ parse)
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__(2284);
;// ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}

;// ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}

;// ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js

function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0,
        F = function F() {};
      return {
        s: F,
        n: function n() {
          return _n >= r.length ? {
            done: !0
          } : {
            done: !1,
            value: r[_n++]
          };
        },
        e: function e(r) {
          throw r;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o,
    a = !0,
    u = !1;
  return {
    s: function s() {
      t = t.call(r);
    },
    n: function n() {
      var r = t.next();
      return a = r.done, r;
    },
    e: function e(r) {
      u = !0, o = r;
    },
    f: function f() {
      try {
        a || null == t["return"] || t["return"]();
      } finally {
        if (u) throw o;
      }
    }
  };
}

// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/defaultLocale/index.js + 10 modules
var defaultLocale = __webpack_require__(8090);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/subMilliseconds/index.js
var subMilliseconds = __webpack_require__(670);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/toDate/index.js
var toDate = __webpack_require__(9699);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/assign/index.js
function assign_assign(target, object) {
  if (target == null) {
    throw new TypeError('assign requires that input parameter not be null or undefined');
  }
  for (var property in object) {
    if (Object.prototype.hasOwnProperty.call(object, property)) {
      ;
      target[property] = object[property];
    }
  }
  return target;
}
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/format/longFormatters/index.js
var longFormatters = __webpack_require__(9668);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
var getTimezoneOffsetInMilliseconds = __webpack_require__(460);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedTokens = __webpack_require__(9581);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/toInteger/index.js
var toInteger = __webpack_require__(7668);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/requiredArgs/index.js
var requiredArgs = __webpack_require__(1151);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(9417);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
var setPrototypeOf = __webpack_require__(3662);
;// ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, {
    constructor: {
      value: t,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(t, "prototype", {
    writable: !1
  }), e && (0,setPrototypeOf/* default */.A)(t, e);
}

;// ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(t) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, _getPrototypeOf(t);
}

;// ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  })();
}

;// ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(t, e) {
  if (e && ("object" == (0,esm_typeof/* default */.A)(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return (0,assertThisInitialized/* default */.A)(t);
}

;// ./node_modules/@babel/runtime/helpers/esm/createSuper.js



function _createSuper(t) {
  var r = _isNativeReflectConstruct();
  return function () {
    var e,
      o = _getPrototypeOf(t);
    if (r) {
      var s = _getPrototypeOf(this).constructor;
      e = Reflect.construct(o, arguments, s);
    } else e = o.apply(this, arguments);
    return _possibleConstructorReturn(this, e);
  };
}

;// ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js + 1 modules
var toPropertyKey = __webpack_require__(816);
;// ./node_modules/@babel/runtime/helpers/esm/createClass.js

function _defineProperties(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, (0,toPropertyKey/* default */.A)(o.key), o);
  }
}
function _createClass(e, r, t) {
  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4467);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/Setter.js






var TIMEZONE_UNIT_PRIORITY = 10;
var Setter = /*#__PURE__*/function () {
  function Setter() {
    _classCallCheck(this, Setter);
    (0,defineProperty/* default */.A)(this, "priority", void 0);
    (0,defineProperty/* default */.A)(this, "subPriority", 0);
  }
  _createClass(Setter, [{
    key: "validate",
    value: function validate(_utcDate, _options) {
      return true;
    }
  }]);
  return Setter;
}();
var ValueSetter = /*#__PURE__*/function (_Setter) {
  _inherits(ValueSetter, _Setter);
  var _super = _createSuper(ValueSetter);
  function ValueSetter(value, validateValue, setValue, priority, subPriority) {
    var _this;
    _classCallCheck(this, ValueSetter);
    _this = _super.call(this);
    _this.value = value;
    _this.validateValue = validateValue;
    _this.setValue = setValue;
    _this.priority = priority;
    if (subPriority) {
      _this.subPriority = subPriority;
    }
    return _this;
  }
  _createClass(ValueSetter, [{
    key: "validate",
    value: function validate(utcDate, options) {
      return this.validateValue(utcDate, this.value, options);
    }
  }, {
    key: "set",
    value: function set(utcDate, flags, options) {
      return this.setValue(utcDate, flags, this.value, options);
    }
  }]);
  return ValueSetter;
}(Setter);
var DateToSystemTimezoneSetter = /*#__PURE__*/function (_Setter2) {
  _inherits(DateToSystemTimezoneSetter, _Setter2);
  var _super2 = _createSuper(DateToSystemTimezoneSetter);
  function DateToSystemTimezoneSetter() {
    var _this2;
    _classCallCheck(this, DateToSystemTimezoneSetter);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _super2.call.apply(_super2, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this2), "priority", TIMEZONE_UNIT_PRIORITY);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this2), "subPriority", -1);
    return _this2;
  }
  _createClass(DateToSystemTimezoneSetter, [{
    key: "set",
    value: function set(date, flags) {
      if (flags.timestampIsSet) {
        return date;
      }
      var convertedDate = new Date(0);
      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
      return convertedDate;
    }
  }]);
  return DateToSystemTimezoneSetter;
}(Setter);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/Parser.js




var Parser = /*#__PURE__*/function () {
  function Parser() {
    _classCallCheck(this, Parser);
    (0,defineProperty/* default */.A)(this, "incompatibleTokens", void 0);
    (0,defineProperty/* default */.A)(this, "priority", void 0);
    (0,defineProperty/* default */.A)(this, "subPriority", void 0);
  }
  _createClass(Parser, [{
    key: "run",
    value: function run(dateString, token, match, options) {
      var result = this.parse(dateString, token, match, options);
      if (!result) {
        return null;
      }
      return {
        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),
        rest: result.rest
      };
    }
  }, {
    key: "validate",
    value: function validate(_utcDate, _value, _options) {
      return true;
    }
  }]);
  return Parser;
}();
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/EraParser.js







var EraParser = /*#__PURE__*/function (_Parser) {
  _inherits(EraParser, _Parser);
  var _super = _createSuper(EraParser);
  function EraParser() {
    var _this;
    _classCallCheck(this, EraParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 140);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['R', 'u', 't', 'T']);
    return _this;
  }
  _createClass(EraParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // AD, BC
        case 'G':
        case 'GG':
        case 'GGG':
          return match.era(dateString, {
            width: 'abbreviated'
          }) || match.era(dateString, {
            width: 'narrow'
          });
        // A, B
        case 'GGGGG':
          return match.era(dateString, {
            width: 'narrow'
          });
        // Anno Domini, Before Christ
        case 'GGGG':
        default:
          return match.era(dateString, {
            width: 'wide'
          }) || match.era(dateString, {
            width: 'abbreviated'
          }) || match.era(dateString, {
            width: 'narrow'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      flags.era = value;
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return EraParser;
}(Parser);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/constants/index.js
var constants = __webpack_require__(4019);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/constants.js
var numericPatterns = {
  month: /^(1[0-2]|0?\d)/,
  // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/,
  // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
  // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/,
  // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/,
  // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/,
  // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/,
  // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/,
  // 0 to 12
  minute: /^[0-5]?\d/,
  // 0 to 59
  second: /^[0-5]?\d/,
  // 0 to 59

  singleDigit: /^\d/,
  // 0 to 9
  twoDigits: /^\d{1,2}/,
  // 0 to 99
  threeDigits: /^\d{1,3}/,
  // 0 to 999
  fourDigits: /^\d{1,4}/,
  // 0 to 9999

  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/,
  // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/,
  // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/,
  // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999
};

var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/utils.js


function mapValue(parseFnResult, mapFn) {
  if (!parseFnResult) {
    return parseFnResult;
  }
  return {
    value: mapFn(parseFnResult.value),
    rest: parseFnResult.rest
  };
}
function parseNumericPattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  return {
    value: parseInt(matchResult[0], 10),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseTimezonePattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }

  // Input is 'Z'
  if (matchResult[0] === 'Z') {
    return {
      value: 0,
      rest: dateString.slice(1)
    };
  }
  var sign = matchResult[1] === '+' ? 1 : -1;
  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
  return {
    value: sign * (hours * constants/* millisecondsInHour */.s0 + minutes * constants/* millisecondsInMinute */.Cg + seconds * constants/* millisecondsInSecond */._m),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseAnyDigitsSigned(dateString) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);
}
function parseNDigits(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, dateString);
    default:
      return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), dateString);
  }
}
function parseNDigitsSigned(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);
    default:
      return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), dateString);
  }
}
function dayPeriodEnumToHours(dayPeriod) {
  switch (dayPeriod) {
    case 'morning':
      return 4;
    case 'evening':
      return 17;
    case 'pm':
    case 'noon':
    case 'afternoon':
      return 12;
    case 'am':
    case 'midnight':
    case 'night':
    default:
      return 0;
  }
}
function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  var isCommonEra = currentYear > 0;
  // Absolute number of the current year:
  // 1 -> 1 AC
  // 0 -> 1 BC
  // -1 -> 2 BC
  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
  var result;
  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    var rangeEnd = absCurrentYear + 50;
    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }
  return isCommonEra ? result : 1 - result;
}
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js








// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
// | Year     |     y | yy |   yyy |  yyyy | yyyyy |
// |----------|-------|----|-------|-------|-------|
// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
var YearParser = /*#__PURE__*/function (_Parser) {
  _inherits(YearParser, _Parser);
  var _super = _createSuper(YearParser);
  function YearParser() {
    var _this;
    _classCallCheck(this, YearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 130);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(YearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(year) {
        return {
          year: year,
          isTwoDigitYear: token === 'yy'
        };
      };
      switch (token) {
        case 'y':
          return mapValue(parseNDigits(4, dateString), valueCallback);
        case 'yo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'year'
          }), valueCallback);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      var currentYear = date.getUTCFullYear();
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return YearParser;
}(Parser);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
var getUTCWeekYear = __webpack_require__(8888);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
var startOfUTCWeek = __webpack_require__(7350);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekYearParser.js










// Local week-numbering year
var LocalWeekYearParser = /*#__PURE__*/function (_Parser) {
  _inherits(LocalWeekYearParser, _Parser);
  var _super = _createSuper(LocalWeekYearParser);
  function LocalWeekYearParser() {
    var _this;
    _classCallCheck(this, LocalWeekYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 130);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);
    return _this;
  }
  _createClass(LocalWeekYearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(year) {
        return {
          year: year,
          isTwoDigitYear: token === 'YY'
        };
      };
      switch (token) {
        case 'Y':
          return mapValue(parseNDigits(4, dateString), valueCallback);
        case 'Yo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'year'
          }), valueCallback);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set(date, flags, value, options) {
      var currentYear = (0,getUTCWeekYear/* default */.A)(date, options);
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
        date.setUTCHours(0, 0, 0, 0);
        return (0,startOfUTCWeek/* default */.A)(date, options);
      }
      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
      date.setUTCHours(0, 0, 0, 0);
      return (0,startOfUTCWeek/* default */.A)(date, options);
    }
  }]);
  return LocalWeekYearParser;
}(Parser);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
var startOfUTCISOWeek = __webpack_require__(4715);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekYearParser.js








 // ISO week-numbering year
var ISOWeekYearParser = /*#__PURE__*/function (_Parser) {
  _inherits(ISOWeekYearParser, _Parser);
  var _super = _createSuper(ISOWeekYearParser);
  function ISOWeekYearParser() {
    var _this;
    _classCallCheck(this, ISOWeekYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 130);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(ISOWeekYearParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      if (token === 'R') {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      var firstWeekOfYear = new Date(0);
      firstWeekOfYear.setUTCFullYear(value, 0, 4);
      firstWeekOfYear.setUTCHours(0, 0, 0, 0);
      return (0,startOfUTCISOWeek/* default */.A)(firstWeekOfYear);
    }
  }]);
  return ISOWeekYearParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/ExtendedYearParser.js








var ExtendedYearParser = /*#__PURE__*/function (_Parser) {
  _inherits(ExtendedYearParser, _Parser);
  var _super = _createSuper(ExtendedYearParser);
  function ExtendedYearParser() {
    var _this;
    _classCallCheck(this, ExtendedYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 130);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(ExtendedYearParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      if (token === 'u') {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ExtendedYearParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/QuarterParser.js








var QuarterParser = /*#__PURE__*/function (_Parser) {
  _inherits(QuarterParser, _Parser);
  var _super = _createSuper(QuarterParser);
  function QuarterParser() {
    var _this;
    _classCallCheck(this, QuarterParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 120);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(QuarterParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // 1, 2, 3, 4
        case 'Q':
        case 'QQ':
          // 01, 02, 03, 04
          return parseNDigits(token.length, dateString);
        // 1st, 2nd, 3rd, 4th
        case 'Qo':
          return match.ordinalNumber(dateString, {
            unit: 'quarter'
          });
        // Q1, Q2, Q3, Q4
        case 'QQQ':
          return match.quarter(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)
        case 'QQQQQ':
          return match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // 1st quarter, 2nd quarter, ...
        case 'QQQQ':
        default:
          return match.quarter(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return QuarterParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/StandAloneQuarterParser.js








var StandAloneQuarterParser = /*#__PURE__*/function (_Parser) {
  _inherits(StandAloneQuarterParser, _Parser);
  var _super = _createSuper(StandAloneQuarterParser);
  function StandAloneQuarterParser() {
    var _this;
    _classCallCheck(this, StandAloneQuarterParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 120);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(StandAloneQuarterParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // 1, 2, 3, 4
        case 'q':
        case 'qq':
          // 01, 02, 03, 04
          return parseNDigits(token.length, dateString);
        // 1st, 2nd, 3rd, 4th
        case 'qo':
          return match.ordinalNumber(dateString, {
            unit: 'quarter'
          });
        // Q1, Q2, Q3, Q4
        case 'qqq':
          return match.quarter(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)
        case 'qqqqq':
          return match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // 1st quarter, 2nd quarter, ...
        case 'qqqq':
        default:
          return match.quarter(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneQuarterParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/MonthParser.js









var MonthParser = /*#__PURE__*/function (_Parser) {
  _inherits(MonthParser, _Parser);
  var _super = _createSuper(MonthParser);
  function MonthParser() {
    var _this;
    _classCallCheck(this, MonthParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 110);
    return _this;
  }
  _createClass(MonthParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        return value - 1;
      };
      switch (token) {
        // 1, 2, ..., 12
        case 'M':
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);
        // 01, 02, ..., 12
        case 'MM':
          return mapValue(parseNDigits(2, dateString), valueCallback);
        // 1st, 2nd, ..., 12th
        case 'Mo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'month'
          }), valueCallback);
        // Jan, Feb, ..., Dec
        case 'MMM':
          return match.month(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // J, F, ..., D
        case 'MMMMM':
          return match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // January, February, ..., December
        case 'MMMM':
        default:
          return match.month(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return MonthParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/StandAloneMonthParser.js









var StandAloneMonthParser = /*#__PURE__*/function (_Parser) {
  _inherits(StandAloneMonthParser, _Parser);
  var _super = _createSuper(StandAloneMonthParser);
  function StandAloneMonthParser() {
    var _this;
    _classCallCheck(this, StandAloneMonthParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 110);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(StandAloneMonthParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        return value - 1;
      };
      switch (token) {
        // 1, 2, ..., 12
        case 'L':
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);
        // 01, 02, ..., 12
        case 'LL':
          return mapValue(parseNDigits(2, dateString), valueCallback);
        // 1st, 2nd, ..., 12th
        case 'Lo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'month'
          }), valueCallback);
        // Jan, Feb, ..., Dec
        case 'LLL':
          return match.month(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // J, F, ..., D
        case 'LLLLL':
          return match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // January, February, ..., December
        case 'LLLL':
        default:
          return match.month(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneMonthParser;
}(Parser);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCWeek/index.js + 1 modules
var getUTCWeek = __webpack_require__(9478);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/setUTCWeek/index.js




function setUTCWeek(dirtyDate, dirtyWeek, options) {
  (0,requiredArgs/* default */.A)(2, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var week = (0,toInteger/* default */.A)(dirtyWeek);
  var diff = (0,getUTCWeek/* default */.A)(date, options) - week;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekParser.js










 // Local week of year
var LocalWeekParser = /*#__PURE__*/function (_Parser) {
  _inherits(LocalWeekParser, _Parser);
  var _super = _createSuper(LocalWeekParser);
  function LocalWeekParser() {
    var _this;
    _classCallCheck(this, LocalWeekParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 100);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);
    return _this;
  }
  _createClass(LocalWeekParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'w':
          return parseNumericPattern(numericPatterns.week, dateString);
        case 'wo':
          return match.ordinalNumber(dateString, {
            unit: 'week'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      return (0,startOfUTCWeek/* default */.A)(setUTCWeek(date, value, options), options);
    }
  }]);
  return LocalWeekParser;
}(Parser);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js + 1 modules
var getUTCISOWeek = __webpack_require__(9717);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js




function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
  (0,requiredArgs/* default */.A)(2, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var isoWeek = (0,toInteger/* default */.A)(dirtyISOWeek);
  var diff = (0,getUTCISOWeek/* default */.A)(date) - isoWeek;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekParser.js










 // ISO week of year
var ISOWeekParser = /*#__PURE__*/function (_Parser) {
  _inherits(ISOWeekParser, _Parser);
  var _super = _createSuper(ISOWeekParser);
  function ISOWeekParser() {
    var _this;
    _classCallCheck(this, ISOWeekParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 100);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(ISOWeekParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'I':
          return parseNumericPattern(numericPatterns.week, dateString);
        case 'Io':
          return match.ordinalNumber(dateString, {
            unit: 'week'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      return (0,startOfUTCISOWeek/* default */.A)(setUTCISOWeek(date, value));
    }
  }]);
  return ISOWeekParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/DateParser.js









var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

// Day of the month
var DateParser = /*#__PURE__*/function (_Parser) {
  _inherits(DateParser, _Parser);
  var _super = _createSuper(DateParser);
  function DateParser() {
    var _this;
    _classCallCheck(this, DateParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 90);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "subPriority", 1);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(DateParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'd':
          return parseNumericPattern(numericPatterns.date, dateString);
        case 'do':
          return match.ordinalNumber(dateString, {
            unit: 'date'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex(year);
      var month = date.getUTCMonth();
      if (isLeapYear) {
        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
      } else {
        return value >= 1 && value <= DAYS_IN_MONTH[month];
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCDate(value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DateParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/DayOfYearParser.js









var DayOfYearParser = /*#__PURE__*/function (_Parser) {
  _inherits(DayOfYearParser, _Parser);
  var _super = _createSuper(DayOfYearParser);
  function DayOfYearParser() {
    var _this;
    _classCallCheck(this, DayOfYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 90);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "subpriority", 1);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(DayOfYearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'D':
        case 'DD':
          return parseNumericPattern(numericPatterns.dayOfYear, dateString);
        case 'Do':
          return match.ordinalNumber(dateString, {
            unit: 'date'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex(year);
      if (isLeapYear) {
        return value >= 1 && value <= 366;
      } else {
        return value >= 1 && value <= 365;
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(0, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayOfYearParser;
}(Parser);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/defaultOptions/index.js
var _lib_defaultOptions = __webpack_require__(8458);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/setUTCDay/index.js




function setUTCDay(dirtyDate, dirtyDay, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,requiredArgs/* default */.A)(2, arguments);
  var defaultOptions = (0,_lib_defaultOptions/* getDefaultOptions */.q)();
  var weekStartsOn = (0,toInteger/* default */.A)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = (0,toDate["default"])(dirtyDate);
  var day = (0,toInteger/* default */.A)(dirtyDay);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/DayParser.js







 // Day of week
var DayParser = /*#__PURE__*/function (_Parser) {
  _inherits(DayParser, _Parser);
  var _super = _createSuper(DayParser);
  function DayParser() {
    var _this;
    _classCallCheck(this, DayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 90);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(DayParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // Tue
        case 'E':
        case 'EE':
        case 'EEE':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // T
        case 'EEEEE':
          return match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tu
        case 'EEEEEE':
          return match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tuesday
        case 'EEEE':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/LocalDayParser.js








 // Local day of week
var LocalDayParser = /*#__PURE__*/function (_Parser) {
  _inherits(LocalDayParser, _Parser);
  var _super = _createSuper(LocalDayParser);
  function LocalDayParser() {
    var _this;
    _classCallCheck(this, LocalDayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 90);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']);
    return _this;
  }
  _createClass(LocalDayParser, [{
    key: "parse",
    value: function parse(dateString, token, match, options) {
      var valueCallback = function valueCallback(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        // 3
        case 'e':
        case 'ee':
          // 03
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
        // 3rd
        case 'eo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'day'
          }), valueCallback);
        // Tue
        case 'eee':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // T
        case 'eeeee':
          return match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tu
        case 'eeeeee':
          return match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tuesday
        case 'eeee':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return LocalDayParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/StandAloneLocalDayParser.js








 // Stand-alone local day of week
var StandAloneLocalDayParser = /*#__PURE__*/function (_Parser) {
  _inherits(StandAloneLocalDayParser, _Parser);
  var _super = _createSuper(StandAloneLocalDayParser);
  function StandAloneLocalDayParser() {
    var _this;
    _classCallCheck(this, StandAloneLocalDayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 90);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']);
    return _this;
  }
  _createClass(StandAloneLocalDayParser, [{
    key: "parse",
    value: function parse(dateString, token, match, options) {
      var valueCallback = function valueCallback(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        // 3
        case 'c':
        case 'cc':
          // 03
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
        // 3rd
        case 'co':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'day'
          }), valueCallback);
        // Tue
        case 'ccc':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // T
        case 'ccccc':
          return match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // Tu
        case 'cccccc':
          return match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // Tuesday
        case 'cccc':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneLocalDayParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/setUTCISODay/index.js



function setUTCISODay(dirtyDate, dirtyDay) {
  (0,requiredArgs/* default */.A)(2, arguments);
  var day = (0,toInteger/* default */.A)(dirtyDay);
  if (day % 7 === 0) {
    day = day - 7;
  }
  var weekStartsOn = 1;
  var date = (0,toDate["default"])(dirtyDate);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/ISODayParser.js








 // ISO day of week
var ISODayParser = /*#__PURE__*/function (_Parser) {
  _inherits(ISODayParser, _Parser);
  var _super = _createSuper(ISODayParser);
  function ISODayParser() {
    var _this;
    _classCallCheck(this, ISODayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 90);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']);
    return _this;
  }
  _createClass(ISODayParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        if (value === 0) {
          return 7;
        }
        return value;
      };
      switch (token) {
        // 2
        case 'i':
        case 'ii':
          // 02
          return parseNDigits(token.length, dateString);
        // 2nd
        case 'io':
          return match.ordinalNumber(dateString, {
            unit: 'day'
          });
        // Tue
        case 'iii':
          return mapValue(match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // T
        case 'iiiii':
          return mapValue(match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // Tu
        case 'iiiiii':
          return mapValue(match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // Tuesday
        case 'iiii':
        default:
          return mapValue(match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 7;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date = setUTCISODay(date, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ISODayParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/AMPMParser.js








var AMPMParser = /*#__PURE__*/function (_Parser) {
  _inherits(AMPMParser, _Parser);
  var _super = _createSuper(AMPMParser);
  function AMPMParser() {
    var _this;
    _classCallCheck(this, AMPMParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 80);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['b', 'B', 'H', 'k', 't', 'T']);
    return _this;
  }
  _createClass(AMPMParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'a':
        case 'aa':
        case 'aaa':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'aaaaa':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'aaaa':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/AMPMMidnightParser.js








var AMPMMidnightParser = /*#__PURE__*/function (_Parser) {
  _inherits(AMPMMidnightParser, _Parser);
  var _super = _createSuper(AMPMMidnightParser);
  function AMPMMidnightParser() {
    var _this;
    _classCallCheck(this, AMPMMidnightParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 80);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['a', 'B', 'H', 'k', 't', 'T']);
    return _this;
  }
  _createClass(AMPMMidnightParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'b':
        case 'bb':
        case 'bbb':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'bbbbb':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'bbbb':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMMidnightParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/DayPeriodParser.js







 // in the morning, in the afternoon, in the evening, at night
var DayPeriodParser = /*#__PURE__*/function (_Parser) {
  _inherits(DayPeriodParser, _Parser);
  var _super = _createSuper(DayPeriodParser);
  function DayPeriodParser() {
    var _this;
    _classCallCheck(this, DayPeriodParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 80);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['a', 'b', 't', 'T']);
    return _this;
  }
  _createClass(DayPeriodParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'B':
        case 'BB':
        case 'BBB':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'BBBBB':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'BBBB':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return DayPeriodParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/Hour1to12Parser.js









var Hour1to12Parser = /*#__PURE__*/function (_Parser) {
  _inherits(Hour1to12Parser, _Parser);
  var _super = _createSuper(Hour1to12Parser);
  function Hour1to12Parser() {
    var _this;
    _classCallCheck(this, Hour1to12Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 70);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['H', 'K', 'k', 't', 'T']);
    return _this;
  }
  _createClass(Hour1to12Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'h':
          return parseNumericPattern(numericPatterns.hour12h, dateString);
        case 'ho':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 12;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else if (!isPM && value === 12) {
        date.setUTCHours(0, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour1to12Parser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/Hour0to23Parser.js









var Hour0to23Parser = /*#__PURE__*/function (_Parser) {
  _inherits(Hour0to23Parser, _Parser);
  var _super = _createSuper(Hour0to23Parser);
  function Hour0to23Parser() {
    var _this;
    _classCallCheck(this, Hour0to23Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 70);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['a', 'b', 'h', 'K', 'k', 't', 'T']);
    return _this;
  }
  _createClass(Hour0to23Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'H':
          return parseNumericPattern(numericPatterns.hour23h, dateString);
        case 'Ho':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 23;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(value, 0, 0, 0);
      return date;
    }
  }]);
  return Hour0to23Parser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/Hour0To11Parser.js









var Hour0To11Parser = /*#__PURE__*/function (_Parser) {
  _inherits(Hour0To11Parser, _Parser);
  var _super = _createSuper(Hour0To11Parser);
  function Hour0To11Parser() {
    var _this;
    _classCallCheck(this, Hour0To11Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 70);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['h', 'H', 'k', 't', 'T']);
    return _this;
  }
  _createClass(Hour0To11Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'K':
          return parseNumericPattern(numericPatterns.hour11h, dateString);
        case 'Ko':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour0To11Parser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/Hour1To24Parser.js









var Hour1To24Parser = /*#__PURE__*/function (_Parser) {
  _inherits(Hour1To24Parser, _Parser);
  var _super = _createSuper(Hour1To24Parser);
  function Hour1To24Parser() {
    var _this;
    _classCallCheck(this, Hour1To24Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 70);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['a', 'b', 'h', 'H', 'K', 't', 'T']);
    return _this;
  }
  _createClass(Hour1To24Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'k':
          return parseNumericPattern(numericPatterns.hour24h, dateString);
        case 'ko':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 24;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var hours = value <= 24 ? value % 24 : value;
      date.setUTCHours(hours, 0, 0, 0);
      return date;
    }
  }]);
  return Hour1To24Parser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/MinuteParser.js









var MinuteParser = /*#__PURE__*/function (_Parser) {
  _inherits(MinuteParser, _Parser);
  var _super = _createSuper(MinuteParser);
  function MinuteParser() {
    var _this;
    _classCallCheck(this, MinuteParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 60);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  _createClass(MinuteParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'm':
          return parseNumericPattern(numericPatterns.minute, dateString);
        case 'mo':
          return match.ordinalNumber(dateString, {
            unit: 'minute'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMinutes(value, 0, 0);
      return date;
    }
  }]);
  return MinuteParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/SecondParser.js









var SecondParser = /*#__PURE__*/function (_Parser) {
  _inherits(SecondParser, _Parser);
  var _super = _createSuper(SecondParser);
  function SecondParser() {
    var _this;
    _classCallCheck(this, SecondParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 50);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  _createClass(SecondParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 's':
          return parseNumericPattern(numericPatterns.second, dateString);
        case 'so':
          return match.ordinalNumber(dateString, {
            unit: 'second'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCSeconds(value, 0);
      return date;
    }
  }]);
  return SecondParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/FractionOfSecondParser.js








var FractionOfSecondParser = /*#__PURE__*/function (_Parser) {
  _inherits(FractionOfSecondParser, _Parser);
  var _super = _createSuper(FractionOfSecondParser);
  function FractionOfSecondParser() {
    var _this;
    _classCallCheck(this, FractionOfSecondParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 30);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  _createClass(FractionOfSecondParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      var valueCallback = function valueCallback(value) {
        return Math.floor(value * Math.pow(10, -token.length + 3));
      };
      return mapValue(parseNDigits(token.length, dateString), valueCallback);
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMilliseconds(value);
      return date;
    }
  }]);
  return FractionOfSecondParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneWithZParser.js








 // Timezone (ISO-8601. +00:00 is `'Z'`)
var ISOTimezoneWithZParser = /*#__PURE__*/function (_Parser) {
  _inherits(ISOTimezoneWithZParser, _Parser);
  var _super = _createSuper(ISOTimezoneWithZParser);
  function ISOTimezoneWithZParser() {
    var _this;
    _classCallCheck(this, ISOTimezoneWithZParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 10);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['t', 'T', 'x']);
    return _this;
  }
  _createClass(ISOTimezoneWithZParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      switch (token) {
        case 'X':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case 'XX':
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case 'XXXX':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case 'XXXXX':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case 'XXX':
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneWithZParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneParser.js








 // Timezone (ISO-8601)
var ISOTimezoneParser = /*#__PURE__*/function (_Parser) {
  _inherits(ISOTimezoneParser, _Parser);
  var _super = _createSuper(ISOTimezoneParser);
  function ISOTimezoneParser() {
    var _this;
    _classCallCheck(this, ISOTimezoneParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 10);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", ['t', 'T', 'X']);
    return _this;
  }
  _createClass(ISOTimezoneParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      switch (token) {
        case 'x':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case 'xx':
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case 'xxxx':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case 'xxxxx':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case 'xxx':
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/TimestampSecondsParser.js








var TimestampSecondsParser = /*#__PURE__*/function (_Parser) {
  _inherits(TimestampSecondsParser, _Parser);
  var _super = _createSuper(TimestampSecondsParser);
  function TimestampSecondsParser() {
    var _this;
    _classCallCheck(this, TimestampSecondsParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 40);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", '*');
    return _this;
  }
  _createClass(TimestampSecondsParser, [{
    key: "parse",
    value: function parse(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      return [new Date(value * 1000), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampSecondsParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/TimestampMillisecondsParser.js








var TimestampMillisecondsParser = /*#__PURE__*/function (_Parser) {
  _inherits(TimestampMillisecondsParser, _Parser);
  var _super = _createSuper(TimestampMillisecondsParser);
  function TimestampMillisecondsParser() {
    var _this;
    _classCallCheck(this, TimestampMillisecondsParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "priority", 20);
    (0,defineProperty/* default */.A)((0,assertThisInitialized/* default */.A)(_this), "incompatibleTokens", '*');
    return _this;
  }
  _createClass(TimestampMillisecondsParser, [{
    key: "parse",
    value: function parse(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      return [new Date(value), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampMillisecondsParser;
}(Parser);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/_lib/parsers/index.js































/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
 * |  p  |                                |  P  |                                |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 */
var parsers = {
  G: new EraParser(),
  y: new YearParser(),
  Y: new LocalWeekYearParser(),
  R: new ISOWeekYearParser(),
  u: new ExtendedYearParser(),
  Q: new QuarterParser(),
  q: new StandAloneQuarterParser(),
  M: new MonthParser(),
  L: new StandAloneMonthParser(),
  w: new LocalWeekParser(),
  I: new ISOWeekParser(),
  d: new DateParser(),
  D: new DayOfYearParser(),
  E: new DayParser(),
  e: new LocalDayParser(),
  c: new StandAloneLocalDayParser(),
  i: new ISODayParser(),
  a: new AMPMParser(),
  b: new AMPMMidnightParser(),
  B: new DayPeriodParser(),
  h: new Hour1to12Parser(),
  H: new Hour0to23Parser(),
  K: new Hour0To11Parser(),
  k: new Hour1To24Parser(),
  m: new MinuteParser(),
  s: new SecondParser(),
  S: new FractionOfSecondParser(),
  X: new ISOTimezoneWithZParser(),
  x: new ISOTimezoneParser(),
  t: new TimestampSecondsParser(),
  T: new TimestampMillisecondsParser()
};
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/parse/index.js













 // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var notWhitespaceRegExp = /\S/;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;

/**
 * @name parse
 * @category Common Helpers
 * @summary Parse the date.
 *
 * @description
 * Return the date parsed from string using the given format string.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
 * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
 *
 * ```javascript
 * parse('23 AM', 'HH a', new Date())
 * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
 * ```
 *
 * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Seconds timestamp               |  40 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 001, ..., 999                |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
 * |                                 |     | PP      | May 29, 1453                      |       |
 * |                                 |     | PPP     | May 29th, 1453                    |       |
 * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
 * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
 * |                                 |     | pp      | 12:00:00 AM                       |       |
 * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
 * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
 * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
 * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `parse` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
 *
 *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
 *
 *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
 *
 *    while `uu` will just assign the year as is:
 *
 *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
 *
 *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
 *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
 *    on the given locale.
 *
 *    using `en-US` locale: `P` => `MM/dd/yyyy`
 *    using `en-US` locale: `p` => `hh:mm a`
 *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
 *    using `pt-BR` locale: `p` => `HH:mm`
 *
 * Values will be assigned to the date in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
 * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.
 *
 * `referenceDate` must be passed for correct work of the function.
 * If you're not sure which `referenceDate` to supply, create a new instance of Date:
 * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
 * In this case parsing will be done in the context of the current date.
 * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,
 * then `Invalid Date` will be returned.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
 *
 * If parsing failed, `Invalid Date` will be returned.
 * Invalid Date is a Date, whose time value is NaN.
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {String} dateString - the string to parse
 * @param {String} formatString - the string of tokens
 * @param {Date|Number} referenceDate - defines values missing from the parsed dateString
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @returns {Date} the parsed date
 * @throws {TypeError} 3 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} `options.locale` must contain `match` property
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Parse 11 February 2014 from middle-endian format:
 * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
 * //=> Tue Feb 11 2014 00:00:00
 *
 * @example
 * // Parse 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
 *   locale: eo
 * })
 * //=> Sun Feb 28 2010 00:00:00
 */
function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  (0,requiredArgs/* default */.A)(3, arguments);
  var dateString = String(dirtyDateString);
  var formatString = String(dirtyFormatString);
  var defaultOptions = (0,_lib_defaultOptions/* getDefaultOptions */.q)();
  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale/* default */.A;
  if (!locale.match) {
    throw new RangeError('locale must contain match property');
  }
  var firstWeekContainsDate = (0,toInteger/* default */.A)((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var weekStartsOn = (0,toInteger/* default */.A)((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  if (formatString === '') {
    if (dateString === '') {
      return (0,toDate["default"])(dirtyReferenceDate);
    } else {
      return new Date(NaN);
    }
  }
  var subFnOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale
  };

  // If timezone isn't specified, it will be set to the system timezone
  var setters = [new DateToSystemTimezoneSetter()];
  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];
    if (firstCharacter in longFormatters/* default */.A) {
      var longFormatter = longFormatters/* default */.A[firstCharacter];
      return longFormatter(substring, locale.formatLong);
    }
    return substring;
  }).join('').match(formattingTokensRegExp);
  var usedTokens = [];
  var _iterator = _createForOfIteratorHelper(tokens),
    _step;
  try {
    var _loop = function _loop() {
      var token = _step.value;
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && (0,protectedTokens/* isProtectedWeekYearToken */.xM)(token)) {
        (0,protectedTokens/* throwProtectedError */.lJ)(token, formatString, dirtyDateString);
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && (0,protectedTokens/* isProtectedDayOfYearToken */.ef)(token)) {
        (0,protectedTokens/* throwProtectedError */.lJ)(token, formatString, dirtyDateString);
      }
      var firstCharacter = token[0];
      var parser = parsers[firstCharacter];
      if (parser) {
        var incompatibleTokens = parser.incompatibleTokens;
        if (Array.isArray(incompatibleTokens)) {
          var incompatibleToken = usedTokens.find(function (usedToken) {
            return incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter;
          });
          if (incompatibleToken) {
            throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
          }
        } else if (parser.incompatibleTokens === '*' && usedTokens.length > 0) {
          throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
        }
        usedTokens.push({
          token: firstCharacter,
          fullToken: token
        });
        var parseResult = parser.run(dateString, token, locale.match, subFnOptions);
        if (!parseResult) {
          return {
            v: new Date(NaN)
          };
        }
        setters.push(parseResult.setter);
        dateString = parseResult.rest;
      } else {
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
        }

        // Replace two single quote characters with one single quote character
        if (token === "''") {
          token = "'";
        } else if (firstCharacter === "'") {
          token = cleanEscapedString(token);
        }

        // Cut token from string, or, if string doesn't match the token, return Invalid Date
        if (dateString.indexOf(token) === 0) {
          dateString = dateString.slice(token.length);
        } else {
          return {
            v: new Date(NaN)
          };
        }
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _ret = _loop();
      if ((0,esm_typeof/* default */.A)(_ret) === "object") return _ret.v;
    }

    // Check if the remaining input contains something other than whitespace
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
    return new Date(NaN);
  }
  var uniquePrioritySetters = setters.map(function (setter) {
    return setter.priority;
  }).sort(function (a, b) {
    return b - a;
  }).filter(function (priority, index, array) {
    return array.indexOf(priority) === index;
  }).map(function (priority) {
    return setters.filter(function (setter) {
      return setter.priority === priority;
    }).sort(function (a, b) {
      return b.subPriority - a.subPriority;
    });
  }).map(function (setterArray) {
    return setterArray[0];
  });
  var date = (0,toDate["default"])(dirtyReferenceDate);
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }

  // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  var utcDate = (0,subMilliseconds/* default */.A)(date, (0,getTimezoneOffsetInMilliseconds/* default */.A)(date));
  var flags = {};
  var _iterator2 = _createForOfIteratorHelper(uniquePrioritySetters),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var setter = _step2.value;
      if (!setter.validate(utcDate, subFnOptions)) {
        return new Date(NaN);
      }
      var result = setter.set(utcDate, flags, subFnOptions);
      // Result is tuple (date, flags)
      if (Array.isArray(result)) {
        utcDate = result[0];
        assign_assign(flags, result[1]);
        // Result is date
      } else {
        utcDate = result;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return utcDate;
}
function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

/***/ }),

/***/ 5670:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/parseISO/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ parseISO)
/* harmony export */ });
/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/index.js */ 4019);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);



/**
 * @name parseISO
 * @category Common Helpers
 * @summary Parse ISO string
 *
 * @description
 * Parse the given string in ISO 8601 format and return an instance of Date.
 *
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 *
 * If the argument isn't a string, the function cannot parse the string or
 * the values are invalid, it returns Invalid Date.
 *
 * @param {String} argument - the value to convert
 * @param {Object} [options] - an object with options.
 * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * const result = parseISO('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert string '+02014101' to date,
 * // if the additional number of digits in the extended year format is 1:
 * const result = parseISO('+02014101', { additionalDigits: 1 })
 * //=> Fri Apr 11 2014 00:00:00
 */
function parseISO(argument, options) {
  var _options$additionalDi;
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var additionalDigits = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);
  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
    throw new RangeError('additionalDigits must be 0, 1 or 2');
  }
  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {
    return new Date(NaN);
  }
  var dateStrings = splitDateString(argument);
  var date;
  if (dateStrings.date) {
    var parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }
  if (!date || isNaN(date.getTime())) {
    return new Date(NaN);
  }
  var timestamp = date.getTime();
  var time = 0;
  var offset;
  if (dateStrings.time) {
    time = parseTime(dateStrings.time);
    if (isNaN(time)) {
      return new Date(NaN);
    }
  }
  if (dateStrings.timezone) {
    offset = parseTimezone(dateStrings.timezone);
    if (isNaN(offset)) {
      return new Date(NaN);
    }
  } else {
    var dirtyDate = new Date(timestamp + time);
    // js parsed string assuming it's in UTC timezone
    // but we need it to be parsed in our timezone
    // so we use utc values to build date in our timezone.
    // Year values from 0 to 99 map to the years 1900 to 1999
    // so set year explicitly with setFullYear.
    var result = new Date(0);
    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
    return result;
  }
  return new Date(timestamp + time + offset);
}
var patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/
};
var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
function splitDateString(dateString) {
  var dateStrings = {};
  var array = dateString.split(patterns.dateTimeDelimiter);
  var timeString;

  // The regex match should only return at maximum two array elements.
  // [date], [time], or [date, time].
  if (array.length > 2) {
    return dateStrings;
  }
  if (/:/.test(array[0])) {
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(dateStrings.date.length, dateString.length);
    }
  }
  if (timeString) {
    var token = patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], '');
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }
  return dateStrings;
}
function parseYear(dateString, additionalDigits) {
  var regex = new RegExp('^(?:(\\d{4}|[+-]\\d{' + (4 + additionalDigits) + '})|(\\d{2}|[+-]\\d{' + (2 + additionalDigits) + '})$)');
  var captures = dateString.match(regex);
  // Invalid ISO-formatted year
  if (!captures) return {
    year: NaN,
    restDateString: ''
  };
  var year = captures[1] ? parseInt(captures[1]) : null;
  var century = captures[2] ? parseInt(captures[2]) : null;

  // either year or century is null, not both
  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length)
  };
}
function parseDate(dateString, year) {
  // Invalid ISO-formatted year
  if (year === null) return new Date(NaN);
  var captures = dateString.match(dateRegex);
  // Invalid ISO-formatted string
  if (!captures) return new Date(NaN);
  var isWeekDate = !!captures[4];
  var dayOfYear = parseDateUnit(captures[1]);
  var month = parseDateUnit(captures[2]) - 1;
  var day = parseDateUnit(captures[3]);
  var week = parseDateUnit(captures[4]);
  var dayOfWeek = parseDateUnit(captures[5]) - 1;
  if (isWeekDate) {
    if (!validateWeekDate(year, week, dayOfWeek)) {
      return new Date(NaN);
    }
    return dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    var date = new Date(0);
    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
      return new Date(NaN);
    }
    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}
function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}
function parseTime(timeString) {
  var captures = timeString.match(timeRegex);
  if (!captures) return NaN; // Invalid ISO-formatted time

  var hours = parseTimeUnit(captures[1]);
  var minutes = parseTimeUnit(captures[2]);
  var seconds = parseTimeUnit(captures[3]);
  if (!validateTime(hours, minutes, seconds)) {
    return NaN;
  }
  return hours * _constants_index_js__WEBPACK_IMPORTED_MODULE_2__/* .millisecondsInHour */ .s0 + minutes * _constants_index_js__WEBPACK_IMPORTED_MODULE_2__/* .millisecondsInMinute */ .Cg + seconds * 1000;
}
function parseTimeUnit(value) {
  return value && parseFloat(value.replace(',', '.')) || 0;
}
function parseTimezone(timezoneString) {
  if (timezoneString === 'Z') return 0;
  var captures = timezoneString.match(timezoneRegex);
  if (!captures) return 0;
  var sign = captures[1] === '+' ? -1 : 1;
  var hours = parseInt(captures[2]);
  var minutes = captures[3] && parseInt(captures[3]) || 0;
  if (!validateTimezone(hours, minutes)) {
    return NaN;
  }
  return sign * (hours * _constants_index_js__WEBPACK_IMPORTED_MODULE_2__/* .millisecondsInHour */ .s0 + minutes * _constants_index_js__WEBPACK_IMPORTED_MODULE_2__/* .millisecondsInMinute */ .Cg);
}
function dayOfISOWeekYear(isoWeekYear, week, day) {
  var date = new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  var fourthOfJanuaryDay = date.getUTCDay() || 7;
  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

// Validation functions

// February is null to handle the leap year (using ||)
var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
function validateDate(year, month, date) {
  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
}
function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
}
function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}
function validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }
  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}
function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}

/***/ }),

/***/ 2402:
/*!******************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/set/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ set)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ 2284);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../setMonth/index.js */ 9864);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);





/**
 * @name set
 * @category Common Helpers
 * @summary Set date values to a given date.
 *
 * @description
 * Set date values to a given date.
 *
 * Sets time values to date from object `values`.
 * A value is not set if it is undefined or null or doesn't exist in `values`.
 *
 * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts
 * to use native `Date#setX` methods. If you use this function, you may not want to include the
 * other `setX` functions that date-fns provides if you are concerned about the bundle size.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Object} values - an object with options
 * @param {Number} [values.year] - the number of years to be set
 * @param {Number} [values.month] - the number of months to be set
 * @param {Number} [values.date] - the number of days to be set
 * @param {Number} [values.hours] - the number of hours to be set
 * @param {Number} [values.minutes] - the number of minutes to be set
 * @param {Number} [values.seconds] - the number of seconds to be set
 * @param {Number} [values.milliseconds] - the number of milliseconds to be set
 * @returns {Date} the new date with options set
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `values` must be an object
 *
 * @example
 * // Transform 1 September 2014 into 20 October 2015 in a single line:
 * const result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })
 * //=> Tue Oct 20 2015 00:00:00
 *
 * @example
 * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:
 * const result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })
 * //=> Mon Sep 01 2014 12:23:45
 */
function set(dirtyDate, values) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  if ((0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(values) !== 'object' || values === null) {
    throw new RangeError('values parameter must be an object');
  }
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);

  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }
  if (values.year != null) {
    date.setFullYear(values.year);
  }
  if (values.month != null) {
    date = (0,_setMonth_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, values.month);
  }
  if (values.date != null) {
    date.setDate((0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A)(values.date));
  }
  if (values.hours != null) {
    date.setHours((0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A)(values.hours));
  }
  if (values.minutes != null) {
    date.setMinutes((0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A)(values.minutes));
  }
  if (values.seconds != null) {
    date.setSeconds((0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A)(values.seconds));
  }
  if (values.milliseconds != null) {
    date.setMilliseconds((0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A)(values.milliseconds));
  }
  return date;
}

/***/ }),

/***/ 3701:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/setHours/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ setHours)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name setHours
 * @category Hour Helpers
 * @summary Set the hours to the given date.
 *
 * @description
 * Set the hours to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} hours - the hours of the new date
 * @returns {Date} the new date with the hours set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 4 hours to 1 September 2014 11:30:00:
 * const result = setHours(new Date(2014, 8, 1, 11, 30), 4)
 * //=> Mon Sep 01 2014 04:30:00
 */
function setHours(dirtyDate, dirtyHours) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var hours = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyHours);
  date.setHours(hours);
  return date;
}

/***/ }),

/***/ 2231:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/setMinutes/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ setMinutes)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name setMinutes
 * @category Minute Helpers
 * @summary Set the minutes to the given date.
 *
 * @description
 * Set the minutes to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} minutes - the minutes of the new date
 * @returns {Date} the new date with the minutes set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 45 minutes to 1 September 2014 11:30:40:
 * const result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:45:40
 */
function setMinutes(dirtyDate, dirtyMinutes) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var minutes = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyMinutes);
  date.setMinutes(minutes);
  return date;
}

/***/ }),

/***/ 9864:
/*!***********************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/setMonth/index.js + 1 modules ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ setMonth)
});

// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/toInteger/index.js
var toInteger = __webpack_require__(7668);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/toDate/index.js
var toDate = __webpack_require__(9699);
// EXTERNAL MODULE: ./node_modules/react-datepicker/node_modules/date-fns/esm/_lib/requiredArgs/index.js
var requiredArgs = __webpack_require__(1151);
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/getDaysInMonth/index.js


/**
 * @name getDaysInMonth
 * @category Month Helpers
 * @summary Get the number of days in a month of the given date.
 *
 * @description
 * Get the number of days in a month of the given date.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the number of days in a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // How many days are in February 2000?
 * const result = getDaysInMonth(new Date(2000, 1))
 * //=> 29
 */
function getDaysInMonth(dirtyDate) {
  (0,requiredArgs/* default */.A)(1, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth = new Date(0);
  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth.setHours(0, 0, 0, 0);
  return lastDayOfMonth.getDate();
}
;// ./node_modules/react-datepicker/node_modules/date-fns/esm/setMonth/index.js




/**
 * @name setMonth
 * @category Month Helpers
 * @summary Set the month to the given date.
 *
 * @description
 * Set the month to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} month - the month of the new date
 * @returns {Date} the new date with the month set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set February to 1 September 2014:
 * const result = setMonth(new Date(2014, 8, 1), 1)
 * //=> Sat Feb 01 2014 00:00:00
 */
function setMonth(dirtyDate, dirtyMonth) {
  (0,requiredArgs/* default */.A)(2, arguments);
  var date = (0,toDate["default"])(dirtyDate);
  var month = (0,toInteger/* default */.A)(dirtyMonth);
  var year = date.getFullYear();
  var day = date.getDate();
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);
  // Set the last day of the new month
  // if the original date was the last day of the longer month
  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}

/***/ }),

/***/ 5618:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/setQuarter/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ setQuarter)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../setMonth/index.js */ 9864);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);




/**
 * @name setQuarter
 * @category Quarter Helpers
 * @summary Set the year quarter to the given date.
 *
 * @description
 * Set the year quarter to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} quarter - the quarter of the new date
 * @returns {Date} the new date with the quarter set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set the 2nd quarter to 2 July 2014:
 * const result = setQuarter(new Date(2014, 6, 2), 2)
 * //=> Wed Apr 02 2014 00:00:00
 */
function setQuarter(dirtyDate, dirtyQuarter) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var quarter = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyQuarter);
  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
  var diff = quarter - oldQuarter;
  return (0,_setMonth_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, date.getMonth() + diff * 3);
}

/***/ }),

/***/ 8991:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/setSeconds/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ setSeconds)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name setSeconds
 * @category Second Helpers
 * @summary Set the seconds to the given date.
 *
 * @description
 * Set the seconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} seconds - the seconds of the new date
 * @returns {Date} the new date with the seconds set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 45 seconds to 1 September 2014 11:30:40:
 * const result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:30:45
 */
function setSeconds(dirtyDate, dirtySeconds) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var seconds = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtySeconds);
  date.setSeconds(seconds);
  return date;
}

/***/ }),

/***/ 2455:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/setYear/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ setYear)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name setYear
 * @category Year Helpers
 * @summary Set the year to the given date.
 *
 * @description
 * Set the year to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} year - the year of the new date
 * @returns {Date} the new date with the year set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set year 2013 to 1 September 2014:
 * const result = setYear(new Date(2014, 8, 1), 2013)
 * //=> Sun Sep 01 2013 00:00:00
 */
function setYear(dirtyDate, dirtyYear) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var year = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyYear);

  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }
  date.setFullYear(year);
  return date;
}

/***/ }),

/***/ 4495:
/*!*************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/startOfDay/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfDay)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */
function startOfDay(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ 4631:
/*!***************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/startOfMonth/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfMonth)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name startOfMonth
 * @category Month Helpers
 * @summary Return the start of a month for the given date.
 *
 * @description
 * Return the start of a month for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a month for 2 September 2014 11:55:00:
 * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfMonth(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ 3501:
/*!*****************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/startOfQuarter/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfQuarter)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name startOfQuarter
 * @category Quarter Helpers
 * @summary Return the start of a year quarter for the given date.
 *
 * @description
 * Return the start of a year quarter for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a quarter
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a quarter for 2 September 2014 11:55:00:
 * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Jul 01 2014 00:00:00
 */
function startOfQuarter(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var currentMonth = date.getMonth();
  var month = currentMonth - currentMonth % 3;
  date.setMonth(month, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ 5163:
/*!**************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/startOfWeek/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfWeek)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);
/* harmony import */ var _lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/defaultOptions/index.js */ 8458);




/**
 * @name startOfWeek
 * @category Week Helpers
 * @summary Return the start of a week for the given date.
 *
 * @description
 * Return the start of a week for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the start of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The start of a week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var defaultOptions = (0,_lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__/* .getDefaultOptions */ .q)();
  var weekStartsOn = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setDate(date.getDate() - diff);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ 8918:
/*!**************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/startOfYear/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ 9699);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name startOfYear
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */
function startOfYear(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var cleanDate = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var date = new Date(0);
  date.setFullYear(cleanDate.getFullYear(), 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ 443:
/*!**********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/subDays/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ subDays)
/* harmony export */ });
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addDays/index.js */ 7806);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);



/**
 * @name subDays
 * @category Day Helpers
 * @summary Subtract the specified number of days from the given date.
 *
 * @description
 * Subtract the specified number of days from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the days subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 10 days from 1 September 2014:
 * const result = subDays(new Date(2014, 8, 1), 10)
 * //=> Fri Aug 22 2014 00:00:00
 */
function subDays(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, -amount);
}

/***/ }),

/***/ 670:
/*!******************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/subMilliseconds/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ subMilliseconds)
/* harmony export */ });
/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addMilliseconds/index.js */ 7871);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);



/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */
function subMilliseconds(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A)(dirtyDate, -amount);
}

/***/ }),

/***/ 5231:
/*!************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/subMonths/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ subMonths)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addMonths/index.js */ 3214);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name subMonths
 * @category Month Helpers
 * @summary Subtract the specified number of months from the given date.
 *
 * @description
 * Subtract the specified number of months from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 months from 1 February 2015:
 * const result = subMonths(new Date(2015, 1, 1), 5)
 * //=> Mon Sep 01 2014 00:00:00
 */
function subMonths(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addMonths_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, -amount);
}

/***/ }),

/***/ 3801:
/*!**************************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/subQuarters/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ subQuarters)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addQuarters/index.js */ 8980);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name subQuarters
 * @category Quarter Helpers
 * @summary Subtract the specified number of year quarters from the given date.
 *
 * @description
 * Subtract the specified number of year quarters from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the quarters subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 3 quarters from 1 September 2014:
 * const result = subQuarters(new Date(2014, 8, 1), 3)
 * //=> Sun Dec 01 2013 00:00:00
 */
function subQuarters(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addQuarters_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, -amount);
}

/***/ }),

/***/ 5377:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/subWeeks/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ subWeeks)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addWeeks/index.js */ 2454);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name subWeeks
 * @category Week Helpers
 * @summary Subtract the specified number of weeks from the given date.
 *
 * @description
 * Subtract the specified number of weeks from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the weeks subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 4 weeks from 1 September 2014:
 * const result = subWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Aug 04 2014 00:00:00
 */
function subWeeks(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, -amount);
}

/***/ }),

/***/ 486:
/*!***********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/subYears/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ subYears)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ 7668);
/* harmony import */ var _addYears_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addYears/index.js */ 8733);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);



/**
 * @name subYears
 * @category Year Helpers
 * @summary Subtract the specified number of years from the given date.
 *
 * @description
 * Subtract the specified number of years from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 years from 1 September 2014:
 * const result = subYears(new Date(2014, 8, 1), 5)
 * //=> Tue Sep 01 2009 00:00:00
 */
function subYears(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(dirtyAmount);
  return (0,_addYears_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, -amount);
}

/***/ }),

/***/ 9699:
/*!*********************************************************************************!*\
  !*** ./node_modules/react-datepicker/node_modules/date-fns/esm/toDate/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ toDate)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ 2284);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1151);


/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */
function toDate(argument) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(1, arguments);
  var argStr = Object.prototype.toString.call(argument);

  // Clone the date
  if (argument instanceof Date || (0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(argument) === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      // eslint-disable-next-line no-console
      console.warn(new Error().stack);
    }
    return new Date(NaN);
  }
}

/***/ }),

/***/ 115:
/*!**************************************************!*\
  !*** ./node_modules/react-fast-compare/index.js ***!
  \**************************************************/
/***/ ((module) => {

/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */

var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;

// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

function equal(a, b) {
  // START: fast-deep-equal es6/index.js 3.1.3
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;

    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    // START: Modifications:
    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
    //    to co-exist with es5.
    // 2. Replace `for of` with es5 compliant iteration using `for`.
    //    Basically, take:
    //
    //    ```js
    //    for (i of a.entries())
    //      if (!b.has(i[0])) return false;
    //    ```
    //
    //    ... and convert to:
    //
    //    ```js
    //    it = a.entries();
    //    while (!(i = it.next()).done)
    //      if (!b.has(i.value[0])) return false;
    //    ```
    //
    //    **Note**: `i` access switches to `i.value`.
    var it;
    if (hasMap && (a instanceof Map) && (b instanceof Map)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!equal(i.value[1], b.get(i.value[0]))) return false;
      return true;
    }

    if (hasSet && (a instanceof Set) && (b instanceof Set)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      return true;
    }
    // END: Modifications

    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (a[i] !== b[i]) return false;
      return true;
    }

    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    // START: Modifications:
    // Apply guards for `Object.create(null)` handling. See:
    // - https://github.com/FormidableLabs/react-fast-compare/issues/64
    // - https://github.com/epoberezkin/fast-deep-equal/issues/49
    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();
    // END: Modifications

    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;)
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    // END: fast-deep-equal

    // START: react-fast-compare
    // custom handling for DOM elements
    if (hasElementType && a instanceof Element) return false;

    // custom handling for React/Preact
    for (i = length; i-- !== 0;) {
      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner
        // Preact-specific: avoid traversing Preact elements' __v and __o
        //    __v = $_original / $_vnode
        //    __o = $_owner
        // These properties contain circular references and are not needed when
        // comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of elements

        continue;
      }

      // all other properties should be traversed as usual
      if (!equal(a[keys[i]], b[keys[i]])) return false;
    }
    // END: react-fast-compare

    // START: fast-deep-equal
    return true;
  }

  return a !== a && b !== b;
}
// end fast-deep-equal

module.exports = function isEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if (((error.message || '').match(/stack|recursion/i))) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('react-fast-compare cannot handle circular refs');
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};


/***/ }),

/***/ 2799:
/*!**************************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.production.min.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),

/***/ 4363:
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(/*! ./cjs/react-is.production.min.js */ 2799);
} else {}


/***/ }),

/***/ 1345:
/*!****************************************************************************!*\
  !*** ./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   polyfill: () => (/* binding */ polyfill)
/* harmony export */ });
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}




/***/ }),

/***/ 3908:
/*!***************************************************************************!*\
  !*** ./node_modules/react-onclickoutside/dist/react-onclickoutside.es.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IGNORE_CLASS_NAME: () => (/* binding */ IGNORE_CLASS_NAME),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 1594);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ 5206);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}/**
 * Check whether some DOM node is our Component's node.
 */
function isNodeFound(current, componentNode, ignoreClass) {
  if (current === componentNode) {
    return true;
  } // SVG <use/> elements do not technically reside in the rendered DOM, so
  // they do not have classList directly, but they offer a link to their
  // corresponding element, which can have classList. This extra check is for
  // that case.
  // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement
  // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17


  if (current.correspondingElement) {
    return current.correspondingElement.classList.contains(ignoreClass);
  }

  return current.classList.contains(ignoreClass);
}
/**
 * Try to find our node in a hierarchy of nodes, returning the document
 * node as highest node if our node is not found in the path up.
 */

function findHighest(current, componentNode, ignoreClass) {
  if (current === componentNode) {
    return true;
  } // If source=local then this event came from 'somewhere'
  // inside and should be ignored. We could handle this with
  // a layered approach, too, but that requires going back to
  // thinking in terms of Dom node nesting, running counter
  // to React's 'you shouldn't care about the DOM' philosophy.
  // Also cover shadowRoot node by checking current.host


  while (current.parentNode || current.host) {
    // Only check normal node without shadowRoot
    if (current.parentNode && isNodeFound(current, componentNode, ignoreClass)) {
      return true;
    }

    current = current.parentNode || current.host;
  }

  return current;
}
/**
 * Check if the browser scrollbar was clicked
 */

function clickedScrollbar(evt) {
  return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;
}// ideally will get replaced with external dep
// when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in
var testPassiveEventSupport = function testPassiveEventSupport() {
  if (typeof window === 'undefined' || typeof window.addEventListener !== 'function') {
    return;
  }

  var passive = false;
  var options = Object.defineProperty({}, 'passive', {
    get: function get() {
      passive = true;
    }
  });

  var noop = function noop() {};

  window.addEventListener('testPassiveEventSupport', noop, options);
  window.removeEventListener('testPassiveEventSupport', noop, options);
  return passive;
};function autoInc(seed) {
  if (seed === void 0) {
    seed = 0;
  }

  return function () {
    return ++seed;
  };
}

var uid = autoInc();var passiveEventSupport;
var handlersMap = {};
var enabledInstances = {};
var touchEvents = ['touchstart', 'touchmove'];
var IGNORE_CLASS_NAME = 'ignore-react-onclickoutside';
/**
 * Options for addEventHandler and removeEventHandler
 */

function getEventHandlerOptions(instance, eventName) {
  var handlerOptions = {};
  var isTouchEvent = touchEvents.indexOf(eventName) !== -1;

  if (isTouchEvent && passiveEventSupport) {
    handlerOptions.passive = !instance.props.preventDefault;
  }

  return handlerOptions;
}
/**
 * This function generates the HOC function that you'll use
 * in order to impart onOutsideClick listening to an
 * arbitrary component. It gets called at the end of the
 * bootstrapping code to yield an instance of the
 * onClickOutsideHOC function defined inside setupHOC().
 */


function onClickOutsideHOC(WrappedComponent, config) {
  var _class, _temp;

  var componentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
  return _temp = _class = /*#__PURE__*/function (_Component) {
    _inheritsLoose(onClickOutside, _Component);

    function onClickOutside(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.__outsideClickHandler = function (event) {
        if (typeof _this.__clickOutsideHandlerProp === 'function') {
          _this.__clickOutsideHandlerProp(event);

          return;
        }

        var instance = _this.getInstance();

        if (typeof instance.props.handleClickOutside === 'function') {
          instance.props.handleClickOutside(event);
          return;
        }

        if (typeof instance.handleClickOutside === 'function') {
          instance.handleClickOutside(event);
          return;
        }

        throw new Error("WrappedComponent: " + componentName + " lacks a handleClickOutside(event) function for processing outside click events.");
      };

      _this.__getComponentNode = function () {
        var instance = _this.getInstance();

        if (config && typeof config.setClickOutsideRef === 'function') {
          return config.setClickOutsideRef()(instance);
        }

        if (typeof instance.setClickOutsideRef === 'function') {
          return instance.setClickOutsideRef();
        }

        return (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.findDOMNode)(instance);
      };

      _this.enableOnClickOutside = function () {
        if (typeof document === 'undefined' || enabledInstances[_this._uid]) {
          return;
        }

        if (typeof passiveEventSupport === 'undefined') {
          passiveEventSupport = testPassiveEventSupport();
        }

        enabledInstances[_this._uid] = true;
        var events = _this.props.eventTypes;

        if (!events.forEach) {
          events = [events];
        }

        handlersMap[_this._uid] = function (event) {
          if (_this.componentNode === null) return;
          if (_this.initTimeStamp > event.timeStamp) return;

          if (_this.props.preventDefault) {
            event.preventDefault();
          }

          if (_this.props.stopPropagation) {
            event.stopPropagation();
          }

          if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;
          var current = event.composed && event.composedPath && event.composedPath().shift() || event.target;

          if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {
            return;
          }

          _this.__outsideClickHandler(event);
        };

        events.forEach(function (eventName) {
          document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_assertThisInitialized(_this), eventName));
        });
      };

      _this.disableOnClickOutside = function () {
        delete enabledInstances[_this._uid];
        var fn = handlersMap[_this._uid];

        if (fn && typeof document !== 'undefined') {
          var events = _this.props.eventTypes;

          if (!events.forEach) {
            events = [events];
          }

          events.forEach(function (eventName) {
            return document.removeEventListener(eventName, fn, getEventHandlerOptions(_assertThisInitialized(_this), eventName));
          });
          delete handlersMap[_this._uid];
        }
      };

      _this.getRef = function (ref) {
        return _this.instanceRef = ref;
      };

      _this._uid = uid();
      _this.initTimeStamp = performance.now();
      return _this;
    }
    /**
     * Access the WrappedComponent's instance.
     */


    var _proto = onClickOutside.prototype;

    _proto.getInstance = function getInstance() {
      if (WrappedComponent.prototype && !WrappedComponent.prototype.isReactComponent) {
        return this;
      }

      var ref = this.instanceRef;
      return ref.getInstance ? ref.getInstance() : ref;
    };

    /**
     * Add click listeners to the current document,
     * linked to this component's state.
     */
    _proto.componentDidMount = function componentDidMount() {
      // If we are in an environment without a DOM such
      // as shallow rendering or snapshots then we exit
      // early to prevent any unhandled errors being thrown.
      if (typeof document === 'undefined' || !document.createElement) {
        return;
      }

      var instance = this.getInstance();

      if (config && typeof config.handleClickOutside === 'function') {
        this.__clickOutsideHandlerProp = config.handleClickOutside(instance);

        if (typeof this.__clickOutsideHandlerProp !== 'function') {
          throw new Error("WrappedComponent: " + componentName + " lacks a function for processing outside click events specified by the handleClickOutside config option.");
        }
      }

      this.componentNode = this.__getComponentNode(); // return early so we dont initiate onClickOutside

      if (this.props.disableOnClickOutside) return;
      this.enableOnClickOutside();
    };

    _proto.componentDidUpdate = function componentDidUpdate() {
      this.componentNode = this.__getComponentNode();
    }
    /**
     * Remove all document's event listeners for this component
     */
    ;

    _proto.componentWillUnmount = function componentWillUnmount() {
      this.disableOnClickOutside();
    }
    /**
     * Can be called to explicitly enable event listening
     * for clicks and touches outside of this element.
     */
    ;

    /**
     * Pass-through render
     */
    _proto.render = function render() {
      // eslint-disable-next-line no-unused-vars
      var _this$props = this.props;
          _this$props.excludeScrollbar;
          var props = _objectWithoutPropertiesLoose(_this$props, ["excludeScrollbar"]);

      if (WrappedComponent.prototype && WrappedComponent.prototype.isReactComponent) {
        props.ref = this.getRef;
      } else {
        props.wrappedRef = this.getRef;
      }

      props.disableOnClickOutside = this.disableOnClickOutside;
      props.enableOnClickOutside = this.enableOnClickOutside;
      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(WrappedComponent, props);
    };

    return onClickOutside;
  }(react__WEBPACK_IMPORTED_MODULE_0__.Component), _class.displayName = "OnClickOutside(" + componentName + ")", _class.defaultProps = {
    eventTypes: ['mousedown', 'touchstart'],
    excludeScrollbar: config && config.excludeScrollbar || false,
    outsideClickIgnoreClass: IGNORE_CLASS_NAME,
    preventDefault: false,
    stopPropagation: false
  }, _class.getClass = function () {
    return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;
  }, _temp;
}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (onClickOutsideHOC);

/***/ }),

/***/ 2430:
/*!*****************************************************************!*\
  !*** ./node_modules/react-popper/lib/esm/index.js + 59 modules ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Manager: () => (/* reexport */ Manager),
  Popper: () => (/* reexport */ Popper),
  Reference: () => (/* reexport */ Reference),
  usePopper: () => (/* reexport */ usePopper)
});

// EXTERNAL MODULE: external "React"
var external_React_ = __webpack_require__(1594);
;// ./node_modules/react-popper/lib/esm/Manager.js

var ManagerReferenceNodeContext = external_React_.createContext();
var ManagerReferenceNodeSetterContext = external_React_.createContext();
function Manager(_ref) {
  var children = _ref.children;

  var _React$useState = external_React_.useState(null),
      referenceNode = _React$useState[0],
      setReferenceNode = _React$useState[1];

  var hasUnmounted = external_React_.useRef(false);
  external_React_.useEffect(function () {
    return function () {
      hasUnmounted.current = true;
    };
  }, []);
  var handleSetReferenceNode = external_React_.useCallback(function (node) {
    if (!hasUnmounted.current) {
      setReferenceNode(node);
    }
  }, []);
  return /*#__PURE__*/external_React_.createElement(ManagerReferenceNodeContext.Provider, {
    value: referenceNode
  }, /*#__PURE__*/external_React_.createElement(ManagerReferenceNodeSetterContext.Provider, {
    value: handleSetReferenceNode
  }, children));
}
;// ./node_modules/react-popper/lib/esm/utils.js


/**
 * Takes an argument and if it's an array, returns the first item in the array,
 * otherwise returns the argument. Used for Preact compatibility.
 */
var unwrapArray = function unwrapArray(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
/**
 * Takes a maybe-undefined function and arbitrary args and invokes the function
 * only if it is defined.
 */

var safeInvoke = function safeInvoke(fn) {
  if (typeof fn === 'function') {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return fn.apply(void 0, args);
  }
};
/**
 * Sets a ref using either a ref callback or a ref object
 */

var setRef = function setRef(ref, node) {
  // if its a function call it
  if (typeof ref === 'function') {
    return safeInvoke(ref, node);
  } // otherwise we should treat it as a ref object
  else if (ref != null) {
      ref.current = node;
    }
};
/**
 * Simple ponyfill for Object.fromEntries
 */

var fromEntries = function fromEntries(entries) {
  return entries.reduce(function (acc, _ref) {
    var key = _ref[0],
        value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
/**
 * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs
 */

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? external_React_.useLayoutEffect : external_React_.useEffect;
// EXTERNAL MODULE: external "ReactDOM"
var external_ReactDOM_ = __webpack_require__(5206);
;// ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}
;// ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js


function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}


;// ./node_modules/@popperjs/core/lib/utils/math.js
var math_max = Math.max;
var math_min = Math.min;
var round = Math.round;
;// ./node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;

  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function (item) {
      return item.brand + "/" + item.version;
    }).join(' ');
  }

  return navigator.userAgent;
}
;// ./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js

function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js




function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }

  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }

  var _ref = isElement(element) ? getWindow(element) : window,
      visualViewport = _ref.visualViewport;

  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x: x,
    y: y
  };
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js




function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js



function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js

function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}
;// ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js









function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
 // Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js



function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js




function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}
;// ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js




/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}
;// ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js








function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());

  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode(element);

  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}
;// ./node_modules/@popperjs/core/lib/enums.js
var enums_top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [enums_top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var enums_placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
;// ./node_modules/@popperjs/core/lib/utils/orderModifiers.js
 // source: https://stackoverflow.com/questions/49875255

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
;// ./node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}
;// ./node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}
;// ./node_modules/@popperjs/core/lib/createPopper.js









var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref) {
        var name = _ref.name,
            _ref$options = _ref.options,
            options = _ref$options === void 0 ? {} : _ref$options,
            effect = _ref.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}
var createPopper = /*#__PURE__*/(/* unused pure expression or super */ null && (popperGenerator())); // eslint-disable-next-line import/no-unused-modules


;// ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js
 // eslint-disable-next-line import/no-unused-modules

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const eventListeners = ({
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
});
;// ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js

function getBasePlacement(placement) {
  return placement.split('-')[0];
}
;// ./node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split('-')[1];
}
;// ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}
;// ./node_modules/@popperjs/core/lib/utils/computeOffsets.js




function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case enums_top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;

      default:
    }
  }

  return offsets;
}
;// ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js


function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_popperOffsets = ({
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
});
;// ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js







 // eslint-disable-next-line import/no-unused-modules

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x,
      y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = enums_top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === enums_top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left || (placement === enums_top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }, getWindow(popper)) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_computeStyles = ({
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
});
;// ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js

 // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function applyStyles_effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_applyStyles = ({
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: applyStyles_effect,
  requires: ['computeStyles']
});
;// ./node_modules/@popperjs/core/lib/modifiers/offset.js

 // eslint-disable-next-line import/no-unused-modules

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = enums_placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_offset = ({
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
});
;// ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
;// ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var getOppositeVariationPlacement_hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return getOppositeVariationPlacement_hash[matched];
  });
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js




function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();

    if (layoutViewport || !layoutViewport && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js




 // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = math_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = math_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle(body || html).direction === 'rtl') {
    x += math_max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}
;// ./node_modules/@popperjs/core/lib/dom-utils/contains.js

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}
;// ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
;// ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js















function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === 'fixed');
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = math_max(rect.top, accRect.top);
    accRect.right = math_min(rect.right, accRect.right);
    accRect.bottom = math_min(rect.bottom, accRect.bottom);
    accRect.left = math_max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
;// ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
;// ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}
;// ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
;// ./node_modules/@popperjs/core/lib/utils/detectOverflow.js








 // eslint-disable-next-line import/no-unused-modules

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$strategy = _options.strategy,
      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [enums_top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}
;// ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js




function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}
;// ./node_modules/@popperjs/core/lib/modifiers/flip.js






 // eslint-disable-next-line import/no-unused-modules

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_flip = ({
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
});
;// ./node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}
;// ./node_modules/@popperjs/core/lib/utils/within.js

function within(min, value, max) {
  return math_max(min, math_min(value, max));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}
;// ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js












function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? enums_top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = offset + overflow[mainSide];
    var max = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? math_min(min, tetherMin) : min, offset, tether ? math_max(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? enums_top : left;

    var _altSide = mainAxis === 'x' ? bottom : right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [enums_top, left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_preventOverflow = ({
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
});
;// ./node_modules/@popperjs/core/lib/modifiers/arrow.js








 // eslint-disable-next-line import/no-unused-modules

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? enums_top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function arrow_effect(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_arrow = ({
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: arrow_effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
});
;// ./node_modules/@popperjs/core/lib/modifiers/hide.js



function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [enums_top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_hide = ({
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
});
;// ./node_modules/@popperjs/core/lib/popper.js










var defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];
var popper_createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules


// EXTERNAL MODULE: ./node_modules/react-fast-compare/index.js
var react_fast_compare = __webpack_require__(115);
var react_fast_compare_default = /*#__PURE__*/__webpack_require__.n(react_fast_compare);
;// ./node_modules/react-popper/lib/esm/usePopper.js





var EMPTY_MODIFIERS = [];
var usePopper = function usePopper(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }

  var prevOptions = external_React_.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || 'bottom',
    strategy: options.strategy || 'absolute',
    modifiers: options.modifiers || EMPTY_MODIFIERS
  };

  var _React$useState = external_React_.useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: '0',
        top: '0'
      },
      arrow: {
        position: 'absolute'
      }
    },
    attributes: {}
  }),
      state = _React$useState[0],
      setState = _React$useState[1];

  var updateStateModifier = external_React_.useMemo(function () {
    return {
      name: 'updateState',
      enabled: true,
      phase: 'write',
      fn: function fn(_ref) {
        var state = _ref.state;
        var elements = Object.keys(state.elements);
        external_ReactDOM_.flushSync(function () {
          setState({
            styles: fromEntries(elements.map(function (element) {
              return [element, state.styles[element] || {}];
            })),
            attributes: fromEntries(elements.map(function (element) {
              return [element, state.attributes[element]];
            }))
          });
        });
      },
      requires: ['computeStyles']
    };
  }, []);
  var popperOptions = external_React_.useMemo(function () {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: 'applyStyles',
        enabled: false
      }])
    };

    if (react_fast_compare_default()(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = external_React_.useRef();
  useIsomorphicLayoutEffect(function () {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function () {
    if (referenceElement == null || popperElement == null) {
      return;
    }

    var createPopper = options.createPopper || popper_createPopper;
    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function () {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};
;// ./node_modules/react-popper/lib/esm/Popper.js





var NOOP = function NOOP() {
  return void 0;
};

var NOOP_PROMISE = function NOOP_PROMISE() {
  return Promise.resolve(null);
};

var Popper_EMPTY_MODIFIERS = [];
function Popper(_ref) {
  var _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,
      _ref$strategy = _ref.strategy,
      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,
      _ref$modifiers = _ref.modifiers,
      modifiers = _ref$modifiers === void 0 ? Popper_EMPTY_MODIFIERS : _ref$modifiers,
      referenceElement = _ref.referenceElement,
      onFirstUpdate = _ref.onFirstUpdate,
      innerRef = _ref.innerRef,
      children = _ref.children;
  var referenceNode = external_React_.useContext(ManagerReferenceNodeContext);

  var _React$useState = external_React_.useState(null),
      popperElement = _React$useState[0],
      setPopperElement = _React$useState[1];

  var _React$useState2 = external_React_.useState(null),
      arrowElement = _React$useState2[0],
      setArrowElement = _React$useState2[1];

  external_React_.useEffect(function () {
    setRef(innerRef, popperElement);
  }, [innerRef, popperElement]);
  var options = external_React_.useMemo(function () {
    return {
      placement: placement,
      strategy: strategy,
      onFirstUpdate: onFirstUpdate,
      modifiers: [].concat(modifiers, [{
        name: 'arrow',
        enabled: arrowElement != null,
        options: {
          element: arrowElement
        }
      }])
    };
  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);

  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),
      state = _usePopper.state,
      styles = _usePopper.styles,
      forceUpdate = _usePopper.forceUpdate,
      update = _usePopper.update;

  var childrenProps = external_React_.useMemo(function () {
    return {
      ref: setPopperElement,
      style: styles.popper,
      placement: state ? state.placement : placement,
      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,
      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,
      arrowProps: {
        style: styles.arrow,
        ref: setArrowElement
      },
      forceUpdate: forceUpdate || NOOP,
      update: update || NOOP_PROMISE
    };
  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);
  return unwrapArray(children)(childrenProps);
}
// EXTERNAL MODULE: ./node_modules/warning/warning.js
var warning = __webpack_require__(9771);
var warning_default = /*#__PURE__*/__webpack_require__.n(warning);
;// ./node_modules/react-popper/lib/esm/Reference.js




function Reference(_ref) {
  var children = _ref.children,
      innerRef = _ref.innerRef;
  var setReferenceNode = external_React_.useContext(ManagerReferenceNodeSetterContext);
  var refHandler = external_React_.useCallback(function (node) {
    setRef(innerRef, node);
    safeInvoke(setReferenceNode, node);
  }, [innerRef, setReferenceNode]); // ran on unmount
  // eslint-disable-next-line react-hooks/exhaustive-deps

  external_React_.useEffect(function () {
    return function () {
      return setRef(innerRef, null);
    };
  }, []);
  external_React_.useEffect(function () {
    warning_default()(Boolean(setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
  }, [setReferenceNode]);
  return unwrapArray(children)({
    ref: refHandler
  });
}
;// ./node_modules/react-popper/lib/esm/index.js
// Public components




 // Public types

/***/ }),

/***/ 8514:
/*!**************************************************************!*\
  !*** ./node_modules/react-transition-group/CSSTransition.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;
exports["default"] = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(/*! prop-types */ 5556));

var _addClass = _interopRequireDefault(__webpack_require__(/*! dom-helpers/class/addClass */ 2963));

var _removeClass = _interopRequireDefault(__webpack_require__(/*! dom-helpers/class/removeClass */ 788));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 1594));

var _Transition = _interopRequireDefault(__webpack_require__(/*! ./Transition */ 495));

var _PropTypes = __webpack_require__(/*! ./utils/PropTypes */ 554);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _addClass.default)(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _removeClass.default)(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
 * using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**.
 */


var CSSTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.onEnter = function (node, appearing) {
      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
          className = _this$getClassNames.className;

      _this.removeClasses(node, 'exit');

      addClass(node, className);

      if (_this.props.onEnter) {
        _this.props.onEnter(node, appearing);
      }
    };

    _this.onEntering = function (node, appearing) {
      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
          activeClassName = _this$getClassNames2.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onEntering) {
        _this.props.onEntering(node, appearing);
      }
    };

    _this.onEntered = function (node, appearing) {
      var appearClassName = _this.getClassNames('appear').doneClassName;

      var enterClassName = _this.getClassNames('enter').doneClassName;

      var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;

      _this.removeClasses(node, appearing ? 'appear' : 'enter');

      addClass(node, doneClassName);

      if (_this.props.onEntered) {
        _this.props.onEntered(node, appearing);
      }
    };

    _this.onExit = function (node) {
      var _this$getClassNames3 = _this.getClassNames('exit'),
          className = _this$getClassNames3.className;

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      addClass(node, className);

      if (_this.props.onExit) {
        _this.props.onExit(node);
      }
    };

    _this.onExiting = function (node) {
      var _this$getClassNames4 = _this.getClassNames('exit'),
          activeClassName = _this$getClassNames4.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onExiting) {
        _this.props.onExiting(node);
      }
    };

    _this.onExited = function (node) {
      var _this$getClassNames5 = _this.getClassNames('exit'),
          doneClassName = _this$getClassNames5.doneClassName;

      _this.removeClasses(node, 'exit');

      addClass(node, doneClassName);

      if (_this.props.onExited) {
        _this.props.onExited(node);
      }
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + '-' : '';
      var className = isStringClassNames ? prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];
      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];
      return {
        className: className,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$getClassNames6 = this.getClassNames(type),
        className = _this$getClassNames6.className,
        activeClassName = _this$getClassNames6.activeClassName,
        doneClassName = _this$getClassNames6.doneClassName;

    className && removeClass(node, className);
    activeClassName && removeClass(node, activeClassName);
    doneClassName && removeClass(node, doneClassName);
  };

  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
    // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.
    if (className) {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
      /* eslint-enable no-unused-expressions */

      addClass(node, className);
    }
  };

  _proto.render = function render() {
    var props = _extends({}, this.props);

    delete props.classNames;
    return _react.default.createElement(_Transition.default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(_react.default.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes =  false ? 0 : {};
var _default = CSSTransition;
exports["default"] = _default;
module.exports = exports["default"];

/***/ }),

/***/ 1369:
/*!******************************************************************!*\
  !*** ./node_modules/react-transition-group/ReplaceTransition.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;
exports["default"] = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ 5556));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 1594));

var _reactDom = __webpack_require__(/*! react-dom */ 5206);

var _TransitionGroup = _interopRequireDefault(__webpack_require__(/*! ./TransitionGroup */ 2312));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */
var ReplaceTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;

    var child = _react.default.Children.toArray(children)[idx];

    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);

    var _React$Children$toArr = _react.default.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : _react.default.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(_react.default.Component);

ReplaceTransition.propTypes =  false ? 0 : {};
var _default = ReplaceTransition;
exports["default"] = _default;
module.exports = exports["default"];

/***/ }),

/***/ 495:
/*!***********************************************************!*\
  !*** ./node_modules/react-transition-group/Transition.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;
exports["default"] = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(/*! prop-types */ 5556));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 1594));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ 5206));

var _reactLifecyclesCompat = __webpack_require__(/*! react-lifecycles-compat */ 1345);

var _PropTypes = __webpack_require__(/*! ./utils/PropTypes */ 554);

var _TransitionGroupContext = _interopRequireDefault(__webpack_require__(/*! ./TransitionGroupContext */ 8605));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var UNMOUNTED = 'unmounted';
exports.UNMOUNTED = UNMOUNTED;
var EXITED = 'exited';
exports.EXITED = EXITED;
var ENTERING = 'entering';
exports.ENTERING = ENTERING;
var ENTERED = 'entered';
exports.ENTERED = ENTERED;
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

exports.EXITING = EXITING;

var Transition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  }; // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }


  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      var node = _reactDom.default.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(node, appearing);

      _this2.onTransitionEnd(node, enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  _proto.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

    if (!exit) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(node);
      });
      return;
    }

    this.props.onExit(node);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      this.props.addEndListener(node, this.nextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]); // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      // allows for nested Transitions
      return _react.default.createElement(_TransitionGroupContext.default.Provider, {
        value: null
      }, children(status, childProps));
    }

    var child = _react.default.Children.only(children);

    return (// allows for nested Transitions
      _react.default.createElement(_TransitionGroupContext.default.Provider, {
        value: null
      }, _react.default.cloneElement(child, childProps))
    );
  };

  return Transition;
}(_react.default.Component);

Transition.contextType = _TransitionGroupContext.default;
Transition.propTypes =  false ? 0 : {};

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;

var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);

exports["default"] = _default;

/***/ }),

/***/ 2312:
/*!****************************************************************!*\
  !*** ./node_modules/react-transition-group/TransitionGroup.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;
exports["default"] = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ 5556));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 1594));

var _reactLifecyclesCompat = __webpack_require__(/*! react-lifecycles-compat */ 1345);

var _TransitionGroupContext = _interopRequireDefault(__webpack_require__(/*! ./TransitionGroupContext */ 8605));

var _ChildMapping = __webpack_require__(/*! ./utils/ChildMapping */ 2958);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

};

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear


    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = _extends({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return _react.default.createElement(_TransitionGroupContext.default.Provider, {
        value: contextValue
      }, children);
    }

    return _react.default.createElement(_TransitionGroupContext.default.Provider, {
      value: contextValue
    }, _react.default.createElement(Component, props, children));
  };

  return TransitionGroup;
}(_react.default.Component);

TransitionGroup.propTypes =  false ? 0 : {};
TransitionGroup.defaultProps = defaultProps;

var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);

exports["default"] = _default;
module.exports = exports["default"];

/***/ }),

/***/ 8605:
/*!***********************************************************************!*\
  !*** ./node_modules/react-transition-group/TransitionGroupContext.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 1594));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = _react.default.createContext(null);

exports["default"] = _default;
module.exports = exports["default"];

/***/ }),

/***/ 9790:
/*!******************************************************!*\
  !*** ./node_modules/react-transition-group/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _CSSTransition = _interopRequireDefault(__webpack_require__(/*! ./CSSTransition */ 8514));

var _ReplaceTransition = _interopRequireDefault(__webpack_require__(/*! ./ReplaceTransition */ 1369));

var _TransitionGroup = _interopRequireDefault(__webpack_require__(/*! ./TransitionGroup */ 2312));

var _Transition = _interopRequireDefault(__webpack_require__(/*! ./Transition */ 495));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = {
  Transition: _Transition.default,
  TransitionGroup: _TransitionGroup.default,
  ReplaceTransition: _ReplaceTransition.default,
  CSSTransition: _CSSTransition.default
};

/***/ }),

/***/ 2958:
/*!*******************************************************************!*\
  !*** ./node_modules/react-transition-group/utils/ChildMapping.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;
exports.getInitialChildMapping = getInitialChildMapping;
exports.getNextChildMapping = getNextChildMapping;

var _react = __webpack_require__(/*! react */ 1594);

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) _react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */


function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0, _react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}

function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0, _react.isValidElement)(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0, _react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

/***/ }),

/***/ 554:
/*!****************************************************************!*\
  !*** ./node_modules/react-transition-group/utils/PropTypes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.__esModule = true;
exports.classNamesShape = exports.timeoutsShape = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ 5556));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var timeoutsShape =  false ? 0 : null;
exports.timeoutsShape = timeoutsShape;
var classNamesShape =  false ? 0 : null;
exports.classNamesShape = classNamesShape;

/***/ }),

/***/ 7675:
/*!***************************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/implementation.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var setFunctionName = __webpack_require__(/*! set-function-name */ 3206);
var $TypeError = __webpack_require__(/*! es-errors/type */ 9675);

var $Object = Object;

module.exports = setFunctionName(function flags() {
	if (this == null || this !== $Object(this)) {
		throw new $TypeError('RegExp.prototype.flags getter called on non-object');
	}
	var result = '';
	if (this.hasIndices) {
		result += 'd';
	}
	if (this.global) {
		result += 'g';
	}
	if (this.ignoreCase) {
		result += 'i';
	}
	if (this.multiline) {
		result += 'm';
	}
	if (this.dotAll) {
		result += 's';
	}
	if (this.unicode) {
		result += 'u';
	}
	if (this.unicodeSets) {
		result += 'v';
	}
	if (this.sticky) {
		result += 'y';
	}
	return result;
}, 'get flags', true);



/***/ }),

/***/ 1589:
/*!******************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var define = __webpack_require__(/*! define-properties */ 8452);
var callBind = __webpack_require__(/*! call-bind */ 487);

var implementation = __webpack_require__(/*! ./implementation */ 7675);
var getPolyfill = __webpack_require__(/*! ./polyfill */ 5330);
var shim = __webpack_require__(/*! ./shim */ 3984);

var flagsBound = callBind(getPolyfill());

define(flagsBound, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = flagsBound;


/***/ }),

/***/ 5330:
/*!*********************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/polyfill.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ 7675);

var supportsDescriptors = (__webpack_require__(/*! define-properties */ 8452).supportsDescriptors);
var $gOPD = Object.getOwnPropertyDescriptor;

module.exports = function getPolyfill() {
	if (supportsDescriptors && (/a/mig).flags === 'gim') {
		var descriptor = $gOPD(RegExp.prototype, 'flags');
		if (
			descriptor
			&& typeof descriptor.get === 'function'
			&& 'dotAll' in RegExp.prototype
			&& 'hasIndices' in RegExp.prototype
		) {
			/* eslint getter-return: 0 */
			var calls = '';
			var o = {};
			Object.defineProperty(o, 'hasIndices', {
				get: function () {
					calls += 'd';
				}
			});
			Object.defineProperty(o, 'sticky', {
				get: function () {
					calls += 'y';
				}
			});

			descriptor.get.call(o);

			if (calls === 'dy') {
				return descriptor.get;
			}
		}
	}
	return implementation;
};


/***/ }),

/***/ 3984:
/*!*****************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/shim.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var supportsDescriptors = (__webpack_require__(/*! define-properties */ 8452).supportsDescriptors);
var getPolyfill = __webpack_require__(/*! ./polyfill */ 5330);
var gOPD = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var TypeErr = TypeError;
var getProto = Object.getPrototypeOf;
var regex = /a/;

module.exports = function shimFlags() {
	if (!supportsDescriptors || !getProto) {
		throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
	}
	var polyfill = getPolyfill();
	var proto = getProto(regex);
	var descriptor = gOPD(proto, 'flags');
	if (!descriptor || descriptor.get !== polyfill) {
		defineProperty(proto, 'flags', {
			configurable: true,
			enumerable: false,
			get: polyfill
		});
	}
	return polyfill;
};


/***/ }),

/***/ 6897:
/*!***************************************************!*\
  !*** ./node_modules/set-function-length/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ 453);
var define = __webpack_require__(/*! define-data-property */ 41);
var hasDescriptors = __webpack_require__(/*! has-property-descriptors */ 592)();
var gOPD = __webpack_require__(/*! gopd */ 5795);

var $TypeError = __webpack_require__(/*! es-errors/type */ 9675);
var $floor = GetIntrinsic('%Math.floor%');

/** @type {import('.')} */
module.exports = function setFunctionLength(fn, length) {
	if (typeof fn !== 'function') {
		throw new $TypeError('`fn` is not a function');
	}
	if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {
		throw new $TypeError('`length` must be a positive 32-bit integer');
	}

	var loose = arguments.length > 2 && !!arguments[2];

	var functionLengthIsConfigurable = true;
	var functionLengthIsWritable = true;
	if ('length' in fn && gOPD) {
		var desc = gOPD(fn, 'length');
		if (desc && !desc.configurable) {
			functionLengthIsConfigurable = false;
		}
		if (desc && !desc.writable) {
			functionLengthIsWritable = false;
		}
	}

	if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
		if (hasDescriptors) {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);
		} else {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length);
		}
	}
	return fn;
};


/***/ }),

/***/ 3206:
/*!*************************************************!*\
  !*** ./node_modules/set-function-name/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var define = __webpack_require__(/*! define-data-property */ 41);
var hasDescriptors = __webpack_require__(/*! has-property-descriptors */ 592)();
var functionsHaveConfigurableNames = (__webpack_require__(/*! functions-have-names */ 4462).functionsHaveConfigurableNames)();

var $TypeError = __webpack_require__(/*! es-errors/type */ 9675);

/** @type {import('.')} */
module.exports = function setFunctionName(fn, name) {
	if (typeof fn !== 'function') {
		throw new $TypeError('`fn` is not a function');
	}
	var loose = arguments.length > 2 && !!arguments[2];
	if (!loose || functionsHaveConfigurableNames) {
		if (hasDescriptors) {
			define(/** @type {Parameters<define>[0]} */ (fn), 'name', name, true, true);
		} else {
			define(/** @type {Parameters<define>[0]} */ (fn), 'name', name);
		}
	}
	return fn;
};


/***/ }),

/***/ 7369:
/*!*************************************************!*\
  !*** ./node_modules/store/dist/store.modern.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var engine = __webpack_require__(/*! ../src/store-engine */ 4129)

var storages = [
	__webpack_require__(/*! ../storages/localStorage */ 9653), 
	__webpack_require__(/*! ../storages/sessionStorage */ 5416), 
	__webpack_require__(/*! ../storages/cookieStorage */ 9234), 
	__webpack_require__(/*! ../storages/memoryStorage */ 1529),
]
var plugins = []

module.exports = engine.createStore(storages, plugins)


/***/ }),

/***/ 4129:
/*!************************************************!*\
  !*** ./node_modules/store/src/store-engine.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var util = __webpack_require__(/*! ./util */ 6123)
var slice = util.slice
var pluck = util.pluck
var each = util.each
var bind = util.bind
var create = util.create
var isList = util.isList
var isFunction = util.isFunction
var isObject = util.isObject

module.exports = {
	createStore: createStore
}

var storeAPI = {
	version: '2.0.12',
	enabled: false,
	
	// get returns the value of the given key. If that value
	// is undefined, it returns optionalDefaultValue instead.
	get: function(key, optionalDefaultValue) {
		var data = this.storage.read(this._namespacePrefix + key)
		return this._deserialize(data, optionalDefaultValue)
	},

	// set will store the given value at key and returns value.
	// Calling set with value === undefined is equivalent to calling remove.
	set: function(key, value) {
		if (value === undefined) {
			return this.remove(key)
		}
		this.storage.write(this._namespacePrefix + key, this._serialize(value))
		return value
	},

	// remove deletes the key and value stored at the given key.
	remove: function(key) {
		this.storage.remove(this._namespacePrefix + key)
	},

	// each will call the given callback once for each key-value pair
	// in this store.
	each: function(callback) {
		var self = this
		this.storage.each(function(val, namespacedKey) {
			callback.call(self, self._deserialize(val), (namespacedKey || '').replace(self._namespaceRegexp, ''))
		})
	},

	// clearAll will remove all the stored key-value pairs in this store.
	clearAll: function() {
		this.storage.clearAll()
	},

	// additional functionality that can't live in plugins
	// ---------------------------------------------------

	// hasNamespace returns true if this store instance has the given namespace.
	hasNamespace: function(namespace) {
		return (this._namespacePrefix == '__storejs_'+namespace+'_')
	},

	// createStore creates a store.js instance with the first
	// functioning storage in the list of storage candidates,
	// and applies the the given mixins to the instance.
	createStore: function() {
		return createStore.apply(this, arguments)
	},
	
	addPlugin: function(plugin) {
		this._addPlugin(plugin)
	},
	
	namespace: function(namespace) {
		return createStore(this.storage, this.plugins, namespace)
	}
}

function _warn() {
	var _console = (typeof console == 'undefined' ? null : console)
	if (!_console) { return }
	var fn = (_console.warn ? _console.warn : _console.log)
	fn.apply(_console, arguments)
}

function createStore(storages, plugins, namespace) {
	if (!namespace) {
		namespace = ''
	}
	if (storages && !isList(storages)) {
		storages = [storages]
	}
	if (plugins && !isList(plugins)) {
		plugins = [plugins]
	}

	var namespacePrefix = (namespace ? '__storejs_'+namespace+'_' : '')
	var namespaceRegexp = (namespace ? new RegExp('^'+namespacePrefix) : null)
	var legalNamespaces = /^[a-zA-Z0-9_\-]*$/ // alpha-numeric + underscore and dash
	if (!legalNamespaces.test(namespace)) {
		throw new Error('store.js namespaces can only have alphanumerics + underscores and dashes')
	}
	
	var _privateStoreProps = {
		_namespacePrefix: namespacePrefix,
		_namespaceRegexp: namespaceRegexp,

		_testStorage: function(storage) {
			try {
				var testStr = '__storejs__test__'
				storage.write(testStr, testStr)
				var ok = (storage.read(testStr) === testStr)
				storage.remove(testStr)
				return ok
			} catch(e) {
				return false
			}
		},

		_assignPluginFnProp: function(pluginFnProp, propName) {
			var oldFn = this[propName]
			this[propName] = function pluginFn() {
				var args = slice(arguments, 0)
				var self = this

				// super_fn calls the old function which was overwritten by
				// this mixin.
				function super_fn() {
					if (!oldFn) { return }
					each(arguments, function(arg, i) {
						args[i] = arg
					})
					return oldFn.apply(self, args)
				}

				// Give mixing function access to super_fn by prefixing all mixin function
				// arguments with super_fn.
				var newFnArgs = [super_fn].concat(args)

				return pluginFnProp.apply(self, newFnArgs)
			}
		},

		_serialize: function(obj) {
			return JSON.stringify(obj)
		},

		_deserialize: function(strVal, defaultVal) {
			if (!strVal) { return defaultVal }
			// It is possible that a raw string value has been previously stored
			// in a storage without using store.js, meaning it will be a raw
			// string value instead of a JSON serialized string. By defaulting
			// to the raw string value in case of a JSON parse error, we allow
			// for past stored values to be forwards-compatible with store.js
			var val = ''
			try { val = JSON.parse(strVal) }
			catch(e) { val = strVal }

			return (val !== undefined ? val : defaultVal)
		},
		
		_addStorage: function(storage) {
			if (this.enabled) { return }
			if (this._testStorage(storage)) {
				this.storage = storage
				this.enabled = true
			}
		},

		_addPlugin: function(plugin) {
			var self = this

			// If the plugin is an array, then add all plugins in the array.
			// This allows for a plugin to depend on other plugins.
			if (isList(plugin)) {
				each(plugin, function(plugin) {
					self._addPlugin(plugin)
				})
				return
			}

			// Keep track of all plugins we've seen so far, so that we
			// don't add any of them twice.
			var seenPlugin = pluck(this.plugins, function(seenPlugin) {
				return (plugin === seenPlugin)
			})
			if (seenPlugin) {
				return
			}
			this.plugins.push(plugin)

			// Check that the plugin is properly formed
			if (!isFunction(plugin)) {
				throw new Error('Plugins must be function values that return objects')
			}

			var pluginProperties = plugin.call(this)
			if (!isObject(pluginProperties)) {
				throw new Error('Plugins must return an object of function properties')
			}

			// Add the plugin function properties to this store instance.
			each(pluginProperties, function(pluginFnProp, propName) {
				if (!isFunction(pluginFnProp)) {
					throw new Error('Bad plugin property: '+propName+' from plugin '+plugin.name+'. Plugins should only return functions.')
				}
				self._assignPluginFnProp(pluginFnProp, propName)
			})
		},
		
		// Put deprecated properties in the private API, so as to not expose it to accidential
		// discovery through inspection of the store object.
		
		// Deprecated: addStorage
		addStorage: function(storage) {
			_warn('store.addStorage(storage) is deprecated. Use createStore([storages])')
			this._addStorage(storage)
		}
	}

	var store = create(_privateStoreProps, storeAPI, {
		plugins: []
	})
	store.raw = {}
	each(store, function(prop, propName) {
		if (isFunction(prop)) {
			store.raw[propName] = bind(store, prop)			
		}
	})
	each(storages, function(storage) {
		store._addStorage(storage)
	})
	each(plugins, function(plugin) {
		store._addPlugin(plugin)
	})
	return store
}


/***/ }),

/***/ 6123:
/*!****************************************!*\
  !*** ./node_modules/store/src/util.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var assign = make_assign()
var create = make_create()
var trim = make_trim()
var Global = (typeof window !== 'undefined' ? window : __webpack_require__.g)

module.exports = {
	assign: assign,
	create: create,
	trim: trim,
	bind: bind,
	slice: slice,
	each: each,
	map: map,
	pluck: pluck,
	isList: isList,
	isFunction: isFunction,
	isObject: isObject,
	Global: Global
}

function make_assign() {
	if (Object.assign) {
		return Object.assign
	} else {
		return function shimAssign(obj, props1, props2, etc) {
			for (var i = 1; i < arguments.length; i++) {
				each(Object(arguments[i]), function(val, key) {
					obj[key] = val
				})
			}			
			return obj
		}
	}
}

function make_create() {
	if (Object.create) {
		return function create(obj, assignProps1, assignProps2, etc) {
			var assignArgsList = slice(arguments, 1)
			return assign.apply(this, [Object.create(obj)].concat(assignArgsList))
		}
	} else {
		function F() {} // eslint-disable-line no-inner-declarations
		return function create(obj, assignProps1, assignProps2, etc) {
			var assignArgsList = slice(arguments, 1)
			F.prototype = obj
			return assign.apply(this, [new F()].concat(assignArgsList))
		}
	}
}

function make_trim() {
	if (String.prototype.trim) {
		return function trim(str) {
			return String.prototype.trim.call(str)
		}
	} else {
		return function trim(str) {
			return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '')
		}
	}
}

function bind(obj, fn) {
	return function() {
		return fn.apply(obj, Array.prototype.slice.call(arguments, 0))
	}
}

function slice(arr, index) {
	return Array.prototype.slice.call(arr, index || 0)
}

function each(obj, fn) {
	pluck(obj, function(val, key) {
		fn(val, key)
		return false
	})
}

function map(obj, fn) {
	var res = (isList(obj) ? [] : {})
	pluck(obj, function(v, k) {
		res[k] = fn(v, k)
		return false
	})
	return res
}

function pluck(obj, fn) {
	if (isList(obj)) {
		for (var i=0; i<obj.length; i++) {
			if (fn(obj[i], i)) {
				return obj[i]
			}
		}
	} else {
		for (var key in obj) {
			if (obj.hasOwnProperty(key)) {
				if (fn(obj[key], key)) {
					return obj[key]
				}
			}
		}
	}
}

function isList(val) {
	return (val != null && typeof val != 'function' && typeof val.length == 'number')
}

function isFunction(val) {
	return val && {}.toString.call(val) === '[object Function]'
}

function isObject(val) {
	return val && {}.toString.call(val) === '[object Object]'
}


/***/ }),

/***/ 9234:
/*!******************************************************!*\
  !*** ./node_modules/store/storages/cookieStorage.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// cookieStorage is useful Safari private browser mode, where localStorage
// doesn't work but cookies do. This implementation is adopted from
// https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage

var util = __webpack_require__(/*! ../src/util */ 6123)
var Global = util.Global
var trim = util.trim

module.exports = {
	name: 'cookieStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll,
}

var doc = Global.document

function read(key) {
	if (!key || !_has(key)) { return null }
	var regexpStr = "(?:^|.*;\\s*)" +
		escape(key).replace(/[\-\.\+\*]/g, "\\$&") +
		"\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*"
	return unescape(doc.cookie.replace(new RegExp(regexpStr), "$1"))
}

function each(callback) {
	var cookies = doc.cookie.split(/; ?/g)
	for (var i = cookies.length - 1; i >= 0; i--) {
		if (!trim(cookies[i])) {
			continue
		}
		var kvp = cookies[i].split('=')
		var key = unescape(kvp[0])
		var val = unescape(kvp[1])
		callback(val, key)
	}
}

function write(key, data) {
	if(!key) { return }
	doc.cookie = escape(key) + "=" + escape(data) + "; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/"
}

function remove(key) {
	if (!key || !_has(key)) {
		return
	}
	doc.cookie = escape(key) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/"
}

function clearAll() {
	each(function(_, key) {
		remove(key)
	})
}

function _has(key) {
	return (new RegExp("(?:^|;\\s*)" + escape(key).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=")).test(doc.cookie)
}


/***/ }),

/***/ 9653:
/*!*****************************************************!*\
  !*** ./node_modules/store/storages/localStorage.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var util = __webpack_require__(/*! ../src/util */ 6123)
var Global = util.Global

module.exports = {
	name: 'localStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll,
}

function localStorage() {
	return Global.localStorage
}

function read(key) {
	return localStorage().getItem(key)
}

function write(key, data) {
	return localStorage().setItem(key, data)
}

function each(fn) {
	for (var i = localStorage().length - 1; i >= 0; i--) {
		var key = localStorage().key(i)
		fn(read(key), key)
	}
}

function remove(key) {
	return localStorage().removeItem(key)
}

function clearAll() {
	return localStorage().clear()
}


/***/ }),

/***/ 1529:
/*!******************************************************!*\
  !*** ./node_modules/store/storages/memoryStorage.js ***!
  \******************************************************/
/***/ ((module) => {

// memoryStorage is a useful last fallback to ensure that the store
// is functions (meaning store.get(), store.set(), etc will all function).
// However, stored values will not persist when the browser navigates to
// a new page or reloads the current page.

module.exports = {
	name: 'memoryStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll,
}

var memoryStorage = {}

function read(key) {
	return memoryStorage[key]
}

function write(key, data) {
	memoryStorage[key] = data
}

function each(callback) {
	for (var key in memoryStorage) {
		if (memoryStorage.hasOwnProperty(key)) {
			callback(memoryStorage[key], key)
		}
	}
}

function remove(key) {
	delete memoryStorage[key]
}

function clearAll(key) {
	memoryStorage = {}
}


/***/ }),

/***/ 5416:
/*!*******************************************************!*\
  !*** ./node_modules/store/storages/sessionStorage.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var util = __webpack_require__(/*! ../src/util */ 6123)
var Global = util.Global

module.exports = {
	name: 'sessionStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll
}

function sessionStorage() {
	return Global.sessionStorage
}

function read(key) {
	return sessionStorage().getItem(key)
}

function write(key, data) {
	return sessionStorage().setItem(key, data)
}

function each(fn) {
	for (var i = sessionStorage().length - 1; i >= 0; i--) {
		var key = sessionStorage().key(i)
		fn(read(key), key)
	}
}

function remove(key) {
	return sessionStorage().removeItem(key)
}

function clearAll() {
	return sessionStorage().clear()
}


/***/ }),

/***/ 5072:
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";


var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ 7659:
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";


var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ 540:
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ 5056:
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ 7825:
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ 1113:
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ 9771:
/*!*****************************************!*\
  !*** ./node_modules/warning/warning.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "production" !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;


/***/ }),

/***/ 3088:

  !*** data:image/svg+xml,%3Csvg viewBox=%270 0 14 14%27 xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cg stroke=%27none%27 stroke-width=%271%27 fill=%27none%27 fill-rule=%27evenodd%27%3E%3Cpath fill=%27%23949494%27 d=%27M8.93933983,7 L3.46966991,1.53033009 C3.1767767,1.23743687 3.1767767,0.762563133 3.46966991,0.469669914 C3.76256313,0.176776695 4.23743687,0.176776695 4.53033009,0.469669914 L10.5303301,6.46966991 C10.8232233,6.76256313 10.8232233,7.23743687 10.5303301,7.53033009 L4.53033009,13.5303301 C4.23743687,13.8232233 3.76256313,13.8232233 3.46966991,13.5303301 C3.1767767,13.2374369 3.1767767,12.7625631 3.46966991,12.4696699 L8.93933983,7 Z%27 transform=%27translate%287.000000, 7.000000%29 scale%281, -1%29 rotate%28-90.000000%29 translate%28-7.000000, -7.000000%29 %27%3E%3C/path%3E%3C/g%3E%3C/svg%3E ***!

/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3Csvg viewBox=%270 0 14 14%27 xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cg stroke=%27none%27 stroke-width=%271%27 fill=%27none%27 fill-rule=%27evenodd%27%3E%3Cpath fill=%27%23949494%27 d=%27M8.93933983,7 L3.46966991,1.53033009 C3.1767767,1.23743687 3.1767767,0.762563133 3.46966991,0.469669914 C3.76256313,0.176776695 4.23743687,0.176776695 4.53033009,0.469669914 L10.5303301,6.46966991 C10.8232233,6.76256313 10.8232233,7.23743687 10.5303301,7.53033009 L4.53033009,13.5303301 C4.23743687,13.8232233 3.76256313,13.8232233 3.46966991,13.5303301 C3.1767767,13.2374369 3.1767767,12.7625631 3.46966991,12.4696699 L8.93933983,7 Z%27 transform=%27translate%287.000000, 7.000000%29 scale%281, -1%29 rotate%28-90.000000%29 translate%28-7.000000, -7.000000%29 %27%3E%3C/path%3E%3C/g%3E%3C/svg%3E";

/***/ }),

/***/ 8434:

  !*** data:image/svg+xml,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cg fill=%27none%27 fill-rule=%27evenodd%27%3E%3Ccircle fill=%27%23E30048%27 fill-rule=%27nonzero%27 cx=%2710%27 cy=%2710%27 r=%2710%27/%3E%3Cpath d=%27M13.1056 4.5528c.247-.494.8476-.6942 1.3416-.4472.494.247.6942.8476.4472 1.3416l-5 10c-.3324.665-1.2484.7475-1.6944.1528l-3-4c-.3314-.4418-.2418-1.0686.2-1.4.4418-.3314 1.0686-.2418 1.4.2l2.0292 2.7056 4.2764-8.5528z%27 fill=%27%23FFF%27/%3E%3C/g%3E%3C/svg%3E ***!

/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cg fill=%27none%27 fill-rule=%27evenodd%27%3E%3Ccircle fill=%27%23E30048%27 fill-rule=%27nonzero%27 cx=%2710%27 cy=%2710%27 r=%2710%27/%3E%3Cpath d=%27M13.1056 4.5528c.247-.494.8476-.6942 1.3416-.4472.494.247.6942.8476.4472 1.3416l-5 10c-.3324.665-1.2484.7475-1.6944.1528l-3-4c-.3314-.4418-.2418-1.0686.2-1.4.4418-.3314 1.0686-.2418 1.4.2l2.0292 2.7056 4.2764-8.5528z%27 fill=%27%23FFF%27/%3E%3C/g%3E%3C/svg%3E";

/***/ }),

/***/ 3969:
/*!*************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2712%27 height=%2712%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e ***!
  \*************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2712%27 height=%2712%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e";

/***/ }),

/***/ 1285:
/*!**************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%274%27 height=%274%27 viewBox=%270 0 4 4%27%3e%3cpath stroke=%27%23fff%27 d=%27M0 2h4%27/%3e%3c/svg%3e ***!
  \**************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%274%27 height=%274%27 viewBox=%270 0 4 4%27%3e%3cpath stroke=%27%23fff%27 d=%27M0 2h4%27/%3e%3c/svg%3e";

/***/ }),

/***/ 792:
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%278%27 height=%278%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23fff%27 d=%27M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z%27/%3e%3c/svg%3e ***!
  \*****************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%278%27 height=%278%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23fff%27 d=%27M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z%27/%3e%3c/svg%3e";

/***/ }),

/***/ 9258:
/*!*******************************************!*\
  !*** ./src/img/security/african_mask.svg ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "655a202621bca2ccc25f.svg";

/***/ }),

/***/ 7915:
/*!**************************************!*\
  !*** ./src/img/security/big_ben.svg ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "afffb4f7b6d6205586ae.svg";

/***/ }),

/***/ 6483:
/*!***********************************!*\
  !*** ./src/img/security/boat.svg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "ef872e4aafebf3856882.svg";

/***/ }),

/***/ 4127:
/*!***********************************************!*\
  !*** ./src/img/security/brandenburg_gate.svg ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "c965b721b848a37d5dda.svg";

/***/ }),

/***/ 2040:
/*!*******************************************!*\
  !*** ./src/img/security/chichen_itza.svg ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "e0bccc53af64f05b1528.svg";

/***/ }),

/***/ 4669:
/*!****************************************!*\
  !*** ./src/img/security/colosseum.svg ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "c11334596f45d657bb96.svg";

/***/ }),

/***/ 7543:
/*!************************************!*\
  !*** ./src/img/security/eagle.svg ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "fef0ea1cdf4aaffd1864.svg";

/***/ }),

/***/ 6102:
/*!*******************************************!*\
  !*** ./src/img/security/eiffel_tower.svg ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "65d2aa4b2f46332b829b.svg";

/***/ }),

/***/ 9458:
/*!***************************************!*\
  !*** ./src/img/security/elephant.svg ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "165c89746f1dff6bb34c.svg";

/***/ }),

/***/ 2814:
/*!*********************************************!*\
  !*** ./src/img/security/forbidden_city.svg ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "9b61d0f701f12d523c06.svg";

/***/ }),

/***/ 3876:
/*!*************************************************!*\
  !*** ./src/img/security/golden_gate_bridge.svg ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "ea2ad29e7b29d0e080d8.svg";

/***/ }),

/***/ 4879:
/*!*****************************************!*\
  !*** ./src/img/security/great_wall.svg ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "196571f6cfff850e1052.svg";

/***/ }),

/***/ 8402:
/*!******************************************!*\
  !*** ./src/img/security/kilimanjaro.svg ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "d1d13ad7e5fdeaad0731.svg";

/***/ }),

/***/ 4660:
/*!*************************************************!*\
  !*** ./src/img/security/moai_easter_island.svg ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "3b1322193390d6da497c.svg";

/***/ }),

/***/ 9503:
/*!********************************************!*\
  !*** ./src/img/security/mountain_fuji.svg ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "6addf0a6ae28311b422c.svg";

/***/ }),

/***/ 6927:
/*!******************************************!*\
  !*** ./src/img/security/opera_house.svg ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "2335fad524b5be4c1d36.svg";

/***/ }),

/***/ 2998:
/*!*****************************************!*\
  !*** ./src/img/security/pisa_tower.svg ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "e2815fcc238a4fd41692.svg";

/***/ }),

/***/ 8631:
/*!**************************************!*\
  !*** ./src/img/security/pyramid.svg ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "d25e40442dd6f5e0ed0b.svg";

/***/ }),

/***/ 6876:
/*!*****************************************!*\
  !*** ./src/img/security/rhinoceros.svg ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "c5240227e11909fc9873.svg";

/***/ }),

/***/ 7054:
/*!*****************************************************!*\
  !*** ./src/img/security/saint_basils_cathedral.svg ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "ddb8f34b4407e68d6c11.svg";

/***/ }),

/***/ 8391:
/*!************************************************!*\
  !*** ./src/img/security/statue_of_liberty.svg ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "438a0ad230c7c3c099ee.svg";

/***/ }),

/***/ 8640:
/*!*******************************************!*\
  !*** ./src/img/security/torii_shrine.svg ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "bc3d5a0ae2feee92385c.svg";

/***/ }),

/***/ 6115:
/*!*************************************!*\
  !*** ./src/img/security/toucan.svg ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "7329d8fbb82e164c5ef0.svg";

/***/ }),

/***/ 9652:
/*!************************************!*\
  !*** ./src/img/security/whale.svg ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "27e55e96ffca377edd15.svg";

/***/ }),

/***/ 1594:
/*!************************!*\
  !*** external "React" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = React;

/***/ }),

/***/ 5206:
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = ReactDOM;

/***/ }),

/***/ 4994:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/***/ ((module) => {

function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    "default": e
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6942:
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ ((module, exports) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = '';

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (arg) {
				classes = appendClass(classes, parseValue(arg));
			}
		}

		return classes;
	}

	function parseValue (arg) {
		if (typeof arg === 'string' || typeof arg === 'number') {
			return arg;
		}

		if (typeof arg !== 'object') {
			return '';
		}

		if (Array.isArray(arg)) {
			return classNames.apply(null, arg);
		}

		if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
			return arg.toString();
		}

		var classes = '';

		for (var key in arg) {
			if (hasOwn.call(arg, key) && arg[key]) {
				classes = appendClass(classes, key);
			}
		}

		return classes;
	}

	function appendClass (value, newClass) {
		if (!newClass) {
			return value;
		}
	
		if (value) {
			return value + ' ' + newClass;
		}
	
		return value + newClass;
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ 9417:
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ _assertThisInitialized)
/* harmony export */ });
function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}


/***/ }),

/***/ 4467:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ _defineProperty)
/* harmony export */ });
/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ 816);

function _defineProperty(e, r, t) {
  return (r = (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}


/***/ }),

/***/ 3662:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ _setPrototypeOf)
/* harmony export */ });
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
    return t.__proto__ = e, t;
  }, _setPrototypeOf(t, e);
}


/***/ }),

/***/ 816:
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js + 1 modules ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ toPropertyKey)
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__(2284);
;// ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js

function toPrimitive(t, r) {
  if ("object" != (0,esm_typeof/* default */.A)(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != (0,esm_typeof/* default */.A)(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}

;// ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js


function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == (0,esm_typeof/* default */.A)(i) ? i : i + "";
}


/***/ }),

/***/ 2284:
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ _typeof)
/* harmony export */ });
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			792: 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be in strict mode.
(() => {
"use strict";
/*!*****************************************!*\
  !*** ./src/app/router.js + 674 modules ***!
  \*****************************************/

// NAMESPACE OBJECT: ./node_modules/date-fns/locale.mjs
var router_locale_namespaceObject = {};
__webpack_require__.r(router_locale_namespaceObject);
__webpack_require__.d(router_locale_namespaceObject, {
  af: () => (router_af),
  ar: () => (router_ar),
  arDZ: () => (router_arDZ),
  arEG: () => (router_arEG),
  arMA: () => (router_arMA),
  arSA: () => (router_arSA),
  arTN: () => (router_arTN),
  az: () => (router_az),
  be: () => (router_be),
  beTarask: () => (router_beTarask),
  bg: () => (router_bg),
  bn: () => (router_bn),
  bs: () => (router_bs),
  ca: () => (router_ca),
  ckb: () => (router_ckb),
  cs: () => (router_cs),
  cy: () => (router_cy),
  da: () => (router_da),
  de: () => (router_de),
  deAT: () => (router_deAT),
  el: () => (router_el),
  enAU: () => (router_enAU),
  enCA: () => (router_enCA),
  enGB: () => (router_enGB),
  enIE: () => (router_enIE),
  enIN: () => (router_enIN),
  enNZ: () => (router_enNZ),
  enUS: () => (router_enUS),
  enZA: () => (router_enZA),
  eo: () => (router_eo),
  es: () => (router_es),
  et: () => (router_et),
  eu: () => (router_eu),
  faIR: () => (router_faIR),
  fi: () => (router_fi),
  fr: () => (router_fr),
  frCA: () => (router_frCA),
  frCH: () => (router_frCH),
  fy: () => (router_fy),
  gd: () => (router_gd),
  gl: () => (router_gl),
  gu: () => (router_gu),
  he: () => (router_he),
  hi: () => (router_hi),
  hr: () => (router_hr),
  ht: () => (router_ht),
  hu: () => (router_hu),
  hy: () => (router_hy),
  id: () => (router_id),
  is: () => (router_is),
  it: () => (router_it),
  itCH: () => (router_itCH),
  ja: () => (router_ja),
  jaHira: () => (router_jaHira),
  ka: () => (router_ka),
  kk: () => (router_kk),
  km: () => (router_km),
  kn: () => (router_kn),
  ko: () => (router_ko),
  lb: () => (router_lb),
  lt: () => (router_lt),
  lv: () => (router_lv),
  mk: () => (router_mk),
  mn: () => (router_mn),
  ms: () => (router_ms),
  mt: () => (router_mt),
  nb: () => (router_nb),
  nl: () => (router_nl),
  nlBE: () => (router_nlBE),
  nn: () => (router_nn),
  oc: () => (router_oc),
  pl: () => (router_pl),
  pt: () => (router_pt),
  ptBR: () => (router_ptBR),
  ro: () => (router_ro),
  ru: () => (router_ru),
  se: () => (router_se),
  sk: () => (router_sk),
  sl: () => (router_sl),
  sq: () => (router_sq),
  sr: () => (router_sr),
  srLatn: () => (router_srLatn),
  sv: () => (router_sv),
  ta: () => (router_ta),
  te: () => (router_te),
  th: () => (router_th),
  tr: () => (router_tr),
  ug: () => (router_ug),
  uk: () => (router_uk),
  uz: () => (router_uz),
  uzCyrl: () => (router_uzCyrl),
  vi: () => (router_vi),
  zhCN: () => (router_zhCN),
  zhHK: () => (router_zhHK),
  zhTW: () => (router_zhTW)
});

// EXTERNAL MODULE: external "React"
var router_external_React_ = __webpack_require__(1594);
var router_external_React_default = /*#__PURE__*/__webpack_require__.n(router_external_React_);
// EXTERNAL MODULE: external "ReactDOM"
var router_external_ReactDOM_ = __webpack_require__(5206);
var router_external_ReactDOM_default = /*#__PURE__*/__webpack_require__.n(router_external_ReactDOM_);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
var router_setPrototypeOf = __webpack_require__(3662);
;// ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

function router_inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, (0,router_setPrototypeOf/* default */.A)(t, o);
}

;// ./node_modules/@babel/runtime/helpers/esm/extends.js
function router_extends() {
  return router_extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, router_extends.apply(null, arguments);
}

;// ./node_modules/resolve-pathname/esm/resolve-pathname.js
function router_isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
}

// About 1.5x faster than the two-arg version of Array#splice()
function router_spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }

  list.pop();
}

// This implementation is based heavily on node's url.parse
function router_resolvePathname(to, from) {
  if (from === undefined) from = '';

  var toParts = (to && to.split('/')) || [];
  var fromParts = (from && from.split('/')) || [];

  var isToAbs = to && router_isAbsolute(to);
  var isFromAbs = from && router_isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;

  if (to && router_isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }

  if (!fromParts.length) return '/';

  var hasTrailingSlash;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }

  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];

    if (part === '.') {
      router_spliceOne(fromParts, i);
    } else if (part === '..') {
      router_spliceOne(fromParts, i);
      up++;
    } else if (up) {
      router_spliceOne(fromParts, i);
      up--;
    }
  }

  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');

  if (
    mustEndAbs &&
    fromParts[0] !== '' &&
    (!fromParts[0] || !router_isAbsolute(fromParts[0]))
  )
    fromParts.unshift('');

  var result = fromParts.join('/');

  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

  return result;
}

/* harmony default export */ const router_resolve_pathname = (router_resolvePathname);

;// ./node_modules/value-equal/esm/value-equal.js
function router_value_equal_valueOf(obj) {
  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);
}

function router_valueEqual(a, b) {
  // Test for strict equality first.
  if (a === b) return true;

  // Otherwise, if either of them == null they are not equal.
  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return (
      Array.isArray(b) &&
      a.length === b.length &&
      a.every(function(item, index) {
        return router_valueEqual(item, b[index]);
      })
    );
  }

  if (typeof a === 'object' || typeof b === 'object') {
    var aValue = router_value_equal_valueOf(a);
    var bValue = router_value_equal_valueOf(b);

    if (aValue !== a || bValue !== b) return router_valueEqual(aValue, bValue);

    return Object.keys(Object.assign({}, a, b)).every(function(key) {
      return router_valueEqual(a[key], b[key]);
    });
  }

  return false;
}

/* harmony default export */ const router_value_equal = (router_valueEqual);

;// ./node_modules/tiny-invariant/dist/esm/tiny-invariant.js
var router_isProduction = "production" === 'production';
var router_prefix = 'Invariant failed';
function router_tiny_invariant_invariant(condition, message) {
    if (condition) {
        return;
    }
    if (router_isProduction) {
        throw new Error(router_prefix);
    }
    var provided = typeof message === 'function' ? message() : message;
    var value = provided ? "".concat(router_prefix, ": ").concat(provided) : router_prefix;
    throw new Error(value);
}



;// ./node_modules/history/esm/history.js






function router_addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
}
function router_stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
}
function router_hasBasename(path, prefix) {
  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;
}
function router_stripBasename(path, prefix) {
  return router_hasBasename(path, prefix) ? path.substr(prefix.length) : path;
}
function router_stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
}
function router_parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
}
function router_createPath(location) {
  var pathname = location.pathname,
      search = location.search,
      hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
  return path;
}

function router_createLocation(path, state, key, currentLocation) {
  var location;

  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = router_parsePath(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = router_extends({}, path);
    if (location.pathname === undefined) location.pathname = '';

    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }

    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }

    if (state !== undefined && location.state === undefined) location.state = state;
  }

  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }

  if (key) location.key = key;

  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = router_resolve_pathname(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }

  return location;
}
function router_locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && router_value_equal(a.state, b.state);
}

function router_createTransitionManager() {
  var prompt = null;

  function setPrompt(nextPrompt) {
     false ? 0 : void 0;
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  }

  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
           false ? 0 : void 0;
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }

  var listeners = [];

  function appendListener(fn) {
    var isActive = true;

    function listener() {
      if (isActive) fn.apply(void 0, arguments);
    }

    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  }

  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    listeners.forEach(function (listener) {
      return listener.apply(void 0, args);
    });
  }

  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
}

var router_canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function router_getConfirmation(message, callback) {
  callback(window.confirm(message)); // eslint-disable-line no-alert
}
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

function router_supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
}
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */

function router_supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
}
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */

function router_supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
}
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

function router_isExtraneousPopstateEvent(event) {
  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
}

var router_PopStateEvent = 'popstate';
var router_HashChangeEvent = 'hashchange';

function router_getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
}
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */


function router_createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !router_canUseDOM ?  false ? 0 : router_tiny_invariant_invariant(false) : void 0;
  var globalHistory = window.history;
  var canUseHistory = router_supportsHistory();
  var needsHashChangeListener = !router_supportsPopStateOnHashChange();
  var _props = props,
      _props$forceRefresh = _props.forceRefresh,
      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? router_getConfirmation : _props$getUserConfirm,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? router_stripTrailingSlash(router_addLeadingSlash(props.basename)) : '';

  function getDOMLocation(historyState) {
    var _ref = historyState || {},
        key = _ref.key,
        state = _ref.state;

    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var path = pathname + search + hash;
     false ? 0 : void 0;
    if (basename) path = router_stripBasename(path, basename);
    return router_createLocation(path, state, key);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var transitionManager = router_createTransitionManager();

  function setState(nextState) {
    router_extends(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if (router_isExtraneousPopstateEvent(event)) return;
    handlePop(getDOMLocation(event.state));
  }

  function handleHashChange() {
    handlePop(getDOMLocation(router_getHistoryState()));
  }

  var forceNextPop = false;

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }

  var initialLocation = getDOMLocation(router_getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  function createHref(location) {
    return basename + router_createPath(location);
  }

  function push(path, state) {
     false ? 0 : void 0;
    var action = 'PUSH';
    var location = router_createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
         false ? 0 : void 0;
        window.location.href = href;
      }
    });
  }

  function replace(path, state) {
     false ? 0 : void 0;
    var action = 'REPLACE';
    var location = router_createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
         false ? 0 : void 0;
        window.location.replace(href);
      }
    });
  }

  function go(n) {
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(router_PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.addEventListener(router_HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(router_PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.removeEventListener(router_HashChangeEvent, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

var router_HashChangeEvent$1 = 'hashchange';
var router_HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + router_stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: router_stripLeadingSlash,
    decodePath: router_addLeadingSlash
  },
  slash: {
    encodePath: router_addLeadingSlash,
    decodePath: router_addLeadingSlash
  }
};

function router_stripHash(url) {
  var hashIndex = url.indexOf('#');
  return hashIndex === -1 ? url : url.slice(0, hashIndex);
}

function router_getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
}

function router_pushHashPath(path) {
  window.location.hash = path;
}

function router_replaceHashPath(path) {
  window.location.replace(router_stripHash(window.location.href) + '#' + path);
}

function router_createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !router_canUseDOM ?  false ? 0 : router_tiny_invariant_invariant(false) : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = router_supportsGoWithoutReloadUsingHash();
  var _props = props,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? router_getConfirmation : _props$getUserConfirm,
      _props$hashType = _props.hashType,
      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
  var basename = props.basename ? router_stripTrailingSlash(router_addLeadingSlash(props.basename)) : '';
  var _HashPathCoders$hashT = router_HashPathCoders[hashType],
      encodePath = _HashPathCoders$hashT.encodePath,
      decodePath = _HashPathCoders$hashT.decodePath;

  function getDOMLocation() {
    var path = decodePath(router_getHashPath());
     false ? 0 : void 0;
    if (basename) path = router_stripBasename(path, basename);
    return router_createLocation(path);
  }

  var transitionManager = router_createTransitionManager();

  function setState(nextState) {
    router_extends(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  var forceNextPop = false;
  var ignorePath = null;

  function locationsAreEqual$$1(a, b) {
    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;
  }

  function handleHashChange() {
    var path = router_getHashPath();
    var encodedPath = encodePath(path);

    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      router_replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === router_createPath(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  }

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf(router_createPath(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(router_createPath(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  } // Ensure the hash is encoded properly before doing anything else.


  var path = router_getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) router_replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [router_createPath(initialLocation)]; // Public interface

  function createHref(location) {
    var baseTag = document.querySelector('base');
    var href = '';

    if (baseTag && baseTag.getAttribute('href')) {
      href = router_stripHash(window.location.href);
    }

    return href + '#' + encodePath(basename + router_createPath(location));
  }

  function push(path, state) {
     false ? 0 : void 0;
    var action = 'PUSH';
    var location = router_createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = router_createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = router_getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        router_pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf(router_createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
         false ? 0 : void 0;
        setState();
      }
    });
  }

  function replace(path, state) {
     false ? 0 : void 0;
    var action = 'REPLACE';
    var location = router_createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = router_createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = router_getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        router_replaceHashPath(encodedPath);
      }

      var prevIndex = allPaths.indexOf(router_createPath(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
     false ? 0 : void 0;
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(router_HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(router_HashChangeEvent$1, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

function router_clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
/**
 * Creates a history object that stores locations in memory.
 */


function router_createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      getUserConfirmation = _props.getUserConfirmation,
      _props$initialEntries = _props.initialEntries,
      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
      _props$initialIndex = _props.initialIndex,
      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = router_createTransitionManager();

  function setState(nextState) {
    router_extends(history, nextState);

    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var index = router_clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? router_createLocation(entry, undefined, createKey()) : router_createLocation(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = router_createPath;

  function push(path, state) {
     false ? 0 : void 0;
    var action = 'PUSH';
    var location = router_createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);

      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }

      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }

  function replace(path, state) {
     false ? 0 : void 0;
    var action = 'REPLACE';
    var location = router_createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    var nextIndex = router_clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    return transitionManager.setPrompt(prompt);
  }

  function listen(listener) {
    return transitionManager.appendListener(listener);
  }

  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
}



// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var router_prop_types = __webpack_require__(5556);
var router_prop_types_default = /*#__PURE__*/__webpack_require__.n(router_prop_types);
;// ./node_modules/mini-create-react-context/dist/esm/index.js





var router_MAX_SIGNED_31_BIT_INT = 1073741823;
var router_commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : {};

function router_getUniqueId() {
  var key = '__global_unique_id__';
  return router_commonjsGlobal[key] = (router_commonjsGlobal[key] || 0) + 1;
}

function router_objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function router_createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function (h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function (handler) {
        return handler(value, changedBits);
      });
    }
  };
}

function router_onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}

function router_createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;

  var contextProp = '__create-react-context-' + router_getUniqueId() + '__';

  var Provider = /*#__PURE__*/function (_Component) {
    router_inheritsLoose(Provider, _Component);

    function Provider() {
      var _this;

      _this = _Component.apply(this, arguments) || this;
      _this.emitter = router_createEventEmitter(_this.props.value);
      return _this;
    }

    var _proto = Provider.prototype;

    _proto.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };

    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;

        if (router_objectIs(oldValue, newValue)) {
          changedBits = 0;
        } else {
          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : router_MAX_SIGNED_31_BIT_INT;

          if (false) {}

          changedBits |= 0;

          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };

    _proto.render = function render() {
      return this.props.children;
    };

    return Provider;
  }(router_external_React_.Component);

  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = (router_prop_types_default()).object.isRequired, _Provider$childContex);

  var Consumer = /*#__PURE__*/function (_Component2) {
    router_inheritsLoose(Consumer, _Component2);

    function Consumer() {
      var _this2;

      _this2 = _Component2.apply(this, arguments) || this;
      _this2.state = {
        value: _this2.getValue()
      };

      _this2.onUpdate = function (newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;

        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };

      return _this2;
    }

    var _proto2 = Consumer.prototype;

    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? router_MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }

      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? router_MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };

    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };

    _proto2.render = function render() {
      return router_onlyChild(this.props.children)(this.state.value);
    };

    return Consumer;
  }(router_external_React_.Component);

  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = (router_prop_types_default()).object, _Consumer$contextType);
  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

var router_index = (router_external_React_default()).createContext || router_createReactContext;

/* harmony default export */ const router_esm = (router_index);

// EXTERNAL MODULE: ./node_modules/path-to-regexp/index.js
var router_path_to_regexp = __webpack_require__(5302);
var router_path_to_regexp_default = /*#__PURE__*/__webpack_require__.n(router_path_to_regexp);
// EXTERNAL MODULE: ./node_modules/react-is/index.js
var router_react_is = __webpack_require__(4363);
;// ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function router_objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}

// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var router_hoist_non_react_statics_cjs = __webpack_require__(4146);
var router_hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(router_hoist_non_react_statics_cjs);
;// ./node_modules/react-router/esm/react-router.js













// TODO: Replace with React.createContext once we can assume React 16+

var router_createNamedContext = function createNamedContext(name) {
  var context = router_esm();
  context.displayName = name;
  return context;
};

var router_historyContext =
/*#__PURE__*/
router_createNamedContext("Router-History");

// TODO: Replace with React.createContext once we can assume React 16+

var router_createNamedContext$1 = function createNamedContext(name) {
  var context = router_esm();
  context.displayName = name;
  return context;
};

var router_context =
/*#__PURE__*/
router_createNamedContext$1("Router");

/**
 * The public API for putting history on context.
 */

var router_Router =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(Router, _React$Component);

  Router.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };

  function Router(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      location: props.history.location
    }; // This is a bit of a hack. We have to start listening for location
    // changes here in the constructor in case there are any <Redirect>s
    // on the initial render. If there are, they will replace/push when
    // they mount and since cDM fires in children before parents, we may
    // get a new location before the <Router> is mounted.

    _this._isMounted = false;
    _this._pendingLocation = null;

    if (!props.staticContext) {
      _this.unlisten = props.history.listen(function (location) {
        if (_this._isMounted) {
          _this.setState({
            location: location
          });
        } else {
          _this._pendingLocation = location;
        }
      });
    }

    return _this;
  }

  var _proto = Router.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;

    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten) this.unlisten();
  };

  _proto.render = function render() {
    return router_external_React_default().createElement(router_context.Provider, {
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    }, router_external_React_default().createElement(router_historyContext.Provider, {
      children: this.props.children || null,
      value: this.props.history
    }));
  };

  return Router;
}((router_external_React_default()).Component);

if (false) {}

/**
 * The public API for a <Router> that stores location in memory.
 */

var router_MemoryRouter =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(MemoryRouter, _React$Component);

  function MemoryRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = router_createMemoryHistory(_this.props);
    return _this;
  }

  var _proto = MemoryRouter.prototype;

  _proto.render = function render() {
    return router_external_React_default().createElement(router_Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return MemoryRouter;
}((router_external_React_default()).Component);

if (false) {}

var router_Lifecycle =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(Lifecycle, _React$Component);

  function Lifecycle() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Lifecycle.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount) this.props.onMount.call(this, this);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount) this.props.onUnmount.call(this, this);
  };

  _proto.render = function render() {
    return null;
  };

  return Lifecycle;
}((router_external_React_default()).Component);

/**
 * The public API for prompting the user before navigating away from a screen.
 */

function router_Prompt(_ref) {
  var message = _ref.message,
      _ref$when = _ref.when,
      when = _ref$when === void 0 ? true : _ref$when;
  return React.createElement(router_context.Consumer, null, function (context) {
    !context ?  false ? 0 : invariant(false) : void 0;
    if (!when || context.staticContext) return null;
    var method = context.history.block;
    return React.createElement(router_Lifecycle, {
      onMount: function onMount(self) {
        self.release = method(message);
      },
      onUpdate: function onUpdate(self, prevProps) {
        if (prevProps.message !== message) {
          self.release();
          self.release = method(message);
        }
      },
      onUnmount: function onUnmount(self) {
        self.release();
      },
      message: message
    });
  });
}

if (false) { var router_messageType; }

var router_cache = {};
var router_cacheLimit = 10000;
var router_cacheCount = 0;

function router_compilePath(path) {
  if (router_cache[path]) return router_cache[path];
  var generator = router_path_to_regexp_default().compile(path);

  if (router_cacheCount < router_cacheLimit) {
    router_cache[path] = generator;
    router_cacheCount++;
  }

  return generator;
}
/**
 * Public API for generating a URL pathname from a path and parameters.
 */


function router_generatePath(path, params) {
  if (path === void 0) {
    path = "/";
  }

  if (params === void 0) {
    params = {};
  }

  return path === "/" ? path : router_compilePath(path)(params, {
    pretty: true
  });
}

/**
 * The public API for navigating programmatically with a component.
 */

function router_Redirect(_ref) {
  var computedMatch = _ref.computedMatch,
      to = _ref.to,
      _ref$push = _ref.push,
      push = _ref$push === void 0 ? false : _ref$push;
  return router_external_React_default().createElement(router_context.Consumer, null, function (context) {
    !context ?  false ? 0 : router_tiny_invariant_invariant(false) : void 0;
    var history = context.history,
        staticContext = context.staticContext;
    var method = push ? history.push : history.replace;
    var location = router_createLocation(computedMatch ? typeof to === "string" ? router_generatePath(to, computedMatch.params) : router_extends({}, to, {
      pathname: router_generatePath(to.pathname, computedMatch.params)
    }) : to); // When rendering in a static context,
    // set the new location immediately.

    if (staticContext) {
      method(location);
      return null;
    }

    return router_external_React_default().createElement(router_Lifecycle, {
      onMount: function onMount() {
        method(location);
      },
      onUpdate: function onUpdate(self, prevProps) {
        var prevLocation = router_createLocation(prevProps.to);

        if (!router_locationsAreEqual(prevLocation, router_extends({}, location, {
          key: prevLocation.key
        }))) {
          method(location);
        }
      },
      to: to
    });
  });
}

if (false) {}

var router_cache$1 = {};
var router_cacheLimit$1 = 10000;
var router_cacheCount$1 = 0;

function router_compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = router_cache$1[cacheKey] || (router_cache$1[cacheKey] = {});
  if (pathCache[path]) return pathCache[path];
  var keys = [];
  var regexp = router_path_to_regexp_default()(path, keys, options);
  var result = {
    regexp: regexp,
    keys: keys
  };

  if (router_cacheCount$1 < router_cacheLimit$1) {
    pathCache[path] = result;
    router_cacheCount$1++;
  }

  return result;
}
/**
 * Public API for matching a URL pathname to a path.
 */


function router_matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }

  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }

  var _options = options,
      path = _options.path,
      _options$exact = _options.exact,
      exact = _options$exact === void 0 ? false : _options$exact,
      _options$strict = _options.strict,
      strict = _options$strict === void 0 ? false : _options$strict,
      _options$sensitive = _options.sensitive,
      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function (matched, path) {
    if (!path && path !== "") return null;
    if (matched) return matched;

    var _compilePath = router_compilePath$1(path, {
      end: exact,
      strict: strict,
      sensitive: sensitive
    }),
        regexp = _compilePath.regexp,
        keys = _compilePath.keys;

    var match = regexp.exec(pathname);
    if (!match) return null;
    var url = match[0],
        values = match.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact) return null;
    return {
      path: path,
      // the path used to match
      url: path === "/" && url === "" ? "/" : url,
      // the matched portion of the URL
      isExact: isExact,
      // whether or not we matched exactly
      params: keys.reduce(function (memo, key, index) {
        memo[key.name] = values[index];
        return memo;
      }, {})
    };
  }, null);
}

function router_isEmptyChildren(children) {
  return React.Children.count(children) === 0;
}

function router_evalChildrenDev(children, props, path) {
  var value = children(props);
   false ? 0 : void 0;
  return value || null;
}
/**
 * The public API for matching a single path and rendering.
 */


var router_Route =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(Route, _React$Component);

  function Route() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Route.prototype;

  _proto.render = function render() {
    var _this = this;

    return router_external_React_default().createElement(router_context.Consumer, null, function (context$1) {
      !context$1 ?  false ? 0 : router_tiny_invariant_invariant(false) : void 0;
      var location = _this.props.location || context$1.location;
      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us
      : _this.props.path ? router_matchPath(location.pathname, _this.props) : context$1.match;

      var props = router_extends({}, context$1, {
        location: location,
        match: match
      });

      var _this$props = _this.props,
          children = _this$props.children,
          component = _this$props.component,
          render = _this$props.render; // Preact uses an empty array as children by
      // default, so use null if that's the case.

      if (Array.isArray(children) && children.length === 0) {
        children = null;
      }

      return router_external_React_default().createElement(router_context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ?  false ? 0 : children(props) : children : component ? router_external_React_default().createElement(component, props) : render ? render(props) : null : typeof children === "function" ?  false ? 0 : children(props) : null);
    });
  };

  return Route;
}((router_external_React_default()).Component);

if (false) {}

function router_react_router_addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}

function router_addBasename(basename, location) {
  if (!basename) return location;
  return router_extends({}, location, {
    pathname: router_react_router_addLeadingSlash(basename) + location.pathname
  });
}

function router_react_router_stripBasename(basename, location) {
  if (!basename) return location;
  var base = router_react_router_addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0) return location;
  return router_extends({}, location, {
    pathname: location.pathname.substr(base.length)
  });
}

function router_createURL(location) {
  return typeof location === "string" ? location : router_createPath(location);
}

function router_staticHandler(methodName) {
  return function () {
      false ? 0 : router_tiny_invariant_invariant(false) ;
  };
}

function router_noop() {}
/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */


var router_StaticRouter =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(StaticRouter, _React$Component);

  function StaticRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.handlePush = function (location) {
      return _this.navigateTo(location, "PUSH");
    };

    _this.handleReplace = function (location) {
      return _this.navigateTo(location, "REPLACE");
    };

    _this.handleListen = function () {
      return router_noop;
    };

    _this.handleBlock = function () {
      return router_noop;
    };

    return _this;
  }

  var _proto = StaticRouter.prototype;

  _proto.navigateTo = function navigateTo(location, action) {
    var _this$props = this.props,
        _this$props$basename = _this$props.basename,
        basename = _this$props$basename === void 0 ? "" : _this$props$basename,
        _this$props$context = _this$props.context,
        context = _this$props$context === void 0 ? {} : _this$props$context;
    context.action = action;
    context.location = router_addBasename(basename, router_createLocation(location));
    context.url = router_createURL(context.location);
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        _this$props2$basename = _this$props2.basename,
        basename = _this$props2$basename === void 0 ? "" : _this$props2$basename,
        _this$props2$context = _this$props2.context,
        context = _this$props2$context === void 0 ? {} : _this$props2$context,
        _this$props2$location = _this$props2.location,
        location = _this$props2$location === void 0 ? "/" : _this$props2$location,
        rest = router_objectWithoutPropertiesLoose(_this$props2, ["basename", "context", "location"]);

    var history = {
      createHref: function createHref(path) {
        return router_react_router_addLeadingSlash(basename + router_createURL(path));
      },
      action: "POP",
      location: router_react_router_stripBasename(basename, router_createLocation(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: router_staticHandler("go"),
      goBack: router_staticHandler("goBack"),
      goForward: router_staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return router_external_React_default().createElement(router_Router, router_extends({}, rest, {
      history: history,
      staticContext: context
    }));
  };

  return StaticRouter;
}((router_external_React_default()).Component);

if (false) {}

/**
 * The public API for rendering the first <Route> that matches.
 */

var router_Switch =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(Switch, _React$Component);

  function Switch() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Switch.prototype;

  _proto.render = function render() {
    var _this = this;

    return router_external_React_default().createElement(router_context.Consumer, null, function (context) {
      !context ?  false ? 0 : router_tiny_invariant_invariant(false) : void 0;
      var location = _this.props.location || context.location;
      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()
      // here because toArray adds keys to all child elements and we do not want
      // to trigger an unmount/remount for two <Route>s that render the same
      // component at different URLs.

      router_external_React_default().Children.forEach(_this.props.children, function (child) {
        if (match == null && router_external_React_default().isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match = path ? router_matchPath(location.pathname, router_extends({}, child.props, {
            path: path
          })) : context.match;
        }
      });
      return match ? router_external_React_default().cloneElement(element, {
        location: location,
        computedMatch: match
      }) : null;
    });
  };

  return Switch;
}((router_external_React_default()).Component);

if (false) {}

/**
 * A public higher-order component to access the imperative API
 */

function router_withRouter(Component) {
  var displayName = "withRouter(" + (Component.displayName || Component.name) + ")";

  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = router_objectWithoutPropertiesLoose(props, ["wrappedComponentRef"]);

    return router_external_React_default().createElement(router_context.Consumer, null, function (context) {
      !context ?  false ? 0 : router_tiny_invariant_invariant(false) : void 0;
      return router_external_React_default().createElement(Component, router_extends({}, remainingProps, context, {
        ref: wrappedComponentRef
      }));
    });
  };

  C.displayName = displayName;
  C.WrappedComponent = Component;

  if (false) {}

  return router_hoist_non_react_statics_cjs_default()(C, Component);
}

var router_useContext = (router_external_React_default()).useContext;
function router_useHistory() {
  if (false) {}

  return router_useContext(router_historyContext);
}
function router_useLocation() {
  if (false) {}

  return router_useContext(router_context).location;
}
function router_useParams() {
  if (false) {}

  var match = router_useContext(router_context).match;
  return match ? match.params : {};
}
function router_useRouteMatch(path) {
  if (false) {}

  var location = router_useLocation();
  var match = router_useContext(router_context).match;
  return path ? router_matchPath(location.pathname, path) : match;
}

if (false) { var router_secondaryBuildName, router_initialBuildName, router_buildNames, router_key, router_global; }


//# sourceMappingURL=react-router.js.map

;// ./node_modules/react-router-dom/esm/react-router-dom.js











/**
 * The public API for a <Router> that uses HTML5 history.
 */

var router_BrowserRouter =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(BrowserRouter, _React$Component);

  function BrowserRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = router_createBrowserHistory(_this.props);
    return _this;
  }

  var _proto = BrowserRouter.prototype;

  _proto.render = function render() {
    return router_external_React_default().createElement(router_Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return BrowserRouter;
}((router_external_React_default()).Component);

if (false) {}

/**
 * The public API for a <Router> that uses window.location.hash.
 */

var router_HashRouter =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(HashRouter, _React$Component);

  function HashRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = router_createHashHistory(_this.props);
    return _this;
  }

  var _proto = HashRouter.prototype;

  _proto.render = function render() {
    return router_external_React_default().createElement(router_Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return HashRouter;
}((router_external_React_default()).Component);

if (false) {}

var router_resolveToLocation = function resolveToLocation(to, currentLocation) {
  return typeof to === "function" ? to(currentLocation) : to;
};
var router_normalizeToLocation = function normalizeToLocation(to, currentLocation) {
  return typeof to === "string" ? router_createLocation(to, null, null, currentLocation) : to;
};

var router_forwardRefShim = function forwardRefShim(C) {
  return C;
};

var router_forwardRef = (router_external_React_default()).forwardRef;

if (typeof router_forwardRef === "undefined") {
  router_forwardRef = router_forwardRefShim;
}

function router_isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

var router_LinkAnchor = router_forwardRef(function (_ref, forwardedRef) {
  var innerRef = _ref.innerRef,
      navigate = _ref.navigate,
      _onClick = _ref.onClick,
      rest = router_objectWithoutPropertiesLoose(_ref, ["innerRef", "navigate", "onClick"]);

  var target = rest.target;

  var props = router_extends({}, rest, {
    onClick: function onClick(event) {
      try {
        if (_onClick) _onClick(event);
      } catch (ex) {
        event.preventDefault();
        throw ex;
      }

      if (!event.defaultPrevented && // onClick prevented default
      event.button === 0 && ( // ignore everything but left clicks
      !target || target === "_self") && // let browser handle "target=_blank" etc.
      !router_isModifiedEvent(event) // ignore clicks with modifier keys
      ) {
          event.preventDefault();
          navigate();
        }
    }
  }); // React 15 compat


  if (router_forwardRefShim !== router_forwardRef) {
    props.ref = forwardedRef || innerRef;
  } else {
    props.ref = innerRef;
  }
  /* eslint-disable-next-line jsx-a11y/anchor-has-content */


  return router_external_React_default().createElement("a", props);
});

if (false) {}
/**
 * The public API for rendering a history-aware <a>.
 */


var router_Link = router_forwardRef(function (_ref2, forwardedRef) {
  var _ref2$component = _ref2.component,
      component = _ref2$component === void 0 ? router_LinkAnchor : _ref2$component,
      replace = _ref2.replace,
      to = _ref2.to,
      innerRef = _ref2.innerRef,
      rest = router_objectWithoutPropertiesLoose(_ref2, ["component", "replace", "to", "innerRef"]);

  return router_external_React_default().createElement(router_context.Consumer, null, function (context) {
    !context ?  false ? 0 : router_tiny_invariant_invariant(false) : void 0;
    var history = context.history;
    var location = router_normalizeToLocation(router_resolveToLocation(to, context.location), context.location);
    var href = location ? history.createHref(location) : "";

    var props = router_extends({}, rest, {
      href: href,
      navigate: function navigate() {
        var location = router_resolveToLocation(to, context.location);
        var method = replace ? history.replace : history.push;
        method(location);
      }
    }); // React 15 compat


    if (router_forwardRefShim !== router_forwardRef) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }

    return router_external_React_default().createElement(component, props);
  });
});

if (false) { var router_refType, router_toType; }

var router_forwardRefShim$1 = function forwardRefShim(C) {
  return C;
};

var router_forwardRef$1 = (router_external_React_default()).forwardRef;

if (typeof router_forwardRef$1 === "undefined") {
  router_forwardRef$1 = router_forwardRefShim$1;
}

function router_joinClassnames() {
  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {
    classnames[_key] = arguments[_key];
  }

  return classnames.filter(function (i) {
    return i;
  }).join(" ");
}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */


var router_NavLink = router_forwardRef$1(function (_ref, forwardedRef) {
  var _ref$ariaCurrent = _ref["aria-current"],
      ariaCurrent = _ref$ariaCurrent === void 0 ? "page" : _ref$ariaCurrent,
      _ref$activeClassName = _ref.activeClassName,
      activeClassName = _ref$activeClassName === void 0 ? "active" : _ref$activeClassName,
      activeStyle = _ref.activeStyle,
      classNameProp = _ref.className,
      exact = _ref.exact,
      isActiveProp = _ref.isActive,
      locationProp = _ref.location,
      sensitive = _ref.sensitive,
      strict = _ref.strict,
      styleProp = _ref.style,
      to = _ref.to,
      innerRef = _ref.innerRef,
      rest = router_objectWithoutPropertiesLoose(_ref, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "sensitive", "strict", "style", "to", "innerRef"]);

  return router_external_React_default().createElement(router_context.Consumer, null, function (context) {
    !context ?  false ? 0 : router_tiny_invariant_invariant(false) : void 0;
    var currentLocation = locationProp || context.location;
    var toLocation = router_normalizeToLocation(router_resolveToLocation(to, currentLocation), currentLocation);
    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202

    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
    var match = escapedPath ? router_matchPath(currentLocation.pathname, {
      path: escapedPath,
      exact: exact,
      sensitive: sensitive,
      strict: strict
    }) : null;
    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);
    var className = isActive ? router_joinClassnames(classNameProp, activeClassName) : classNameProp;
    var style = isActive ? router_extends({}, styleProp, {}, activeStyle) : styleProp;

    var props = router_extends({
      "aria-current": isActive && ariaCurrent || null,
      className: className,
      style: style,
      to: toLocation
    }, rest); // React 15 compat


    if (router_forwardRefShim$1 !== router_forwardRef$1) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }

    return router_external_React_default().createElement(router_Link, props);
  });
});

if (false) { var router_ariaCurrentType; }


//# sourceMappingURL=react-router-dom.js.map

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var router_assertThisInitialized = __webpack_require__(9417);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var router_defineProperty = __webpack_require__(4467);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var router_classnames = __webpack_require__(6942);
var router_classnames_default = /*#__PURE__*/__webpack_require__.n(router_classnames);
// EXTERNAL MODULE: ./node_modules/react-transition-group/index.js
var router_react_transition_group = __webpack_require__(9790);
;// ./node_modules/reactstrap/es/utils.js
 // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443

function router_getScrollbarWidth() {
  var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113

  scrollDiv.style.position = 'absolute';
  scrollDiv.style.top = '-9999px';
  scrollDiv.style.width = '50px';
  scrollDiv.style.height = '50px';
  scrollDiv.style.overflow = 'scroll';
  document.body.appendChild(scrollDiv);
  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  document.body.removeChild(scrollDiv);
  return scrollbarWidth;
}
function router_setScrollbarWidth(padding) {
  document.body.style.paddingRight = padding > 0 ? padding + "px" : null;
}
function router_isBodyOverflowing() {
  return document.body.clientWidth < window.innerWidth;
}
function router_getOriginalBodyPadding() {
  var style = window.getComputedStyle(document.body, null);
  return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);
}
function router_conditionallyUpdateScrollbar() {
  var scrollbarWidth = router_getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433

  var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];
  var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;

  if (router_isBodyOverflowing()) {
    router_setScrollbarWidth(bodyPadding + scrollbarWidth);
  }
}
var router_globalCssModule;
function router_setGlobalCssModule(cssModule) {
  router_globalCssModule = cssModule;
}
function router_mapToCssModules(className, cssModule) {
  if (className === void 0) {
    className = '';
  }

  if (cssModule === void 0) {
    cssModule = router_globalCssModule;
  }

  if (!cssModule) return className;
  return className.split(' ').map(function (c) {
    return cssModule[c] || c;
  }).join(' ');
}
/**
 * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.
 */

function router_omit(obj, omitKeys) {
  var result = {};
  Object.keys(obj).forEach(function (key) {
    if (omitKeys.indexOf(key) === -1) {
      result[key] = obj[key];
    }
  });
  return result;
}
/**
 * Returns a filtered copy of an object with only the specified keys.
 */

function router_pick(obj, keys) {
  var pickKeys = Array.isArray(keys) ? keys : [keys];
  var length = pickKeys.length;
  var key;
  var result = {};

  while (length > 0) {
    length -= 1;
    key = pickKeys[length];
    result[key] = obj[key];
  }

  return result;
}
var router_warned = {};
function router_warnOnce(message) {
  if (!router_warned[message]) {
    /* istanbul ignore else */
    if (typeof console !== 'undefined') {
      console.error(message); // eslint-disable-line no-console
    }

    router_warned[message] = true;
  }
}
function router_deprecated(propType, explanation) {
  return function validate(props, propName, componentName) {
    if (props[propName] !== null && typeof props[propName] !== 'undefined') {
      router_warnOnce("\"" + propName + "\" property of \"" + componentName + "\" has been deprecated.\n" + explanation);
    }

    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return propType.apply(void 0, [props, propName, componentName].concat(rest));
  };
} // Shim Element if needed (e.g. in Node environment)

var router_Element = typeof window === 'object' && window.Element || function () {};

function router_DOMElement(props, propName, componentName) {
  if (!(props[propName] instanceof router_Element)) {
    return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');
  }
}
var router_targetPropType = router_prop_types_default().oneOfType([(router_prop_types_default()).string, (router_prop_types_default()).func, router_DOMElement, router_prop_types_default().shape({
  current: (router_prop_types_default()).any
})]);
var router_tagPropType = router_prop_types_default().oneOfType([(router_prop_types_default()).func, (router_prop_types_default()).string, router_prop_types_default().shape({
  $$typeof: (router_prop_types_default()).symbol,
  render: (router_prop_types_default()).func
}), router_prop_types_default().arrayOf(router_prop_types_default().oneOfType([(router_prop_types_default()).func, (router_prop_types_default()).string, router_prop_types_default().shape({
  $$typeof: (router_prop_types_default()).symbol,
  render: (router_prop_types_default()).func
})]))]);
/* eslint key-spacing: ["error", { afterColon: true, align: "value" }] */
// These are all setup to match what is in the bootstrap _variables.scss
// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss

var router_TransitionTimeouts = {
  Fade: 150,
  // $transition-fade
  Collapse: 350,
  // $transition-collapse
  Modal: 300,
  // $modal-transition
  Carousel: 600 // $carousel-transition

}; // Duplicated Transition.propType keys to ensure that Reactstrap builds
// for distribution properly exclude these keys for nested child HTML attributes
// since `react-transition-group` removes propTypes in production builds.

var router_TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];
var router_TransitionStatuses = {
  ENTERING: 'entering',
  ENTERED: 'entered',
  EXITING: 'exiting',
  EXITED: 'exited'
};
var router_keyCodes = {
  esc: 27,
  space: 32,
  enter: 13,
  tab: 9,
  up: 38,
  down: 40,
  home: 36,
  end: 35,
  n: 78,
  p: 80
};
var router_PopperPlacements = (/* unused pure expression or super */ null && (['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']));
var router_utils_canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function router_isReactRefObj(target) {
  if (target && typeof target === 'object') {
    return 'current' in target;
  }

  return false;
}

function router_getTag(value) {
  if (value == null) {
    return value === undefined ? '[object Undefined]' : '[object Null]';
  }

  return Object.prototype.toString.call(value);
}

function router_toNumber(value) {
  var type = typeof value;
  var NAN = 0 / 0;

  if (type === 'number') {
    return value;
  }

  if (type === 'symbol' || type === 'object' && router_getTag(value) === '[object Symbol]') {
    return NAN;
  }

  if (router_isObject(value)) {
    var other = typeof value.valueOf === 'function' ? value.valueOf() : value;
    value = router_isObject(other) ? "" + other : other;
  }

  if (type !== 'string') {
    return value === 0 ? value : +value;
  }

  value = value.replace(/^\s+|\s+$/g, '');
  var isBinary = /^0b[01]+$/i.test(value);
  return isBinary || /^0o[0-7]+$/i.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value;
}
function router_isObject(value) {
  var type = typeof value;
  return value != null && (type === 'object' || type === 'function');
}
function router_isFunction(value) {
  if (!router_isObject(value)) {
    return false;
  }

  var tag = router_getTag(value);
  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';
}
function router_findDOMElements(target) {
  if (router_isReactRefObj(target)) {
    return target.current;
  }

  if (router_isFunction(target)) {
    return target();
  }

  if (typeof target === 'string' && router_utils_canUseDOM) {
    var selection = document.querySelectorAll(target);

    if (!selection.length) {
      selection = document.querySelectorAll("#" + target);
    }

    if (!selection.length) {
      throw new Error("The target '" + target + "' could not be identified in the dom, tip: check spelling");
    }

    return selection;
  }

  return target;
}
function router_isArrayOrNodeList(els) {
  if (els === null) {
    return false;
  }

  return Array.isArray(els) || router_utils_canUseDOM && typeof els.length === 'number';
}
function router_getTarget(target, allElements) {
  var els = router_findDOMElements(target);

  if (allElements) {
    if (router_isArrayOrNodeList(els)) {
      return els;
    }

    if (els === null) {
      return [];
    }

    return [els];
  } else {
    if (router_isArrayOrNodeList(els)) {
      return els[0];
    }

    return els;
  }
}
var router_defaultToggleEvents = (/* unused pure expression or super */ null && (['touchstart', 'click']));
function router_addMultipleEventListeners(_els, handler, _events, useCapture) {
  var els = _els;

  if (!router_isArrayOrNodeList(els)) {
    els = [els];
  }

  var events = _events;

  if (typeof events === 'string') {
    events = events.split(/\s+/);
  }

  if (!router_isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) {
    throw new Error("\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\n      The second must be a function.\n      The third is a string or an array of strings that represents DOM events\n    ");
  }

  Array.prototype.forEach.call(events, function (event) {
    Array.prototype.forEach.call(els, function (el) {
      el.addEventListener(event, handler, useCapture);
    });
  });
  return function removeEvents() {
    Array.prototype.forEach.call(events, function (event) {
      Array.prototype.forEach.call(els, function (el) {
        el.removeEventListener(event, handler, useCapture);
      });
    });
  };
}
var router_focusableElements = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'object', 'embed', '[tabindex]:not(.modal)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])'];
;// ./node_modules/reactstrap/es/Collapse.js





var router_excluded = ["tag", "isOpen", "className", "navbar", "cssModule", "children", "innerRef"];

var router_transitionStatusToCl;

function router_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function router_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { router_ownKeys(Object(source), true).forEach(function (key) { (0,router_defineProperty/* default */.A)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { router_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }







var router_propTypes = router_objectSpread(router_objectSpread({}, router_react_transition_group.Transition.propTypes), {}, {
  isOpen: (router_prop_types_default()).bool,
  children: router_prop_types_default().oneOfType([router_prop_types_default().arrayOf((router_prop_types_default()).node), (router_prop_types_default()).node]),
  tag: router_tagPropType,
  className: (router_prop_types_default()).node,
  navbar: (router_prop_types_default()).bool,
  cssModule: (router_prop_types_default()).object,
  innerRef: router_prop_types_default().oneOfType([(router_prop_types_default()).func, (router_prop_types_default()).string, (router_prop_types_default()).object])
});

var router_defaultProps = router_objectSpread(router_objectSpread({}, router_react_transition_group.Transition.defaultProps), {}, {
  isOpen: false,
  appear: false,
  enter: true,
  exit: true,
  tag: 'div',
  timeout: router_TransitionTimeouts.Collapse
});

var router_transitionStatusToClassHash = (router_transitionStatusToCl = {}, router_transitionStatusToCl[router_TransitionStatuses.ENTERING] = 'collapsing', router_transitionStatusToCl[router_TransitionStatuses.ENTERED] = 'collapse show', router_transitionStatusToCl[router_TransitionStatuses.EXITING] = 'collapsing', router_transitionStatusToCl[router_TransitionStatuses.EXITED] = 'collapse', router_transitionStatusToCl);

function router_getTransitionClass(status) {
  return router_transitionStatusToClassHash[status] || 'collapse';
}

function router_getHeight(node) {
  return node.scrollHeight;
}

var router_Collapse = /*#__PURE__*/function (_Component) {
  router_inheritsLoose(Collapse, _Component);

  function Collapse(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      height: null
    };
    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {
      _this[name] = _this[name].bind((0,router_assertThisInitialized/* default */.A)(_this));
    });
    return _this;
  }

  var _proto = Collapse.prototype;

  _proto.onEntering = function onEntering(node, isAppearing) {
    this.setState({
      height: router_getHeight(node)
    });
    this.props.onEntering(node, isAppearing);
  };

  _proto.onEntered = function onEntered(node, isAppearing) {
    this.setState({
      height: null
    });
    this.props.onEntered(node, isAppearing);
  };

  _proto.onExit = function onExit(node) {
    this.setState({
      height: router_getHeight(node)
    });
    this.props.onExit(node);
  };

  _proto.onExiting = function onExiting(node) {
    // getting this variable triggers a reflow
    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars

    this.setState({
      height: 0
    });
    this.props.onExiting(node);
  };

  _proto.onExited = function onExited(node) {
    this.setState({
      height: null
    });
    this.props.onExited(node);
  };

  _proto.render = function render() {
    var _this2 = this;

    var _this$props = this.props,
        Tag = _this$props.tag,
        isOpen = _this$props.isOpen,
        className = _this$props.className,
        navbar = _this$props.navbar,
        cssModule = _this$props.cssModule,
        children = _this$props.children,
        innerRef = _this$props.innerRef,
        otherProps = router_objectWithoutPropertiesLoose(_this$props, router_excluded);

    var height = this.state.height;
    var transitionProps = router_pick(otherProps, router_TransitionPropTypeKeys);
    var childProps = router_omit(otherProps, router_TransitionPropTypeKeys);
    return /*#__PURE__*/router_external_React_default().createElement(router_react_transition_group.Transition, router_extends({}, transitionProps, {
      in: isOpen,
      onEntering: this.onEntering,
      onEntered: this.onEntered,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }), function (status) {
      var collapseClass = router_getTransitionClass(status);
      var classes = router_mapToCssModules(router_classnames_default()(className, collapseClass, navbar && 'navbar-collapse'), cssModule);
      var style = height === null ? null : {
        height: height
      };
      return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, childProps, {
        style: router_objectSpread(router_objectSpread({}, childProps.style), style),
        className: classes,
        ref: _this2.props.innerRef
      }), children);
    });
  };

  return Collapse;
}(router_external_React_.Component);

router_Collapse.propTypes = router_propTypes;
router_Collapse.defaultProps = router_defaultProps;
/* harmony default export */ const router_es_Collapse = (router_Collapse);
;// ./src/lib/l10n.js
let router_map = {};
function router_register(ids) {
  for (const id of ids) {
    router_map[id] = true;
  }
}
function router_mapToLocal() {
  router_map = router_getMessages(Object.keys(router_map));
}
const router_get = chrome.i18n.getMessage;
function router_getMessages(ids) {
  const result = {};
  for (const id of ids) {
    result[id] = chrome.i18n.getMessage(id);
  }
  return result;
}
function router_set(ids) {
  router_register(ids);
  router_mapToLocal();
}
function router_getLanguage() {
  return chrome.i18n.getUILanguage();
}
function router_localizeDateTime(date, options = {}) {
  return date.toLocaleDateString(router_getLanguage(), options);
}
;// ./src/lib/constants.js
/* constants */

// min height for large frame
const router_LARGE_FRAME = 600;
// frame constants
const router_FRAME_STATUS = 'mveloFrame';
// frame status
const router_FRAME_ATTACHED = 'att';
const router_FRAME_DETACHED = 'det';
// armor header type
const router_PGP_MESSAGE = 'msg';
const router_PGP_SIGNATURE = 'sig';
const router_PGP_PUBLIC_KEY = 'pub';
const router_PGP_PRIVATE_KEY = 'priv';
// key status
const router_PGP_KEYSTATUS_VALID = 3;
// display decrypted message
const router_DISPLAY_INLINE = 'inline';
const router_DISPLAY_POPUP = 'popup';
// editor type
const router_PLAIN_TEXT = 'plain';
// keyring
const router_KEYRING_DELIMITER = '|#|';
const router_MAIN_KEYRING_ID = `localhost${router_KEYRING_DELIMITER}mailvelope`;
const router_GNUPG_KEYRING_ID = `localhost${router_KEYRING_DELIMITER}gnupg`;
// colors for secure background
const router_SECURE_COLORS = ['#e9e9e9', '#c0c0c0', '#808080', '#ffce1e', '#ff0000', '#85154a', '#6f2b8b', '#b3d1e3', '#315bab', '#1c449b', '#4c759c', '#1e8e9f', '#93b536'];
// 50 MB file size limit
const router_MAX_FILE_UPLOAD_SIZE = 50 * 1024 * 1024;
// stable id if app runs in top frame
const router_APP_TOP_FRAME_ID = 'apptopframeid';
// status of PGP key or user
const router_KEY_STATUS = {
  invalid: 0,
  expired: 1,
  revoked: 2,
  valid: 3,
  no_self_cert: 4
};
;// ./src/res/common.json
const router_common_namespaceObject = /*#__PURE__*/JSON.parse('{"L":{"african_mask":"bgAfricanMask","big_ben":"bgBigBen","boat":"bgBoat","brandenburg_gate":"bgBrandenburgGate","chichen_itza":"bgChichenItza","colosseum":"bgColosseum","eagle":"bgEagle","eiffel_tower":"bgEiffelTower","elephant":"bgElephant","forbidden_city":"bgForbiddenCity","golden_gate_bridge":"bgGoldenGateBridge","great_wall":"bgGreatWall","kilimanjaro":"bgKilimanjaro","moai_easter_island":"bgMoaiEasterIsland","mountain_fuji":"bgMountainFuji","opera_house":"bgOperaHouse","pisa_tower":"bgPisaTower","pyramid":"bgPyramid","rhinoceros":"bgRhinoceros","saint_basils_cathedral":"bgSaintBasilsCathedral","statue_of_liberty":"bgStatueOfLiberty","torii_shrine":"bgToriiShrine","toucan":"bgToucan","whale":"bgWhale"},"J":{"petrol":{"bg":"#caebdd","icon":"#85c9af"},"corn":{"bg":"#faebae","icon":"#e3d18b"},"salmon":{"bg":"#f7cab5","icon":"#e0a98e"},"lavender":{"bg":"#d9caeb","icon":"#baa7d9"},"sky":{"bg":"#cadaeb","icon":"#90b5da"}}}');
;// ./src/lib/svg-file-parser.js
async function router_parseSVG(url) {
  const extUrl = chrome.runtime.getURL(url);
  const svg = await router_loadFile(extUrl);
  const parser = new DOMParser();
  return parser.parseFromString(svg, 'image/svg+xml');
}
async function router_loadFile(url) {
  const response = await fetch(url);
  const data = await response.text();
  if (response.ok) {
    return data;
  } else {
    return Promise.reject({
      status: response.status,
      statusText: response.statusText,
      err: data
    });
  }
}
;// ./src/lib/util.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




class router_MvError extends Error {
  constructor(msg, code = 'INTERNAL_ERROR') {
    super(msg);
    this.code = code;
  }
}
function router_sortAndDeDup(unordered, compFn) {
  const result = [];
  const sorted = unordered.sort(compFn);
  // remove duplicates
  for (let i = 0; i < sorted.length; i++) {
    if (i === 0 || compFn && compFn(sorted[i - 1], sorted[i]) !== 0 || !compFn && sorted[i - 1] !== sorted[i]) {
      result.push(sorted[i]);
    }
  }
  return result;
}

/**
 * Remove duplicates from list, by default compares items as strings
 * @param  {Array} list - the list of items with duplicates
 * @param {Function} [compFn] compare function that gets element that should be added to result list plus the current result list
 *                            must return true if element should be added to the result list
 * @return {Array} - the list of items without duplicates
 */
function router_deDup(list = [], compFn = (element, array) => array.indexOf(element) === -1) {
  const result = [];
  for (const item of list) {
    if (compFn(item, result)) {
      result.push(item);
    }
  }
  return result;
}
async function router_filterAsync(array, asyncFilterFn) {
  const promises = array.map(async item => (await asyncFilterFn(item)) && item);
  const result = await Promise.all(promises);
  return result.filter(item => item);
}
async function router_someAsync(array, asyncSomeFn) {
  const promises = array.map(asyncSomeFn);
  const result = await Promise.all(promises);
  return result.some(item => item);
}
function router_wait(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
function router_getUUID() {
  if (crypto.randomUUID) {
    return crypto.randomUUID().replaceAll('-', '');
  } else {
    let result = '';
    const buf = new Uint16Array(8);
    crypto.getRandomValues(buf);
    for (let i = 0; i < buf.length; i++) {
      result += buf[i].toString(16);
    }
    return result;
  }
}
function router_encodeHTML(text) {
  return String(text).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;').replace(/\//g, '&#x2F;');
}
function router_decodeHTML(html) {
  return String(html).replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&#039;/g, "\'").replace(/&#x2F;/g, '\/');
}
function router_parseHTML(html) {
  const htmlDoc = new DOMParser().parseFromString(html, 'text/html');
  return htmlDoc.body.childNodes;
}
function router_decodeQuotedPrint(armored) {
  return armored.replace(/=3D=3D\s*$/m, '==').replace(/=3D\s*$/m, '=').replace(/=3D(\S{4})\s*$/m, '=$1');
}

/**
 * Encode UTF-8 string
 * @param  {String} str
 * @return {Uint8Array}
 */
function router_encodeUtf8(str) {
  const encoder = new TextEncoder('utf-8');
  return encoder.encode(str);
}

/**
 * Normalize PGP armored message
 * @param  {String} msg
 * @param  {Regex} typeRegex - filter message with this Regex
 * @return {String}
 */
function router_normalizeArmored(msg, typeRegex) {
  // filtering to get well defined PGP message format
  msg = msg.replace(/\r\n/g, '\n'); // unify new line characters
  msg = msg.replace(/\n\s+/g, '\n'); // compress sequence of whitespace and new line characters to one new line
  msg = msg.replace(/[^\S\r\n]/g, ' '); // unify white space characters (all \s without \r and \n)
  if (typeRegex) {
    msg = msg.match(typeRegex);
    if (msg) {
      msg = msg[0];
    } else {
      throw new router_MvError('Could not extract valid PGP message', 'INVALID_ARMORED_BLOCK');
    }
  }
  msg = msg.replace(/^(\s?>)+/gm, ''); // remove quotation
  msg = msg.replace(/^\s+/gm, ''); // remove leading whitespace
  msg = msg.replace(/:.*\n(?!.*:)/, '$&\n'); // insert new line after last armor header
  msg = msg.replace(/-----\n(?!.*:)/, '$&\n'); // insert new line if no header
  msg = router_decodeQuotedPrint(msg);
  return msg;
}
function router_html2text(html) {
  html = html.replace(/\n/g, ' '); // replace new line with space
  html = html.replace(/(<br>)/g, '\n'); // replace <br> with new line
  html = html.replace(/<\/(blockquote|div|dl|dt|dd|form|h1|h2|h3|h4|h5|h6|hr|ol|p|pre|table|tr|td|ul|li|section|header|footer)>/g, '\n'); // replace block closing tags </..> with new line
  html = html.replace(/<(.+?)>/g, ''); // remove tags
  html = html.replace(/&nbsp;/g, ' '); // replace non-breaking space with whitespace
  html = html.replace(/\n{3,}/g, '\n\n'); // compress new line
  return router_decodeHTML(html);
}

/**
 * This function will return the byte size of any UTF-8 string you pass to it.
 * @param {string} str
 * @returns {number}
 */
function router_byteCount(str) {
  return encodeURI(str).split(/%..|./).length - 1;
}
function router_ab2str(buf) {
  const ab = new Uint8Array(buf);
  return router_Uint8Array2str(ab);
}
function router_Uint8Array2str(ab) {
  let str = '';
  const CHUNK_SIZE = Math.pow(2, 15);
  let offset;
  let len;
  let subab;
  for (offset = 0; offset < ab.length; offset += CHUNK_SIZE) {
    len = Math.min(CHUNK_SIZE, ab.length - offset);
    subab = ab.subarray(offset, offset + len);
    str += String.fromCharCode.apply(null, subab);
  }
  return str;
}
function router_str2ab(str) {
  const bufView = router_str2Uint8Array(str);
  return bufView.buffer;
}
function router_str2Uint8Array(str) {
  const bufView = new Uint8Array(str.length);
  for (let i = 0; i < str.length; i++) {
    bufView[i] = str.charCodeAt(i);
  }
  return bufView;
}
function router_str2bool(value) {
  if (value && typeof value === 'string') {
    if (value.toLowerCase() === 'true') {
      return true;
    }
    if (value.toLowerCase() === 'false') {
      return false;
    }
  }
  return value;
}
function router_ab2hex(ab) {
  return Array.from(new Uint8Array(ab)).map(b => b.toString(16).padStart(2, '0')).join('');
}
function router_base64EncodeUrl(str) {
  return str.replace(/\+/g, '-').replace(/\//g, '_').replace(/\=+$/, '');
}
function router_base64DecodeUrl(str) {
  str = `${str}===`.slice(0, str.length + str.length % 4);
  return str.replace(/-/g, '+').replace(/_/g, '/');
}
function router_dataURL2str(dataURL) {
  const base64 = router_dataURL2base64(dataURL);
  return atob(base64);
}
function router_dataURL2base64(dataURL) {
  return dataURL.split(';base64,')[1];
}
function router_generateSecurityBackground({
  width,
  height,
  scaling = 1,
  angle = 0,
  colorId = 0
}) {
  const iconWidth = width * scaling;
  const iconHeight = height * scaling;
  const iconColor = router_SECURE_COLORS[colorId];
  return `<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" id="secBgnd" version="1.1" width="${iconWidth}px" height="${iconHeight}px" viewBox="0 0 27 27"><path transform="rotate(${angle} 14 14)" style="fill: ${iconColor};" d="m 13.963649,25.901754 c -4.6900005,0 -8.5000005,-3.78 -8.5000005,-8.44 0,-1.64 0.47,-3.17 1.29,-4.47 V 9.0417546 c 0,-3.9399992 3.23,-7.1499992 7.2000005,-7.1499992 3.97,0 7.2,3.21 7.2,7.1499992 v 3.9499994 c 0.82,1.3 1.3,2.83 1.3,4.48 0,4.65 -3.8,8.43 -8.49,8.43 z m -1.35,-7.99 v 3.33 h 0 c 0,0.02 0,0.03 0,0.05 0,0.74 0.61,1.34 1.35,1.34 0.75,0 1.35,-0.6 1.35,-1.34 0,-0.02 0,-0.03 0,-0.05 h 0 v -3.33 c 0.63,-0.43 1.04,-1.15 1.04,-1.97 0,-1.32 -1.07,-2.38 -2.4,-2.38 -1.32,0 -2.4,1.07 -2.4,2.38 0.01,0.82 0.43,1.54 1.06,1.97 z m 6.29,-8.8699994 c 0,-2.7099992 -2.22,-4.9099992 -4.95,-4.9099992 -2.73,0 -4.9500005,2.2 -4.9500005,4.9099992 V 10.611754 C 10.393649,9.6217544 12.103649,9.0317546 13.953649,9.0317546 c 1.85,0 3.55,0.5899998 4.94,1.5799994 l 0.01,-1.5699994 z" /></svg>`;
}
async function router_getSecurityBackground(port) {
  const background = await port.send('get-security-background');
  const image = background.bgIcon ? (await router_generateSecurityBGSVG(background)).outerHTML : router_generateSecurityBackground(background);
  const color = background.bgColor ? router_common_namespaceObject.J[background.bgColor].bg : background.color;
  return {
    image: `url(data:image/svg+xml;base64,${btoa(image)})`,
    color
  };
}
async function router_generateSecurityBGSVG({
  bgIcon,
  bgColor
}) {
  const svgTemplateUrl = 'img/security/template.svg';
  const {
    documentElement: svgTemplate
  } = await router_parseSVG(svgTemplateUrl);
  const tileWidth = 640;
  svgTemplate.setAttribute('width', tileWidth);
  svgTemplate.getElementById('template').setAttribute('fill', router_common_namespaceObject.J[bgColor].icon);
  const svgBgIconUrl = `img/security/${bgIcon}.svg`;
  const {
    documentElement: svgBgIcon
  } = await router_parseSVG(svgBgIconUrl);
  const paths = svgBgIcon.getElementsByTagName('path');
  for (const path of paths) {
    path.style.fill = router_common_namespaceObject.J[bgColor].icon;
  }
  const placeholders = svgTemplate.querySelectorAll('.icon');
  for (const placeholderElem of placeholders) {
    const gElem = placeholderElem.querySelector('g:last-child');
    gElem.firstElementChild.remove();
    const clonedSvgBgIcon = svgBgIcon.cloneNode(true);
    while (clonedSvgBgIcon.childNodes.length > 0) {
      gElem.appendChild(clonedSvgBgIcon.childNodes[0]);
    }
  }
  return svgTemplate;
}
function router_matchPattern2RegEx(matchPattern) {
  return new RegExp(`^${router_matchPattern2RegExString(matchPattern)}$`);
}
function router_matchPattern2RegExString(matchPattern) {
  return matchPattern.replace(/\./g, '\\.').replace(/^\*\\\./, '(\\w+(-\\w+)*\\.)*');
}
function router_mapError(error = {}) {
  return {
    message: error.message || 'Unexpected error.',
    code: error.code || 'INTERNAL_ERROR'
  };
}
class router_PromiseQueue {
  constructor() {
    this.queue = [];
  }
  push(thisArg, method, args) {
    const {
      promise,
      resolve,
      reject
    } = Promise.withResolvers();
    this.queue.push({
      promise,
      resolve,
      reject,
      thisArg,
      method,
      args
    });
    if (this.queue.length === 1) {
      this._next();
    }
    return promise;
  }
  _next() {
    if (this.queue.length === 0) {
      return;
    }
    const nextEntry = this.queue[0];
    setTimeout(() => {
      nextEntry.thisArg[nextEntry.method].apply(nextEntry.thisArg, nextEntry.args).then(result => {
        nextEntry.resolve(result);
      }).catch(error => {
        nextEntry.reject(error);
      }).then(() => {
        this.queue.shift();
        this._next();
      });
    }, 0);
  }
}

/**
 * Waterfall of async processes
 * @param  {Function} process - has to return Promise, result as array
 * @param  {Array} list - each item is processed
 * @return {Promise} - resolved when all processes finished with end result as array
 */
/* eslint-disable arrow-body-style */
function router_sequential(process, list) {
  return list.reduce((acc, item) => {
    return acc.then(result => {
      return process(item).then(processResult => {
        result.push(...processResult);
        return result;
      });
    });
  }, Promise.resolve([]));
}
/* eslint-enable arrow-body-style */

/**
 * Validate an email address.
 * @param  {String} address   The email address to validate
 * @return {Boolean}          True if valid, false if not
 */
function router_checkEmail(address) {
  const pattern = /^[+a-zA-Z0-9_.!#$%&'*\/=?^`{|}~-]+@([a-zA-Z0-9-]+\.)+[a-zA-Z0-9]{2,63}$/;
  return pattern.test(address);
}

/**
 * Normalize parameter to Array. falsy -> []
 * @param  {Any}  param
 * @return {Array}
 */
function router_toArray(param) {
  if (!param) {
    return [];
  }
  if (!Array.isArray(param)) {
    return [param];
  }
  return param;
}

/**
 * Validate an url
 * @param  {String} url       The URL to validate
 * @return {Boolean}          True if valid, false if not
 */
function router_checkUrl(url) {
  const pattern = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/gi;
  return pattern.test(url);
}
function router_addDocumentTitle(text) {
  const title = document.createElement('title');
  title.appendChild(document.createTextNode(text));
  document.head.appendChild(title);
}
function router_formatFpr(fpr) {
  return fpr.toUpperCase().match(/.{1,4}/g).join(' ');
}
function router_isVisible(element) {
  return Boolean(element && (element.offsetWidth || element.offsetHeight || element.getClientRects().length));
}
function router_firstParent(element, selector) {
  while (element) {
    if (element.nodeType === Node.ELEMENT_NODE && element.matches(selector)) {
      return element;
    }
    element = element.parentNode;
  }
}
const router_brands = navigator && navigator.userAgentData && navigator.userAgentData.brands;
const router_brand = !router_brands ? {
  other: true
} : {
  chrome: router_brands.some(({
    brand
  }) => brand === 'Google Chrome'),
  edge: router_brands.some(({
    brand
  }) => brand === 'Microsoft Edge'),
  chromium: router_brands.some(({
    brand
  }) => brand === 'Chromium')
};
function router_parseViewName(viewName) {
  const pair = viewName.split('-');
  if (pair.length !== 2) {
    throw new Error('Invalid view name.');
  }
  return {
    type: pair[0],
    id: pair[1]
  };
}
;// ./src/lib/EventHandler.js
/**
 * Copyright (C) 2016-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */



/**
 * Event handler is an abstraction on top of Port to support methods 'on', 'emit' and 'send'.
 * @param {Port} port - port object received from runtime.connect()
 * @param {Map} handlers - handler map of parent event handler
 */
class router_EventHandler {
  #reply;
  #replyCount = 0;
  #uninstallListener = [];
  #uninstallInterval;
  #portName;
  #activePortMessages = true;
  #connectListener = [];
  #disconnectListener = [];
  constructor(port, handlers) {
    if (port) {
      this.initPort(port);
    }
    this._handlers = handlers || new Map();
    this._handlerObject = null;
  }

  /**
   * Open port to background script
   * @param  {String} sender identifier of sender (type + id)
   * @return {EventHandler}        initialized EventHandler
   */
  static connect(sender, handlerObject) {
    const eventHandler = new router_EventHandler(chrome.runtime.connect({
      name: sender
    }));
    eventHandler._handlerObject = handlerObject;
    chrome.runtime.onMessage.addListener(eventHandler.handleRuntimeMessage.bind(eventHandler));
    setTimeout(() => eventHandler.triggerConnectListener(), 0);
    return eventHandler;
  }
  activatePortMessages() {
    this.#activePortMessages = true;
  }
  deactivatePortMessages() {
    this.#activePortMessages = false;
  }
  #checkConnection() {
    if (this._port) {
      return;
    }
    const port = chrome.runtime.connect({
      name: this.#portName
    });
    this.initPort(port);
    this.triggerConnectListener();
  }
  handleRuntimeMessage(msg) {
    switch (msg.event) {
      case 'reconnect':
        this.#checkConnection();
        break;
    }
  }
  initPort(port) {
    this._port = port;
    this._port.onMessage.addListener(this.handlePortMessage.bind(this));
    this.#portName = port.name;
    if (this._port.onDisconnect) {
      this._port.onDisconnect.addListener(() => this.handleDisconnect());
      for (const listener of this.#disconnectListener) {
        this._port.onDisconnect.addListener(listener);
      }
    }
  }
  handleDisconnect() {
    this.clearPort();
    this.#reply?.forEach(({
      reject
    }) => reject({
      message: 'The Mailvelope service worker was shutdown after 30s of inactivity. Please try again.',
      code: 'INTERNAL_ERROR'
    }));
    this.#reply = null;
    this.#replyCount = 0;
  }
  clearPort() {
    this._port = null;
  }

  /**
   * Disconnect port
   */
  disconnect() {
    if (this._port) {
      this._port.disconnect();
    }
  }

  /**
   * We can detect an uninstall event if the field chrome.runtime.id is cleared
   */
  #checkUninstall() {
    if (chrome.runtime?.id) {
      return;
    }
    for (const listener of this.#uninstallListener) {
      listener();
    }
    clearInterval(this.#uninstallInterval);
  }
  get onDisconnect() {
    const obj = {};
    obj.addListener = listener => {
      this._port.onDisconnect.addListener(listener);
      this.#disconnectListener.push(listener);
    };
    return obj;
  }
  get onConnect() {
    const obj = {};
    obj.addListener = listener => this.#connectListener.push(listener);
    return obj;
  }
  triggerConnectListener() {
    this.#connectListener.forEach(listener => listener());
  }
  get onUninstall() {
    const obj = {};
    obj.addListener = listener => {
      this.#uninstallListener.push(listener);
      if (!this.#uninstallInterval) {
        this.#uninstallInterval = setInterval(() => this.#checkUninstall(), 2000);
      }
    };
    return obj;
  }

  /**
   * Generic port message handler that can be attached via port.onMessage.addListener().
   * Once set up, events can be handled with on('event', function(options) {})
   * @param  {String} options.event   The event descriptor
   * @param  {Object} options         Contains message attributes and data
   */
  handlePortMessage(options = {}) {
    if (!this.#activePortMessages) {
      return;
    }
    if (this._handlers.has(options.event)) {
      const handler = this._handlers.get(options.event);
      if (options._reply) {
        // sender expects reply
        Promise.resolve().then(() => handler.call(this, options)).then(result => this.emit('_reply', {
          result,
          _reply: options._reply
        })).catch(error => this.emit('_reply', {
          error: router_mapError(error),
          _reply: options._reply
        }));
      } else {
        // normal one way communication
        handler.call(this, options);
      }
    } else if (options.event === '_reply') {
      // we have received a reply
      const replyHandler = this.#reply.get(options._reply);
      this.#reply.delete(options._reply);
      if (options.error) {
        replyHandler.reject(options.error);
      } else {
        replyHandler.resolve(options.result);
      }
    } else {
      console.log('Unknown event', options);
    }
  }

  /**
   * The new event handling style to asign a function to an event.
   * @param  {String} event       The event descriptor
   * @param  {Function} handler   The event handler
   */
  on(event, handler) {
    if (!event || typeof event !== 'string' || event === '_reply' || typeof handler !== 'function') {
      throw new Error('Invalid event handler!');
    }
    this._handlers.set(event, handler.bind(this._handlerObject || this));
  }

  /**
   * Helper to emit events via postMessage using a port.
   * @param  {String} event     The event descriptor
   * @param  {Object} options   (optional) Data to be sent in the event
   */
  emit(event, options = {}) {
    if (!event || typeof event !== 'string') {
      throw new Error('Invalid event!');
    }
    this.#checkConnection();
    options.event = event;
    this._port.postMessage(options);
  }
  trigger(event, options = {}) {
    if (!event || typeof event !== 'string') {
      throw new Error('Invalid event!');
    }
    options.event = event;
    if (!this._handlers.has(options.event)) {
      throw new Error('Unknown event!');
    }
    const handler = this._handlers.get(options.event);
    handler.call(this, options);
  }

  /**
   * Like emit but receiver can send response
   * @param  {String} event     The event descriptor
   * @param  {Object} options   (optional) Data to be sent in the event
   * @param  {Object} port      (optional) The port to be used. If
   *                            not specified, the main port is used.
   * @return {Promise}
   */
  send(event, options = {}) {
    return new Promise((resolve, reject) => {
      if (!event || typeof event !== 'string') {
        return reject(new Error('Invalid event!'));
      }
      this.#checkConnection();
      if (!this.#reply) {
        this.#reply = new Map();
      }
      options.event = event;
      options._reply = ++this.#replyCount;
      this.#reply.set(options._reply, {
        resolve,
        reject
      });
      this._port.postMessage(options);
    });
  }
}
;// ./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs
const router_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds",
  },

  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds",
  },

  halfAMinute: "half a minute",

  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes",
  },

  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes",
  },

  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours",
  },

  xHours: {
    one: "1 hour",
    other: "{{count}} hours",
  },

  xDays: {
    one: "1 day",
    other: "{{count}} days",
  },

  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks",
  },

  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks",
  },

  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months",
  },

  xMonths: {
    one: "1 month",
    other: "{{count}} months",
  },

  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years",
  },

  xYears: {
    one: "1 year",
    other: "{{count}} years",
  },

  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years",
  },

  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years",
  },
};

const router_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs
function router_buildFormatLongFn(args) {
  return (options = {}) => {
    // TODO: Remove String()
    const width = options.width ? String(options.width) : args.defaultWidth;
    const format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

;// ./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs


const router_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs
const router_formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P",
};

const router_formatRelative = (token, _date, _baseDate, _options) =>
  router_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs
/* eslint-disable no-unused-vars */

/**
 * The localize function argument callback which allows to convert raw value to
 * the actual type.
 *
 * @param value - The value to convert
 *
 * @returns The converted value
 */

/**
 * The map of localized values for each width.
 */

/**
 * The index type of the locale unit value. It types conversion of units of
 * values that don't start at 0 (i.e. quarters).
 */

/**
 * Converts the unit value to the tuple of values.
 */

/**
 * The tuple of localized era values. The first element represents BC,
 * the second element represents AD.
 */

/**
 * The tuple of localized quarter values. The first element represents Q1.
 */

/**
 * The tuple of localized day values. The first element represents Sunday.
 */

/**
 * The tuple of localized month values. The first element represents January.
 */

function router_buildLocalizeFn(args) {
  return (value, options) => {
    const context = options?.context ? String(options.context) : "standalone";

    let valuesArray;
    if (context === "formatting" && args.formattingValues) {
      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      const width = options?.width ? String(options.width) : defaultWidth;

      valuesArray =
        args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      const defaultWidth = args.defaultWidth;
      const width = options?.width ? String(options.width) : args.defaultWidth;

      valuesArray = args.values[width] || args.values[defaultWidth];
    }
    const index = args.argumentCallback ? args.argumentCallback(value) : value;

    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!
    return valuesArray[index];
  };
}

;// ./node_modules/date-fns/locale/en-US/_lib/localize.mjs


const router_eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"],
};

const router_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ],

  wide: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ],
};

const router_dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
  ],
};

const router_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night",
  },
};

const router_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night",
  },
};

const router_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`.
  //
  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'.

  const rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};

const router_localize = {
  ordinalNumber: router_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/_lib/buildMatchFn.mjs
function router_buildMatchFn(args) {
  return (string, options = {}) => {
    const width = options.width;

    const matchPattern =
      (width && args.matchPatterns[width]) ||
      args.matchPatterns[args.defaultMatchWidth];
    const matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null;
    }
    const matchedString = matchResult[0];

    const parsePatterns =
      (width && args.parsePatterns[width]) ||
      args.parsePatterns[args.defaultParseWidth];

    const key = Array.isArray(parsePatterns)
      ? router_findIndex(parsePatterns, (pattern) => pattern.test(matchedString))
      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
        router_findKey(parsePatterns, (pattern) => pattern.test(matchedString));

    let value;

    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback
      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
        options.valueCallback(value)
      : value;

    const rest = string.slice(matchedString.length);

    return { value, rest };
  };
}

function router_findKey(object, predicate) {
  for (const key in object) {
    if (
      Object.prototype.hasOwnProperty.call(object, key) &&
      predicate(object[key])
    ) {
      return key;
    }
  }
  return undefined;
}

function router_findIndex(array, predicate) {
  for (let key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return undefined;
}

;// ./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs
function router_buildMatchPatternFn(args) {
  return (string, options = {}) => {
    const matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    const matchedString = matchResult[0];

    const parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    let value = args.valueCallback
      ? args.valueCallback(parseResult[0])
      : parseResult[0];

    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
    value = options.valueCallback ? options.valueCallback(value) : value;

    const rest = string.slice(matchedString.length);

    return { value, rest };
  };
}

;// ./node_modules/date-fns/locale/en-US/_lib/match.mjs



const router_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_parseOrdinalNumberPattern = /\d+/i;

const router_matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i,
};
const router_parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i],
};

const router_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i,
};
const router_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
};
const router_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^may/i,
    /^jun/i,
    /^jul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
};
const router_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
};

const router_matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
};
const router_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i,
  },
};

const router_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_matchOrdinalNumberPattern,
    parsePattern: router_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/en-US.mjs






/**
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)
 * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)
 */
const router_enUS = {
  code: "en-US",
  formatDistance: router_formatDistance,
  formatLong: router_formatLong,
  formatRelative: router_formatRelative,
  localize: router_localize,
  match: router_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_en_US = ((/* unused pure expression or super */ null && (router_enUS)));

;// ./node_modules/date-fns/_lib/defaultOptions.mjs
let router_defaultOptions = {};

function router_getDefaultOptions() {
  return router_defaultOptions;
}

function router_setDefaultOptions(newOptions) {
  router_defaultOptions = newOptions;
}

;// ./node_modules/date-fns/constants.mjs
/**
 * @module constants
 * @summary Useful constants
 * @description
 * Collection of useful date constants.
 *
 * The constants could be imported from `date-fns/constants`:
 *
 * ```ts
 * import { maxTime, minTime } from "./constants/date-fns/constants";
 *
 * function isAllowedTime(time) {
 *   return time <= maxTime && time >= minTime;
 * }
 * ```
 */

/**
 * @constant
 * @name daysInWeek
 * @summary Days in 1 week.
 */
const router_daysInWeek = 7;

/**
 * @constant
 * @name daysInYear
 * @summary Days in 1 year.
 *
 * @description
 * How many days in a year.
 *
 * One years equals 365.2425 days according to the formula:
 *
 * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.
 * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days
 */
const router_daysInYear = 365.2425;

/**
 * @constant
 * @name maxTime
 * @summary Maximum allowed time.
 *
 * @example
 * import { maxTime } from "./constants/date-fns/constants";
 *
 * const isValid = 8640000000000001 <= maxTime;
 * //=> false
 *
 * new Date(8640000000000001);
 * //=> Invalid Date
 */
const router_maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;

/**
 * @constant
 * @name minTime
 * @summary Minimum allowed time.
 *
 * @example
 * import { minTime } from "./constants/date-fns/constants";
 *
 * const isValid = -8640000000000001 >= minTime;
 * //=> false
 *
 * new Date(-8640000000000001)
 * //=> Invalid Date
 */
const router_minTime = -router_maxTime;

/**
 * @constant
 * @name millisecondsInWeek
 * @summary Milliseconds in 1 week.
 */
const router_millisecondsInWeek = 604800000;

/**
 * @constant
 * @name millisecondsInDay
 * @summary Milliseconds in 1 day.
 */
const router_millisecondsInDay = 86400000;

/**
 * @constant
 * @name millisecondsInMinute
 * @summary Milliseconds in 1 minute
 */
const router_millisecondsInMinute = 60000;

/**
 * @constant
 * @name millisecondsInHour
 * @summary Milliseconds in 1 hour
 */
const router_millisecondsInHour = 3600000;

/**
 * @constant
 * @name millisecondsInSecond
 * @summary Milliseconds in 1 second
 */
const router_millisecondsInSecond = 1000;

/**
 * @constant
 * @name minutesInYear
 * @summary Minutes in 1 year.
 */
const router_minutesInYear = 525600;

/**
 * @constant
 * @name minutesInMonth
 * @summary Minutes in 1 month.
 */
const router_minutesInMonth = 43200;

/**
 * @constant
 * @name minutesInDay
 * @summary Minutes in 1 day.
 */
const router_minutesInDay = 1440;

/**
 * @constant
 * @name minutesInHour
 * @summary Minutes in 1 hour.
 */
const router_minutesInHour = 60;

/**
 * @constant
 * @name monthsInQuarter
 * @summary Months in 1 quarter.
 */
const router_monthsInQuarter = 3;

/**
 * @constant
 * @name monthsInYear
 * @summary Months in 1 year.
 */
const router_monthsInYear = 12;

/**
 * @constant
 * @name quartersInYear
 * @summary Quarters in 1 year
 */
const router_quartersInYear = 4;

/**
 * @constant
 * @name secondsInHour
 * @summary Seconds in 1 hour.
 */
const router_secondsInHour = 3600;

/**
 * @constant
 * @name secondsInMinute
 * @summary Seconds in 1 minute.
 */
const router_secondsInMinute = 60;

/**
 * @constant
 * @name secondsInDay
 * @summary Seconds in 1 day.
 */
const router_secondsInDay = router_secondsInHour * 24;

/**
 * @constant
 * @name secondsInWeek
 * @summary Seconds in 1 week.
 */
const router_secondsInWeek = router_secondsInDay * 7;

/**
 * @constant
 * @name secondsInYear
 * @summary Seconds in 1 year.
 */
const router_secondsInYear = router_secondsInDay * router_daysInYear;

/**
 * @constant
 * @name secondsInMonth
 * @summary Seconds in 1 month
 */
const router_secondsInMonth = router_secondsInYear / 12;

/**
 * @constant
 * @name secondsInQuarter
 * @summary Seconds in 1 quarter.
 */
const router_secondsInQuarter = router_secondsInMonth * 3;

;// ./node_modules/date-fns/toDate.mjs
/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param argument - The value to convert
 *
 * @returns The parsed date in the local time zone
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */
function router_toDate(argument) {
  const argStr = Object.prototype.toString.call(argument);

  // Clone the date
  if (
    argument instanceof Date ||
    (typeof argument === "object" && argStr === "[object Date]")
  ) {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new argument.constructor(+argument);
  } else if (
    typeof argument === "number" ||
    argStr === "[object Number]" ||
    typeof argument === "string" ||
    argStr === "[object String]"
  ) {
    // TODO: Can we get rid of as?
    return new Date(argument);
  } else {
    // TODO: Can we get rid of as?
    return new Date(NaN);
  }
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_toDate = ((/* unused pure expression or super */ null && (router_toDate)));

;// ./node_modules/date-fns/startOfDay.mjs


/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a day
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */
function router_startOfDay(date) {
  const _date = router_toDate(date);
  _date.setHours(0, 0, 0, 0);
  return _date;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_startOfDay = ((/* unused pure expression or super */ null && (router_startOfDay)));

;// ./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs


/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function router_getTimezoneOffsetInMilliseconds(date) {
  const _date = router_toDate(date);
  const utcDate = new Date(
    Date.UTC(
      _date.getFullYear(),
      _date.getMonth(),
      _date.getDate(),
      _date.getHours(),
      _date.getMinutes(),
      _date.getSeconds(),
      _date.getMilliseconds(),
    ),
  );
  utcDate.setUTCFullYear(_date.getFullYear());
  return +date - +utcDate;
}

;// ./node_modules/date-fns/differenceInCalendarDays.mjs




/**
 * @name differenceInCalendarDays
 * @category Day Helpers
 * @summary Get the number of calendar days between the given dates.
 *
 * @description
 * Get the number of calendar days between the given dates. This means that the times are removed
 * from the dates and then the difference in days is calculated.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of calendar days
 *
 * @example
 * // How many calendar days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * const result = differenceInCalendarDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 366
 * // How many calendar days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * const result = differenceInCalendarDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 1
 */
function router_differenceInCalendarDays(dateLeft, dateRight) {
  const startOfDayLeft = router_startOfDay(dateLeft);
  const startOfDayRight = router_startOfDay(dateRight);

  const timestampLeft =
    +startOfDayLeft - router_getTimezoneOffsetInMilliseconds(startOfDayLeft);
  const timestampRight =
    +startOfDayRight - router_getTimezoneOffsetInMilliseconds(startOfDayRight);

  // Round the number of days to the nearest integer because the number of
  // milliseconds in a day is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round((timestampLeft - timestampRight) / router_millisecondsInDay);
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_differenceInCalendarDays = ((/* unused pure expression or super */ null && (router_differenceInCalendarDays)));

;// ./node_modules/date-fns/constructFrom.mjs
/**
 * @name constructFrom
 * @category Generic Helpers
 * @summary Constructs a date using the reference date and the value
 *
 * @description
 * The function constructs a new date using the constructor from the reference
 * date and the given value. It helps to build generic functions that accept
 * date extensions.
 *
 * It defaults to `Date` if the passed reference date is a number or a string.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The reference date to take constructor from
 * @param value - The value to create the date
 *
 * @returns Date initialized using the given date and value
 *
 * @example
 * import { constructFrom } from 'date-fns'
 *
 * // A function that clones a date preserving the original type
 * function cloneDate<DateType extends Date(date: DateType): DateType {
 *   return constructFrom(
 *     date, // Use contrustor from the given date
 *     date.getTime() // Use the date value to create a new date
 *   )
 * }
 */
function router_constructFrom(date, value) {
  if (date instanceof Date) {
    return new date.constructor(value);
  } else {
    return new Date(value);
  }
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_constructFrom = ((/* unused pure expression or super */ null && (router_constructFrom)));

;// ./node_modules/date-fns/startOfYear.mjs



/**
 * @name startOfYear
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a year
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */
function router_startOfYear(date) {
  const cleanDate = router_toDate(date);
  const _date = router_constructFrom(date, 0);
  _date.setFullYear(cleanDate.getFullYear(), 0, 1);
  _date.setHours(0, 0, 0, 0);
  return _date;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_startOfYear = ((/* unused pure expression or super */ null && (router_startOfYear)));

;// ./node_modules/date-fns/getDayOfYear.mjs




/**
 * @name getDayOfYear
 * @category Day Helpers
 * @summary Get the day of the year of the given date.
 *
 * @description
 * Get the day of the year of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The day of year
 *
 * @example
 * // Which day of the year is 2 July 2014?
 * const result = getDayOfYear(new Date(2014, 6, 2))
 * //=> 183
 */
function router_getDayOfYear(date) {
  const _date = router_toDate(date);
  const diff = router_differenceInCalendarDays(_date, router_startOfYear(_date));
  const dayOfYear = diff + 1;
  return dayOfYear;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_getDayOfYear = ((/* unused pure expression or super */ null && (router_getDayOfYear)));

;// ./node_modules/date-fns/startOfWeek.mjs



/**
 * The {@link startOfWeek} function options.
 */

/**
 * @name startOfWeek
 * @category Week Helpers
 * @summary Return the start of a week for the given date.
 *
 * @description
 * Return the start of a week for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options
 *
 * @returns The start of a week
 *
 * @example
 * // The start of a week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Mon Sep 01 2014 00:00:00
 */
function router_startOfWeek(date, options) {
  const defaultOptions = router_getDefaultOptions();
  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const _date = router_toDate(date);
  const day = _date.getDay();
  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;

  _date.setDate(_date.getDate() - diff);
  _date.setHours(0, 0, 0, 0);
  return _date;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_startOfWeek = ((/* unused pure expression or super */ null && (router_startOfWeek)));

;// ./node_modules/date-fns/startOfISOWeek.mjs


/**
 * @name startOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the start of an ISO week for the given date.
 *
 * @description
 * Return the start of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of an ISO week
 *
 * @example
 * // The start of an ISO week for 2 September 2014 11:55:00:
 * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */
function router_startOfISOWeek(date) {
  return router_startOfWeek(date, { weekStartsOn: 1 });
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_startOfISOWeek = ((/* unused pure expression or super */ null && (router_startOfISOWeek)));

;// ./node_modules/date-fns/getISOWeekYear.mjs




/**
 * @name getISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the ISO week-numbering year of the given date.
 *
 * @description
 * Get the ISO week-numbering year of the given date,
 * which always starts 3 days before the year's first Thursday.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The ISO week-numbering year
 *
 * @example
 * // Which ISO-week numbering year is 2 January 2005?
 * const result = getISOWeekYear(new Date(2005, 0, 2))
 * //=> 2004
 */
function router_getISOWeekYear(date) {
  const _date = router_toDate(date);
  const year = _date.getFullYear();

  const fourthOfJanuaryOfNextYear = router_constructFrom(date, 0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  const startOfNextYear = router_startOfISOWeek(fourthOfJanuaryOfNextYear);

  const fourthOfJanuaryOfThisYear = router_constructFrom(date, 0);
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
  const startOfThisYear = router_startOfISOWeek(fourthOfJanuaryOfThisYear);

  if (_date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (_date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_getISOWeekYear = ((/* unused pure expression or super */ null && (router_getISOWeekYear)));

;// ./node_modules/date-fns/startOfISOWeekYear.mjs




/**
 * @name startOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the start of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the start of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of an ISO week-numbering year
 *
 * @example
 * // The start of an ISO week-numbering year for 2 July 2005:
 * const result = startOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Mon Jan 03 2005 00:00:00
 */
function router_startOfISOWeekYear(date) {
  const year = router_getISOWeekYear(date);
  const fourthOfJanuary = router_constructFrom(date, 0);
  fourthOfJanuary.setFullYear(year, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  return router_startOfISOWeek(fourthOfJanuary);
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_startOfISOWeekYear = ((/* unused pure expression or super */ null && (router_startOfISOWeekYear)));

;// ./node_modules/date-fns/getISOWeek.mjs





/**
 * @name getISOWeek
 * @category ISO Week Helpers
 * @summary Get the ISO week of the given date.
 *
 * @description
 * Get the ISO week of the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The ISO week
 *
 * @example
 * // Which week of the ISO-week numbering year is 2 January 2005?
 * const result = getISOWeek(new Date(2005, 0, 2))
 * //=> 53
 */
function router_getISOWeek(date) {
  const _date = router_toDate(date);
  const diff = +router_startOfISOWeek(_date) - +router_startOfISOWeekYear(_date);

  // Round the number of weeks to the nearest integer because the number of
  // milliseconds in a week is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round(diff / router_millisecondsInWeek) + 1;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_getISOWeek = ((/* unused pure expression or super */ null && (router_getISOWeek)));

;// ./node_modules/date-fns/getWeekYear.mjs





/**
 * The {@link getWeekYear} function options.
 */

/**
 * @name getWeekYear
 * @category Week-Numbering Year Helpers
 * @summary Get the local week-numbering year of the given date.
 *
 * @description
 * Get the local week-numbering year of the given date.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 * @param options - An object with options.
 *
 * @returns The local week-numbering year
 *
 * @example
 * // Which week numbering year is 26 December 2004 with the default settings?
 * const result = getWeekYear(new Date(2004, 11, 26))
 * //=> 2005
 *
 * @example
 * // Which week numbering year is 26 December 2004 if week starts on Saturday?
 * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })
 * //=> 2004
 *
 * @example
 * // Which week numbering year is 26 December 2004 if the first week contains 4 January?
 * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })
 * //=> 2004
 */
function router_getWeekYear(date, options) {
  const _date = router_toDate(date);
  const year = _date.getFullYear();

  const defaultOptions = router_getDefaultOptions();
  const firstWeekContainsDate =
    options?.firstWeekContainsDate ??
    options?.locale?.options?.firstWeekContainsDate ??
    defaultOptions.firstWeekContainsDate ??
    defaultOptions.locale?.options?.firstWeekContainsDate ??
    1;

  const firstWeekOfNextYear = router_constructFrom(date, 0);
  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setHours(0, 0, 0, 0);
  const startOfNextYear = router_startOfWeek(firstWeekOfNextYear, options);

  const firstWeekOfThisYear = router_constructFrom(date, 0);
  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setHours(0, 0, 0, 0);
  const startOfThisYear = router_startOfWeek(firstWeekOfThisYear, options);

  if (_date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (_date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_getWeekYear = ((/* unused pure expression or super */ null && (router_getWeekYear)));

;// ./node_modules/date-fns/startOfWeekYear.mjs





/**
 * The {@link startOfWeekYear} function options.
 */

/**
 * @name startOfWeekYear
 * @category Week-Numbering Year Helpers
 * @summary Return the start of a local week-numbering year for the given date.
 *
 * @description
 * Return the start of a local week-numbering year.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options
 *
 * @returns The start of a week-numbering year
 *
 * @example
 * // The start of an a week-numbering year for 2 July 2005 with default settings:
 * const result = startOfWeekYear(new Date(2005, 6, 2))
 * //=> Sun Dec 26 2004 00:00:00
 *
 * @example
 * // The start of a week-numbering year for 2 July 2005
 * // if Monday is the first day of week
 * // and 4 January is always in the first week of the year:
 * const result = startOfWeekYear(new Date(2005, 6, 2), {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> Mon Jan 03 2005 00:00:00
 */
function router_startOfWeekYear(date, options) {
  const defaultOptions = router_getDefaultOptions();
  const firstWeekContainsDate =
    options?.firstWeekContainsDate ??
    options?.locale?.options?.firstWeekContainsDate ??
    defaultOptions.firstWeekContainsDate ??
    defaultOptions.locale?.options?.firstWeekContainsDate ??
    1;

  const year = router_getWeekYear(date, options);
  const firstWeek = router_constructFrom(date, 0);
  firstWeek.setFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  const _date = router_startOfWeek(firstWeek, options);
  return _date;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_startOfWeekYear = ((/* unused pure expression or super */ null && (router_startOfWeekYear)));

;// ./node_modules/date-fns/getWeek.mjs





/**
 * The {@link getWeek} function options.
 */

/**
 * @name getWeek
 * @category Week Helpers
 * @summary Get the local week index of the given date.
 *
 * @description
 * Get the local week index of the given date.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 * @param options - An object with options
 *
 * @returns The week
 *
 * @example
 * // Which week of the local week numbering year is 2 January 2005 with default options?
 * const result = getWeek(new Date(2005, 0, 2))
 * //=> 2
 *
 * @example
 * // Which week of the local week numbering year is 2 January 2005,
 * // if Monday is the first day of the week,
 * // and the first week of the year always contains 4 January?
 * const result = getWeek(new Date(2005, 0, 2), {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> 53
 */

function router_getWeek(date, options) {
  const _date = router_toDate(date);
  const diff = +router_startOfWeek(_date, options) - +router_startOfWeekYear(_date, options);

  // Round the number of weeks to the nearest integer because the number of
  // milliseconds in a week is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round(diff / router_millisecondsInWeek) + 1;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_getWeek = ((/* unused pure expression or super */ null && (router_getWeek)));

;// ./node_modules/date-fns/_lib/addLeadingZeros.mjs
function router_addLeadingZeros(number, targetLength) {
  const sign = number < 0 ? "-" : "";
  const output = Math.abs(number).toString().padStart(targetLength, "0");
  return sign + output;
}

;// ./node_modules/date-fns/_lib/format/lightFormatters.mjs


/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */

const router_lightFormatters = {
  // Year
  y(date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

    const signedYear = date.getFullYear();
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    const year = signedYear > 0 ? signedYear : 1 - signedYear;
    return router_addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },

  // Month
  M(date, token) {
    const month = date.getMonth();
    return token === "M" ? String(month + 1) : router_addLeadingZeros(month + 1, 2);
  },

  // Day of the month
  d(date, token) {
    return router_addLeadingZeros(date.getDate(), token.length);
  },

  // AM or PM
  a(date, token) {
    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? "pm" : "am";

    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },

  // Hour [1-12]
  h(date, token) {
    return router_addLeadingZeros(date.getHours() % 12 || 12, token.length);
  },

  // Hour [0-23]
  H(date, token) {
    return router_addLeadingZeros(date.getHours(), token.length);
  },

  // Minute
  m(date, token) {
    return router_addLeadingZeros(date.getMinutes(), token.length);
  },

  // Second
  s(date, token) {
    return router_addLeadingZeros(date.getSeconds(), token.length);
  },

  // Fraction of second
  S(date, token) {
    const numberOfDigits = token.length;
    const milliseconds = date.getMilliseconds();
    const fractionalSeconds = Math.trunc(
      milliseconds * Math.pow(10, numberOfDigits - 3),
    );
    return router_addLeadingZeros(fractionalSeconds, token.length);
  },
};

;// ./node_modules/date-fns/_lib/format/formatters.mjs








const router_dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night",
};

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */

const router_formatters = {
  // Era
  G: function (date, token, localize) {
    const era = date.getFullYear() > 0 ? 1 : 0;
    switch (token) {
      // AD, BC
      case "G":
      case "GG":
      case "GGG":
        return localize.era(era, { width: "abbreviated" });
      // A, B
      case "GGGGG":
        return localize.era(era, { width: "narrow" });
      // Anno Domini, Before Christ
      case "GGGG":
      default:
        return localize.era(era, { width: "wide" });
    }
  },

  // Year
  y: function (date, token, localize) {
    // Ordinal number
    if (token === "yo") {
      const signedYear = date.getFullYear();
      // Returns 1 for 1 BC (which is year 0 in JavaScript)
      const year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, { unit: "year" });
    }

    return router_lightFormatters.y(date, token);
  },

  // Local week-numbering year
  Y: function (date, token, localize, options) {
    const signedWeekYear = router_getWeekYear(date, options);
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;

    // Two digit year
    if (token === "YY") {
      const twoDigitYear = weekYear % 100;
      return router_addLeadingZeros(twoDigitYear, 2);
    }

    // Ordinal number
    if (token === "Yo") {
      return localize.ordinalNumber(weekYear, { unit: "year" });
    }

    // Padding
    return router_addLeadingZeros(weekYear, token.length);
  },

  // ISO week-numbering year
  R: function (date, token) {
    const isoWeekYear = router_getISOWeekYear(date);

    // Padding
    return router_addLeadingZeros(isoWeekYear, token.length);
  },

  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function (date, token) {
    const year = date.getFullYear();
    return router_addLeadingZeros(year, token.length);
  },

  // Quarter
  Q: function (date, token, localize) {
    const quarter = Math.ceil((date.getMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case "Q":
        return String(quarter);
      // 01, 02, 03, 04
      case "QQ":
        return router_addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case "Qo":
        return localize.ordinalNumber(quarter, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "QQQ":
        return localize.quarter(quarter, {
          width: "abbreviated",
          context: "formatting",
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "QQQQQ":
        return localize.quarter(quarter, {
          width: "narrow",
          context: "formatting",
        });
      // 1st quarter, 2nd quarter, ...
      case "QQQQ":
      default:
        return localize.quarter(quarter, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // Stand-alone quarter
  q: function (date, token, localize) {
    const quarter = Math.ceil((date.getMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case "q":
        return String(quarter);
      // 01, 02, 03, 04
      case "qq":
        return router_addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case "qo":
        return localize.ordinalNumber(quarter, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "qqq":
        return localize.quarter(quarter, {
          width: "abbreviated",
          context: "standalone",
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "qqqqq":
        return localize.quarter(quarter, {
          width: "narrow",
          context: "standalone",
        });
      // 1st quarter, 2nd quarter, ...
      case "qqqq":
      default:
        return localize.quarter(quarter, {
          width: "wide",
          context: "standalone",
        });
    }
  },

  // Month
  M: function (date, token, localize) {
    const month = date.getMonth();
    switch (token) {
      case "M":
      case "MM":
        return router_lightFormatters.M(date, token);
      // 1st, 2nd, ..., 12th
      case "Mo":
        return localize.ordinalNumber(month + 1, { unit: "month" });
      // Jan, Feb, ..., Dec
      case "MMM":
        return localize.month(month, {
          width: "abbreviated",
          context: "formatting",
        });
      // J, F, ..., D
      case "MMMMM":
        return localize.month(month, {
          width: "narrow",
          context: "formatting",
        });
      // January, February, ..., December
      case "MMMM":
      default:
        return localize.month(month, { width: "wide", context: "formatting" });
    }
  },

  // Stand-alone month
  L: function (date, token, localize) {
    const month = date.getMonth();
    switch (token) {
      // 1, 2, ..., 12
      case "L":
        return String(month + 1);
      // 01, 02, ..., 12
      case "LL":
        return router_addLeadingZeros(month + 1, 2);
      // 1st, 2nd, ..., 12th
      case "Lo":
        return localize.ordinalNumber(month + 1, { unit: "month" });
      // Jan, Feb, ..., Dec
      case "LLL":
        return localize.month(month, {
          width: "abbreviated",
          context: "standalone",
        });
      // J, F, ..., D
      case "LLLLL":
        return localize.month(month, {
          width: "narrow",
          context: "standalone",
        });
      // January, February, ..., December
      case "LLLL":
      default:
        return localize.month(month, { width: "wide", context: "standalone" });
    }
  },

  // Local week of year
  w: function (date, token, localize, options) {
    const week = router_getWeek(date, options);

    if (token === "wo") {
      return localize.ordinalNumber(week, { unit: "week" });
    }

    return router_addLeadingZeros(week, token.length);
  },

  // ISO week of year
  I: function (date, token, localize) {
    const isoWeek = router_getISOWeek(date);

    if (token === "Io") {
      return localize.ordinalNumber(isoWeek, { unit: "week" });
    }

    return router_addLeadingZeros(isoWeek, token.length);
  },

  // Day of the month
  d: function (date, token, localize) {
    if (token === "do") {
      return localize.ordinalNumber(date.getDate(), { unit: "date" });
    }

    return router_lightFormatters.d(date, token);
  },

  // Day of year
  D: function (date, token, localize) {
    const dayOfYear = router_getDayOfYear(date);

    if (token === "Do") {
      return localize.ordinalNumber(dayOfYear, { unit: "dayOfYear" });
    }

    return router_addLeadingZeros(dayOfYear, token.length);
  },

  // Day of week
  E: function (date, token, localize) {
    const dayOfWeek = date.getDay();
    switch (token) {
      // Tue
      case "E":
      case "EE":
      case "EEE":
        return localize.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting",
        });
      // T
      case "EEEEE":
        return localize.day(dayOfWeek, {
          width: "narrow",
          context: "formatting",
        });
      // Tu
      case "EEEEEE":
        return localize.day(dayOfWeek, {
          width: "short",
          context: "formatting",
        });
      // Tuesday
      case "EEEE":
      default:
        return localize.day(dayOfWeek, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // Local day of week
  e: function (date, token, localize, options) {
    const dayOfWeek = date.getDay();
    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case "e":
        return String(localDayOfWeek);
      // Padded numerical value
      case "ee":
        return router_addLeadingZeros(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th
      case "eo":
        return localize.ordinalNumber(localDayOfWeek, { unit: "day" });
      case "eee":
        return localize.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting",
        });
      // T
      case "eeeee":
        return localize.day(dayOfWeek, {
          width: "narrow",
          context: "formatting",
        });
      // Tu
      case "eeeeee":
        return localize.day(dayOfWeek, {
          width: "short",
          context: "formatting",
        });
      // Tuesday
      case "eeee":
      default:
        return localize.day(dayOfWeek, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // Stand-alone local day of week
  c: function (date, token, localize, options) {
    const dayOfWeek = date.getDay();
    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (same as in `e`)
      case "c":
        return String(localDayOfWeek);
      // Padded numerical value
      case "cc":
        return router_addLeadingZeros(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th
      case "co":
        return localize.ordinalNumber(localDayOfWeek, { unit: "day" });
      case "ccc":
        return localize.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone",
        });
      // T
      case "ccccc":
        return localize.day(dayOfWeek, {
          width: "narrow",
          context: "standalone",
        });
      // Tu
      case "cccccc":
        return localize.day(dayOfWeek, {
          width: "short",
          context: "standalone",
        });
      // Tuesday
      case "cccc":
      default:
        return localize.day(dayOfWeek, {
          width: "wide",
          context: "standalone",
        });
    }
  },

  // ISO day of week
  i: function (date, token, localize) {
    const dayOfWeek = date.getDay();
    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      // 2
      case "i":
        return String(isoDayOfWeek);
      // 02
      case "ii":
        return router_addLeadingZeros(isoDayOfWeek, token.length);
      // 2nd
      case "io":
        return localize.ordinalNumber(isoDayOfWeek, { unit: "day" });
      // Tue
      case "iii":
        return localize.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting",
        });
      // T
      case "iiiii":
        return localize.day(dayOfWeek, {
          width: "narrow",
          context: "formatting",
        });
      // Tu
      case "iiiiii":
        return localize.day(dayOfWeek, {
          width: "short",
          context: "formatting",
        });
      // Tuesday
      case "iiii":
      default:
        return localize.day(dayOfWeek, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // AM or PM
  a: function (date, token, localize) {
    const hours = date.getHours();
    const dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";

    switch (token) {
      case "a":
      case "aa":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting",
        });
      case "aaa":
        return localize
          .dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting",
          })
          .toLowerCase();
      case "aaaaa":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting",
        });
      case "aaaa":
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // AM, PM, midnight, noon
  b: function (date, token, localize) {
    const hours = date.getHours();
    let dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = router_dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = router_dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }

    switch (token) {
      case "b":
      case "bb":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting",
        });
      case "bbb":
        return localize
          .dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting",
          })
          .toLowerCase();
      case "bbbbb":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting",
        });
      case "bbbb":
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // in the morning, in the afternoon, in the evening, at night
  B: function (date, token, localize) {
    const hours = date.getHours();
    let dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = router_dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = router_dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = router_dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = router_dayPeriodEnum.night;
    }

    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting",
        });
      case "BBBBB":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting",
        });
      case "BBBB":
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // Hour [1-12]
  h: function (date, token, localize) {
    if (token === "ho") {
      let hours = date.getHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, { unit: "hour" });
    }

    return router_lightFormatters.h(date, token);
  },

  // Hour [0-23]
  H: function (date, token, localize) {
    if (token === "Ho") {
      return localize.ordinalNumber(date.getHours(), { unit: "hour" });
    }

    return router_lightFormatters.H(date, token);
  },

  // Hour [0-11]
  K: function (date, token, localize) {
    const hours = date.getHours() % 12;

    if (token === "Ko") {
      return localize.ordinalNumber(hours, { unit: "hour" });
    }

    return router_addLeadingZeros(hours, token.length);
  },

  // Hour [1-24]
  k: function (date, token, localize) {
    let hours = date.getHours();
    if (hours === 0) hours = 24;

    if (token === "ko") {
      return localize.ordinalNumber(hours, { unit: "hour" });
    }

    return router_addLeadingZeros(hours, token.length);
  },

  // Minute
  m: function (date, token, localize) {
    if (token === "mo") {
      return localize.ordinalNumber(date.getMinutes(), { unit: "minute" });
    }

    return router_lightFormatters.m(date, token);
  },

  // Second
  s: function (date, token, localize) {
    if (token === "so") {
      return localize.ordinalNumber(date.getSeconds(), { unit: "second" });
    }

    return router_lightFormatters.s(date, token);
  },

  // Fraction of second
  S: function (date, token) {
    return router_lightFormatters.S(date, token);
  },

  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function (date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();

    if (timezoneOffset === 0) {
      return "Z";
    }

    switch (token) {
      // Hours and optional minutes
      case "X":
        return router_formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`
      case "XXXX":
      case "XX": // Hours and minutes without `:` delimiter
        return router_formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`
      case "XXXXX":
      case "XXX": // Hours and minutes with `:` delimiter
      default:
        return router_formatTimezone(timezoneOffset, ":");
    }
  },

  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function (date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();

    switch (token) {
      // Hours and optional minutes
      case "x":
        return router_formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`
      case "xxxx":
      case "xx": // Hours and minutes without `:` delimiter
        return router_formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`
      case "xxxxx":
      case "xxx": // Hours and minutes with `:` delimiter
      default:
        return router_formatTimezone(timezoneOffset, ":");
    }
  },

  // Timezone (GMT)
  O: function (date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();

    switch (token) {
      // Short
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + router_formatTimezoneShort(timezoneOffset, ":");
      // Long
      case "OOOO":
      default:
        return "GMT" + router_formatTimezone(timezoneOffset, ":");
    }
  },

  // Timezone (specific non-location)
  z: function (date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();

    switch (token) {
      // Short
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + router_formatTimezoneShort(timezoneOffset, ":");
      // Long
      case "zzzz":
      default:
        return "GMT" + router_formatTimezone(timezoneOffset, ":");
    }
  },

  // Seconds timestamp
  t: function (date, token, _localize) {
    const timestamp = Math.trunc(date.getTime() / 1000);
    return router_addLeadingZeros(timestamp, token.length);
  },

  // Milliseconds timestamp
  T: function (date, token, _localize) {
    const timestamp = date.getTime();
    return router_addLeadingZeros(timestamp, token.length);
  },
};

function router_formatTimezoneShort(offset, delimiter = "") {
  const sign = offset > 0 ? "-" : "+";
  const absOffset = Math.abs(offset);
  const hours = Math.trunc(absOffset / 60);
  const minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  return sign + String(hours) + delimiter + router_addLeadingZeros(minutes, 2);
}

function router_formatTimezoneWithOptionalMinutes(offset, delimiter) {
  if (offset % 60 === 0) {
    const sign = offset > 0 ? "-" : "+";
    return sign + router_addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return router_formatTimezone(offset, delimiter);
}

function router_formatTimezone(offset, delimiter = "") {
  const sign = offset > 0 ? "-" : "+";
  const absOffset = Math.abs(offset);
  const hours = router_addLeadingZeros(Math.trunc(absOffset / 60), 2);
  const minutes = router_addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}

;// ./node_modules/date-fns/_lib/format/longFormatters.mjs
const router_dateLongFormatter = (pattern, formatLong) => {
  switch (pattern) {
    case "P":
      return formatLong.date({ width: "short" });
    case "PP":
      return formatLong.date({ width: "medium" });
    case "PPP":
      return formatLong.date({ width: "long" });
    case "PPPP":
    default:
      return formatLong.date({ width: "full" });
  }
};

const router_timeLongFormatter = (pattern, formatLong) => {
  switch (pattern) {
    case "p":
      return formatLong.time({ width: "short" });
    case "pp":
      return formatLong.time({ width: "medium" });
    case "ppp":
      return formatLong.time({ width: "long" });
    case "pppp":
    default:
      return formatLong.time({ width: "full" });
  }
};

const router_dateTimeLongFormatter = (pattern, formatLong) => {
  const matchResult = pattern.match(/(P+)(p+)?/) || [];
  const datePattern = matchResult[1];
  const timePattern = matchResult[2];

  if (!timePattern) {
    return router_dateLongFormatter(pattern, formatLong);
  }

  let dateTimeFormat;

  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong.dateTime({ width: "short" });
      break;
    case "PP":
      dateTimeFormat = formatLong.dateTime({ width: "medium" });
      break;
    case "PPP":
      dateTimeFormat = formatLong.dateTime({ width: "long" });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong.dateTime({ width: "full" });
      break;
  }

  return dateTimeFormat
    .replace("{{date}}", router_dateLongFormatter(datePattern, formatLong))
    .replace("{{time}}", router_timeLongFormatter(timePattern, formatLong));
};

const router_longFormatters = {
  p: router_timeLongFormatter,
  P: router_dateTimeLongFormatter,
};

;// ./node_modules/date-fns/_lib/protectedTokens.mjs
const router_dayOfYearTokenRE = /^D+$/;
const router_weekYearTokenRE = /^Y+$/;

const router_throwTokens = ["D", "DD", "YY", "YYYY"];

function router_isProtectedDayOfYearToken(token) {
  return router_dayOfYearTokenRE.test(token);
}

function router_isProtectedWeekYearToken(token) {
  return router_weekYearTokenRE.test(token);
}

function router_warnOrThrowProtectedError(token, format, input) {
  const _message = router_message(token, format, input);
  console.warn(_message);
  if (router_throwTokens.includes(token)) throw new RangeError(_message);
}

function router_message(token, format, input) {
  const subject = token[0] === "Y" ? "years" : "days of the month";
  return `Use \`${token.toLowerCase()}\` instead of \`${token}\` (in \`${format}\`) for formatting ${subject} to the input \`${input}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;
}

;// ./node_modules/date-fns/isDate.mjs
/**
 * @name isDate
 * @category Common Helpers
 * @summary Is the given value a date?
 *
 * @description
 * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
 *
 * @param value - The value to check
 *
 * @returns True if the given value is a date
 *
 * @example
 * // For a valid date:
 * const result = isDate(new Date())
 * //=> true
 *
 * @example
 * // For an invalid date:
 * const result = isDate(new Date(NaN))
 * //=> true
 *
 * @example
 * // For some value:
 * const result = isDate('2014-02-31')
 * //=> false
 *
 * @example
 * // For an object:
 * const result = isDate({})
 * //=> false
 */
function router_isDate(value) {
  return (
    value instanceof Date ||
    (typeof value === "object" &&
      Object.prototype.toString.call(value) === "[object Date]")
  );
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_isDate = ((/* unused pure expression or super */ null && (router_isDate)));

;// ./node_modules/date-fns/isValid.mjs



/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is valid
 *
 * @example
 * // For the valid date:
 * const result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * const result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * const result = isValid(new Date(''))
 * //=> false
 */
function router_isValid(date) {
  if (!router_isDate(date) && typeof date !== "number") {
    return false;
  }
  const _date = router_toDate(date);
  return !isNaN(Number(_date));
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_isValid = ((/* unused pure expression or super */ null && (router_isValid)));

;// ./node_modules/date-fns/format.mjs








// Rexports of internal for libraries to use.
// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874


// This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
const router_formattingTokensRegExp =
  /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
const router_longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;

const router_escapedStringRegExp = /^'([^]*?)'?$/;
const router_doubleQuoteRegExp = /''/g;
const router_unescapedLatinCharacterRegExp = /[a-zA-Z]/;



/**
 * The {@link format} function options.
 */

/**
 * @name format
 * @alias formatDate
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          | a..aa   | AM, PM                            |       |
 * |                                 | aaa     | am, pm                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
 * |                                 | bbb     | am, pm, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 001, ..., 999                |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 04/29/1453                        | 7     |
 * |                                 | PP      | Apr 29, 1453                      | 7     |
 * |                                 | PPP     | April 29th, 1453                  | 7     |
 * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
 * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)
 *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param format - The string of tokens
 * @param options - An object with options
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 * @throws `options.locale` must contain `localize` property
 * @throws `options.locale` must contain `formatLong` property
 * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * const result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */
function router_format(date, formatStr, options) {
  const defaultOptions = router_getDefaultOptions();
  const locale = options?.locale ?? defaultOptions.locale ?? router_enUS;

  const firstWeekContainsDate =
    options?.firstWeekContainsDate ??
    options?.locale?.options?.firstWeekContainsDate ??
    defaultOptions.firstWeekContainsDate ??
    defaultOptions.locale?.options?.firstWeekContainsDate ??
    1;

  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const originalDate = router_toDate(date);

  if (!router_isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }

  let parts = formatStr
    .match(router_longFormattingTokensRegExp)
    .map((substring) => {
      const firstCharacter = substring[0];
      if (firstCharacter === "p" || firstCharacter === "P") {
        const longFormatter = router_longFormatters[firstCharacter];
        return longFormatter(substring, locale.formatLong);
      }
      return substring;
    })
    .join("")
    .match(router_formattingTokensRegExp)
    .map((substring) => {
      // Replace two single quote characters with one single quote character
      if (substring === "''") {
        return { isToken: false, value: "'" };
      }

      const firstCharacter = substring[0];
      if (firstCharacter === "'") {
        return { isToken: false, value: router_cleanEscapedString(substring) };
      }

      if (router_formatters[firstCharacter]) {
        return { isToken: true, value: substring };
      }

      if (firstCharacter.match(router_unescapedLatinCharacterRegExp)) {
        throw new RangeError(
          "Format string contains an unescaped latin alphabet character `" +
            firstCharacter +
            "`",
        );
      }

      return { isToken: false, value: substring };
    });

  // invoke localize preprocessor (only for french locales at the moment)
  if (locale.localize.preprocessor) {
    parts = locale.localize.preprocessor(originalDate, parts);
  }

  const formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale,
  };

  return parts
    .map((part) => {
      if (!part.isToken) return part.value;

      const token = part.value;

      if (
        (!options?.useAdditionalWeekYearTokens &&
          router_isProtectedWeekYearToken(token)) ||
        (!options?.useAdditionalDayOfYearTokens &&
          router_isProtectedDayOfYearToken(token))
      ) {
        router_warnOrThrowProtectedError(token, formatStr, String(date));
      }

      const formatter = router_formatters[token[0]];
      return formatter(originalDate, token, locale.localize, formatterOptions);
    })
    .join("");
}

function router_cleanEscapedString(input) {
  const matched = input.match(router_escapedStringRegExp);

  if (!matched) {
    return input;
  }

  return matched[1].replace(router_doubleQuoteRegExp, "'");
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_format = ((/* unused pure expression or super */ null && (router_format)));

;// ./node_modules/date-fns/locale/af/_lib/formatDistance.mjs
const router_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "minder as 'n sekonde",
    other: "minder as {{count}} sekondes",
  },

  xSeconds: {
    one: "1 sekonde",
    other: "{{count}} sekondes",
  },

  halfAMinute: "'n halwe minuut",

  lessThanXMinutes: {
    one: "minder as 'n minuut",
    other: "minder as {{count}} minute",
  },

  xMinutes: {
    one: "'n minuut",
    other: "{{count}} minute",
  },

  aboutXHours: {
    one: "ongeveer 1 uur",
    other: "ongeveer {{count}} ure",
  },

  xHours: {
    one: "1 uur",
    other: "{{count}} ure",
  },

  xDays: {
    one: "1 dag",
    other: "{{count}} dae",
  },

  aboutXWeeks: {
    one: "ongeveer 1 week",
    other: "ongeveer {{count}} weke",
  },

  xWeeks: {
    one: "1 week",
    other: "{{count}} weke",
  },

  aboutXMonths: {
    one: "ongeveer 1 maand",
    other: "ongeveer {{count}} maande",
  },

  xMonths: {
    one: "1 maand",
    other: "{{count}} maande",
  },

  aboutXYears: {
    one: "ongeveer 1 jaar",
    other: "ongeveer {{count}} jaar",
  },

  xYears: {
    one: "1 jaar",
    other: "{{count}} jaar",
  },

  overXYears: {
    one: "meer as 1 jaar",
    other: "meer as {{count}} jaar",
  },

  almostXYears: {
    one: "byna 1 jaar",
    other: "byna {{count}} jaar",
  },
};

const router_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "oor " + result;
    } else {
      return result + " gelede";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/af/_lib/formatLong.mjs


const router_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "yyyy/MM/dd",
};

const router_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_formatLong_dateTimeFormats = {
  full: "{{date}} 'om' {{time}}",
  long: "{{date}} 'om' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/af/_lib/formatRelative.mjs
const router_formatRelative_formatRelativeLocale = {
  lastWeek: "'verlede' eeee 'om' p",
  yesterday: "'gister om' p",
  today: "'vandag om' p",
  tomorrow: "'môre om' p",
  nextWeek: "eeee 'om' p",
  other: "P",
};

const router_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/af/_lib/localize.mjs


const router_localize_eraValues = {
  narrow: ["vC", "nC"],
  abbreviated: ["vC", "nC"],
  wide: ["voor Christus", "na Christus"],
};

const router_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: ["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"],
};

const router_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mrt",
    "Apr",
    "Mei",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Okt",
    "Nov",
    "Des",
  ],

  wide: [
    "Januarie",
    "Februarie",
    "Maart",
    "April",
    "Mei",
    "Junie",
    "Julie",
    "Augustus",
    "September",
    "Oktober",
    "November",
    "Desember",
  ],
};

const router_localize_dayValues = {
  narrow: ["S", "M", "D", "W", "D", "V", "S"],
  short: ["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"],
  abbreviated: ["Son", "Maa", "Din", "Woe", "Don", "Vry", "Sat"],
  wide: [
    "Sondag",
    "Maandag",
    "Dinsdag",
    "Woensdag",
    "Donderdag",
    "Vrydag",
    "Saterdag",
  ],
};

const router_localize_dayPeriodValues = {
  narrow: {
    am: "vm",
    pm: "nm",
    midnight: "middernag",
    noon: "middaguur",
    morning: "oggend",
    afternoon: "middag",
    evening: "laat middag",
    night: "aand",
  },
  abbreviated: {
    am: "vm",
    pm: "nm",
    midnight: "middernag",
    noon: "middaguur",
    morning: "oggend",
    afternoon: "middag",
    evening: "laat middag",
    night: "aand",
  },
  wide: {
    am: "vm",
    pm: "nm",
    midnight: "middernag",
    noon: "middaguur",
    morning: "oggend",
    afternoon: "middag",
    evening: "laat middag",
    night: "aand",
  },
};
const router_localize_formattingDayPeriodValues = {
  narrow: {
    am: "vm",
    pm: "nm",
    midnight: "middernag",
    noon: "uur die middag",
    morning: "uur die oggend",
    afternoon: "uur die middag",
    evening: "uur die aand",
    night: "uur die aand",
  },
  abbreviated: {
    am: "vm",
    pm: "nm",
    midnight: "middernag",
    noon: "uur die middag",
    morning: "uur die oggend",
    afternoon: "uur die middag",
    evening: "uur die aand",
    night: "uur die aand",
  },
  wide: {
    am: "vm",
    pm: "nm",
    midnight: "middernag",
    noon: "uur die middag",
    morning: "uur die oggend",
    afternoon: "uur die middag",
    evening: "uur die aand",
    night: "uur die aand",
  },
};

const router_localize_ordinalNumber = (dirtyNumber) => {
  const number = Number(dirtyNumber);
  const rem100 = number % 100;
  if (rem100 < 20) {
    switch (rem100) {
      case 1:
      case 8:
        return number + "ste";
      default:
        return number + "de";
    }
  }
  return number + "ste";
};

const router_localize_localize = {
  ordinalNumber: router_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/af/_lib/match.mjs



const router_match_matchOrdinalNumberPattern = /^(\d+)(ste|de)?/i;
const router_match_parseOrdinalNumberPattern = /\d+/i;

const router_match_matchEraPatterns = {
  narrow: /^([vn]\.? ?C\.?)/,
  abbreviated: /^([vn]\. ?C\.?)/,
  wide: /^((voor|na) Christus)/,
};
const router_match_parseEraPatterns = {
  any: [/^v/, /^n/],
};

const router_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^K[1234]/i,
  wide: /^[1234](st|d)e kwartaal/i,
};
const router_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(Jan|Feb|Mrt|Apr|Mei|Jun|Jul|Aug|Sep|Okt|Nov|Dec)\.?/i,
  wide: /^(Januarie|Februarie|Maart|April|Mei|Junie|Julie|Augustus|September|Oktober|November|Desember)/i,
};
const router_match_parseMonthPatterns = {
  narrow: [
    /^J/i,
    /^F/i,
    /^M/i,
    /^A/i,
    /^M/i,
    /^J/i,
    /^J/i,
    /^A/i,
    /^S/i,
    /^O/i,
    /^N/i,
    /^D/i,
  ],

  any: [
    /^Jan/i,
    /^Feb/i,
    /^Mrt/i,
    /^Apr/i,
    /^Mei/i,
    /^Jun/i,
    /^Jul/i,
    /^Aug/i,
    /^Sep/i,
    /^Okt/i,
    /^Nov/i,
    /^Dec/i,
  ],
};

const router_match_matchDayPatterns = {
  narrow: /^[smdwv]/i,
  short: /^(So|Ma|Di|Wo|Do|Vr|Sa)/i,
  abbreviated: /^(Son|Maa|Din|Woe|Don|Vry|Sat)/i,
  wide: /^(Sondag|Maandag|Dinsdag|Woensdag|Donderdag|Vrydag|Saterdag)/i,
};
const router_match_parseDayPatterns = {
  narrow: [/^S/i, /^M/i, /^D/i, /^W/i, /^D/i, /^V/i, /^S/i],
  any: [/^So/i, /^Ma/i, /^Di/i, /^Wo/i, /^Do/i, /^Vr/i, /^Sa/i],
};

const router_match_matchDayPeriodPatterns = {
  any: /^(vm|nm|middernag|(?:uur )?die (oggend|middag|aand))/i,
};
const router_match_parseDayPeriodPatterns = {
  any: {
    am: /^vm/i,
    pm: /^nm/i,
    midnight: /^middernag/i,
    noon: /^middaguur/i,
    morning: /oggend/i,
    afternoon: /middag/i,
    evening: /laat middag/i,
    night: /aand/i,
  },
};

const router_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_match_matchOrdinalNumberPattern,
    parsePattern: router_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/af.mjs






/**
 * @category Locales
 * @summary Afrikaans locale.
 * @language Afrikaans
 * @iso-639-2 afr
 * @author Marnus Weststrate [@marnusw](https://github.com/marnusw)
 */
const router_af = {
  code: "af",
  formatDistance: router_formatDistance_formatDistance,
  formatLong: router_formatLong_formatLong,
  formatRelative: router_formatRelative_formatRelative,
  localize: router_localize_localize,
  match: router_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_af = ((/* unused pure expression or super */ null && (router_af)));

;// ./node_modules/date-fns/locale/ar/_lib/formatDistance.mjs
const router_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "أقل من ثانية",
    two: "أقل من ثانيتين",
    threeToTen: "أقل من {{count}} ثواني",
    other: "أقل من {{count}} ثانية",
  },

  xSeconds: {
    one: "ثانية واحدة",
    two: "ثانيتان",
    threeToTen: "{{count}} ثواني",
    other: "{{count}} ثانية",
  },

  halfAMinute: "نصف دقيقة",

  lessThanXMinutes: {
    one: "أقل من دقيقة",
    two: "أقل من دقيقتين",
    threeToTen: "أقل من {{count}} دقائق",
    other: "أقل من {{count}} دقيقة",
  },

  xMinutes: {
    one: "دقيقة واحدة",
    two: "دقيقتان",
    threeToTen: "{{count}} دقائق",
    other: "{{count}} دقيقة",
  },

  aboutXHours: {
    one: "ساعة واحدة تقريباً",
    two: "ساعتين تقريبا",
    threeToTen: "{{count}} ساعات تقريباً",
    other: "{{count}} ساعة تقريباً",
  },

  xHours: {
    one: "ساعة واحدة",
    two: "ساعتان",
    threeToTen: "{{count}} ساعات",
    other: "{{count}} ساعة",
  },

  xDays: {
    one: "يوم واحد",
    two: "يومان",
    threeToTen: "{{count}} أيام",
    other: "{{count}} يوم",
  },

  aboutXWeeks: {
    one: "أسبوع واحد تقريبا",
    two: "أسبوعين تقريبا",
    threeToTen: "{{count}} أسابيع تقريبا",
    other: "{{count}} أسبوعا تقريبا",
  },

  xWeeks: {
    one: "أسبوع واحد",
    two: "أسبوعان",
    threeToTen: "{{count}} أسابيع",
    other: "{{count}} أسبوعا",
  },

  aboutXMonths: {
    one: "شهر واحد تقريباً",
    two: "شهرين تقريبا",
    threeToTen: "{{count}} أشهر تقريبا",
    other: "{{count}} شهرا تقريباً",
  },

  xMonths: {
    one: "شهر واحد",
    two: "شهران",
    threeToTen: "{{count}} أشهر",
    other: "{{count}} شهرا",
  },

  aboutXYears: {
    one: "سنة واحدة تقريباً",
    two: "سنتين تقريبا",
    threeToTen: "{{count}} سنوات تقريباً",
    other: "{{count}} سنة تقريباً",
  },

  xYears: {
    one: "سنة واحد",
    two: "سنتان",
    threeToTen: "{{count}} سنوات",
    other: "{{count}} سنة",
  },

  overXYears: {
    one: "أكثر من سنة",
    two: "أكثر من سنتين",
    threeToTen: "أكثر من {{count}} سنوات",
    other: "أكثر من {{count}} سنة",
  },

  almostXYears: {
    one: "ما يقارب سنة واحدة",
    two: "ما يقارب سنتين",
    threeToTen: "ما يقارب {{count}} سنوات",
    other: "ما يقارب {{count}} سنة",
  },
};

const router_lib_formatDistance_formatDistance = (token, count, options) => {
  const usageGroup = router_lib_formatDistance_formatDistanceLocale[token];
  let result;
  if (typeof usageGroup === "string") {
    result = usageGroup;
  } else if (count === 1) {
    result = usageGroup.one;
  } else if (count === 2) {
    result = usageGroup.two;
  } else if (count <= 10) {
    result = usageGroup.threeToTen.replace("{{count}}", String(count));
  } else {
    result = usageGroup.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "خلال " + result;
    } else {
      return "منذ " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ar/_lib/formatLong.mjs


const router_lib_formatLong_dateFormats = {
  full: "EEEE، do MMMM y",
  long: "do MMMM y",
  medium: "d MMM y",
  short: "dd/MM/yyyy",
};

const router_lib_formatLong_timeFormats = {
  full: "HH:mm:ss",
  long: "HH:mm:ss",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'عند الساعة' {{time}}",
  long: "{{date}} 'عند الساعة' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ar/_lib/formatRelative.mjs
const router_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'الماضي عند الساعة' p",
  yesterday: "'الأمس عند الساعة' p",
  today: "'اليوم عند الساعة' p",
  tomorrow: "'غدا عند الساعة' p",
  nextWeek: "eeee 'القادم عند الساعة' p",
  other: "P",
};

const router_lib_formatRelative_formatRelative = (token) => router_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ar/_lib/localize.mjs


const router_lib_localize_eraValues = {
  narrow: ["ق", "ب"],
  abbreviated: ["ق.م.", "ب.م."],
  wide: ["قبل الميلاد", "بعد الميلاد"],
};

const router_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["ر1", "ر2", "ر3", "ر4"],
  wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"],
};

const router_lib_localize_monthValues = {
  narrow: ["ي", "ف", "م", "أ", "م", "ي", "ي", "أ", "س", "أ", "ن", "د"],
  abbreviated: [
    "يناير",
    "فبراير",
    "مارس",
    "أبريل",
    "مايو",
    "يونيو",
    "يوليو",
    "أغسطس",
    "سبتمبر",
    "أكتوبر",
    "نوفمبر",
    "ديسمبر",
  ],

  wide: [
    "يناير",
    "فبراير",
    "مارس",
    "أبريل",
    "مايو",
    "يونيو",
    "يوليو",
    "أغسطس",
    "سبتمبر",
    "أكتوبر",
    "نوفمبر",
    "ديسمبر",
  ],
};

const router_lib_localize_dayValues = {
  narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"],
  short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],
  abbreviated: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],

  wide: [
    "الأحد",
    "الاثنين",
    "الثلاثاء",
    "الأربعاء",
    "الخميس",
    "الجمعة",
    "السبت",
  ],
};

const router_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    morning: "الصباح",
    noon: "الظهر",
    afternoon: "بعد الظهر",
    evening: "المساء",
    night: "الليل",
    midnight: "منتصف الليل",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    morning: "الصباح",
    noon: "الظهر",
    afternoon: "بعد الظهر",
    evening: "المساء",
    night: "الليل",
    midnight: "منتصف الليل",
  },
  wide: {
    am: "ص",
    pm: "م",
    morning: "الصباح",
    noon: "الظهر",
    afternoon: "بعد الظهر",
    evening: "المساء",
    night: "الليل",
    midnight: "منتصف الليل",
  },
};

const router_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    morning: "في الصباح",
    noon: "الظهر",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
    midnight: "منتصف الليل",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    morning: "في الصباح",
    noon: "الظهر",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
    midnight: "منتصف الليل",
  },
  wide: {
    am: "ص",
    pm: "م",
    morning: "في الصباح",
    noon: "الظهر",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
    midnight: "منتصف الليل",
  },
};

const router_lib_localize_ordinalNumber = (num) => String(num);

const router_lib_localize_localize = {
  ordinalNumber: router_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ar/_lib/match.mjs



const router_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_lib_match_matchEraPatterns = {
  narrow: /[قب]/,
  abbreviated: /[قب]\.م\./,
  wide: /(قبل|بعد) الميلاد/,
};
const router_lib_match_parseEraPatterns = {
  any: [/قبل/, /بعد/],
};

const router_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /ر[1234]/,
  wide: /الربع (الأول|الثاني|الثالث|الرابع)/,
};
const router_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_lib_match_matchMonthPatterns = {
  narrow: /^[أيفمسند]/,
  abbreviated:
    /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,
  wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,
};
const router_lib_match_parseMonthPatterns = {
  narrow: [
    /^ي/i,
    /^ف/i,
    /^م/i,
    /^أ/i,
    /^م/i,
    /^ي/i,
    /^ي/i,
    /^أ/i,
    /^س/i,
    /^أ/i,
    /^ن/i,
    /^د/i,
  ],

  any: [
    /^يناير/i,
    /^فبراير/i,
    /^مارس/i,
    /^أبريل/i,
    /^مايو/i,
    /^يونيو/i,
    /^يوليو/i,
    /^أغسطس/i,
    /^سبتمبر/i,
    /^أكتوبر/i,
    /^نوفمبر/i,
    /^ديسمبر/i,
  ],
};

const router_lib_match_matchDayPatterns = {
  narrow: /^[حنثرخجس]/i,
  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
  abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,
};
const router_lib_match_parseDayPatterns = {
  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],
  wide: [
    /^الأحد/i,
    /^الاثنين/i,
    /^الثلاثاء/i,
    /^الأربعاء/i,
    /^الخميس/i,
    /^الجمعة/i,
    /^السبت/i,
  ],

  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],
};

const router_lib_match_matchDayPeriodPatterns = {
  narrow: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/,
  any: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/,
};
const router_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ص/,
    pm: /^م/,
    midnight: /منتصف الليل/,
    noon: /الظهر/,
    afternoon: /بعد الظهر/,
    morning: /في الصباح/,
    evening: /في المساء/,
    night: /في الليل/,
  },
};

const router_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ar.mjs






/**
 * @category Locales
 * @summary Arabic locale (Modern Standard Arabic - Al-fussha).
 * @language Modern Standard Arabic
 * @iso-639-2 ara
 * @author Abdallah Hassan [@AbdallahAHO](https://github.com/AbdallahAHO)
 * @author Koussay Haj Kacem [@essana3](https://github.com/essana3)
 */
const router_ar = {
  code: "ar",
  formatDistance: router_lib_formatDistance_formatDistance,
  formatLong: router_lib_formatLong_formatLong,
  formatRelative: router_lib_formatRelative_formatRelative,
  localize: router_lib_localize_localize,
  match: router_lib_match_match,
  options: {
    weekStartsOn: 6 /* Saturday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ar = ((/* unused pure expression or super */ null && (router_ar)));

;// ./node_modules/date-fns/locale/ar-DZ/_lib/formatDistance.mjs
const router_ar_DZ_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "أقل من ثانية واحدة",
    two: "أقل من ثانتين",
    threeToTen: "أقل من {{count}} ثواني",
    other: "أقل من {{count}} ثانية",
  },

  xSeconds: {
    one: "ثانية واحدة",
    two: "ثانتين",
    threeToTen: "{{count}} ثواني",
    other: "{{count}} ثانية",
  },

  halfAMinute: "نصف دقيقة",

  lessThanXMinutes: {
    one: "أقل من دقيقة",
    two: "أقل من دقيقتين",
    threeToTen: "أقل من {{count}} دقائق",
    other: "أقل من {{count}} دقيقة",
  },

  xMinutes: {
    one: "دقيقة واحدة",
    two: "دقيقتين",
    threeToTen: "{{count}} دقائق",
    other: "{{count}} دقيقة",
  },

  aboutXHours: {
    one: "ساعة واحدة تقريباً",
    two: "ساعتين تقريباً",
    threeToTen: "{{count}} ساعات تقريباً",
    other: "{{count}} ساعة تقريباً",
  },

  xHours: {
    one: "ساعة واحدة",
    two: "ساعتين",
    threeToTen: "{{count}} ساعات",
    other: "{{count}} ساعة",
  },

  xDays: {
    one: "يوم واحد",
    two: "يومين",
    threeToTen: "{{count}} أيام",
    other: "{{count}} يوم",
  },

  aboutXWeeks: {
    one: "أسبوع واحد تقريباً",
    two: "أسبوعين تقريباً",
    threeToTen: "{{count}} أسابيع تقريباً",
    other: "{{count}} أسبوع تقريباً",
  },

  xWeeks: {
    one: "أسبوع واحد",
    two: "أسبوعين",
    threeToTen: "{{count}} أسابيع",
    other: "{{count}} أسبوع",
  },

  aboutXMonths: {
    one: "شهر واحد تقريباً",
    two: "شهرين تقريباً",
    threeToTen: "{{count}} أشهر تقريباً",
    other: "{{count}} شهر تقريباً",
  },

  xMonths: {
    one: "شهر واحد",
    two: "شهرين",
    threeToTen: "{{count}} أشهر",
    other: "{{count}} شهر",
  },

  aboutXYears: {
    one: "عام واحد تقريباً",
    two: "عامين تقريباً",
    threeToTen: "{{count}} أعوام تقريباً",
    other: "{{count}} عام تقريباً",
  },

  xYears: {
    one: "عام واحد",
    two: "عامين",
    threeToTen: "{{count}} أعوام",
    other: "{{count}} عام",
  },

  overXYears: {
    one: "أكثر من عام",
    two: "أكثر من عامين",
    threeToTen: "أكثر من {{count}} أعوام",
    other: "أكثر من {{count}} عام",
  },

  almostXYears: {
    one: "عام واحد تقريباً",
    two: "عامين تقريباً",
    threeToTen: "{{count}} أعوام تقريباً",
    other: "{{count}} عام تقريباً",
  },
};

const router_ar_DZ_lib_formatDistance_formatDistance = (token, count, options) => {
  options = options || {};

  const usageGroup = router_ar_DZ_lib_formatDistance_formatDistanceLocale[token];
  let result;
  if (typeof usageGroup === "string") {
    result = usageGroup;
  } else if (count === 1) {
    result = usageGroup.one;
  } else if (count === 2) {
    result = usageGroup.two;
  } else if (count <= 10) {
    result = usageGroup.threeToTen.replace("{{count}}", String(count));
  } else {
    result = usageGroup.other.replace("{{count}}", String(count));
  }

  if (options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "في خلال " + result;
    } else {
      return "منذ " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ar-DZ/_lib/formatLong.mjs


const router_ar_DZ_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_ar_DZ_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_ar_DZ_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'عند' {{time}}",
  long: "{{date}} 'عند' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ar_DZ_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ar_DZ_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ar_DZ_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ar_DZ_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ar-DZ/_lib/formatRelative.mjs
const router_ar_DZ_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'أخر' eeee 'عند' p",
  yesterday: "'أمس عند' p",
  today: "'اليوم عند' p",
  tomorrow: "'غداً عند' p",
  nextWeek: "eeee 'عند' p",
  other: "P",
};

const router_ar_DZ_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) => {
  return router_ar_DZ_lib_formatRelative_formatRelativeLocale[token];
};

;// ./node_modules/date-fns/locale/ar-DZ/_lib/localize.mjs


const router_ar_DZ_lib_localize_eraValues = {
  narrow: ["ق", "ب"],
  abbreviated: ["ق.م.", "ب.م."],
  wide: ["قبل الميلاد", "بعد الميلاد"],
};

const router_ar_DZ_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["ر1", "ر2", "ر3", "ر4"],
  wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"],
};

const router_ar_DZ_lib_localize_monthValues = {
  narrow: ["ج", "ف", "م", "أ", "م", "ج", "ج", "أ", "س", "أ", "ن", "د"],
  abbreviated: [
    "جانـ",
    "فيفـ",
    "مارس",
    "أفريل",
    "مايـ",
    "جوانـ",
    "جويـ",
    "أوت",
    "سبتـ",
    "أكتـ",
    "نوفـ",
    "ديسـ",
  ],

  wide: [
    "جانفي",
    "فيفري",
    "مارس",
    "أفريل",
    "ماي",
    "جوان",
    "جويلية",
    "أوت",
    "سبتمبر",
    "أكتوبر",
    "نوفمبر",
    "ديسمبر",
  ],
};

const router_ar_DZ_lib_localize_dayValues = {
  narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"],
  short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],
  abbreviated: ["أحد", "اثنـ", "ثلا", "أربـ", "خميـ", "جمعة", "سبت"],
  wide: [
    "الأحد",
    "الاثنين",
    "الثلاثاء",
    "الأربعاء",
    "الخميس",
    "الجمعة",
    "السبت",
  ],
};

const router_ar_DZ_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    midnight: "ن",
    noon: "ظ",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
  wide: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
};
const router_ar_DZ_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    midnight: "ن",
    noon: "ظ",
    morning: "في الصباح",
    afternoon: "بعد الظـهر",
    evening: "في المساء",
    night: "في الليل",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "في الصباح",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
  },
  wide: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظـهر",
    evening: "في المساء",
    night: "في الليل",
  },
};

const router_ar_DZ_lib_localize_ordinalNumber = (dirtyNumber) => {
  return String(dirtyNumber);
};

const router_ar_DZ_lib_localize_localize = {
  ordinalNumber: router_ar_DZ_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ar_DZ_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ar_DZ_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => Number(quarter) - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ar_DZ_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ar_DZ_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ar_DZ_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ar_DZ_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ar-DZ/_lib/match.mjs



const router_ar_DZ_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_ar_DZ_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ar_DZ_lib_match_matchEraPatterns = {
  narrow: /^(ق|ب)/i,
  abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
  wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i,
};
const router_ar_DZ_lib_match_parseEraPatterns = {
  any: [/^قبل/i, /^بعد/i],
};

const router_ar_DZ_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^ر[1234]/i,
  wide: /^الربع [1234]/i,
};
const router_ar_DZ_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ar_DZ_lib_match_matchMonthPatterns = {
  narrow: /^[جفمأسند]/i,
  abbreviated: /^(جان|فيف|مار|أفر|ماي|جوا|جوي|أوت|سبت|أكت|نوف|ديس)/i,
  wide: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/i,
};

const router_ar_DZ_lib_match_parseMonthPatterns = {
  narrow: [
    /^ج/i,
    /^ف/i,
    /^م/i,
    /^أ/i,
    /^م/i,
    /^ج/i,
    /^ج/i,
    /^أ/i,
    /^س/i,
    /^أ/i,
    /^ن/i,
    /^د/i,
  ],

  any: [
    /^جان/i,
    /^فيف/i,
    /^مار/i,
    /^أفر/i,
    /^ماي/i,
    /^جوا/i,
    /^جوي/i,
    /^أوت/i,
    /^سبت/i,
    /^أكت/i,
    /^نوف/i,
    /^ديس/i,
  ],
};

const router_ar_DZ_lib_match_matchDayPatterns = {
  narrow: /^[حنثرخجس]/i,
  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
  abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i,
  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,
};
const router_ar_DZ_lib_match_parseDayPatterns = {
  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],
  wide: [
    /^الأحد/i,
    /^الاثنين/i,
    /^الثلاثاء/i,
    /^الأربعاء/i,
    /^الخميس/i,
    /^الجمعة/i,
    /^السبت/i,
  ],

  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],
};

const router_ar_DZ_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
};
const router_ar_DZ_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i,
  },
};

const router_ar_DZ_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ar_DZ_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ar_DZ_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ar_DZ_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_DZ_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ar_DZ_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_DZ_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => Number(index) + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ar_DZ_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_DZ_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ar_DZ_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_DZ_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ar_DZ_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ar_DZ_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ar-DZ.mjs






/**
 * @category Locales
 * @summary Arabic locale (Algerian Arabic).
 * @language Algerian Arabic
 * @iso-639-2 ara
 * @author Badreddine Boumaza [@badre429](https://github.com/badre429)
 * @author Ahmed ElShahat [@elshahat](https://github.com/elshahat)
 */
const router_arDZ = {
  code: "ar-DZ",
  formatDistance: router_ar_DZ_lib_formatDistance_formatDistance,
  formatLong: router_ar_DZ_lib_formatLong_formatLong,
  formatRelative: router_ar_DZ_lib_formatRelative_formatRelative,
  localize: router_ar_DZ_lib_localize_localize,
  match: router_ar_DZ_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_ar_DZ = ((/* unused pure expression or super */ null && (router_arDZ)));

;// ./node_modules/date-fns/locale/ar-EG/_lib/formatDistance.mjs
const router_ar_EG_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "أقل من ثانية",
    two: "أقل من ثانيتين",
    threeToTen: "أقل من {{count}} ثواني",
    other: "أقل من {{count}} ثانية",
  },

  xSeconds: {
    one: "ثانية",
    two: "ثانيتين",
    threeToTen: "{{count}} ثواني",
    other: "{{count}} ثانية",
  },

  halfAMinute: "نص دقيقة",

  lessThanXMinutes: {
    one: "أقل من دقيقة",
    two: "أقل من دقيقتين",
    threeToTen: "أقل من {{count}} دقايق",
    other: "أقل من {{count}} دقيقة",
  },

  xMinutes: {
    one: "دقيقة",
    two: "دقيقتين",
    threeToTen: "{{count}} دقايق",
    other: "{{count}} دقيقة",
  },

  aboutXHours: {
    one: "حوالي ساعة",
    two: "حوالي ساعتين",
    threeToTen: "حوالي {{count}} ساعات",
    other: "حوالي {{count}} ساعة",
  },

  xHours: {
    one: "ساعة",
    two: "ساعتين",
    threeToTen: "{{count}} ساعات",
    other: "{{count}} ساعة",
  },

  xDays: {
    one: "يوم",
    two: "يومين",
    threeToTen: "{{count}} أيام",
    other: "{{count}} يوم",
  },

  aboutXWeeks: {
    one: "حوالي أسبوع",
    two: "حوالي أسبوعين",
    threeToTen: "حوالي {{count}} أسابيع",
    other: "حوالي {{count}} أسبوع",
  },

  xWeeks: {
    one: "أسبوع",
    two: "أسبوعين",
    threeToTen: "{{count}} أسابيع",
    other: "{{count}} أسبوع",
  },

  aboutXMonths: {
    one: "حوالي شهر",
    two: "حوالي شهرين",
    threeToTen: "حوالي {{count}} أشهر",
    other: "حوالي {{count}} شهر",
  },

  xMonths: {
    one: "شهر",
    two: "شهرين",
    threeToTen: "{{count}} أشهر",
    other: "{{count}} شهر",
  },

  aboutXYears: {
    one: "حوالي سنة",
    two: "حوالي سنتين",
    threeToTen: "حوالي {{count}} سنين",
    other: "حوالي {{count}} سنة",
  },

  xYears: {
    one: "عام",
    two: "عامين",
    threeToTen: "{{count}} أعوام",
    other: "{{count}} عام",
  },

  overXYears: {
    one: "أكثر من سنة",
    two: "أكثر من سنتين",
    threeToTen: "أكثر من {{count}} سنين",
    other: "أكثر من {{count}} سنة",
  },

  almostXYears: {
    one: "عام تقريبًا",
    two: "عامين تقريبًا",
    threeToTen: "{{count}} أعوام تقريبًا",
    other: "{{count}} عام تقريبًا",
  },
};

const router_ar_EG_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ar_EG_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 2) {
    result = tokenValue.two;
  } else if (count <= 10) {
    result = tokenValue.threeToTen.replace("{{count}}", String(count));
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return `في خلال ${result}`;
    } else {
      return `منذ ${result}`;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ar-EG/_lib/formatLong.mjs


const router_ar_EG_lib_formatLong_dateFormats = {
  full: "EEEE، do MMMM y",
  long: "do MMMM y",
  medium: "dd/MMM/y",
  short: "d/MM/y",
};

const router_ar_EG_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_ar_EG_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'الساعة' {{time}}",
  long: "{{date}} 'الساعة' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ar_EG_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ar_EG_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ar_EG_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ar_EG_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ar-EG/_lib/formatRelative.mjs
const router_ar_EG_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'اللي جاي الساعة' p",
  yesterday: "'إمبارح الساعة' p",
  today: "'النهاردة الساعة' p",
  tomorrow: "'بكرة الساعة' p",
  nextWeek: "eeee 'الساعة' p",
  other: "P",
};

const router_ar_EG_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ar_EG_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ar-EG/_lib/localize.mjs


const router_ar_EG_lib_localize_eraValues = {
  narrow: ["ق", "ب"],
  abbreviated: ["ق.م", "ب.م"],
  wide: ["قبل الميلاد", "بعد الميلاد"],
};

const router_ar_EG_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["ر1", "ر2", "ر3", "ر4"],
  wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"],
};

const router_ar_EG_lib_localize_monthValues = {
  narrow: ["ي", "ف", "م", "أ", "م", "ي", "ي", "أ", "س", "أ", "ن", "د"],
  abbreviated: [
    "ينا",
    "فبر",
    "مارس",
    "أبريل",
    "مايو",
    "يونـ",
    "يولـ",
    "أغسـ",
    "سبتـ",
    "أكتـ",
    "نوفـ",
    "ديسـ",
  ],

  wide: [
    "يناير",
    "فبراير",
    "مارس",
    "أبريل",
    "مايو",
    "يونيو",
    "يوليو",
    "أغسطس",
    "سبتمبر",
    "أكتوبر",
    "نوفمبر",
    "ديسمبر",
  ],
};

const router_ar_EG_lib_localize_dayValues = {
  narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"],
  short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],
  abbreviated: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],

  wide: [
    "الأحد",
    "الاثنين",
    "الثلاثاء",
    "الأربعاء",
    "الخميس",
    "الجمعة",
    "السبت",
  ],
};

const router_ar_EG_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    midnight: "ن",
    noon: "ظ",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءً",
    night: "ليلاً",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهراً",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءً",
    night: "ليلاً",
  },
  wide: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهراً",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءً",
    night: "ليلاً",
  },
};

const router_ar_EG_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    midnight: "ن",
    noon: "ظ",
    morning: "في الصباح",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهراً",
    morning: "في الصباح",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
  },
  wide: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    morning: "في الصباح",
    noon: "ظهراً",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
  },
};

const router_ar_EG_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_ar_EG_lib_localize_localize = {
  ordinalNumber: router_ar_EG_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ar_EG_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ar_EG_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ar_EG_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ar_EG_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ar_EG_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ar_EG_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ar-EG/_lib/match.mjs



const router_ar_EG_lib_match_matchOrdinalNumberPattern = /^(\d+)/;
const router_ar_EG_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ar_EG_lib_match_matchEraPatterns = {
  narrow: /^(ق|ب)/g,
  abbreviated: /^(ق.م|ب.م)/g,
  wide: /^(قبل الميلاد|بعد الميلاد)/g,
};
const router_ar_EG_lib_match_parseEraPatterns = {
  any: [/^ق/g, /^ب/g],
};
const router_ar_EG_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/,
  abbreviated: /^ر[1234]/,
  wide: /^الربع (الأول|الثاني|الثالث|الرابع)/,
};
const router_ar_EG_lib_match_parseQuarterPatterns = {
  wide: [/الربع الأول/, /الربع الثاني/, /الربع الثالث/, /الربع الرابع/],

  any: [/1/, /2/, /3/, /4/],
};

const router_ar_EG_lib_match_matchMonthPatterns = {
  narrow: /^(ي|ف|م|أ|س|ن|د)/,
  abbreviated: /^(ينا|فبر|مارس|أبريل|مايو|يونـ|يولـ|أغسـ|سبتـ|أكتـ|نوفـ|ديسـ)/,
  wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,
};
const router_ar_EG_lib_match_parseMonthPatterns = {
  narrow: [
    /^ي/,
    /^ف/,
    /^م/,
    /^أ/,
    /^م/,
    /^ي/,
    /^ي/,
    /^أ/,
    /^س/,
    /^أ/,
    /^ن/,
    /^د/,
  ],

  any: [
    /^ينا/,
    /^فبر/,
    /^مارس/,
    /^أبريل/,
    /^مايو/,
    /^يون/,
    /^يول/,
    /^أغس/,
    /^سبت/,
    /^أكت/,
    /^نوف/,
    /^ديس/,
  ],
};

const router_ar_EG_lib_match_matchDayPatterns = {
  narrow: /^(ح|ن|ث|ر|خ|ج|س)/,
  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/,
  abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/,
  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/,
};
const router_ar_EG_lib_match_parseDayPatterns = {
  narrow: [/^ح/, /^ن/, /^ث/, /^ر/, /^خ/, /^ج/, /^س/],
  any: [/أحد/, /اثنين/, /ثلاثاء/, /أربعاء/, /خميس/, /جمعة/, /سبت/],
};

const router_ar_EG_lib_match_matchDayPeriodPatterns = {
  narrow: /^(ص|م|ن|ظ|في الصباح|بعد الظهر|في المساء|في الليل)/,
  abbreviated: /^(ص|م|نصف الليل|ظهراً|في الصباح|بعد الظهر|في المساء|في الليل)/,
  wide: /^(ص|م|نصف الليل|في الصباح|ظهراً|بعد الظهر|في المساء|في الليل)/,
  any: /^(ص|م|صباح|ظهر|مساء|ليل)/,
};
const router_ar_EG_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ص/,
    pm: /^م/,
    midnight: /^ن/,
    noon: /^ظ/,
    morning: /^ص/,
    afternoon: /^بعد/,
    evening: /^م/,
    night: /^ل/,
  },
};

const router_ar_EG_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ar_EG_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ar_EG_lib_match_parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    },
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ar_EG_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_EG_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ar_EG_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_EG_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ar_EG_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_EG_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ar_EG_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_EG_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ar_EG_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ar_EG_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ar-EG.mjs






/**
 * @category Locales
 * @summary Arabic locale (Egypt).
 * @language Arabic
 * @iso-639-2 ara
 * @author AbdAllah AbdElFattah [@AbdAllahAbdElFattah13](https://github.com/AbdAllahAbdElFattah13)
 */
const router_arEG = {
  code: "ar-EG",
  formatDistance: router_ar_EG_lib_formatDistance_formatDistance,
  formatLong: router_ar_EG_lib_formatLong_formatLong,
  formatRelative: router_ar_EG_lib_formatRelative_formatRelative,
  localize: router_ar_EG_lib_localize_localize,
  match: router_ar_EG_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_ar_EG = ((/* unused pure expression or super */ null && (router_arEG)));

;// ./node_modules/date-fns/locale/ar-MA/_lib/formatDistance.mjs
const router_ar_MA_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "أقل من ثانية واحدة",
    two: "أقل من ثانتين",
    threeToTen: "أقل من {{count}} ثواني",
    other: "أقل من {{count}} ثانية",
  },

  xSeconds: {
    one: "ثانية واحدة",
    two: "ثانتين",
    threeToTen: "{{count}} ثواني",
    other: "{{count}} ثانية",
  },

  halfAMinute: "نصف دقيقة",

  lessThanXMinutes: {
    one: "أقل من دقيقة",
    two: "أقل من دقيقتين",
    threeToTen: "أقل من {{count}} دقائق",
    other: "أقل من {{count}} دقيقة",
  },

  xMinutes: {
    one: "دقيقة واحدة",
    two: "دقيقتين",
    threeToTen: "{{count}} دقائق",
    other: "{{count}} دقيقة",
  },

  aboutXHours: {
    one: "ساعة واحدة تقريباً",
    two: "ساعتين تقريباً",
    threeToTen: "{{count}} ساعات تقريباً",
    other: "{{count}} ساعة تقريباً",
  },

  xHours: {
    one: "ساعة واحدة",
    two: "ساعتين",
    threeToTen: "{{count}} ساعات",
    other: "{{count}} ساعة",
  },

  xDays: {
    one: "يوم واحد",
    two: "يومين",
    threeToTen: "{{count}} أيام",
    other: "{{count}} يوم",
  },

  aboutXWeeks: {
    one: "أسبوع واحد تقريباً",
    two: "أسبوعين تقريباً",
    threeToTen: "{{count}} أسابيع تقريباً",
    other: "{{count}} أسبوع تقريباً",
  },

  xWeeks: {
    one: "أسبوع واحد",
    two: "أسبوعين",
    threeToTen: "{{count}} أسابيع",
    other: "{{count}} أسبوع",
  },

  aboutXMonths: {
    one: "شهر واحد تقريباً",
    two: "شهرين تقريباً",
    threeToTen: "{{count}} أشهر تقريباً",
    other: "{{count}} شهر تقريباً",
  },

  xMonths: {
    one: "شهر واحد",
    two: "شهرين",
    threeToTen: "{{count}} أشهر",
    other: "{{count}} شهر",
  },

  aboutXYears: {
    one: "عام واحد تقريباً",
    two: "عامين تقريباً",
    threeToTen: "{{count}} أعوام تقريباً",
    other: "{{count}} عام تقريباً",
  },

  xYears: {
    one: "عام واحد",
    two: "عامين",
    threeToTen: "{{count}} أعوام",
    other: "{{count}} عام",
  },

  overXYears: {
    one: "أكثر من عام",
    two: "أكثر من عامين",
    threeToTen: "أكثر من {{count}} أعوام",
    other: "أكثر من {{count}} عام",
  },

  almostXYears: {
    one: "عام واحد تقريباً",
    two: "عامين تقريباً",
    threeToTen: "{{count}} أعوام تقريباً",
    other: "{{count}} عام تقريباً",
  },
};

const router_ar_MA_lib_formatDistance_formatDistance = (token, count, options) => {
  options = options || {};

  const usageGroup = router_ar_MA_lib_formatDistance_formatDistanceLocale[token];
  let result;
  if (typeof usageGroup === "string") {
    result = usageGroup;
  } else if (count === 1) {
    result = usageGroup.one;
  } else if (count === 2) {
    result = usageGroup.two;
  } else if (count <= 10) {
    result = usageGroup.threeToTen.replace("{{count}}", String(count));
  } else {
    result = usageGroup.other.replace("{{count}}", String(count));
  }

  if (options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "في خلال " + result;
    } else {
      return "منذ " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ar-MA/_lib/formatLong.mjs


const router_ar_MA_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_ar_MA_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_ar_MA_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'عند' {{time}}",
  long: "{{date}} 'عند' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ar_MA_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ar_MA_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ar_MA_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ar_MA_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ar-MA/_lib/formatRelative.mjs
const router_ar_MA_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'أخر' eeee 'عند' p",
  yesterday: "'أمس عند' p",
  today: "'اليوم عند' p",
  tomorrow: "'غداً عند' p",
  nextWeek: "eeee 'عند' p",
  other: "P",
};

const router_ar_MA_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) => {
  return router_ar_MA_lib_formatRelative_formatRelativeLocale[token];
};

;// ./node_modules/date-fns/locale/ar-MA/_lib/localize.mjs


const router_ar_MA_lib_localize_eraValues = {
  narrow: ["ق", "ب"],
  abbreviated: ["ق.م.", "ب.م."],
  wide: ["قبل الميلاد", "بعد الميلاد"],
};

const router_ar_MA_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["ر1", "ر2", "ر3", "ر4"],
  wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"],
};

const router_ar_MA_lib_localize_monthValues = {
  narrow: ["ي", "ف", "م", "أ", "م", "ي", "ي", "غ", "ش", "أ", "ن", "د"],
  abbreviated: [
    "ينا",
    "فبر",
    "مارس",
    "أبريل",
    "ماي",
    "يونـ",
    "يولـ",
    "غشت",
    "شتنـ",
    "أكتـ",
    "نونـ",
    "دجنـ",
  ],

  wide: [
    "يناير",
    "فبراير",
    "مارس",
    "أبريل",
    "ماي",
    "يونيو",
    "يوليوز",
    "غشت",
    "شتنبر",
    "أكتوبر",
    "نونبر",
    "دجنبر",
  ],
};

const router_ar_MA_lib_localize_dayValues = {
  narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"],
  short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],
  abbreviated: ["أحد", "اثنـ", "ثلا", "أربـ", "خميـ", "جمعة", "سبت"],
  wide: [
    "الأحد",
    "الإثنين",
    "الثلاثاء",
    "الأربعاء",
    "الخميس",
    "الجمعة",
    "السبت",
  ],
};

const router_ar_MA_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    midnight: "ن",
    noon: "ظ",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
  wide: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
};
const router_ar_MA_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    midnight: "ن",
    noon: "ظ",
    morning: "في الصباح",
    afternoon: "بعد الظـهر",
    evening: "في المساء",
    night: "في الليل",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "في الصباح",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
  },
  wide: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظـهر",
    evening: "في المساء",
    night: "في الليل",
  },
};

const router_ar_MA_lib_localize_ordinalNumber = (dirtyNumber) => {
  return String(dirtyNumber);
};

const router_ar_MA_lib_localize_localize = {
  ordinalNumber: router_ar_MA_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ar_MA_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ar_MA_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => Number(quarter) - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ar_MA_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ar_MA_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ar_MA_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ar_MA_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ar-MA/_lib/match.mjs



const router_ar_MA_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_ar_MA_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ar_MA_lib_match_matchEraPatterns = {
  narrow: /^(ق|ب)/i,
  abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
  wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i,
};
const router_ar_MA_lib_match_parseEraPatterns = {
  any: [/^قبل/i, /^بعد/i],
};

const router_ar_MA_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^ر[1234]/i,
  wide: /^الربع [1234]/i,
};
const router_ar_MA_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ar_MA_lib_match_matchMonthPatterns = {
  narrow: /^[يفمأمسند]/i,
  abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|غش|شت|أك|ن|د)/i,
  wide: /^(ين|ف|مار|أب|ماي|يون|يول|غش|شت|أك|ن|د)/i,
};
const router_ar_MA_lib_match_parseMonthPatterns = {
  narrow: [
    /^ي/i,
    /^ف/i,
    /^م/i,
    /^أ/i,
    /^م/i,
    /^ي/i,
    /^ي/i,
    /^غ/i,
    /^ش/i,
    /^أ/i,
    /^ن/i,
    /^د/i,
  ],

  any: [
    /^ين/i,
    /^فب/i,
    /^مار/i,
    /^أب/i,
    /^ماي/i,
    /^يون/i,
    /^يول/i,
    /^غشت/i,
    /^ش/i,
    /^أك/i,
    /^ن/i,
    /^د/i,
  ],
};

const router_ar_MA_lib_match_matchDayPatterns = {
  narrow: /^[حنثرخجس]/i,
  short: /^(أحد|إثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
  abbreviated: /^(أحد|إثن|ثلا|أرب|خمي|جمعة|سبت)/i,
  wide: /^(الأحد|الإثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,
};
const router_ar_MA_lib_match_parseDayPatterns = {
  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],
  wide: [
    /^الأحد/i,
    /^الإثنين/i,
    /^الثلاثاء/i,
    /^الأربعاء/i,
    /^الخميس/i,
    /^الجمعة/i,
    /^السبت/i,
  ],

  any: [/^أح/i, /^إث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],
};

const router_ar_MA_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
};
const router_ar_MA_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i,
  },
};

const router_ar_MA_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ar_MA_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ar_MA_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ar_MA_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_MA_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ar_MA_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_MA_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => Number(index) + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ar_MA_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_MA_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ar_MA_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_MA_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ar_MA_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ar_MA_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ar-MA.mjs






/**
 * @category Locales
 * @summary Arabic locale (Moroccan Arabic).
 * @language Moroccan Arabic
 * @iso-639-2 ara
 * @author Achraf Rrami [@rramiachraf](https://github.com/rramiachraf)
 */
const router_arMA = {
  code: "ar-MA",
  formatDistance: router_ar_MA_lib_formatDistance_formatDistance,
  formatLong: router_ar_MA_lib_formatLong_formatLong,
  formatRelative: router_ar_MA_lib_formatRelative_formatRelative,
  localize: router_ar_MA_lib_localize_localize,
  match: router_ar_MA_lib_match_match,
  options: {
    // Monday is 1
    weekStartsOn: 1,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_ar_MA = ((/* unused pure expression or super */ null && (router_arMA)));

;// ./node_modules/date-fns/locale/ar-SA/_lib/formatDistance.mjs
const router_ar_SA_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "أقل من ثانية واحدة",
    two: "أقل من ثانتين",
    threeToTen: "أقل من {{count}} ثواني",
    other: "أقل من {{count}} ثانية",
  },

  xSeconds: {
    one: "ثانية واحدة",
    two: "ثانتين",
    threeToTen: "{{count}} ثواني",
    other: "{{count}} ثانية",
  },

  halfAMinute: "نصف دقيقة",

  lessThanXMinutes: {
    one: "أقل من دقيقة",
    two: "أقل من دقيقتين",
    threeToTen: "أقل من {{count}} دقائق",
    other: "أقل من {{count}} دقيقة",
  },

  xMinutes: {
    one: "دقيقة واحدة",
    two: "دقيقتين",
    threeToTen: "{{count}} دقائق",
    other: "{{count}} دقيقة",
  },

  aboutXHours: {
    one: "ساعة واحدة تقريباً",
    two: "ساعتين تقريباً",
    threeToTen: "{{count}} ساعات تقريباً",
    other: "{{count}} ساعة تقريباً",
  },

  xHours: {
    one: "ساعة واحدة",
    two: "ساعتين",
    threeToTen: "{{count}} ساعات",
    other: "{{count}} ساعة",
  },

  xDays: {
    one: "يوم واحد",
    two: "يومين",
    threeToTen: "{{count}} أيام",
    other: "{{count}} يوم",
  },

  aboutXWeeks: {
    one: "أسبوع واحد تقريباً",
    two: "أسبوعين تقريباً",
    threeToTen: "{{count}} أسابيع تقريباً",
    other: "{{count}} أسبوع تقريباً",
  },

  xWeeks: {
    one: "أسبوع واحد",
    two: "أسبوعين",
    threeToTen: "{{count}} أسابيع",
    other: "{{count}} أسبوع",
  },

  aboutXMonths: {
    one: "شهر واحد تقريباً",
    two: "شهرين تقريباً",
    threeToTen: "{{count}} أشهر تقريباً",
    other: "{{count}} شهر تقريباً",
  },

  xMonths: {
    one: "شهر واحد",
    two: "شهرين",
    threeToTen: "{{count}} أشهر",
    other: "{{count}} شهر",
  },

  aboutXYears: {
    one: "عام واحد تقريباً",
    two: "عامين تقريباً",
    threeToTen: "{{count}} أعوام تقريباً",
    other: "{{count}} عام تقريباً",
  },

  xYears: {
    one: "عام واحد",
    two: "عامين",
    threeToTen: "{{count}} أعوام",
    other: "{{count}} عام",
  },

  overXYears: {
    one: "أكثر من عام",
    two: "أكثر من عامين",
    threeToTen: "أكثر من {{count}} أعوام",
    other: "أكثر من {{count}} عام",
  },

  almostXYears: {
    one: "عام واحد تقريباً",
    two: "عامين تقريباً",
    threeToTen: "{{count}} أعوام تقريباً",
    other: "{{count}} عام تقريباً",
  },
};

const router_ar_SA_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ar_SA_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 2) {
    result = tokenValue.two;
  } else if (count <= 10) {
    result = tokenValue.threeToTen.replace("{{count}}", String(count));
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "في خلال " + result;
    } else {
      return "منذ " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ar-SA/_lib/formatLong.mjs


const router_ar_SA_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_ar_SA_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_ar_SA_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'عند' {{time}}",
  long: "{{date}} 'عند' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ar_SA_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ar_SA_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ar_SA_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ar_SA_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ar-SA/_lib/formatRelative.mjs
const router_ar_SA_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'أخر' eeee 'عند' p",
  yesterday: "'أمس عند' p",
  today: "'اليوم عند' p",
  tomorrow: "'غداً عند' p",
  nextWeek: "eeee 'عند' p",
  other: "P",
};

const router_ar_SA_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ar_SA_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ar-SA/_lib/localize.mjs


const router_ar_SA_lib_localize_eraValues = {
  narrow: ["ق", "ب"],
  abbreviated: ["ق.م.", "ب.م."],
  wide: ["قبل الميلاد", "بعد الميلاد"],
};

const router_ar_SA_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["ر1", "ر2", "ر3", "ر4"],
  wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"],
};

const router_ar_SA_lib_localize_monthValues = {
  narrow: ["ي", "ف", "م", "أ", "م", "ي", "ي", "أ", "س", "أ", "ن", "د"],
  abbreviated: [
    "ينا",
    "فبر",
    "مارس",
    "أبريل",
    "مايو",
    "يونـ",
    "يولـ",
    "أغسـ",
    "سبتـ",
    "أكتـ",
    "نوفـ",
    "ديسـ",
  ],

  wide: [
    "يناير",
    "فبراير",
    "مارس",
    "أبريل",
    "مايو",
    "يونيو",
    "يوليو",
    "أغسطس",
    "سبتمبر",
    "أكتوبر",
    "نوفمبر",
    "ديسمبر",
  ],
};

const router_ar_SA_lib_localize_dayValues = {
  narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"],
  short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],
  abbreviated: ["أحد", "اثنـ", "ثلا", "أربـ", "خميـ", "جمعة", "سبت"],
  wide: [
    "الأحد",
    "الاثنين",
    "الثلاثاء",
    "الأربعاء",
    "الخميس",
    "الجمعة",
    "السبت",
  ],
};

const router_ar_SA_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    midnight: "ن",
    noon: "ظ",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
  wide: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظهر",
    evening: "مساءاً",
    night: "ليلاً",
  },
};
const router_ar_SA_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "م",
    midnight: "ن",
    noon: "ظ",
    morning: "في الصباح",
    afternoon: "بعد الظـهر",
    evening: "في المساء",
    night: "في الليل",
  },
  abbreviated: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "في الصباح",
    afternoon: "بعد الظهر",
    evening: "في المساء",
    night: "في الليل",
  },
  wide: {
    am: "ص",
    pm: "م",
    midnight: "نصف الليل",
    noon: "ظهر",
    morning: "صباحاً",
    afternoon: "بعد الظـهر",
    evening: "في المساء",
    night: "في الليل",
  },
};

const router_ar_SA_lib_localize_ordinalNumber = (dirtyNumber) => {
  return String(dirtyNumber);
};

const router_ar_SA_lib_localize_localize = {
  ordinalNumber: router_ar_SA_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ar_SA_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ar_SA_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ar_SA_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ar_SA_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ar_SA_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ar_SA_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ar-SA/_lib/match.mjs



const router_ar_SA_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_ar_SA_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ar_SA_lib_match_matchEraPatterns = {
  narrow: /^(ق|ب)/i,
  abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
  wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i,
};
const router_ar_SA_lib_match_parseEraPatterns = {
  any: [/^قبل/i, /^بعد/i],
};

const router_ar_SA_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^ر[1234]/i,
  wide: /^الربع [1234]/i,
};
const router_ar_SA_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ar_SA_lib_match_matchMonthPatterns = {
  narrow: /^[يفمأمسند]/i,
  abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i,
  wide: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i,
};
const router_ar_SA_lib_match_parseMonthPatterns = {
  narrow: [
    /^ي/i,
    /^ف/i,
    /^م/i,
    /^أ/i,
    /^م/i,
    /^ي/i,
    /^ي/i,
    /^أ/i,
    /^س/i,
    /^أ/i,
    /^ن/i,
    /^د/i,
  ],

  any: [
    /^ين/i,
    /^ف/i,
    /^مار/i,
    /^أب/i,
    /^ماي/i,
    /^يون/i,
    /^يول/i,
    /^أغ/i,
    /^س/i,
    /^أك/i,
    /^ن/i,
    /^د/i,
  ],
};

const router_ar_SA_lib_match_matchDayPatterns = {
  narrow: /^[حنثرخجس]/i,
  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
  abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i,
  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,
};
const router_ar_SA_lib_match_parseDayPatterns = {
  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],
  wide: [
    /^الأحد/i,
    /^الاثنين/i,
    /^الثلاثاء/i,
    /^الأربعاء/i,
    /^الخميس/i,
    /^الجمعة/i,
    /^السبت/i,
  ],

  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],
};

const router_ar_SA_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
};
const router_ar_SA_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i,
  },
};

const router_ar_SA_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ar_SA_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ar_SA_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ar_SA_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_SA_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ar_SA_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_SA_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ar_SA_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_SA_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ar_SA_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_SA_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ar_SA_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ar_SA_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ar-SA.mjs






/**
 * @category Locales
 * @summary Arabic locale (Sauid Arabic).
 * @language Arabic
 * @iso-639-2 ara
 * @author Dhaifallah Alwadani [@dalwadani](https://github.com/dalwadani)
 */
const router_arSA = {
  code: "ar-SA",
  formatDistance: router_ar_SA_lib_formatDistance_formatDistance,
  formatLong: router_ar_SA_lib_formatLong_formatLong,
  formatRelative: router_ar_SA_lib_formatRelative_formatRelative,
  localize: router_ar_SA_lib_localize_localize,
  match: router_ar_SA_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_ar_SA = ((/* unused pure expression or super */ null && (router_arSA)));

;// ./node_modules/date-fns/locale/ar-TN/_lib/formatDistance.mjs
const router_ar_TN_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "أقل من ثانية",
    two: "أقل من زوز ثواني",
    threeToTen: "أقل من {{count}} ثواني",
    other: "أقل من {{count}} ثانية",
  },

  xSeconds: {
    one: "ثانية",
    two: "زوز ثواني",
    threeToTen: "{{count}} ثواني",
    other: "{{count}} ثانية",
  },

  halfAMinute: "نص دقيقة",

  lessThanXMinutes: {
    one: "أقل من دقيقة",
    two: "أقل من دقيقتين",
    threeToTen: "أقل من {{count}} دقايق",
    other: "أقل من {{count}} دقيقة",
  },

  xMinutes: {
    one: "دقيقة",
    two: "دقيقتين",
    threeToTen: "{{count}} دقايق",
    other: "{{count}} دقيقة",
  },

  aboutXHours: {
    one: "ساعة تقريب",
    two: "ساعتين تقريب",
    threeToTen: "{{count}} سوايع تقريب",
    other: "{{count}} ساعة تقريب",
  },

  xHours: {
    one: "ساعة",
    two: "ساعتين",
    threeToTen: "{{count}} سوايع",
    other: "{{count}} ساعة",
  },

  xDays: {
    one: "نهار",
    two: "نهارين",
    threeToTen: "{{count}} أيام",
    other: "{{count}} يوم",
  },

  aboutXWeeks: {
    one: "جمعة تقريب",
    two: "جمعتين تقريب",
    threeToTen: "{{count}} جماع تقريب",
    other: "{{count}} جمعة تقريب",
  },

  xWeeks: {
    one: "جمعة",
    two: "جمعتين",
    threeToTen: "{{count}} جماع",
    other: "{{count}} جمعة",
  },

  aboutXMonths: {
    one: "شهر تقريب",
    two: "شهرين تقريب",
    threeToTen: "{{count}} أشهرة تقريب",
    other: "{{count}} شهر تقريب",
  },

  xMonths: {
    one: "شهر",
    two: "شهرين",
    threeToTen: "{{count}} أشهرة",
    other: "{{count}} شهر",
  },

  aboutXYears: {
    one: "عام تقريب",
    two: "عامين تقريب",
    threeToTen: "{{count}} أعوام تقريب",
    other: "{{count}} عام تقريب",
  },

  xYears: {
    one: "عام",
    two: "عامين",
    threeToTen: "{{count}} أعوام",
    other: "{{count}} عام",
  },

  overXYears: {
    one: "أكثر من عام",
    two: "أكثر من عامين",
    threeToTen: "أكثر من {{count}} أعوام",
    other: "أكثر من {{count}} عام",
  },

  almostXYears: {
    one: "عام تقريب",
    two: "عامين تقريب",
    threeToTen: "{{count}} أعوام تقريب",
    other: "{{count}} عام تقريب",
  },
};

const router_ar_TN_lib_formatDistance_formatDistance = (token, count, options) => {
  const usageGroup = router_ar_TN_lib_formatDistance_formatDistanceLocale[token];
  let result;
  if (typeof usageGroup === "string") {
    result = usageGroup;
  } else if (count === 1) {
    result = usageGroup.one;
  } else if (count === 2) {
    result = usageGroup.two;
  } else if (count <= 10) {
    result = usageGroup.threeToTen.replace("{{count}}", String(count));
  } else {
    result = usageGroup.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "في " + result;
    } else {
      return "عندو " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ar-TN/_lib/formatLong.mjs


const router_ar_TN_lib_formatLong_dateFormats = {
  full: "EEEE، do MMMM y",
  long: "do MMMM y",
  medium: "d MMM y",
  short: "dd/MM/yyyy",
};

const router_ar_TN_lib_formatLong_timeFormats = {
  full: "HH:mm:ss",
  long: "HH:mm:ss",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_ar_TN_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'مع' {{time}}",
  long: "{{date}} 'مع' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ar_TN_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ar_TN_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ar_TN_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ar_TN_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ar-TN/_lib/formatRelative.mjs
const router_ar_TN_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'إلي فات مع' p",
  yesterday: "'البارح مع' p",
  today: "'اليوم مع' p",
  tomorrow: "'غدوة مع' p",
  nextWeek: "eeee 'الجمعة الجاية مع' p 'نهار'",
  other: "P",
};

const router_ar_TN_lib_formatRelative_formatRelative = (token) => router_ar_TN_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ar-TN/_lib/localize.mjs


const router_ar_TN_lib_localize_eraValues = {
  narrow: ["ق", "ب"],
  abbreviated: ["ق.م.", "ب.م."],
  wide: ["قبل الميلاد", "بعد الميلاد"],
};

const router_ar_TN_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["ر1", "ر2", "ر3", "ر4"],
  wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"],
};

const router_ar_TN_lib_localize_monthValues = {
  narrow: ["د", "ن", "أ", "س", "أ", "ج", "ج", "م", "أ", "م", "ف", "ج"],
  abbreviated: [
    "جانفي",
    "فيفري",
    "مارس",
    "أفريل",
    "ماي",
    "جوان",
    "جويلية",
    "أوت",
    "سبتمبر",
    "أكتوبر",
    "نوفمبر",
    "ديسمبر",
  ],

  wide: [
    "جانفي",
    "فيفري",
    "مارس",
    "أفريل",
    "ماي",
    "جوان",
    "جويلية",
    "أوت",
    "سبتمبر",
    "أكتوبر",
    "نوفمبر",
    "ديسمبر",
  ],
};

const router_ar_TN_lib_localize_dayValues = {
  narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"],
  short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],
  abbreviated: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],

  wide: [
    "الأحد",
    "الاثنين",
    "الثلاثاء",
    "الأربعاء",
    "الخميس",
    "الجمعة",
    "السبت",
  ],
};

const router_ar_TN_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "ع",
    morning: "الصباح",
    noon: "القايلة",
    afternoon: "بعد القايلة",
    evening: "العشية",
    night: "الليل",
    midnight: "نص الليل",
  },
  abbreviated: {
    am: "ص",
    pm: "ع",
    morning: "الصباح",
    noon: "القايلة",
    afternoon: "بعد القايلة",
    evening: "العشية",
    night: "الليل",
    midnight: "نص الليل",
  },
  wide: {
    am: "ص",
    pm: "ع",
    morning: "الصباح",
    noon: "القايلة",
    afternoon: "بعد القايلة",
    evening: "العشية",
    night: "الليل",
    midnight: "نص الليل",
  },
};

const router_ar_TN_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ص",
    pm: "ع",
    morning: "في الصباح",
    noon: "في القايلة",
    afternoon: "بعد القايلة",
    evening: "في العشية",
    night: "في الليل",
    midnight: "نص الليل",
  },
  abbreviated: {
    am: "ص",
    pm: "ع",
    morning: "في الصباح",
    noon: "في القايلة",
    afternoon: "بعد القايلة",
    evening: "في العشية",
    night: "في الليل",
    midnight: "نص الليل",
  },
  wide: {
    am: "ص",
    pm: "ع",
    morning: "في الصباح",
    noon: "في القايلة",
    afternoon: "بعد القايلة",
    evening: "في العشية",
    night: "في الليل",
    midnight: "نص الليل",
  },
};

const router_ar_TN_lib_localize_ordinalNumber = (num) => String(num);

const router_ar_TN_lib_localize_localize = {
  ordinalNumber: router_ar_TN_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ar_TN_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ar_TN_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ar_TN_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ar_TN_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ar_TN_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ar_TN_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ar-TN/_lib/match.mjs



const router_ar_TN_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_ar_TN_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ar_TN_lib_match_matchEraPatterns = {
  narrow: /[قب]/,
  abbreviated: /[قب]\.م\./,
  wide: /(قبل|بعد) الميلاد/,
};
const router_ar_TN_lib_match_parseEraPatterns = {
  any: [/قبل/, /بعد/],
};

const router_ar_TN_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /ر[1234]/,
  wide: /الربع (الأول|الثاني|الثالث|الرابع)/,
};
const router_ar_TN_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ar_TN_lib_match_matchMonthPatterns = {
  narrow: /^[جفمأسند]/,
  abbreviated:
    /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,
  wide: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,
};
const router_ar_TN_lib_match_parseMonthPatterns = {
  narrow: [
    /^ج/i,
    /^ف/i,
    /^م/i,
    /^أ/i,
    /^م/i,
    /^ج/i,
    /^ج/i,
    /^أ/i,
    /^س/i,
    /^أ/i,
    /^ن/i,
    /^د/i,
  ],

  any: [
    /^جانفي/i,
    /^فيفري/i,
    /^مارس/i,
    /^أفريل/i,
    /^ماي/i,
    /^جوان/i,
    /^جويلية/i,
    /^أوت/i,
    /^سبتمبر/i,
    /^أكتوبر/i,
    /^نوفمبر/i,
    /^ديسمبر/i,
  ],
};

const router_ar_TN_lib_match_matchDayPatterns = {
  narrow: /^[حنثرخجس]/i,
  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
  abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,
};
const router_ar_TN_lib_match_parseDayPatterns = {
  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],
  wide: [
    /^الأحد/i,
    /^الاثنين/i,
    /^الثلاثاء/i,
    /^الأربعاء/i,
    /^الخميس/i,
    /^الجمعة/i,
    /^السبت/i,
  ],

  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],
};

const router_ar_TN_lib_match_matchDayPeriodPatterns = {
  narrow: /^(ص|ع|ن ل|ل|(في|مع) (صباح|قايلة|عشية|ليل))/,
  any: /^([صع]|نص الليل|قايلة|(في|مع) (صباح|قايلة|عشية|ليل))/,
};
const router_ar_TN_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ص/,
    pm: /^ع/,
    midnight: /نص الليل/,
    noon: /قايلة/,
    afternoon: /بعد القايلة/,
    morning: /صباح/,
    evening: /عشية/,
    night: /ليل/,
  },
};

const router_ar_TN_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ar_TN_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ar_TN_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ar_TN_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_TN_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ar_TN_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_TN_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ar_TN_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_TN_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ar_TN_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ar_TN_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ar_TN_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ar_TN_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ar-TN.mjs






/**
 * @category Locales
 * @summary Arabic locale (Tunisian Arabic).
 * @language Arabic
 * @iso-639-2 ara
 * @author Koussay Haj Kacem [@essana3](https://github.com/essana3)
 */
const router_arTN = {
  code: "ar-TN",
  formatDistance: router_ar_TN_lib_formatDistance_formatDistance,
  formatLong: router_ar_TN_lib_formatLong_formatLong,
  formatRelative: router_ar_TN_lib_formatRelative_formatRelative,
  localize: router_ar_TN_lib_localize_localize,
  match: router_ar_TN_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_ar_TN = ((/* unused pure expression or super */ null && (router_arTN)));

;// ./node_modules/date-fns/locale/az/_lib/formatDistance.mjs
const router_az_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "bir saniyədən az",
    other: "{{count}} bir saniyədən az",
  },

  xSeconds: {
    one: "1 saniyə",
    other: "{{count}} saniyə",
  },

  halfAMinute: "yarım dəqiqə",

  lessThanXMinutes: {
    one: "bir dəqiqədən az",
    other: "{{count}} bir dəqiqədən az",
  },

  xMinutes: {
    one: "bir dəqiqə",
    other: "{{count}} dəqiqə",
  },

  aboutXHours: {
    one: "təxminən 1 saat",
    other: "təxminən {{count}} saat",
  },

  xHours: {
    one: "1 saat",
    other: "{{count}} saat",
  },

  xDays: {
    one: "1 gün",
    other: "{{count}} gün",
  },

  aboutXWeeks: {
    one: "təxminən 1 həftə",
    other: "təxminən {{count}} həftə",
  },

  xWeeks: {
    one: "1 həftə",
    other: "{{count}} həftə",
  },

  aboutXMonths: {
    one: "təxminən 1 ay",
    other: "təxminən {{count}} ay",
  },

  xMonths: {
    one: "1 ay",
    other: "{{count}} ay",
  },

  aboutXYears: {
    one: "təxminən 1 il",
    other: "təxminən {{count}} il",
  },

  xYears: {
    one: "1 il",
    other: "{{count}} il",
  },

  overXYears: {
    one: "1 ildən çox",
    other: "{{count}} ildən çox",
  },

  almostXYears: {
    one: "demək olar ki 1 il",
    other: "demək olar ki {{count}} il",
  },
};

const router_az_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_az_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + " sonra";
    } else {
      return result + " əvvəl";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/az/_lib/formatLong.mjs


const router_az_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM y 'il'",
  long: "do MMMM y 'il'",
  medium: "d MMM y 'il'",
  short: "dd.MM.yyyy",
};

const router_az_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_az_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}} - 'də'",
  long: "{{date}} {{time}} - 'də'",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_az_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_az_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_az_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_az_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/az/_lib/formatRelative.mjs
const router_az_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'sonuncu' eeee p -'də'",
  yesterday: "'dünən' p -'də'",
  today: "'bugün' p -'də'",
  tomorrow: "'sabah' p -'də'",
  nextWeek: "eeee p -'də'",
  other: "P",
};

const router_az_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_az_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/az/_lib/localize.mjs


const router_az_lib_localize_eraValues = {
  narrow: ["e.ə", "b.e"],
  abbreviated: ["e.ə", "b.e"],
  wide: ["eramızdan əvvəl", "bizim era"],
};

const router_az_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: ["1ci kvartal", "2ci kvartal", "3cü kvartal", "4cü kvartal"],
};
const router_az_lib_localize_monthValues = {
  narrow: ["Y", "F", "M", "A", "M", "İ", "İ", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Yan",
    "Fev",
    "Mar",
    "Apr",
    "May",
    "İyun",
    "İyul",
    "Avq",
    "Sen",
    "Okt",
    "Noy",
    "Dek",
  ],

  wide: [
    "Yanvar",
    "Fevral",
    "Mart",
    "Aprel",
    "May",
    "İyun",
    "İyul",
    "Avqust",
    "Sentyabr",
    "Oktyabr",
    "Noyabr",
    "Dekabr",
  ],
};

const router_az_lib_localize_dayValues = {
  narrow: ["B.", "B.e", "Ç.a", "Ç.", "C.a", "C.", "Ş."],
  short: ["B.", "B.e", "Ç.a", "Ç.", "C.a", "C.", "Ş."],
  abbreviated: ["Baz", "Baz.e", "Çər.a", "Çər", "Cüm.a", "Cüm", "Şə"],
  wide: [
    "Bazar",
    "Bazar ertəsi",
    "Çərşənbə axşamı",
    "Çərşənbə",
    "Cümə axşamı",
    "Cümə",
    "Şənbə",
  ],
};

const router_az_lib_localize_dayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "gecəyarı",
    noon: "gün",
    morning: "səhər",
    afternoon: "gündüz",
    evening: "axşam",
    night: "gecə",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "gecəyarı",
    noon: "gün",
    morning: "səhər",
    afternoon: "gündüz",
    evening: "axşam",
    night: "gecə",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "gecəyarı",
    noon: "gün",
    morning: "səhər",
    afternoon: "gündüz",
    evening: "axşam",
    night: "gecə",
  },
};

const router_az_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "gecəyarı",
    noon: "gün",
    morning: "səhər",
    afternoon: "gündüz",
    evening: "axşam",
    night: "gecə",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "gecəyarı",
    noon: "gün",
    morning: "səhər",
    afternoon: "gündüz",
    evening: "axşam",
    night: "gecə",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "gecəyarı",
    noon: "gün",
    morning: "səhər",
    afternoon: "gündüz",
    evening: "axşam",
    night: "gecə",
  },
};

const router_suffixes = {
  1: "-inci",
  5: "-inci",
  8: "-inci",
  70: "-inci",
  80: "-inci",
  2: "-nci",
  7: "-nci",
  20: "-nci",
  50: "-nci",
  3: "-üncü",
  4: "-üncü",
  100: "-üncü",
  6: "-ncı",
  9: "-uncu",
  10: "-uncu",
  30: "-uncu",
  60: "-ıncı",
  90: "-ıncı",
};

const router_getSuffix = (number) => {
  if (number === 0) {
    // special case for zero
    return number + "-ıncı";
  }

  const a = number % 10;
  const b = (number % 100) - a;
  const c = number >= 100 ? 100 : null;

  if (router_suffixes[a]) {
    return router_suffixes[a];
  } else if (router_suffixes[b]) {
    return router_suffixes[b];
  } else if (c !== null) {
    return router_suffixes[c];
  }
  return "";
};

const router_az_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  const suffix = router_getSuffix(number);

  return number + suffix;
};

const router_az_lib_localize_localize = {
  ordinalNumber: router_az_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_az_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_az_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_az_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_az_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_az_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_az_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/az/_lib/match.mjs



const router_az_lib_match_matchOrdinalNumberPattern = /^(\d+)(-?(ci|inci|nci|uncu|üncü|ncı))?/i;
const router_az_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_az_lib_match_matchEraPatterns = {
  narrow: /^(b|a)$/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)$/i,
  wide: /^(bizim eradan əvvəl|bizim era)$/i,
};
const router_az_lib_match_parseEraPatterns = {
  any: [/^b$/i, /^(a|c)$/i],
};

const router_az_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]$/i,
  abbreviated: /^K[1234]$/i,
  wide: /^[1234](ci)? kvartal$/i,
};
const router_az_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_az_lib_match_matchMonthPatterns = {
  narrow: /^[(?-i)yfmaisond]$/i,
  abbreviated: /^(Yan|Fev|Mar|Apr|May|İyun|İyul|Avq|Sen|Okt|Noy|Dek)$/i,
  wide: /^(Yanvar|Fevral|Mart|Aprel|May|İyun|İyul|Avgust|Sentyabr|Oktyabr|Noyabr|Dekabr)$/i,
};
const router_az_lib_match_parseMonthPatterns = {
  narrow: [
    /^[(?-i)y]$/i,
    /^[(?-i)f]$/i,
    /^[(?-i)m]$/i,
    /^[(?-i)a]$/i,
    /^[(?-i)m]$/i,
    /^[(?-i)i]$/i,
    /^[(?-i)i]$/i,
    /^[(?-i)a]$/i,
    /^[(?-i)s]$/i,
    /^[(?-i)o]$/i,
    /^[(?-i)n]$/i,
    /^[(?-i)d]$/i,
  ],

  abbreviated: [
    /^Yan$/i,
    /^Fev$/i,
    /^Mar$/i,
    /^Apr$/i,
    /^May$/i,
    /^İyun$/i,
    /^İyul$/i,
    /^Avg$/i,
    /^Sen$/i,
    /^Okt$/i,
    /^Noy$/i,
    /^Dek$/i,
  ],

  wide: [
    /^Yanvar$/i,
    /^Fevral$/i,
    /^Mart$/i,
    /^Aprel$/i,
    /^May$/i,
    /^İyun$/i,
    /^İyul$/i,
    /^Avgust$/i,
    /^Sentyabr$/i,
    /^Oktyabr$/i,
    /^Noyabr$/i,
    /^Dekabr$/i,
  ],
};

const router_az_lib_match_matchDayPatterns = {
  narrow: /^(B\.|B\.e|Ç\.a|Ç\.|C\.a|C\.|Ş\.)$/i,
  short: /^(B\.|B\.e|Ç\.a|Ç\.|C\.a|C\.|Ş\.)$/i,
  abbreviated: /^(Baz\.e|Çər|Çər\.a|Cüm|Cüm\.a|Şə)$/i,
  wide: /^(Bazar|Bazar ertəsi|Çərşənbə axşamı|Çərşənbə|Cümə axşamı|Cümə|Şənbə)$/i,
};
const router_az_lib_match_parseDayPatterns = {
  narrow: [
    /^B\.$/i,
    /^B\.e$/i,
    /^Ç\.a$/i,
    /^Ç\.$/i,
    /^C\.a$/i,
    /^C\.$/i,
    /^Ş\.$/i,
  ],

  abbreviated: [
    /^Baz$/i,
    /^Baz\.e$/i,
    /^Çər\.a$/i,
    /^Çər$/i,
    /^Cüm\.a$/i,
    /^Cüm$/i,
    /^Şə$/i,
  ],

  wide: [
    /^Bazar$/i,
    /^Bazar ertəsi$/i,
    /^Çərşənbə axşamı$/i,
    /^Çərşənbə$/i,
    /^Cümə axşamı$/i,
    /^Cümə$/i,
    /^Şənbə$/i,
  ],

  any: [
    /^B\.$/i,
    /^B\.e$/i,
    /^Ç\.a$/i,
    /^Ç\.$/i,
    /^C\.a$/i,
    /^C\.$/i,
    /^Ş\.$/i,
  ],
};

const router_az_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|gecəyarı|gün|səhər|gündüz|axşam|gecə)$/i,
  any: /^(am|pm|a\.m\.|p\.m\.|AM|PM|gecəyarı|gün|səhər|gündüz|axşam|gecə)$/i,
};
const router_az_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a$/i,
    pm: /^p$/i,
    midnight: /^gecəyarı$/i,
    noon: /^gün$/i,
    morning: /səhər$/i,
    afternoon: /gündüz$/i,
    evening: /axşam$/i,
    night: /gecə$/i,
  },
};

const router_az_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_az_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_az_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_az_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_az_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_az_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_az_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_az_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_az_lib_match_parseMonthPatterns,
    defaultParseWidth: "narrow",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_az_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_az_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_az_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_az_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/az.mjs






/**
 * @category Locales
 * @summary Azerbaijani locale.
 * @language Azerbaijani
 * @iso-639-2 aze
 */

const router_az = {
  code: "az",
  formatDistance: router_az_lib_formatDistance_formatDistance,
  formatLong: router_az_lib_formatLong_formatLong,
  formatRelative: router_az_lib_formatRelative_formatRelative,
  localize: router_az_lib_localize_localize,
  match: router_az_lib_match_match,
  options: {
    weekStartsOn: 1,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_az = ((/* unused pure expression or super */ null && (router_az)));

;// ./node_modules/date-fns/locale/be/_lib/formatDistance.mjs
function router_declension(scheme, count) {
  // scheme for count=1 exists
  if (scheme.one !== undefined && count === 1) {
    return scheme.one;
  }

  const rem10 = count % 10;
  const rem100 = count % 100;

  // 1, 21, 31, ...
  if (rem10 === 1 && rem100 !== 11) {
    return scheme.singularNominative.replace("{{count}}", String(count));

    // 2, 3, 4, 22, 23, 24, 32 ...
  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
    return scheme.singularGenitive.replace("{{count}}", String(count));

    // 5, 6, 7, 8, 9, 10, 11, ...
  } else {
    return scheme.pluralGenitive.replace("{{count}}", String(count));
  }
}

function router_buildLocalizeTokenFn(scheme) {
  return (count, options) => {
    if (options && options.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        if (scheme.future) {
          return router_declension(scheme.future, count);
        } else {
          return "праз " + router_declension(scheme.regular, count);
        }
      } else {
        if (scheme.past) {
          return router_declension(scheme.past, count);
        } else {
          return router_declension(scheme.regular, count) + " таму";
        }
      }
    } else {
      return router_declension(scheme.regular, count);
    }
  };
}

const router_halfAMinute = (_, options) => {
  if (options && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "праз паўхвіліны";
    } else {
      return "паўхвіліны таму";
    }
  }

  return "паўхвіліны";
};

const router_be_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: router_buildLocalizeTokenFn({
    regular: {
      one: "менш за секунду",
      singularNominative: "менш за {{count}} секунду",
      singularGenitive: "менш за {{count}} секунды",
      pluralGenitive: "менш за {{count}} секунд",
    },
    future: {
      one: "менш, чым праз секунду",
      singularNominative: "менш, чым праз {{count}} секунду",
      singularGenitive: "менш, чым праз {{count}} секунды",
      pluralGenitive: "менш, чым праз {{count}} секунд",
    },
  }),

  xSeconds: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} секунда",
      singularGenitive: "{{count}} секунды",
      pluralGenitive: "{{count}} секунд",
    },
    past: {
      singularNominative: "{{count}} секунду таму",
      singularGenitive: "{{count}} секунды таму",
      pluralGenitive: "{{count}} секунд таму",
    },
    future: {
      singularNominative: "праз {{count}} секунду",
      singularGenitive: "праз {{count}} секунды",
      pluralGenitive: "праз {{count}} секунд",
    },
  }),

  halfAMinute: router_halfAMinute,

  lessThanXMinutes: router_buildLocalizeTokenFn({
    regular: {
      one: "менш за хвіліну",
      singularNominative: "менш за {{count}} хвіліну",
      singularGenitive: "менш за {{count}} хвіліны",
      pluralGenitive: "менш за {{count}} хвілін",
    },
    future: {
      one: "менш, чым праз хвіліну",
      singularNominative: "менш, чым праз {{count}} хвіліну",
      singularGenitive: "менш, чым праз {{count}} хвіліны",
      pluralGenitive: "менш, чым праз {{count}} хвілін",
    },
  }),

  xMinutes: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} хвіліна",
      singularGenitive: "{{count}} хвіліны",
      pluralGenitive: "{{count}} хвілін",
    },
    past: {
      singularNominative: "{{count}} хвіліну таму",
      singularGenitive: "{{count}} хвіліны таму",
      pluralGenitive: "{{count}} хвілін таму",
    },
    future: {
      singularNominative: "праз {{count}} хвіліну",
      singularGenitive: "праз {{count}} хвіліны",
      pluralGenitive: "праз {{count}} хвілін",
    },
  }),

  aboutXHours: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "каля {{count}} гадзіны",
      singularGenitive: "каля {{count}} гадзін",
      pluralGenitive: "каля {{count}} гадзін",
    },
    future: {
      singularNominative: "прыблізна праз {{count}} гадзіну",
      singularGenitive: "прыблізна праз {{count}} гадзіны",
      pluralGenitive: "прыблізна праз {{count}} гадзін",
    },
  }),

  xHours: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} гадзіна",
      singularGenitive: "{{count}} гадзіны",
      pluralGenitive: "{{count}} гадзін",
    },
    past: {
      singularNominative: "{{count}} гадзіну таму",
      singularGenitive: "{{count}} гадзіны таму",
      pluralGenitive: "{{count}} гадзін таму",
    },
    future: {
      singularNominative: "праз {{count}} гадзіну",
      singularGenitive: "праз {{count}} гадзіны",
      pluralGenitive: "праз {{count}} гадзін",
    },
  }),

  xDays: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} дзень",
      singularGenitive: "{{count}} дні",
      pluralGenitive: "{{count}} дзён",
    },
  }),

  aboutXWeeks: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "каля {{count}} тыдні",
      singularGenitive: "каля {{count}} тыдняў",
      pluralGenitive: "каля {{count}} тыдняў",
    },
    future: {
      singularNominative: "прыблізна праз {{count}} тыдзень",
      singularGenitive: "прыблізна праз {{count}} тыдні",
      pluralGenitive: "прыблізна праз {{count}} тыдняў",
    },
  }),

  xWeeks: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} тыдзень",
      singularGenitive: "{{count}} тыдні",
      pluralGenitive: "{{count}} тыдняў",
    },
  }),

  aboutXMonths: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "каля {{count}} месяца",
      singularGenitive: "каля {{count}} месяцаў",
      pluralGenitive: "каля {{count}} месяцаў",
    },
    future: {
      singularNominative: "прыблізна праз {{count}} месяц",
      singularGenitive: "прыблізна праз {{count}} месяцы",
      pluralGenitive: "прыблізна праз {{count}} месяцаў",
    },
  }),

  xMonths: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} месяц",
      singularGenitive: "{{count}} месяцы",
      pluralGenitive: "{{count}} месяцаў",
    },
  }),

  aboutXYears: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "каля {{count}} года",
      singularGenitive: "каля {{count}} гадоў",
      pluralGenitive: "каля {{count}} гадоў",
    },
    future: {
      singularNominative: "прыблізна праз {{count}} год",
      singularGenitive: "прыблізна праз {{count}} гады",
      pluralGenitive: "прыблізна праз {{count}} гадоў",
    },
  }),

  xYears: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} год",
      singularGenitive: "{{count}} гады",
      pluralGenitive: "{{count}} гадоў",
    },
  }),

  overXYears: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "больш за {{count}} год",
      singularGenitive: "больш за {{count}} гады",
      pluralGenitive: "больш за {{count}} гадоў",
    },
    future: {
      singularNominative: "больш, чым праз {{count}} год",
      singularGenitive: "больш, чым праз {{count}} гады",
      pluralGenitive: "больш, чым праз {{count}} гадоў",
    },
  }),

  almostXYears: router_buildLocalizeTokenFn({
    regular: {
      singularNominative: "амаль {{count}} год",
      singularGenitive: "амаль {{count}} гады",
      pluralGenitive: "амаль {{count}} гадоў",
    },
    future: {
      singularNominative: "амаль праз {{count}} год",
      singularGenitive: "амаль праз {{count}} гады",
      pluralGenitive: "амаль праз {{count}} гадоў",
    },
  }),
};

const router_be_lib_formatDistance_formatDistance = (token, count, options) => {
  options = options || {};
  return router_be_lib_formatDistance_formatDistanceLocale[token](count, options);
};

;// ./node_modules/date-fns/locale/be/_lib/formatLong.mjs


const router_be_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM y 'г.'",
  long: "d MMMM y 'г.'",
  medium: "d MMM y 'г.'",
  short: "dd.MM.y",
};

const router_be_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_be_lib_formatLong_dateTimeFormats = {
  any: "{{date}}, {{time}}",
};

const router_be_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_be_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_be_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_be_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/isSameWeek.mjs


/**
 * The {@link isSameWeek} function options.
 */

/**
 * @name isSameWeek
 * @category Week Helpers
 * @summary Are the given dates in the same week (and month and year)?
 *
 * @description
 * Are the given dates in the same week (and month and year)?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 * @param options - An object with options
 *
 * @returns The dates are in the same week (and month and year)
 *
 * @example
 * // Are 31 August 2014 and 4 September 2014 in the same week?
 * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))
 * //=> true
 *
 * @example
 * // If week starts with Monday,
 * // are 31 August 2014 and 4 September 2014 in the same week?
 * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {
 *   weekStartsOn: 1
 * })
 * //=> false
 *
 * @example
 * // Are 1 January 2014 and 1 January 2015 in the same week?
 * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))
 * //=> false
 */
function router_isSameWeek(dateLeft, dateRight, options) {
  const dateLeftStartOfWeek = router_startOfWeek(dateLeft, options);
  const dateRightStartOfWeek = router_startOfWeek(dateRight, options);

  return +dateLeftStartOfWeek === +dateRightStartOfWeek;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_isSameWeek = ((/* unused pure expression or super */ null && (router_isSameWeek)));

;// ./node_modules/date-fns/locale/be/_lib/formatRelative.mjs



const router_accusativeWeekdays = [
  "нядзелю",
  "панядзелак",
  "аўторак",
  "сераду",
  "чацвер",
  "пятніцу",
  "суботу",
];

function router_lastWeek(day) {
  const weekday = router_accusativeWeekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 5:
    case 6:
      return "'у мінулую " + weekday + " а' p";
    case 1:
    case 2:
    case 4:
      return "'у мінулы " + weekday + " а' p";
  }
}

function router_thisWeek(day) {
  const weekday = router_accusativeWeekdays[day];

  return "'у " + weekday + " а' p";
}

function router_nextWeek(day) {
  const weekday = router_accusativeWeekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 5:
    case 6:
      return "'у наступную " + weekday + " а' p";
    case 1:
    case 2:
    case 4:
      return "'у наступны " + weekday + " а' p";
  }
}

const router_lastWeekFormat = (dirtyDate, baseDate, options) => {
  const date = router_toDate(dirtyDate);
  const day = date.getDay();
  if (router_isSameWeek(date, baseDate, options)) {
    return router_thisWeek(day);
  } else {
    return router_lastWeek(day);
  }
};

const router_nextWeekFormat = (dirtyDate, baseDate, options) => {
  const date = router_toDate(dirtyDate);
  const day = date.getDay();
  if (router_isSameWeek(date, baseDate, options)) {
    return router_thisWeek(day);
  } else {
    return router_nextWeek(day);
  }
};

const router_be_lib_formatRelative_formatRelativeLocale = {
  lastWeek: router_lastWeekFormat,
  yesterday: "'учора а' p",
  today: "'сёння а' p",
  tomorrow: "'заўтра а' p",
  nextWeek: router_nextWeekFormat,
  other: "P",
};

const router_be_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_be_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/be/_lib/localize.mjs


const router_be_lib_localize_eraValues = {
  narrow: ["да н.э.", "н.э."],
  abbreviated: ["да н. э.", "н. э."],
  wide: ["да нашай эры", "нашай эры"],
};

const router_be_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-ы кв.", "2-і кв.", "3-і кв.", "4-ы кв."],
  wide: ["1-ы квартал", "2-і квартал", "3-і квартал", "4-ы квартал"],
};

const router_be_lib_localize_monthValues = {
  narrow: ["С", "Л", "С", "К", "М", "Ч", "Л", "Ж", "В", "К", "Л", "С"],
  abbreviated: [
    "студз.",
    "лют.",
    "сак.",
    "крас.",
    "май",
    "чэрв.",
    "ліп.",
    "жн.",
    "вер.",
    "кастр.",
    "ліст.",
    "снеж.",
  ],

  wide: [
    "студзень",
    "люты",
    "сакавік",
    "красавік",
    "май",
    "чэрвень",
    "ліпень",
    "жнівень",
    "верасень",
    "кастрычнік",
    "лістапад",
    "снежань",
  ],
};
const router_formattingMonthValues = {
  narrow: ["С", "Л", "С", "К", "М", "Ч", "Л", "Ж", "В", "К", "Л", "С"],
  abbreviated: [
    "студз.",
    "лют.",
    "сак.",
    "крас.",
    "мая",
    "чэрв.",
    "ліп.",
    "жн.",
    "вер.",
    "кастр.",
    "ліст.",
    "снеж.",
  ],

  wide: [
    "студзеня",
    "лютага",
    "сакавіка",
    "красавіка",
    "мая",
    "чэрвеня",
    "ліпеня",
    "жніўня",
    "верасня",
    "кастрычніка",
    "лістапада",
    "снежня",
  ],
};

const router_be_lib_localize_dayValues = {
  narrow: ["Н", "П", "А", "С", "Ч", "П", "С"],
  short: ["нд", "пн", "аў", "ср", "чц", "пт", "сб"],
  abbreviated: ["нядз", "пан", "аўт", "сер", "чац", "пят", "суб"],
  wide: [
    "нядзеля",
    "панядзелак",
    "аўторак",
    "серада",
    "чацвер",
    "пятніца",
    "субота",
  ],
};

const router_be_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўн.",
    noon: "поўд.",
    morning: "ран.",
    afternoon: "дзень",
    evening: "веч.",
    night: "ноч",
  },
  abbreviated: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўн.",
    noon: "поўд.",
    morning: "ран.",
    afternoon: "дзень",
    evening: "веч.",
    night: "ноч",
  },
  wide: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўнач",
    noon: "поўдзень",
    morning: "раніца",
    afternoon: "дзень",
    evening: "вечар",
    night: "ноч",
  },
};
const router_be_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўн.",
    noon: "поўд.",
    morning: "ран.",
    afternoon: "дня",
    evening: "веч.",
    night: "ночы",
  },
  abbreviated: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўн.",
    noon: "поўд.",
    morning: "ран.",
    afternoon: "дня",
    evening: "веч.",
    night: "ночы",
  },
  wide: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўнач",
    noon: "поўдзень",
    morning: "раніцы",
    afternoon: "дня",
    evening: "вечара",
    night: "ночы",
  },
};

const router_be_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const unit = String(options?.unit);
  const number = Number(dirtyNumber);
  let suffix;

  /** Though it's an incorrect ordinal form of a date we use it here for consistency with other similar locales (ru, uk)
   *  For date-month combinations should be used `d` formatter.
   *  Correct:   `d MMMM` (4 верасня)
   *  Incorrect: `do MMMM` (4-га верасня)
   *
   *  But following the consistency leads to mistakes for literal uses of `do` formatter (ordinal day of month).
   *  So for phrase "5th day of month" (`do дзень месяца`)
   *  library will produce:            `5-га дзень месяца`
   *  but correct spelling should be:  `5-ы дзень месяца`
   *
   *  So I guess there should be a stand-alone and a formatting version of "day of month" formatters
   */
  if (unit === "date") {
    suffix = "-га";
  } else if (unit === "hour" || unit === "minute" || unit === "second") {
    suffix = "-я";
  } else {
    suffix =
      (number % 10 === 2 || number % 10 === 3) &&
      number % 100 !== 12 &&
      number % 100 !== 13
        ? "-і"
        : "-ы";
  }

  return number + suffix;
};

const router_be_lib_localize_localize = {
  ordinalNumber: router_be_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_be_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_be_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_be_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_be_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_be_lib_localize_dayPeriodValues,
    defaultWidth: "any",
    formattingValues: router_be_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/be/_lib/match.mjs



const router_be_lib_match_matchOrdinalNumberPattern =
  /^(\d+)(-?(е|я|га|і|ы|ае|ая|яя|шы|гі|ці|ты|мы))?/i;
const router_be_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_be_lib_match_matchEraPatterns = {
  narrow: /^((да )?н\.?\s?э\.?)/i,
  abbreviated: /^((да )?н\.?\s?э\.?)/i,
  wide: /^(да нашай эры|нашай эры|наша эра)/i,
};
const router_be_lib_match_parseEraPatterns = {
  any: [/^д/i, /^н/i],
};

const router_be_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](-?[ыі]?)? кв.?/i,
  wide: /^[1234](-?[ыі]?)? квартал/i,
};
const router_be_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_be_lib_match_matchMonthPatterns = {
  narrow: /^[слкмчжв]/i,
  abbreviated:
    /^(студз|лют|сак|крас|ма[йя]|чэрв|ліп|жн|вер|кастр|ліст|снеж)\.?/i,
  wide: /^(студзен[ья]|лют(ы|ага)|сакавіка?|красавіка?|ма[йя]|чэрвен[ья]|ліпен[ья]|жні(вень|ўня)|верас(ень|ня)|кастрычніка?|лістапада?|снеж(ань|ня))/i,
};
const router_be_lib_match_parseMonthPatterns = {
  narrow: [
    /^с/i,
    /^л/i,
    /^с/i,
    /^к/i,
    /^м/i,
    /^ч/i,
    /^л/i,
    /^ж/i,
    /^в/i,
    /^к/i,
    /^л/i,
    /^с/i,
  ],

  any: [
    /^ст/i,
    /^лю/i,
    /^са/i,
    /^кр/i,
    /^ма/i,
    /^ч/i,
    /^ліп/i,
    /^ж/i,
    /^в/i,
    /^ка/i,
    /^ліс/i,
    /^сн/i,
  ],
};

const router_be_lib_match_matchDayPatterns = {
  narrow: /^[нпасч]/i,
  short: /^(нд|ня|пн|па|аў|ат|ср|се|чц|ча|пт|пя|сб|су)\.?/i,
  abbreviated: /^(нядз?|ндз|пнд|пан|аўт|срд|сер|чцв|чац|птн|пят|суб).?/i,
  wide: /^(нядзел[яі]|панядзел(ак|ка)|аўтор(ак|ка)|серад[аы]|чацв(ер|ярга)|пятніц[аы]|субот[аы])/i,
};
const router_be_lib_match_parseDayPatterns = {
  narrow: [/^н/i, /^п/i, /^а/i, /^с/i, /^ч/i, /^п/i, /^с/i],
  any: [/^н/i, /^п[ан]/i, /^а/i, /^с[ер]/i, /^ч/i, /^п[ят]/i, /^с[уб]/i],
};

const router_be_lib_match_matchDayPeriodPatterns = {
  narrow: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i,
  abbreviated: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i,
  wide: /^([дп]п|поўнач|поўдзень|раніц[аы]|дзень|дня|вечара?|ночы?)/i,
};
const router_be_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^дп/i,
    pm: /^пп/i,
    midnight: /^поўн/i,
    noon: /^поўд/i,
    morning: /^р/i,
    afternoon: /^д[зн]/i,
    evening: /^в/i,
    night: /^н/i,
  },
};

const router_be_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_be_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_be_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_be_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_be_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_be_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_be_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_be_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/be.mjs






/**
 * @category Locales
 * @summary Belarusian locale.
 * @language Belarusian
 * @iso-639-2 bel
 * @author Kiryl Anokhin [@alyrik](https://github.com/alyrik)
 * @author Martin Wind [@arvigeus](https://github.com/mawi12345)
 */
const router_be = {
  code: "be",
  formatDistance: router_be_lib_formatDistance_formatDistance,
  formatLong: router_be_lib_formatLong_formatLong,
  formatRelative: router_be_lib_formatRelative_formatRelative,
  localize: router_be_lib_localize_localize,
  match: router_be_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_be = ((/* unused pure expression or super */ null && (router_be)));

;// ./node_modules/date-fns/locale/be-tarask/_lib/formatDistance.mjs
function router_formatDistance_declension(scheme, count) {
  // scheme for count=1 exists
  if (scheme.one !== undefined && count === 1) {
    return scheme.one;
  }

  const rem10 = count % 10;
  const rem100 = count % 100;

  // 1, 21, 31, ...
  if (rem10 === 1 && rem100 !== 11) {
    return scheme.singularNominative.replace("{{count}}", String(count));

    // 2, 3, 4, 22, 23, 24, 32 ...
  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
    return scheme.singularGenitive.replace("{{count}}", String(count));

    // 5, 6, 7, 8, 9, 10, 11, ...
  } else {
    return scheme.pluralGenitive.replace("{{count}}", String(count));
  }
}

function router_formatDistance_buildLocalizeTokenFn(scheme) {
  return (count, options) => {
    if (options && options.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        if (scheme.future) {
          return router_formatDistance_declension(scheme.future, count);
        } else {
          return "праз " + router_formatDistance_declension(scheme.regular, count);
        }
      } else {
        if (scheme.past) {
          return router_formatDistance_declension(scheme.past, count);
        } else {
          return router_formatDistance_declension(scheme.regular, count) + " таму";
        }
      }
    } else {
      return router_formatDistance_declension(scheme.regular, count);
    }
  };
}

const router_formatDistance_halfAMinute = (_, options) => {
  if (options && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "праз паўхвіліны";
    } else {
      return "паўхвіліны таму";
    }
  }

  return "паўхвіліны";
};

const router_be_tarask_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      one: "менш за секунду",
      singularNominative: "менш за {{count}} секунду",
      singularGenitive: "менш за {{count}} секунды",
      pluralGenitive: "менш за {{count}} секунд",
    },
    future: {
      one: "менш, чым праз секунду",
      singularNominative: "менш, чым праз {{count}} секунду",
      singularGenitive: "менш, чым праз {{count}} секунды",
      pluralGenitive: "менш, чым праз {{count}} секунд",
    },
  }),

  xSeconds: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} секунда",
      singularGenitive: "{{count}} секунды",
      pluralGenitive: "{{count}} секунд",
    },
    past: {
      singularNominative: "{{count}} секунду таму",
      singularGenitive: "{{count}} секунды таму",
      pluralGenitive: "{{count}} секунд таму",
    },
    future: {
      singularNominative: "праз {{count}} секунду",
      singularGenitive: "праз {{count}} секунды",
      pluralGenitive: "праз {{count}} секунд",
    },
  }),

  halfAMinute: router_formatDistance_halfAMinute,

  lessThanXMinutes: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      one: "менш за хвіліну",
      singularNominative: "менш за {{count}} хвіліну",
      singularGenitive: "менш за {{count}} хвіліны",
      pluralGenitive: "менш за {{count}} хвілін",
    },
    future: {
      one: "менш, чым праз хвіліну",
      singularNominative: "менш, чым праз {{count}} хвіліну",
      singularGenitive: "менш, чым праз {{count}} хвіліны",
      pluralGenitive: "менш, чым праз {{count}} хвілін",
    },
  }),

  xMinutes: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} хвіліна",
      singularGenitive: "{{count}} хвіліны",
      pluralGenitive: "{{count}} хвілін",
    },
    past: {
      singularNominative: "{{count}} хвіліну таму",
      singularGenitive: "{{count}} хвіліны таму",
      pluralGenitive: "{{count}} хвілін таму",
    },
    future: {
      singularNominative: "праз {{count}} хвіліну",
      singularGenitive: "праз {{count}} хвіліны",
      pluralGenitive: "праз {{count}} хвілін",
    },
  }),

  aboutXHours: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "каля {{count}} гадзіны",
      singularGenitive: "каля {{count}} гадзін",
      pluralGenitive: "каля {{count}} гадзін",
    },
    future: {
      singularNominative: "прыблізна праз {{count}} гадзіну",
      singularGenitive: "прыблізна праз {{count}} гадзіны",
      pluralGenitive: "прыблізна праз {{count}} гадзін",
    },
  }),

  xHours: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} гадзіна",
      singularGenitive: "{{count}} гадзіны",
      pluralGenitive: "{{count}} гадзін",
    },
    past: {
      singularNominative: "{{count}} гадзіну таму",
      singularGenitive: "{{count}} гадзіны таму",
      pluralGenitive: "{{count}} гадзін таму",
    },
    future: {
      singularNominative: "праз {{count}} гадзіну",
      singularGenitive: "праз {{count}} гадзіны",
      pluralGenitive: "праз {{count}} гадзін",
    },
  }),

  xDays: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} дзень",
      singularGenitive: "{{count}} дні",
      pluralGenitive: "{{count}} дзён",
    },
  }),

  aboutXWeeks: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "каля {{count}} тыдні",
      singularGenitive: "каля {{count}} тыдняў",
      pluralGenitive: "каля {{count}} тыдняў",
    },
    future: {
      singularNominative: "прыблізна праз {{count}} тыдзень",
      singularGenitive: "прыблізна праз {{count}} тыдні",
      pluralGenitive: "прыблізна праз {{count}} тыдняў",
    },
  }),

  xWeeks: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} тыдзень",
      singularGenitive: "{{count}} тыдні",
      pluralGenitive: "{{count}} тыдняў",
    },
  }),

  aboutXMonths: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "каля {{count}} месяца",
      singularGenitive: "каля {{count}} месяцаў",
      pluralGenitive: "каля {{count}} месяцаў",
    },
    future: {
      singularNominative: "прыблізна праз {{count}} месяц",
      singularGenitive: "прыблізна праз {{count}} месяцы",
      pluralGenitive: "прыблізна праз {{count}} месяцаў",
    },
  }),

  xMonths: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} месяц",
      singularGenitive: "{{count}} месяцы",
      pluralGenitive: "{{count}} месяцаў",
    },
  }),

  aboutXYears: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "каля {{count}} года",
      singularGenitive: "каля {{count}} гадоў",
      pluralGenitive: "каля {{count}} гадоў",
    },
    future: {
      singularNominative: "прыблізна праз {{count}} год",
      singularGenitive: "прыблізна праз {{count}} гады",
      pluralGenitive: "прыблізна праз {{count}} гадоў",
    },
  }),

  xYears: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} год",
      singularGenitive: "{{count}} гады",
      pluralGenitive: "{{count}} гадоў",
    },
  }),

  overXYears: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "больш за {{count}} год",
      singularGenitive: "больш за {{count}} гады",
      pluralGenitive: "больш за {{count}} гадоў",
    },
    future: {
      singularNominative: "больш, чым праз {{count}} год",
      singularGenitive: "больш, чым праз {{count}} гады",
      pluralGenitive: "больш, чым праз {{count}} гадоў",
    },
  }),

  almostXYears: router_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "амаль {{count}} год",
      singularGenitive: "амаль {{count}} гады",
      pluralGenitive: "амаль {{count}} гадоў",
    },
    future: {
      singularNominative: "амаль праз {{count}} год",
      singularGenitive: "амаль праз {{count}} гады",
      pluralGenitive: "амаль праз {{count}} гадоў",
    },
  }),
};

const router_be_tarask_lib_formatDistance_formatDistance = (token, count, options) => {
  options = options || {};
  return router_be_tarask_lib_formatDistance_formatDistanceLocale[token](count, options);
};

;// ./node_modules/date-fns/locale/be-tarask/_lib/formatLong.mjs


const router_be_tarask_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM y 'г.'",
  long: "d MMMM y 'г.'",
  medium: "d MMM y 'г.'",
  short: "dd.MM.y",
};

const router_be_tarask_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_be_tarask_lib_formatLong_dateTimeFormats = {
  any: "{{date}}, {{time}}",
};

const router_be_tarask_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_be_tarask_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_be_tarask_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_be_tarask_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/be-tarask/_lib/formatRelative.mjs



const router_formatRelative_accusativeWeekdays = [
  "нядзелю",
  "панядзелак",
  "аўторак",
  "сераду",
  "чацьвер",
  "пятніцу",
  "суботу",
];

function router_formatRelative_lastWeek(day) {
  const weekday = router_formatRelative_accusativeWeekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 5:
    case 6:
      return "'у мінулую " + weekday + " а' p";
    case 1:
    case 2:
    case 4:
      return "'у мінулы " + weekday + " а' p";
  }
}

function router_formatRelative_thisWeek(day) {
  const weekday = router_formatRelative_accusativeWeekdays[day];

  return "'у " + weekday + " а' p";
}

function router_formatRelative_nextWeek(day) {
  const weekday = router_formatRelative_accusativeWeekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 5:
    case 6:
      return "'у наступную " + weekday + " а' p";
    case 1:
    case 2:
    case 4:
      return "'у наступны " + weekday + " а' p";
  }
}

const router_formatRelative_lastWeekFormat = (dirtyDate, baseDate, options) => {
  const date = router_toDate(dirtyDate);
  const day = date.getDay();
  if (router_isSameWeek(date, baseDate, options)) {
    return router_formatRelative_thisWeek(day);
  } else {
    return router_formatRelative_lastWeek(day);
  }
};

const router_formatRelative_nextWeekFormat = (dirtyDate, baseDate, options) => {
  const date = router_toDate(dirtyDate);
  const day = date.getDay();
  if (router_isSameWeek(date, baseDate, options)) {
    return router_formatRelative_thisWeek(day);
  } else {
    return router_formatRelative_nextWeek(day);
  }
};

const router_be_tarask_lib_formatRelative_formatRelativeLocale = {
  lastWeek: router_formatRelative_lastWeekFormat,
  yesterday: "'учора а' p",
  today: "'сёньня а' p",
  tomorrow: "'заўтра а' p",
  nextWeek: router_formatRelative_nextWeekFormat,
  other: "P",
};

const router_be_tarask_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_be_tarask_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/be-tarask/_lib/localize.mjs


const router_be_tarask_lib_localize_eraValues = {
  narrow: ["да н.э.", "н.э."],
  abbreviated: ["да н. э.", "н. э."],
  wide: ["да нашай эры", "нашай эры"],
};

const router_be_tarask_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-ы кв.", "2-і кв.", "3-і кв.", "4-ы кв."],
  wide: ["1-ы квартал", "2-і квартал", "3-і квартал", "4-ы квартал"],
};

const router_be_tarask_lib_localize_monthValues = {
  narrow: ["С", "Л", "С", "К", "Т", "Ч", "Л", "Ж", "В", "К", "Л", "С"],
  abbreviated: [
    "студз.",
    "лют.",
    "сак.",
    "крас.",
    "трав.",
    "чэрв.",
    "ліп.",
    "жн.",
    "вер.",
    "кастр.",
    "ліст.",
    "сьнеж.",
  ],

  wide: [
    "студзень",
    "люты",
    "сакавік",
    "красавік",
    "травень",
    "чэрвень",
    "ліпень",
    "жнівень",
    "верасень",
    "кастрычнік",
    "лістапад",
    "сьнежань",
  ],
};
const router_localize_formattingMonthValues = {
  narrow: ["С", "Л", "С", "К", "Т", "Ч", "Л", "Ж", "В", "К", "Л", "С"],
  abbreviated: [
    "студз.",
    "лют.",
    "сак.",
    "крас.",
    "трав.",
    "чэрв.",
    "ліп.",
    "жн.",
    "вер.",
    "кастр.",
    "ліст.",
    "сьнеж.",
  ],

  wide: [
    "студзеня",
    "лютага",
    "сакавіка",
    "красавіка",
    "траўня",
    "чэрвеня",
    "ліпеня",
    "жніўня",
    "верасня",
    "кастрычніка",
    "лістапада",
    "сьнежня",
  ],
};

const router_be_tarask_lib_localize_dayValues = {
  narrow: ["Н", "П", "А", "С", "Ч", "П", "С"],
  short: ["нд", "пн", "аў", "ср", "чц", "пт", "сб"],
  abbreviated: ["нядз", "пан", "аўт", "сер", "чаць", "пят", "суб"],
  wide: [
    "нядзеля",
    "панядзелак",
    "аўторак",
    "серада",
    "чацьвер",
    "пятніца",
    "субота",
  ],
};

const router_be_tarask_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўн.",
    noon: "поўд.",
    morning: "ран.",
    afternoon: "дзень",
    evening: "веч.",
    night: "ноч",
  },
  abbreviated: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўн.",
    noon: "поўд.",
    morning: "ран.",
    afternoon: "дзень",
    evening: "веч.",
    night: "ноч",
  },
  wide: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўнач",
    noon: "поўдзень",
    morning: "раніца",
    afternoon: "дзень",
    evening: "вечар",
    night: "ноч",
  },
};
const router_be_tarask_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўн.",
    noon: "поўд.",
    morning: "ран.",
    afternoon: "дня",
    evening: "веч.",
    night: "ночы",
  },
  abbreviated: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўн.",
    noon: "поўд.",
    morning: "ран.",
    afternoon: "дня",
    evening: "веч.",
    night: "ночы",
  },
  wide: {
    am: "ДП",
    pm: "ПП",
    midnight: "поўнач",
    noon: "поўдзень",
    morning: "раніцы",
    afternoon: "дня",
    evening: "вечара",
    night: "ночы",
  },
};

const router_be_tarask_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const unit = String(options?.unit);
  const number = Number(dirtyNumber);
  let suffix;

  /** Though it's an incorrect ordinal form of a date we use it here for consistency with other similar locales (ru, uk)
   *  For date-month combinations should be used `d` formatter.
   *  Correct:   `d MMMM` (4 верасня)
   *  Incorrect: `do MMMM` (4-га верасня)
   *
   *  But following the consistency leads to mistakes for literal uses of `do` formatter (ordinal day of month).
   *  So for phrase "5th day of month" (`do дзень месяца`)
   *  library will produce:            `5-га дзень месяца`
   *  but correct spelling should be:  `5-ы дзень месяца`
   *
   *  So I guess there should be a stand-alone and a formatting version of "day of month" formatters
   */
  if (unit === "date") {
    suffix = "-га";
  } else if (unit === "hour" || unit === "minute" || unit === "second") {
    suffix = "-я";
  } else {
    suffix =
      (number % 10 === 2 || number % 10 === 3) &&
      number % 100 !== 12 &&
      number % 100 !== 13
        ? "-і"
        : "-ы";
  }

  return number + suffix;
};

const router_be_tarask_lib_localize_localize = {
  ordinalNumber: router_be_tarask_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_be_tarask_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_be_tarask_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_be_tarask_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_be_tarask_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_be_tarask_lib_localize_dayPeriodValues,
    defaultWidth: "any",
    formattingValues: router_be_tarask_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/be-tarask/_lib/match.mjs



const router_be_tarask_lib_match_matchOrdinalNumberPattern =
  /^(\d+)(-?(е|я|га|і|ы|ае|ая|яя|шы|гі|ці|ты|мы))?/i;
const router_be_tarask_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_be_tarask_lib_match_matchEraPatterns = {
  narrow: /^((да )?н\.?\s?э\.?)/i,
  abbreviated: /^((да )?н\.?\s?э\.?)/i,
  wide: /^(да нашай эры|нашай эры|наша эра)/i,
};
const router_be_tarask_lib_match_parseEraPatterns = {
  any: [/^д/i, /^н/i],
};

const router_be_tarask_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](-?[ыі]?)? кв.?/i,
  wide: /^[1234](-?[ыі]?)? квартал/i,
};
const router_be_tarask_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_be_tarask_lib_match_matchMonthPatterns = {
  narrow: /^[слкмчжв]/i,
  abbreviated:
    /^(студз|лют|сак|крас|тр(ав)?|чэрв|ліп|жн|вер|кастр|ліст|сьнеж)\.?/i,
  wide: /^(студзен[ья]|лют(ы|ага)|сакавіка?|красавіка?|тра(вень|ўня)|чэрвен[ья]|ліпен[ья]|жні(вень|ўня)|верас(ень|ня)|кастрычніка?|лістапада?|сьнеж(ань|ня))/i,
};
const router_be_tarask_lib_match_parseMonthPatterns = {
  narrow: [
    /^с/i,
    /^л/i,
    /^с/i,
    /^к/i,
    /^т/i,
    /^ч/i,
    /^л/i,
    /^ж/i,
    /^в/i,
    /^к/i,
    /^л/i,
    /^с/i,
  ],

  any: [
    /^ст/i,
    /^лю/i,
    /^са/i,
    /^кр/i,
    /^тр/i,
    /^ч/i,
    /^ліп/i,
    /^ж/i,
    /^в/i,
    /^ка/i,
    /^ліс/i,
    /^сн/i,
  ],
};

const router_be_tarask_lib_match_matchDayPatterns = {
  narrow: /^[нпасч]/i,
  short: /^(нд|ня|пн|па|аў|ат|ср|се|чц|ча|пт|пя|сб|су)\.?/i,
  abbreviated: /^(нядз?|ндз|пнд|пан|аўт|срд|сер|чцьв|чаць|птн|пят|суб).?/i,
  wide: /^(нядзел[яі]|панядзел(ак|ка)|аўтор(ак|ка)|серад[аы]|чацьв(ер|ярга)|пятніц[аы]|субот[аы])/i,
};
const router_be_tarask_lib_match_parseDayPatterns = {
  narrow: [/^н/i, /^п/i, /^а/i, /^с/i, /^ч/i, /^п/i, /^с/i],
  any: [/^н/i, /^п[ан]/i, /^а/i, /^с[ер]/i, /^ч/i, /^п[ят]/i, /^с[уб]/i],
};

const router_be_tarask_lib_match_matchDayPeriodPatterns = {
  narrow: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i,
  abbreviated: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i,
  wide: /^([дп]п|поўнач|поўдзень|раніц[аы]|дзень|дня|вечара?|ночы?)/i,
};
const router_be_tarask_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^дп/i,
    pm: /^пп/i,
    midnight: /^поўн/i,
    noon: /^поўд/i,
    morning: /^р/i,
    afternoon: /^д[зн]/i,
    evening: /^в/i,
    night: /^н/i,
  },
};

const router_be_tarask_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_be_tarask_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_be_tarask_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_be_tarask_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_tarask_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_be_tarask_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_tarask_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_be_tarask_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_tarask_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_be_tarask_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_tarask_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_be_tarask_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_be_tarask_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/be-tarask.mjs






/**
 * @category Locales
 * @summary Belarusian Classic locale.
 * @language Belarusian Classic
 * @iso-639-2 bel
 * @author Ryhor Nopears [@nopears](https://github.com/nopears)
 */
const router_beTarask = {
  code: "be-tarask",
  formatDistance: router_be_tarask_lib_formatDistance_formatDistance,
  formatLong: router_be_tarask_lib_formatLong_formatLong,
  formatRelative: router_be_tarask_lib_formatRelative_formatRelative,
  localize: router_be_tarask_lib_localize_localize,
  match: router_be_tarask_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_be_tarask = ((/* unused pure expression or super */ null && (router_beTarask)));

;// ./node_modules/date-fns/locale/bg/_lib/formatDistance.mjs
const router_bg_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "по-малко от секунда",
    other: "по-малко от {{count}} секунди",
  },

  xSeconds: {
    one: "1 секунда",
    other: "{{count}} секунди",
  },

  halfAMinute: "половин минута",

  lessThanXMinutes: {
    one: "по-малко от минута",
    other: "по-малко от {{count}} минути",
  },

  xMinutes: {
    one: "1 минута",
    other: "{{count}} минути",
  },

  aboutXHours: {
    one: "около час",
    other: "около {{count}} часа",
  },

  xHours: {
    one: "1 час",
    other: "{{count}} часа",
  },

  xDays: {
    one: "1 ден",
    other: "{{count}} дни",
  },

  aboutXWeeks: {
    one: "около седмица",
    other: "около {{count}} седмици",
  },

  xWeeks: {
    one: "1 седмица",
    other: "{{count}} седмици",
  },

  aboutXMonths: {
    one: "около месец",
    other: "около {{count}} месеца",
  },

  xMonths: {
    one: "1 месец",
    other: "{{count}} месеца",
  },

  aboutXYears: {
    one: "около година",
    other: "около {{count}} години",
  },

  xYears: {
    one: "1 година",
    other: "{{count}} години",
  },

  overXYears: {
    one: "над година",
    other: "над {{count}} години",
  },

  almostXYears: {
    one: "почти година",
    other: "почти {{count}} години",
  },
};

const router_bg_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_bg_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "след " + result;
    } else {
      return "преди " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/bg/_lib/formatLong.mjs


const router_bg_lib_formatLong_dateFormats = {
  full: "EEEE, dd MMMM yyyy",
  long: "dd MMMM yyyy",
  medium: "dd MMM yyyy",
  short: "dd/MM/yyyy",
};

const router_bg_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "H:mm",
};

const router_bg_lib_formatLong_dateTimeFormats = {
  any: "{{date}} {{time}}",
};

const router_bg_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_bg_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_bg_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_bg_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/bg/_lib/formatRelative.mjs



// Adapted from the `ru` translation

const router_weekdays = [
  "неделя",
  "понеделник",
  "вторник",
  "сряда",
  "четвъртък",
  "петък",
  "събота",
];

function router_lib_formatRelative_lastWeek(day) {
  const weekday = router_weekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 6:
      return "'миналата " + weekday + " в' p";
    case 1:
    case 2:
    case 4:
    case 5:
      return "'миналия " + weekday + " в' p";
  }
}

function router_lib_formatRelative_thisWeek(day) {
  const weekday = router_weekdays[day];

  if (day === 2 /* Tue */) {
    return "'във " + weekday + " в' p";
  } else {
    return "'в " + weekday + " в' p";
  }
}

function router_lib_formatRelative_nextWeek(day) {
  const weekday = router_weekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 6:
      return "'следващата " + weekday + " в' p";
    case 1:
    case 2:
    case 4:
    case 5:
      return "'следващия " + weekday + " в' p";
  }
}

const router_lastWeekFormatToken = (dirtyDate, baseDate, options) => {
  const date = router_toDate(dirtyDate);
  const day = date.getDay();
  if (router_isSameWeek(date, baseDate, options)) {
    return router_lib_formatRelative_thisWeek(day);
  } else {
    return router_lib_formatRelative_lastWeek(day);
  }
};

const router_nextWeekFormatToken = (dirtyDate, baseDate, options) => {
  const date = router_toDate(dirtyDate);
  const day = date.getDay();
  if (router_isSameWeek(date, baseDate, options)) {
    return router_lib_formatRelative_thisWeek(day);
  } else {
    return router_lib_formatRelative_nextWeek(day);
  }
};

const router_bg_lib_formatRelative_formatRelativeLocale = {
  lastWeek: router_lastWeekFormatToken,
  yesterday: "'вчера в' p",
  today: "'днес в' p",
  tomorrow: "'утре в' p",
  nextWeek: router_nextWeekFormatToken,
  other: "P",
};

const router_bg_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_bg_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/bg/_lib/localize.mjs


const router_bg_lib_localize_eraValues = {
  narrow: ["пр.н.е.", "н.е."],
  abbreviated: ["преди н. е.", "н. е."],
  wide: ["преди новата ера", "новата ера"],
};

const router_bg_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-во тримес.", "2-ро тримес.", "3-то тримес.", "4-то тримес."],

  wide: [
    "1-во тримесечие",
    "2-ро тримесечие",
    "3-то тримесечие",
    "4-то тримесечие",
  ],
};

const router_bg_lib_localize_monthValues = {
  abbreviated: [
    "яну",
    "фев",
    "мар",
    "апр",
    "май",
    "юни",
    "юли",
    "авг",
    "сеп",
    "окт",
    "ное",
    "дек",
  ],

  wide: [
    "януари",
    "февруари",
    "март",
    "април",
    "май",
    "юни",
    "юли",
    "август",
    "септември",
    "октомври",
    "ноември",
    "декември",
  ],
};

const router_bg_lib_localize_dayValues = {
  narrow: ["Н", "П", "В", "С", "Ч", "П", "С"],
  short: ["нд", "пн", "вт", "ср", "чт", "пт", "сб"],
  abbreviated: ["нед", "пон", "вто", "сря", "чет", "пет", "съб"],
  wide: [
    "неделя",
    "понеделник",
    "вторник",
    "сряда",
    "четвъртък",
    "петък",
    "събота",
  ],
};

const router_bg_lib_localize_dayPeriodValues = {
  wide: {
    am: "преди обяд",
    pm: "след обяд",
    midnight: "в полунощ",
    noon: "на обяд",
    morning: "сутринта",
    afternoon: "следобед",
    evening: "вечерта",
    night: "през нощта",
  },
};

function router_isFeminine(unit) {
  return (
    unit === "year" || unit === "week" || unit === "minute" || unit === "second"
  );
}

function router_isNeuter(unit) {
  return unit === "quarter";
}

function router_numberWithSuffix(number, unit, masculine, feminine, neuter) {
  const suffix = router_isNeuter(unit)
    ? neuter
    : router_isFeminine(unit)
      ? feminine
      : masculine;
  return number + "-" + suffix;
}

const router_bg_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = options?.unit;

  if (number === 0) {
    return router_numberWithSuffix(0, unit, "ев", "ева", "ево");
  } else if (number % 1000 === 0) {
    return router_numberWithSuffix(number, unit, "ен", "на", "но");
  } else if (number % 100 === 0) {
    return router_numberWithSuffix(number, unit, "тен", "тна", "тно");
  }

  const rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return router_numberWithSuffix(number, unit, "ви", "ва", "во");
      case 2:
        return router_numberWithSuffix(number, unit, "ри", "ра", "ро");
      case 7:
      case 8:
        return router_numberWithSuffix(number, unit, "ми", "ма", "мо");
    }
  }

  return router_numberWithSuffix(number, unit, "ти", "та", "то");
};

const router_bg_lib_localize_localize = {
  ordinalNumber: router_bg_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_bg_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_bg_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_bg_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_bg_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_bg_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/bg/_lib/match.mjs



const router_bg_lib_match_matchOrdinalNumberPattern =
  /^(\d+)(-?[врмт][аи]|-?т?(ен|на)|-?(ев|ева))?/i;
const router_bg_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_bg_lib_match_matchEraPatterns = {
  narrow: /^((пр)?н\.?\s?е\.?)/i,
  abbreviated: /^((пр)?н\.?\s?е\.?)/i,
  wide: /^(преди новата ера|новата ера|нова ера)/i,
};
const router_bg_lib_match_parseEraPatterns = {
  any: [/^п/i, /^н/i],
};

const router_bg_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](-?[врт]?o?)? тримес.?/i,
  wide: /^[1234](-?[врт]?о?)? тримесечие/i,
};
const router_bg_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_bg_lib_match_matchDayPatterns = {
  narrow: /^[нпвсч]/i,
  short: /^(нд|пн|вт|ср|чт|пт|сб)/i,
  abbreviated: /^(нед|пон|вто|сря|чет|пет|съб)/i,
  wide: /^(неделя|понеделник|вторник|сряда|четвъртък|петък|събота)/i,
};

const router_bg_lib_match_parseDayPatterns = {
  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],
  any: [/^н[ед]/i, /^п[он]/i, /^вт/i, /^ср/i, /^ч[ет]/i, /^п[ет]/i, /^с[ъб]/i],
};

const router_bg_lib_match_matchMonthPatterns = {
  abbreviated: /^(яну|фев|мар|апр|май|юни|юли|авг|сеп|окт|ное|дек)/i,
  wide: /^(януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/i,
};

const router_bg_lib_match_parseMonthPatterns = {
  any: [
    /^я/i,
    /^ф/i,
    /^мар/i,
    /^ап/i,
    /^май/i,
    /^юн/i,
    /^юл/i,
    /^ав/i,
    /^се/i,
    /^окт/i,
    /^но/i,
    /^де/i,
  ],
};

const router_bg_lib_match_matchDayPeriodPatterns = {
  any: /^(преди о|след о|в по|на о|през|веч|сут|следо)/i,
};
const router_bg_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^преди о/i,
    pm: /^след о/i,
    midnight: /^в пол/i,
    noon: /^на об/i,
    morning: /^сут/i,
    afternoon: /^следо/i,
    evening: /^веч/i,
    night: /^през н/i,
  },
};

const router_bg_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_bg_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_bg_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_bg_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bg_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_bg_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bg_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_bg_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bg_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_bg_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bg_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_bg_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_bg_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/bg.mjs






/**
 * @category Locales
 * @summary Bulgarian locale.
 * @language Bulgarian
 * @iso-639-2 bul
 * @author Nikolay Stoynov [@arvigeus](https://github.com/arvigeus)
 * @author Tsvetan Ovedenski [@fintara](https://github.com/fintara)
 */
const router_bg = {
  code: "bg",
  formatDistance: router_bg_lib_formatDistance_formatDistance,
  formatLong: router_bg_lib_formatLong_formatLong,
  formatRelative: router_bg_lib_formatRelative_formatRelative,
  localize: router_bg_lib_localize_localize,
  match: router_bg_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_bg = ((/* unused pure expression or super */ null && (router_bg)));

;// ./node_modules/date-fns/locale/bn/_lib/localize.mjs


const router_numberValues = {
  locale: {
    1: "১",
    2: "২",
    3: "৩",
    4: "৪",
    5: "৫",
    6: "৬",
    7: "৭",
    8: "৮",
    9: "৯",
    0: "০",
  },
  number: {
    "১": "1",
    "২": "2",
    "৩": "3",
    "৪": "4",
    "৫": "5",
    "৬": "6",
    "৭": "7",
    "৮": "8",
    "৯": "9",
    "০": "0",
  },
};

const router_bn_lib_localize_eraValues = {
  narrow: ["খ্রিঃপূঃ", "খ্রিঃ"],
  abbreviated: ["খ্রিঃপূর্ব", "খ্রিঃ"],
  wide: ["খ্রিস্টপূর্ব", "খ্রিস্টাব্দ"],
};

const router_bn_lib_localize_quarterValues = {
  narrow: ["১", "২", "৩", "৪"],
  abbreviated: ["১ত্রৈ", "২ত্রৈ", "৩ত্রৈ", "৪ত্রৈ"],
  wide: ["১ম ত্রৈমাসিক", "২য় ত্রৈমাসিক", "৩য় ত্রৈমাসিক", "৪র্থ ত্রৈমাসিক"],
};

const router_bn_lib_localize_monthValues = {
  narrow: [
    "জানু",
    "ফেব্রু",
    "মার্চ",
    "এপ্রিল",
    "মে",
    "জুন",
    "জুলাই",
    "আগস্ট",
    "সেপ্ট",
    "অক্টো",
    "নভে",
    "ডিসে",
  ],

  abbreviated: [
    "জানু",
    "ফেব্রু",
    "মার্চ",
    "এপ্রিল",
    "মে",
    "জুন",
    "জুলাই",
    "আগস্ট",
    "সেপ্ট",
    "অক্টো",
    "নভে",
    "ডিসে",
  ],

  wide: [
    "জানুয়ারি",
    "ফেব্রুয়ারি",
    "মার্চ",
    "এপ্রিল",
    "মে",
    "জুন",
    "জুলাই",
    "আগস্ট",
    "সেপ্টেম্বর",
    "অক্টোবর",
    "নভেম্বর",
    "ডিসেম্বর",
  ],
};

const router_bn_lib_localize_dayValues = {
  narrow: ["র", "সো", "ম", "বু", "বৃ", "শু", "শ"],
  short: ["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহ", "শুক্র", "শনি"],
  abbreviated: ["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহ", "শুক্র", "শনি"],
  wide: [
    "রবিবার",
    "সোমবার",
    "মঙ্গলবার",
    "বুধবার",
    "বৃহস্পতিবার ",
    "শুক্রবার",
    "শনিবার",
  ],
};

const router_bn_lib_localize_dayPeriodValues = {
  narrow: {
    am: "পূ",
    pm: "অপ",
    midnight: "মধ্যরাত",
    noon: "মধ্যাহ্ন",
    morning: "সকাল",
    afternoon: "বিকাল",
    evening: "সন্ধ্যা",
    night: "রাত",
  },
  abbreviated: {
    am: "পূর্বাহ্ন",
    pm: "অপরাহ্ন",
    midnight: "মধ্যরাত",
    noon: "মধ্যাহ্ন",
    morning: "সকাল",
    afternoon: "বিকাল",
    evening: "সন্ধ্যা",
    night: "রাত",
  },
  wide: {
    am: "পূর্বাহ্ন",
    pm: "অপরাহ্ন",
    midnight: "মধ্যরাত",
    noon: "মধ্যাহ্ন",
    morning: "সকাল",
    afternoon: "বিকাল",
    evening: "সন্ধ্যা",
    night: "রাত",
  },
};

const router_bn_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "পূ",
    pm: "অপ",
    midnight: "মধ্যরাত",
    noon: "মধ্যাহ্ন",
    morning: "সকাল",
    afternoon: "বিকাল",
    evening: "সন্ধ্যা",
    night: "রাত",
  },
  abbreviated: {
    am: "পূর্বাহ্ন",
    pm: "অপরাহ্ন",
    midnight: "মধ্যরাত",
    noon: "মধ্যাহ্ন",
    morning: "সকাল",
    afternoon: "বিকাল",
    evening: "সন্ধ্যা",
    night: "রাত",
  },
  wide: {
    am: "পূর্বাহ্ন",
    pm: "অপরাহ্ন",
    midnight: "মধ্যরাত",
    noon: "মধ্যাহ্ন",
    morning: "সকাল",
    afternoon: "বিকাল",
    evening: "সন্ধ্যা",
    night: "রাত",
  },
};

function router_dateOrdinalNumber(number, localeNumber) {
  if (number > 18 && number <= 31) {
    return localeNumber + "শে";
  } else {
    switch (number) {
      case 1:
        return localeNumber + "লা";
      case 2:
      case 3:
        return localeNumber + "রা";
      case 4:
        return localeNumber + "ঠা";
      default:
        return localeNumber + "ই";
    }
  }
}

const router_bn_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const localeNumber = router_numberToLocale(number);
  const unit = options?.unit;

  if (unit === "date") {
    return router_dateOrdinalNumber(number, localeNumber);
  }
  if (number > 10 || number === 0) return localeNumber + "তম";

  const rem10 = number % 10;
  switch (rem10) {
    case 2:
    case 3:
      return localeNumber + "য়";
    case 4:
      return localeNumber + "র্থ";
    case 6:
      return localeNumber + "ষ্ঠ";
    default:
      return localeNumber + "ম";
  }
};

// function localeToNumber(locale: string): number {
//   const enNumber = locale.toString().replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
//     return numberValues.number[match as keyof typeof numberValues.number]
//   })
//   return Number(enNumber)
// }

function router_numberToLocale(enNumber) {
  return enNumber.toString().replace(/\d/g, function (match) {
    return router_numberValues.locale[match];
  });
}

const router_bn_lib_localize_localize = {
  ordinalNumber: router_bn_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_bn_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_bn_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_bn_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_bn_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_bn_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_bn_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/bn/_lib/formatDistance.mjs


const router_bn_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "প্রায় ১ সেকেন্ড",
    other: "প্রায় {{count}} সেকেন্ড",
  },

  xSeconds: {
    one: "১ সেকেন্ড",
    other: "{{count}} সেকেন্ড",
  },

  halfAMinute: "আধ মিনিট",

  lessThanXMinutes: {
    one: "প্রায় ১ মিনিট",
    other: "প্রায় {{count}} মিনিট",
  },

  xMinutes: {
    one: "১ মিনিট",
    other: "{{count}} মিনিট",
  },

  aboutXHours: {
    one: "প্রায় ১ ঘন্টা",
    other: "প্রায় {{count}} ঘন্টা",
  },

  xHours: {
    one: "১ ঘন্টা",
    other: "{{count}} ঘন্টা",
  },

  xDays: {
    one: "১ দিন",
    other: "{{count}} দিন",
  },

  aboutXWeeks: {
    one: "প্রায় ১ সপ্তাহ",
    other: "প্রায় {{count}} সপ্তাহ",
  },

  xWeeks: {
    one: "১ সপ্তাহ",
    other: "{{count}} সপ্তাহ",
  },

  aboutXMonths: {
    one: "প্রায় ১ মাস",
    other: "প্রায় {{count}} মাস",
  },

  xMonths: {
    one: "১ মাস",
    other: "{{count}} মাস",
  },

  aboutXYears: {
    one: "প্রায় ১ বছর",
    other: "প্রায় {{count}} বছর",
  },

  xYears: {
    one: "১ বছর",
    other: "{{count}} বছর",
  },

  overXYears: {
    one: "১ বছরের বেশি",
    other: "{{count}} বছরের বেশি",
  },

  almostXYears: {
    one: "প্রায় ১ বছর",
    other: "প্রায় {{count}} বছর",
  },
};

const router_bn_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_bn_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", router_numberToLocale(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + " এর মধ্যে";
    } else {
      return result + " আগে";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/bn/_lib/formatLong.mjs


const router_bn_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_bn_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_bn_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}} 'সময়'",
  long: "{{date}} {{time}} 'সময়'",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_bn_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_bn_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_bn_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_bn_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/bn/_lib/formatRelative.mjs
const router_bn_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'গত' eeee 'সময়' p",
  yesterday: "'গতকাল' 'সময়' p",
  today: "'আজ' 'সময়' p",
  tomorrow: "'আগামীকাল' 'সময়' p",
  nextWeek: "eeee 'সময়' p",
  other: "P",
};

const router_bn_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_bn_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/bn/_lib/match.mjs



const router_bn_lib_match_matchOrdinalNumberPattern = /^(\d+)(ম|য়|র্থ|ষ্ঠ|শে|ই|তম)?/i;
const router_bn_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_bn_lib_match_matchEraPatterns = {
  narrow: /^(খ্রিঃপূঃ|খ্রিঃ)/i,
  abbreviated: /^(খ্রিঃপূর্ব|খ্রিঃ)/i,
  wide: /^(খ্রিস্টপূর্ব|খ্রিস্টাব্দ)/i,
};
const router_bn_lib_match_parseEraPatterns = {
  narrow: [/^খ্রিঃপূঃ/i, /^খ্রিঃ/i],
  abbreviated: [/^খ্রিঃপূর্ব/i, /^খ্রিঃ/i],
  wide: [/^খ্রিস্টপূর্ব/i, /^খ্রিস্টাব্দ/i],
};

const router_bn_lib_match_matchQuarterPatterns = {
  narrow: /^[১২৩৪]/i,
  abbreviated: /^[১২৩৪]ত্রৈ/i,
  wide: /^[১২৩৪](ম|য়|র্থ)? ত্রৈমাসিক/i,
};
const router_bn_lib_match_parseQuarterPatterns = {
  any: [/১/i, /২/i, /৩/i, /৪/i],
};

const router_bn_lib_match_matchMonthPatterns = {
  narrow:
    /^(জানু|ফেব্রু|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্ট|অক্টো|নভে|ডিসে)/i,
  abbreviated:
    /^(জানু|ফেব্রু|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্ট|অক্টো|নভে|ডিসে)/i,
  wide: /^(জানুয়ারি|ফেব্রুয়ারি|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্টেম্বর|অক্টোবর|নভেম্বর|ডিসেম্বর)/i,
};
const router_bn_lib_match_parseMonthPatterns = {
  any: [
    /^জানু/i,
    /^ফেব্রু/i,
    /^মার্চ/i,
    /^এপ্রিল/i,
    /^মে/i,
    /^জুন/i,
    /^জুলাই/i,
    /^আগস্ট/i,
    /^সেপ্ট/i,
    /^অক্টো/i,
    /^নভে/i,
    /^ডিসে/i,
  ],
};

const router_bn_lib_match_matchDayPatterns = {
  narrow: /^(র|সো|ম|বু|বৃ|শু|শ)+/i,
  short: /^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+/i,
  abbreviated: /^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+/i,
  wide: /^(রবিবার|সোমবার|মঙ্গলবার|বুধবার|বৃহস্পতিবার |শুক্রবার|শনিবার)+/i,
};
const router_bn_lib_match_parseDayPatterns = {
  narrow: [/^র/i, /^সো/i, /^ম/i, /^বু/i, /^বৃ/i, /^শু/i, /^শ/i],
  short: [/^রবি/i, /^সোম/i, /^মঙ্গল/i, /^বুধ/i, /^বৃহ/i, /^শুক্র/i, /^শনি/i],

  abbreviated: [
    /^রবি/i,
    /^সোম/i,
    /^মঙ্গল/i,
    /^বুধ/i,
    /^বৃহ/i,
    /^শুক্র/i,
    /^শনি/i,
  ],

  wide: [
    /^রবিবার/i,
    /^সোমবার/i,
    /^মঙ্গলবার/i,
    /^বুধবার/i,
    /^বৃহস্পতিবার /i,
    /^শুক্রবার/i,
    /^শনিবার/i,
  ],
};

const router_bn_lib_match_matchDayPeriodPatterns = {
  narrow: /^(পূ|অপ|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i,
  abbreviated: /^(পূর্বাহ্ন|অপরাহ্ন|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i,
  wide: /^(পূর্বাহ্ন|অপরাহ্ন|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i,
};
const router_bn_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^পূ/i,
    pm: /^অপ/i,
    midnight: /^মধ্যরাত/i,
    noon: /^মধ্যাহ্ন/i,
    morning: /সকাল/i,
    afternoon: /বিকাল/i,
    evening: /সন্ধ্যা/i,
    night: /রাত/i,
  },
};

const router_bn_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_bn_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_bn_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_bn_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bn_lib_match_parseEraPatterns,
    defaultParseWidth: "wide",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_bn_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bn_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_bn_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bn_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_bn_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bn_lib_match_parseDayPatterns,
    defaultParseWidth: "wide",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_bn_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bn_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/bn.mjs






/**
 * @category Locales
 * @summary Bengali locale.
 * @language Bengali
 * @iso-639-2 ben
 * @author Touhidur Rahman [@touhidrahman](https://github.com/touhidrahman)
 * @author Farhad Yasir [@nutboltu](https://github.com/nutboltu)
 */
const router_bn = {
  code: "bn",
  formatDistance: router_bn_lib_formatDistance_formatDistance,
  formatLong: router_bn_lib_formatLong_formatLong,
  formatRelative: router_bn_lib_formatRelative_formatRelative,
  localize: router_bn_lib_localize_localize,
  match: router_bn_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_bn = ((/* unused pure expression or super */ null && (router_bn)));

;// ./node_modules/date-fns/locale/bs/_lib/formatDistance.mjs
const router_bs_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      standalone: "manje od 1 sekunde",
      withPrepositionAgo: "manje od 1 sekunde",
      withPrepositionIn: "manje od 1 sekundu",
    },
    dual: "manje od {{count}} sekunde",
    other: "manje od {{count}} sekundi",
  },

  xSeconds: {
    one: {
      standalone: "1 sekunda",
      withPrepositionAgo: "1 sekunde",
      withPrepositionIn: "1 sekundu",
    },
    dual: "{{count}} sekunde",
    other: "{{count}} sekundi",
  },

  halfAMinute: "pola minute",

  lessThanXMinutes: {
    one: {
      standalone: "manje od 1 minute",
      withPrepositionAgo: "manje od 1 minute",
      withPrepositionIn: "manje od 1 minutu",
    },
    dual: "manje od {{count}} minute",
    other: "manje od {{count}} minuta",
  },

  xMinutes: {
    one: {
      standalone: "1 minuta",
      withPrepositionAgo: "1 minute",
      withPrepositionIn: "1 minutu",
    },
    dual: "{{count}} minute",
    other: "{{count}} minuta",
  },

  aboutXHours: {
    one: {
      standalone: "oko 1 sat",
      withPrepositionAgo: "oko 1 sat",
      withPrepositionIn: "oko 1 sat",
    },
    dual: "oko {{count}} sata",
    other: "oko {{count}} sati",
  },

  xHours: {
    one: {
      standalone: "1 sat",
      withPrepositionAgo: "1 sat",
      withPrepositionIn: "1 sat",
    },
    dual: "{{count}} sata",
    other: "{{count}} sati",
  },

  xDays: {
    one: {
      standalone: "1 dan",
      withPrepositionAgo: "1 dan",
      withPrepositionIn: "1 dan",
    },
    dual: "{{count}} dana",
    other: "{{count}} dana",
  },

  aboutXWeeks: {
    one: {
      standalone: "oko 1 sedmicu",
      withPrepositionAgo: "oko 1 sedmicu",
      withPrepositionIn: "oko 1 sedmicu",
    },
    dual: "oko {{count}} sedmice",
    other: "oko {{count}} sedmice",
  },

  xWeeks: {
    one: {
      standalone: "1 sedmicu",
      withPrepositionAgo: "1 sedmicu",
      withPrepositionIn: "1 sedmicu",
    },
    dual: "{{count}} sedmice",
    other: "{{count}} sedmice",
  },

  aboutXMonths: {
    one: {
      standalone: "oko 1 mjesec",
      withPrepositionAgo: "oko 1 mjesec",
      withPrepositionIn: "oko 1 mjesec",
    },
    dual: "oko {{count}} mjeseca",
    other: "oko {{count}} mjeseci",
  },

  xMonths: {
    one: {
      standalone: "1 mjesec",
      withPrepositionAgo: "1 mjesec",
      withPrepositionIn: "1 mjesec",
    },
    dual: "{{count}} mjeseca",
    other: "{{count}} mjeseci",
  },

  aboutXYears: {
    one: {
      standalone: "oko 1 godinu",
      withPrepositionAgo: "oko 1 godinu",
      withPrepositionIn: "oko 1 godinu",
    },
    dual: "oko {{count}} godine",
    other: "oko {{count}} godina",
  },

  xYears: {
    one: {
      standalone: "1 godina",
      withPrepositionAgo: "1 godine",
      withPrepositionIn: "1 godinu",
    },
    dual: "{{count}} godine",
    other: "{{count}} godina",
  },

  overXYears: {
    one: {
      standalone: "preko 1 godinu",
      withPrepositionAgo: "preko 1 godinu",
      withPrepositionIn: "preko 1 godinu",
    },
    dual: "preko {{count}} godine",
    other: "preko {{count}} godina",
  },

  almostXYears: {
    one: {
      standalone: "gotovo 1 godinu",
      withPrepositionAgo: "gotovo 1 godinu",
      withPrepositionIn: "gotovo 1 godinu",
    },
    dual: "gotovo {{count}} godine",
    other: "gotovo {{count}} godina",
  },
};

const router_bs_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_bs_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    if (options?.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        result = tokenValue.one.withPrepositionIn;
      } else {
        result = tokenValue.one.withPrepositionAgo;
      }
    } else {
      result = tokenValue.one.standalone;
    }
  } else if (
    count % 10 > 1 &&
    count % 10 < 5 && // if last digit is between 2 and 4
    String(count).substr(-2, 1) !== "1" // unless the 2nd to last digit is "1"
  ) {
    result = tokenValue.dual.replace("{{count}}", String(count));
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "za " + result;
    } else {
      return "prije " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/bs/_lib/formatLong.mjs


const router_bs_lib_formatLong_dateFormats = {
  full: "EEEE, d. MMMM yyyy.",
  long: "d. MMMM yyyy.",
  medium: "d. MMM yy.",
  short: "dd. MM. yy.",
};

const router_bs_lib_formatLong_timeFormats = {
  full: "HH:mm:ss (zzzz)",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_bs_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'u' {{time}}",
  long: "{{date}} 'u' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_bs_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_bs_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_bs_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_bs_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/bs/_lib/formatRelative.mjs
const router_bs_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    switch (date.getDay()) {
      case 0:
        return "'prošle nedjelje u' p";
      case 3:
        return "'prošle srijede u' p";
      case 6:
        return "'prošle subote u' p";
      default:
        return "'prošli' EEEE 'u' p";
    }
  },
  yesterday: "'juče u' p",
  today: "'danas u' p",
  tomorrow: "'sutra u' p",
  nextWeek: (date) => {
    switch (date.getDay()) {
      case 0:
        return "'sljedeće nedjelje u' p";
      case 3:
        return "'sljedeću srijedu u' p";
      case 6:
        return "'sljedeću subotu u' p";
      default:
        return "'sljedeći' EEEE 'u' p";
    }
  },
  other: "P",
};

const router_bs_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  const format = router_bs_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/bs/_lib/localize.mjs


const router_bs_lib_localize_eraValues = {
  narrow: ["pr.n.e.", "AD"],
  abbreviated: ["pr. Hr.", "po. Hr."],
  wide: ["Prije Hrista", "Poslije Hrista"],
};

const router_bs_lib_localize_quarterValues = {
  narrow: ["1.", "2.", "3.", "4."],
  abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."],
  wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
};

const router_bs_lib_localize_monthValues = {
  narrow: [
    "1.",
    "2.",
    "3.",
    "4.",
    "5.",
    "6.",
    "7.",
    "8.",
    "9.",
    "10.",
    "11.",
    "12.",
  ],

  abbreviated: [
    "jan",
    "feb",
    "mar",
    "apr",
    "maj",
    "jun",
    "jul",
    "avg",
    "sep",
    "okt",
    "nov",
    "dec",
  ],

  wide: [
    "januar",
    "februar",
    "mart",
    "april",
    "maj",
    "juni",
    "juli",
    "avgust",
    "septembar",
    "oktobar",
    "novembar",
    "decembar",
  ],
};

const router_lib_localize_formattingMonthValues = {
  narrow: [
    "1.",
    "2.",
    "3.",
    "4.",
    "5.",
    "6.",
    "7.",
    "8.",
    "9.",
    "10.",
    "11.",
    "12.",
  ],

  abbreviated: [
    "jan",
    "feb",
    "mar",
    "apr",
    "maj",
    "jun",
    "jul",
    "avg",
    "sep",
    "okt",
    "nov",
    "dec",
  ],

  wide: [
    "januar",
    "februar",
    "mart",
    "april",
    "maj",
    "juni",
    "juli",
    "avgust",
    "septembar",
    "oktobar",
    "novembar",
    "decembar",
  ],
};

const router_bs_lib_localize_dayValues = {
  narrow: ["N", "P", "U", "S", "Č", "P", "S"],
  short: ["ned", "pon", "uto", "sre", "čet", "pet", "sub"],
  abbreviated: ["ned", "pon", "uto", "sre", "čet", "pet", "sub"],
  wide: [
    "nedjelja",
    "ponedjeljak",
    "utorak",
    "srijeda",
    "četvrtak",
    "petak",
    "subota",
  ],
};

const router_bs_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "popodne",
    evening: "uveče",
    night: "noću",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "popodne",
    evening: "uveče",
    night: "noću",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "poslije podne",
    evening: "uveče",
    night: "noću",
  },
};

const router_bs_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "popodne",
    evening: "uveče",
    night: "noću",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "popodne",
    evening: "uveče",
    night: "noću",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "poslije podne",
    evening: "uveče",
    night: "noću",
  },
};

const router_bs_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return String(number) + ".";
};

const router_bs_lib_localize_localize = {
  ordinalNumber: router_bs_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_bs_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_bs_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_bs_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_bs_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_bs_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_bs_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/bs/_lib/match.mjs



const router_bs_lib_match_matchOrdinalNumberPattern = /^(\d+)\./i;
const router_bs_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_bs_lib_match_matchEraPatterns = {
  narrow: /^(pr\.n\.e\.|AD)/i,
  abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i,
  wide: /^(Prije Hrista|prije nove ere|Poslije Hrista|nova era)/i,
};
const router_bs_lib_match_parseEraPatterns = {
  any: [/^pr/i, /^(po|nova)/i],
};

const router_bs_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]\.\s?kv\.?/i,
  wide: /^[1234]\. kvartal/i,
};
const router_bs_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_bs_lib_match_matchMonthPatterns = {
  narrow: /^(10|11|12|[123456789])\./i,
  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,
  wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(juni|juna)|(juli|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i,
};
const router_bs_lib_match_parseMonthPatterns = {
  narrow: [
    /^1/i,
    /^2/i,
    /^3/i,
    /^4/i,
    /^5/i,
    /^6/i,
    /^7/i,
    /^8/i,
    /^9/i,
    /^10/i,
    /^11/i,
    /^12/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^maj/i,
    /^jun/i,
    /^jul/i,
    /^avg/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_bs_lib_match_matchDayPatterns = {
  narrow: /^[npusčc]/i,
  short: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,
  abbreviated: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,
  wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(četvrtak|cetvrtak)|petak|subota)/i,
};
const router_bs_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
};

const router_bs_lib_match_matchDayPeriodPatterns = {
  any: /^(am|pm|ponoc|ponoć|(po)?podne|uvece|uveče|noću|poslije podne|ujutru)/i,
};
const router_bs_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^pono/i,
    noon: /^pod/i,
    morning: /jutro/i,
    afternoon: /(poslije\s|po)+podne/i,
    evening: /(uvece|uveče)/i,
    night: /(nocu|noću)/i,
  },
};

const router_bs_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_bs_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_bs_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_bs_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bs_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_bs_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bs_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_bs_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bs_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_bs_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_bs_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_bs_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_bs_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/bs.mjs






/**
 * @category Locales
 * @summary Bosnian locale.
 * @language Bosnian
 * @iso-639-2 bos
 * @author Branislav Lazić [@branislavlazic](https://github.com/branislavlazic)
 */
const router_bs = {
  code: "bs",
  formatDistance: router_bs_lib_formatDistance_formatDistance,
  formatLong: router_bs_lib_formatLong_formatLong,
  formatRelative: router_bs_lib_formatRelative_formatRelative,
  localize: router_bs_lib_localize_localize,
  match: router_bs_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_bs = ((/* unused pure expression or super */ null && (router_bs)));

;// ./node_modules/date-fns/locale/ca/_lib/formatDistance.mjs
/**
 * Davant de les xifres que es diuen amb vocal inicial, 1 i 11, s'apostrofen els articles el i la i la preposició de igual que si estiguessin escrits amb lletres.
 *    l'1 de juliol ('l'u')
 *    l'11 de novembre ('l'onze')
 *    l'11a clàusula del contracte ('l'onzena')
 *    la contractació d'11 jugadors ('d'onze')
 *    l'aval d'11.000 socis ('d'onze mil')
 *
 * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=apostrofaci%25F3+davant+xifres&action=Principal&method=detall_completa&numPagina=1&idHit=11236&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=11236&titol=apostrofaci%F3%20davant%20de%20xifres%20%2F%20apostrofaci%F3%20davant%20de%201%20i%2011&numeroResultat=1&clickLink=detall&tipusCerca=cerca.normes
 */

const router_ca_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "menys d'un segon",
    eleven: "menys d'onze segons",
    other: "menys de {{count}} segons",
  },

  xSeconds: {
    one: "1 segon",
    other: "{{count}} segons",
  },

  halfAMinute: "mig minut",

  lessThanXMinutes: {
    one: "menys d'un minut",
    eleven: "menys d'onze minuts",
    other: "menys de {{count}} minuts",
  },

  xMinutes: {
    one: "1 minut",
    other: "{{count}} minuts",
  },

  aboutXHours: {
    one: "aproximadament una hora",
    other: "aproximadament {{count}} hores",
  },

  xHours: {
    one: "1 hora",
    other: "{{count}} hores",
  },

  xDays: {
    one: "1 dia",
    other: "{{count}} dies",
  },

  aboutXWeeks: {
    one: "aproximadament una setmana",
    other: "aproximadament {{count}} setmanes",
  },

  xWeeks: {
    one: "1 setmana",
    other: "{{count}} setmanes",
  },

  aboutXMonths: {
    one: "aproximadament un mes",
    other: "aproximadament {{count}} mesos",
  },

  xMonths: {
    one: "1 mes",
    other: "{{count}} mesos",
  },

  aboutXYears: {
    one: "aproximadament un any",
    other: "aproximadament {{count}} anys",
  },

  xYears: {
    one: "1 any",
    other: "{{count}} anys",
  },

  overXYears: {
    one: "més d'un any",
    eleven: "més d'onze anys",
    other: "més de {{count}} anys",
  },

  almostXYears: {
    one: "gairebé un any",
    other: "gairebé {{count}} anys",
  },
};

const router_ca_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ca_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 11 && tokenValue.eleven) {
    result = tokenValue.eleven;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "en " + result;
    } else {
      return "fa " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ca/_lib/formatLong.mjs


const router_ca_lib_formatLong_dateFormats = {
  full: "EEEE, d 'de' MMMM y",
  long: "d 'de' MMMM y",
  medium: "d MMM y",
  short: "dd/MM/y",
};

const router_ca_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_ca_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'a les' {{time}}",
  long: "{{date}} 'a les' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ca_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ca_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ca_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ca_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ca/_lib/formatRelative.mjs
const router_ca_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'el' eeee 'passat a la' LT",
  yesterday: "'ahir a la' p",
  today: "'avui a la' p",
  tomorrow: "'demà a la' p",
  nextWeek: "eeee 'a la' p",
  other: "P",
};

const router_formatRelativeLocalePlural = {
  lastWeek: "'el' eeee 'passat a les' p",
  yesterday: "'ahir a les' p",
  today: "'avui a les' p",
  tomorrow: "'demà a les' p",
  nextWeek: "eeee 'a les' p",
  other: "P",
};

const router_ca_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  if (date.getHours() !== 1) {
    return router_formatRelativeLocalePlural[token];
  }
  return router_ca_lib_formatRelative_formatRelativeLocale[token];
};

;// ./node_modules/date-fns/locale/ca/_lib/localize.mjs


/**
 * General information
 * Reference: https://aplicacions.llengua.gencat.cat
 * Reference: https://www.uoc.edu/portal/ca/servei-linguistic/convencions/abreviacions/simbols/simbols-habituals.html
 */

/**
 * Abans de Crist: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abans+de+crist&action=Principal&method=detall_completa&numPagina=1&idHit=6876&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=6876&titol=abans%20de%20Crist%20(abreviatura)%20/%20abans%20de%20Crist%20(sigla)&numeroResultat=1&clickLink=detall&tipusCerca=cerca.fitxes
 * Desprest de Crist: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=despr%E9s+de+crist&action=Principal&method=detall_completa&numPagina=1&idHit=6879&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=6879&titol=despr%E9s%20de%20Crist%20(sigla)%20/%20despr%E9s%20de%20Crist%20(abreviatura)&numeroResultat=1&clickLink=detall&tipusCerca=cerca.fitxes
 */
const router_ca_lib_localize_eraValues = {
  narrow: ["aC", "dC"],
  abbreviated: ["a. de C.", "d. de C."],
  wide: ["abans de Crist", "després de Crist"],
};

const router_ca_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["T1", "T2", "T3", "T4"],
  wide: ["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"],
};

/**
 * Dins d'un text convé fer servir la forma sencera dels mesos, ja que sempre és més clar el mot sencer que l'abreviatura, encara que aquesta sigui força coneguda.
 * Cal reservar, doncs, les abreviatures per a les llistes o classificacions, els gràfics, les taules o quadres estadístics, els textos publicitaris, etc.
 *
 * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abreviacions+mesos&action=Principal&method=detall_completa&numPagina=1&idHit=8402&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=8402&titol=abreviatures%20dels%20mesos%20de%20l%27any&numeroResultat=5&clickLink=detall&tipusCerca=cerca.fitxes
 */
const router_ca_lib_localize_monthValues = {
  narrow: [
    "GN",
    "FB",
    "MÇ",
    "AB",
    "MG",
    "JN",
    "JL",
    "AG",
    "ST",
    "OC",
    "NV",
    "DS",
  ],

  /**
   * Les abreviatures dels mesos de l'any es formen seguint una de les normes generals de formació d'abreviatures.
   * S'escriu la primera síl·laba i les consonants de la síl·laba següent anteriors a la primera vocal.
   * Els mesos de març, maig i juny no s'abreugen perquè són paraules d'una sola síl·laba.
   */
  abbreviated: [
    "gen.",
    "febr.",
    "març",
    "abr.",
    "maig",
    "juny",
    "jul.",
    "ag.",
    "set.",
    "oct.",
    "nov.",
    "des.",
  ],

  wide: [
    "gener",
    "febrer",
    "març",
    "abril",
    "maig",
    "juny",
    "juliol",
    "agost",
    "setembre",
    "octubre",
    "novembre",
    "desembre",
  ],
};

/**
 * Les abreviatures dels dies de la setmana comencen totes amb la lletra d.
 * Tot seguit porten la consonant següent a la i, excepte en el cas de dimarts, dimecres i diumenge, en què aquesta consonant és la m i, per tant, hi podria haver confusió.
 * Per evitar-ho, s'ha substituït la m per una t (en el cas de dimarts), una c (en el cas de dimecres) i una g (en el cas de diumenge), respectivament.
 *
 * Seguint la norma general d'ús de les abreviatures, les dels dies de la setmana sempre porten punt final.
 * Igualment, van amb la primera lletra en majúscula quan la paraula sencera també hi aniria.
 * En canvi, van amb la primera lletra en minúscula quan la inicial de la paraula sencera també hi aniria.
 *
 * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abreviatures+dies&action=Principal&method=detall_completa&numPagina=1&idHit=8387&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=8387&titol=abreviatures%20dels%20dies%20de%20la%20setmana&numeroResultat=1&clickLink=detall&tipusCerca=cerca.tot
 */
const router_ca_lib_localize_dayValues = {
  narrow: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
  short: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
  abbreviated: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
  wide: [
    "diumenge",
    "dilluns",
    "dimarts",
    "dimecres",
    "dijous",
    "divendres",
    "dissabte",
  ],
};

/**
 * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?action=Principal&method=detall&input_cercar=parts+del+dia&numPagina=1&database=FITXES_PUB&idFont=12801&idHit=12801&tipusFont=Fitxes+de+l%27Optimot&numeroResultat=1&databases_avansada=&categories_avansada=&clickLink=detall&titol=Nom+de+les+parts+del+dia&tematica=&tipusCerca=cerca.fitxes
 */
const router_ca_lib_localize_dayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "mitjanit",
    noon: "migdia",
    morning: "matí",
    afternoon: "tarda",
    evening: "vespre",
    night: "nit",
  },
  abbreviated: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "mitjanit",
    noon: "migdia",
    morning: "matí",
    afternoon: "tarda",
    evening: "vespre",
    night: "nit",
  },
  wide: {
    am: "ante meridiem",
    pm: "post meridiem",
    midnight: "mitjanit",
    noon: "migdia",
    morning: "matí",
    afternoon: "tarda",
    evening: "vespre",
    night: "nit",
  },
};

const router_ca_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "de la mitjanit",
    noon: "del migdia",
    morning: "del matí",
    afternoon: "de la tarda",
    evening: "del vespre",
    night: "de la nit",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "de la mitjanit",
    noon: "del migdia",
    morning: "del matí",
    afternoon: "de la tarda",
    evening: "del vespre",
    night: "de la nit",
  },
  wide: {
    am: "ante meridiem",
    pm: "post meridiem",
    midnight: "de la mitjanit",
    noon: "del migdia",
    morning: "del matí",
    afternoon: "de la tarda",
    evening: "del vespre",
    night: "de la nit",
  },
};

/**
 * Quan van en singular, els nombres ordinals es representen, en forma d’abreviatura, amb la xifra seguida de l’última lletra del mot desplegat.
 * És optatiu posar punt després de la lletra.
 *
 * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/pdf/abrevia.pdf#page=18
 */
const router_ca_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  const rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "r";
      case 2:
        return number + "n";
      case 3:
        return number + "r";
      case 4:
        return number + "t";
    }
  }
  return number + "è";
};

const router_ca_lib_localize_localize = {
  ordinalNumber: router_ca_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ca_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ca_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ca_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ca_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ca_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ca_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ca/_lib/match.mjs



const router_ca_lib_match_matchOrdinalNumberPattern = /^(\d+)(è|r|n|r|t)?/i;
const router_ca_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ca_lib_match_matchEraPatterns = {
  narrow: /^(aC|dC)/i,
  abbreviated: /^(a. de C.|d. de C.)/i,
  wide: /^(abans de Crist|despr[eé]s de Crist)/i,
};
const router_ca_lib_match_parseEraPatterns = {
  narrow: [/^aC/i, /^dC/i],
  abbreviated: [/^(a. de C.)/i, /^(d. de C.)/i],
  wide: [/^(abans de Crist)/i, /^(despr[eé]s de Crist)/i],
};

const router_ca_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^T[1234]/i,
  wide: /^[1234](è|r|n|r|t)? trimestre/i,
};
const router_ca_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ca_lib_match_matchMonthPatterns = {
  narrow: /^(GN|FB|MÇ|AB|MG|JN|JL|AG|ST|OC|NV|DS)/i,
  abbreviated:
    /^(gen.|febr.|març|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.)/i,
  wide: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,
};
const router_ca_lib_match_parseMonthPatterns = {
  narrow: [
    /^GN/i,
    /^FB/i,
    /^MÇ/i,
    /^AB/i,
    /^MG/i,
    /^JN/i,
    /^JL/i,
    /^AG/i,
    /^ST/i,
    /^OC/i,
    /^NV/i,
    /^DS/i,
  ],

  abbreviated: [
    /^gen./i,
    /^febr./i,
    /^març/i,
    /^abr./i,
    /^maig/i,
    /^juny/i,
    /^jul./i,
    /^ag./i,
    /^set./i,
    /^oct./i,
    /^nov./i,
    /^des./i,
  ],

  wide: [
    /^gener/i,
    /^febrer/i,
    /^març/i,
    /^abril/i,
    /^maig/i,
    /^juny/i,
    /^juliol/i,
    /^agost/i,
    /^setembre/i,
    /^octubre/i,
    /^novembre/i,
    /^desembre/i,
  ],
};

const router_ca_lib_match_matchDayPatterns = {
  narrow: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
  short: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
  abbreviated: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
  wide: /^(diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte)/i,
};
const router_ca_lib_match_parseDayPatterns = {
  narrow: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],

  abbreviated: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],

  wide: [
    /^diumenge/i,
    /^dilluns/i,
    /^dimarts/i,
    /^dimecres/i,
    /^dijous/i,
    /^divendres/i,
    /^disssabte/i,
  ],
};

const router_ca_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mn|md|(del|de la) (matí|tarda|vespre|nit))/i,
  abbreviated:
    /^([ap]\.?\s?m\.?|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i,
  wide: /^(ante meridiem|post meridiem|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i,
};
const router_ca_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mitjanit/i,
    noon: /^migdia/i,
    morning: /matí/i,
    afternoon: /tarda/i,
    evening: /vespre/i,
    night: /nit/i,
  },
};

const router_ca_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ca_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ca_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ca_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ca_lib_match_parseEraPatterns,
    defaultParseWidth: "wide",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ca_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ca_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ca_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ca_lib_match_parseMonthPatterns,
    defaultParseWidth: "wide",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ca_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ca_lib_match_parseDayPatterns,
    defaultParseWidth: "wide",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ca_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ca_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ca.mjs






/**
 * @category Locales
 * @summary Catalan locale.
 * @language Catalan
 * @iso-639-2 cat
 * @author Guillermo Grau [@guigrpa](https://github.com/guigrpa)
 * @author Alex Vizcaino [@avizcaino](https://github.com/avizcaino)
 */
const router_ca = {
  code: "ca",
  formatDistance: router_ca_lib_formatDistance_formatDistance,
  formatLong: router_ca_lib_formatLong_formatLong,
  formatRelative: router_ca_lib_formatRelative_formatRelative,
  localize: router_ca_lib_localize_localize,
  match: router_ca_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ca = ((/* unused pure expression or super */ null && (router_ca)));

;// ./node_modules/date-fns/locale/ckb/_lib/formatDistance.mjs
const router_ckb_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "کەمتر لە یەک چرکە",
    other: "کەمتر لە {{count}} چرکە",
  },

  xSeconds: {
    one: "1 چرکە",
    other: "{{count}} چرکە",
  },

  halfAMinute: "نیو کاتژمێر",

  lessThanXMinutes: {
    one: "کەمتر لە یەک خولەک",
    other: "کەمتر لە {{count}} خولەک",
  },

  xMinutes: {
    one: "1 خولەک",
    other: "{{count}} خولەک",
  },

  aboutXHours: {
    one: "دەوروبەری 1 کاتژمێر",
    other: "دەوروبەری {{count}} کاتژمێر",
  },

  xHours: {
    one: "1 کاتژمێر",
    other: "{{count}} کاتژمێر",
  },

  xDays: {
    one: "1 ڕۆژ",
    other: "{{count}} ژۆژ",
  },

  aboutXWeeks: {
    one: "دەوروبەری 1 هەفتە",
    other: "دوروبەری {{count}} هەفتە",
  },

  xWeeks: {
    one: "1 هەفتە",
    other: "{{count}} هەفتە",
  },

  aboutXMonths: {
    one: "داوروبەری 1 مانگ",
    other: "دەوروبەری {{count}} مانگ",
  },

  xMonths: {
    one: "1 مانگ",
    other: "{{count}} مانگ",
  },

  aboutXYears: {
    one: "دەوروبەری  1 ساڵ",
    other: "دەوروبەری {{count}} ساڵ",
  },

  xYears: {
    one: "1 ساڵ",
    other: "{{count}} ساڵ",
  },

  overXYears: {
    one: "زیاتر لە ساڵێک",
    other: "زیاتر لە {{count}} ساڵ",
  },

  almostXYears: {
    one: "بەنزیکەیی ساڵێک  ",
    other: "بەنزیکەیی {{count}} ساڵ",
  },
};

const router_ckb_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ckb_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "لە ماوەی " + result + "دا";
    } else {
      return result + "پێش ئێستا";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ckb/_lib/formatLong.mjs


const router_ckb_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_ckb_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_ckb_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'کاتژمێر' {{time}}",
  long: "{{date}} 'کاتژمێر' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ckb_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ckb_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ckb_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ckb_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ckb/_lib/formatRelative.mjs
const router_ckb_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'هەفتەی ڕابردوو' eeee 'کاتژمێر' p",
  yesterday: "'دوێنێ کاتژمێر' p",
  today: "'ئەمڕۆ کاتژمێر' p",
  tomorrow: "'بەیانی کاتژمێر' p",
  nextWeek: "eeee 'کاتژمێر' p",
  other: "P",
};

const router_ckb_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ckb_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ckb/_lib/localize.mjs


const router_ckb_lib_localize_eraValues = {
  narrow: ["پ", "د"],
  abbreviated: ["پ-ز", "د-ز"],
  wide: ["پێش زاین", "دوای زاین"],
};

const router_ckb_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["چ1م", "چ2م", "چ3م", "چ4م"],
  wide: ["چارەگی یەکەم", "چارەگی دووەم", "چارەگی سێیەم", "چارەگی چوارەم"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_ckb_lib_localize_monthValues = {
  narrow: [
    "ک-د",
    "ش",
    "ئا",
    "ن",
    "م",
    "ح",
    "ت",
    "ئا",
    "ئە",
    "تش-ی",
    "تش-د",
    "ک-ی",
  ],

  abbreviated: [
    "کان-دوو",
    "شوب",
    "ئاد",
    "نیس",
    "مایس",
    "حوز",
    "تەم",
    "ئاب",
    "ئەل",
    "تش-یەک",
    "تش-دوو",
    "کان-یەک",
  ],

  wide: [
    "کانوونی دووەم",
    "شوبات",
    "ئادار",
    "نیسان",
    "مایس",
    "حوزەیران",
    "تەمموز",
    "ئاب",
    "ئەیلول",
    "تشرینی یەکەم",
    "تشرینی دووەم",
    "کانوونی یەکەم",
  ],
};

const router_ckb_lib_localize_dayValues = {
  narrow: ["ی-ش", "د-ش", "س-ش", "چ-ش", "پ-ش", "هە", "ش"],
  short: ["یە-شە", "دوو-شە", "سێ-شە", "چو-شە", "پێ-شە", "هەی", "شە"],
  abbreviated: [
    "یەک-شەم",
    "دوو-شەم",
    "سێ-شەم",
    "چوار-شەم",
    "پێنج-شەم",
    "هەینی",
    "شەمە",
  ],

  wide: [
    "یەک شەمە",
    "دوو شەمە",
    "سێ شەمە",
    "چوار شەمە",
    "پێنج شەمە",
    "هەینی",
    "شەمە",
  ],
};

const router_ckb_lib_localize_dayPeriodValues = {
  narrow: {
    am: "پ",
    pm: "د",
    midnight: "ن-ش",
    noon: "ن",
    morning: "بەیانی",
    afternoon: "دوای نیوەڕۆ",
    evening: "ئێوارە",
    night: "شەو",
  },
  abbreviated: {
    am: "پ-ن",
    pm: "د-ن",
    midnight: "نیوە شەو",
    noon: "نیوەڕۆ",
    morning: "بەیانی",
    afternoon: "دوای نیوەڕۆ",
    evening: "ئێوارە",
    night: "شەو",
  },
  wide: {
    am: "پێش نیوەڕۆ",
    pm: "دوای نیوەڕۆ",
    midnight: "نیوە شەو",
    noon: "نیوەڕۆ",
    morning: "بەیانی",
    afternoon: "دوای نیوەڕۆ",
    evening: "ئێوارە",
    night: "شەو",
  },
};

const router_ckb_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "پ",
    pm: "د",
    midnight: "ن-ش",
    noon: "ن",
    morning: "لە بەیانیدا",
    afternoon: "لە دوای نیوەڕۆدا",
    evening: "لە ئێوارەدا",
    night: "لە شەودا",
  },
  abbreviated: {
    am: "پ-ن",
    pm: "د-ن",
    midnight: "نیوە شەو",
    noon: "نیوەڕۆ",
    morning: "لە بەیانیدا",
    afternoon: "لە دوای نیوەڕۆدا",
    evening: "لە ئێوارەدا",
    night: "لە شەودا",
  },
  wide: {
    am: "پێش نیوەڕۆ",
    pm: "دوای نیوەڕۆ",
    midnight: "نیوە شەو",
    noon: "نیوەڕۆ",
    morning: "لە بەیانیدا",
    afternoon: "لە دوای نیوەڕۆدا",
    evening: "لە ئێوارەدا",
    night: "لە شەودا",
  },
};

const router_ckb_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_ckb_lib_localize_localize = {
  ordinalNumber: router_ckb_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ckb_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ckb_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ckb_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ckb_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ckb_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ckb_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ckb/_lib/match.mjs



const router_ckb_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_ckb_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ckb_lib_match_matchEraPatterns = {
  narrow: /^(پ|د)/i,
  abbreviated: /^(پ-ز|د.ز)/i,
  wide: /^(پێش زاین| دوای زاین)/i,
};
const router_ckb_lib_match_parseEraPatterns = {
  any: [/^د/g, /^پ/g],
};

const router_ckb_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^م[1234]چ/i,
  wide: /^(یەکەم|دووەم|سێیەم| چوارەم) (چارەگی)? quarter/i,
};
const router_ckb_lib_match_parseQuarterPatterns = {
  wide: [/چارەگی یەکەم/, /چارەگی دووەم/, /چارەگی سيیەم/, /چارەگی چوارەم/],

  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ckb_lib_match_matchMonthPatterns = {
  narrow: /^(ک-د|ش|ئا|ن|م|ح|ت|ئە|تش-ی|تش-د|ک-ی)/i,
  abbreviated:
    /^(کان-دوو|شوب|ئاد|نیس|مایس|حوز|تەم|ئاب|ئەل|تش-یەک|تش-دوو|کان-یەک)/i,
  wide: /^(کانوونی دووەم|شوبات|ئادار|نیسان|مایس|حوزەیران|تەمموز|ئاب|ئەیلول|تشرینی یەکەم|تشرینی دووەم|کانوونی یەکەم)/i,
};
const router_ckb_lib_match_parseMonthPatterns = {
  narrow: [
    /^ک-د/i,
    /^ش/i,
    /^ئا/i,
    /^ن/i,
    /^م/i,
    /^ح/i,
    /^ت/i,
    /^ئا/i,
    /^ئە/i,
    /^تش-ی/i,
    /^تش-د/i,
    /^ک-ی/i,
  ],

  any: [
    /^کان-دوو/i,
    /^شوب/i,
    /^ئاد/i,
    /^نیس/i,
    /^مایس/i,
    /^حوز/i,
    /^تەم/i,
    /^ئاب/i,
    /^ئەل/i,
    /^تش-یەک/i,
    /^تش-دوو/i,
    /^|کان-یەک/i,
  ],
};

const router_ckb_lib_match_matchDayPatterns = {
  narrow: /^(ش|ی|د|س|چ|پ|هە)/i,
  short: /^(یە-شە|دوو-شە|سێ-شە|چو-شە|پێ-شە|هە|شە)/i,
  abbreviated: /^(یەک-شەم|دوو-شەم|سێ-شەم|چوار-شەم|پێنخ-شەم|هەینی|شەمە)/i,
  wide: /^(یەک شەمە|دوو شەمە|سێ شەمە|چوار شەمە|پێنج شەمە|هەینی|شەمە)/i,
};
const router_ckb_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
};

const router_ckb_lib_match_matchDayPeriodPatterns = {
  narrow: /^(پ|د|ن-ش|ن| (بەیانی|دوای نیوەڕۆ|ئێوارە|شەو))/i,
  abbreviated: /^(پ-ن|د-ن|نیوە شەو|نیوەڕۆ|بەیانی|دوای نیوەڕۆ|ئێوارە|شەو)/,
  wide: /^(پێش نیوەڕۆ|دوای نیوەڕۆ|نیوەڕۆ|نیوە شەو|لەبەیانیدا|لەدواینیوەڕۆدا|لە ئێوارەدا|لە شەودا)/,
  any: /^(پ|د|بەیانی|نیوەڕۆ|ئێوارە|شەو)/,
};
const router_ckb_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^د/i,
    pm: /^پ/i,
    midnight: /^ن-ش/i,
    noon: /^ن/i,
    morning: /بەیانی/i,
    afternoon: /دواینیوەڕۆ/i,
    evening: /ئێوارە/i,
    night: /شەو/i,
  },
};

const router_ckb_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ckb_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ckb_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ckb_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ckb_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ckb_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ckb_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ckb_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ckb_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ckb_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ckb_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ckb_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ckb_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ckb.mjs






/**
 * @type {Locale}
 * @category Locales
 * @summary Central Kurdish locale.
 * @language Central Kurdish
 * @iso-639-2 kur
 * @author Revan Sarbast [@Revan99]{@link https://github.com/Revan99}
 */
const router_ckb = {
  code: "ckb",
  formatDistance: router_ckb_lib_formatDistance_formatDistance,
  formatLong: router_ckb_lib_formatLong_formatLong,
  formatRelative: router_ckb_lib_formatRelative_formatRelative,
  localize: router_ckb_lib_localize_localize,
  match: router_ckb_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ckb = ((/* unused pure expression or super */ null && (router_ckb)));

;// ./node_modules/date-fns/locale/cs/_lib/formatDistance.mjs
const router_cs_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      regular: "méně než 1 sekunda",
      past: "před méně než 1 sekundou",
      future: "za méně než 1 sekundu",
    },
    few: {
      regular: "méně než {{count}} sekundy",
      past: "před méně než {{count}} sekundami",
      future: "za méně než {{count}} sekundy",
    },
    many: {
      regular: "méně než {{count}} sekund",
      past: "před méně než {{count}} sekundami",
      future: "za méně než {{count}} sekund",
    },
  },

  xSeconds: {
    one: {
      regular: "1 sekunda",
      past: "před 1 sekundou",
      future: "za 1 sekundu",
    },
    few: {
      regular: "{{count}} sekundy",
      past: "před {{count}} sekundami",
      future: "za {{count}} sekundy",
    },
    many: {
      regular: "{{count}} sekund",
      past: "před {{count}} sekundami",
      future: "za {{count}} sekund",
    },
  },

  halfAMinute: {
    type: "other",
    other: {
      regular: "půl minuty",
      past: "před půl minutou",
      future: "za půl minuty",
    },
  },

  lessThanXMinutes: {
    one: {
      regular: "méně než 1 minuta",
      past: "před méně než 1 minutou",
      future: "za méně než 1 minutu",
    },
    few: {
      regular: "méně než {{count}} minuty",
      past: "před méně než {{count}} minutami",
      future: "za méně než {{count}} minuty",
    },
    many: {
      regular: "méně než {{count}} minut",
      past: "před méně než {{count}} minutami",
      future: "za méně než {{count}} minut",
    },
  },

  xMinutes: {
    one: {
      regular: "1 minuta",
      past: "před 1 minutou",
      future: "za 1 minutu",
    },
    few: {
      regular: "{{count}} minuty",
      past: "před {{count}} minutami",
      future: "za {{count}} minuty",
    },
    many: {
      regular: "{{count}} minut",
      past: "před {{count}} minutami",
      future: "za {{count}} minut",
    },
  },

  aboutXHours: {
    one: {
      regular: "přibližně 1 hodina",
      past: "přibližně před 1 hodinou",
      future: "přibližně za 1 hodinu",
    },
    few: {
      regular: "přibližně {{count}} hodiny",
      past: "přibližně před {{count}} hodinami",
      future: "přibližně za {{count}} hodiny",
    },
    many: {
      regular: "přibližně {{count}} hodin",
      past: "přibližně před {{count}} hodinami",
      future: "přibližně za {{count}} hodin",
    },
  },

  xHours: {
    one: {
      regular: "1 hodina",
      past: "před 1 hodinou",
      future: "za 1 hodinu",
    },
    few: {
      regular: "{{count}} hodiny",
      past: "před {{count}} hodinami",
      future: "za {{count}} hodiny",
    },
    many: {
      regular: "{{count}} hodin",
      past: "před {{count}} hodinami",
      future: "za {{count}} hodin",
    },
  },

  xDays: {
    one: {
      regular: "1 den",
      past: "před 1 dnem",
      future: "za 1 den",
    },
    few: {
      regular: "{{count}} dny",
      past: "před {{count}} dny",
      future: "za {{count}} dny",
    },
    many: {
      regular: "{{count}} dní",
      past: "před {{count}} dny",
      future: "za {{count}} dní",
    },
  },

  aboutXWeeks: {
    one: {
      regular: "přibližně 1 týden",
      past: "přibližně před 1 týdnem",
      future: "přibližně za 1 týden",
    },

    few: {
      regular: "přibližně {{count}} týdny",
      past: "přibližně před {{count}} týdny",
      future: "přibližně za {{count}} týdny",
    },

    many: {
      regular: "přibližně {{count}} týdnů",
      past: "přibližně před {{count}} týdny",
      future: "přibližně za {{count}} týdnů",
    },
  },

  xWeeks: {
    one: {
      regular: "1 týden",
      past: "před 1 týdnem",
      future: "za 1 týden",
    },

    few: {
      regular: "{{count}} týdny",
      past: "před {{count}} týdny",
      future: "za {{count}} týdny",
    },

    many: {
      regular: "{{count}} týdnů",
      past: "před {{count}} týdny",
      future: "za {{count}} týdnů",
    },
  },

  aboutXMonths: {
    one: {
      regular: "přibližně 1 měsíc",
      past: "přibližně před 1 měsícem",
      future: "přibližně za 1 měsíc",
    },

    few: {
      regular: "přibližně {{count}} měsíce",
      past: "přibližně před {{count}} měsíci",
      future: "přibližně za {{count}} měsíce",
    },

    many: {
      regular: "přibližně {{count}} měsíců",
      past: "přibližně před {{count}} měsíci",
      future: "přibližně za {{count}} měsíců",
    },
  },

  xMonths: {
    one: {
      regular: "1 měsíc",
      past: "před 1 měsícem",
      future: "za 1 měsíc",
    },

    few: {
      regular: "{{count}} měsíce",
      past: "před {{count}} měsíci",
      future: "za {{count}} měsíce",
    },

    many: {
      regular: "{{count}} měsíců",
      past: "před {{count}} měsíci",
      future: "za {{count}} měsíců",
    },
  },

  aboutXYears: {
    one: {
      regular: "přibližně 1 rok",
      past: "přibližně před 1 rokem",
      future: "přibližně za 1 rok",
    },
    few: {
      regular: "přibližně {{count}} roky",
      past: "přibližně před {{count}} roky",
      future: "přibližně za {{count}} roky",
    },
    many: {
      regular: "přibližně {{count}} roků",
      past: "přibližně před {{count}} roky",
      future: "přibližně za {{count}} roků",
    },
  },

  xYears: {
    one: {
      regular: "1 rok",
      past: "před 1 rokem",
      future: "za 1 rok",
    },
    few: {
      regular: "{{count}} roky",
      past: "před {{count}} roky",
      future: "za {{count}} roky",
    },
    many: {
      regular: "{{count}} roků",
      past: "před {{count}} roky",
      future: "za {{count}} roků",
    },
  },

  overXYears: {
    one: {
      regular: "více než 1 rok",
      past: "před více než 1 rokem",
      future: "za více než 1 rok",
    },
    few: {
      regular: "více než {{count}} roky",
      past: "před více než {{count}} roky",
      future: "za více než {{count}} roky",
    },
    many: {
      regular: "více než {{count}} roků",
      past: "před více než {{count}} roky",
      future: "za více než {{count}} roků",
    },
  },

  almostXYears: {
    one: {
      regular: "skoro 1 rok",
      past: "skoro před 1 rokem",
      future: "skoro za 1 rok",
    },
    few: {
      regular: "skoro {{count}} roky",
      past: "skoro před {{count}} roky",
      future: "skoro za {{count}} roky",
    },
    many: {
      regular: "skoro {{count}} roků",
      past: "skoro před {{count}} roky",
      future: "skoro za {{count}} roků",
    },
  },
};

const router_cs_lib_formatDistance_formatDistance = (token, count, options) => {
  let pluralResult;

  const tokenValue = router_cs_lib_formatDistance_formatDistanceLocale[token];

  // cs pluralization
  if (tokenValue.type === "other") {
    pluralResult = tokenValue.other;
  } else if (count === 1) {
    pluralResult = tokenValue.one;
  } else if (count > 1 && count < 5) {
    pluralResult = tokenValue.few;
  } else {
    pluralResult = tokenValue.many;
  }

  // times
  const suffixExist = options?.addSuffix === true;
  const comparison = options?.comparison;

  let timeResult;
  if (suffixExist && comparison === -1) {
    timeResult = pluralResult.past;
  } else if (suffixExist && comparison === 1) {
    timeResult = pluralResult.future;
  } else {
    timeResult = pluralResult.regular;
  }

  return timeResult.replace("{{count}}", String(count));
};

;// ./node_modules/date-fns/locale/cs/_lib/formatLong.mjs


const router_cs_lib_formatLong_dateFormats = {
  full: "EEEE, d. MMMM yyyy",
  long: "d. MMMM yyyy",
  medium: "d. M. yyyy",
  short: "dd.MM.yyyy",
};

const router_cs_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_cs_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'v' {{time}}",
  long: "{{date}} 'v' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_cs_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_cs_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_cs_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_cs_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/cs/_lib/formatRelative.mjs
const router_lib_formatRelative_accusativeWeekdays = [
  "neděli",
  "pondělí",
  "úterý",
  "středu",
  "čtvrtek",
  "pátek",
  "sobotu",
];

const router_cs_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'poslední' eeee 've' p",
  yesterday: "'včera v' p",
  today: "'dnes v' p",
  tomorrow: "'zítra v' p",
  nextWeek: (date) => {
    const day = date.getDay();
    return "'v " + router_lib_formatRelative_accusativeWeekdays[day] + " o' p";
  },
  other: "P",
};

const router_cs_lib_formatRelative_formatRelative = (token, date) => {
  const format = router_cs_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/cs/_lib/localize.mjs


const router_cs_lib_localize_eraValues = {
  narrow: ["př. n. l.", "n. l."],
  abbreviated: ["př. n. l.", "n. l."],
  wide: ["před naším letopočtem", "našeho letopočtu"],
};

const router_cs_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1. čtvrtletí", "2. čtvrtletí", "3. čtvrtletí", "4. čtvrtletí"],

  wide: ["1. čtvrtletí", "2. čtvrtletí", "3. čtvrtletí", "4. čtvrtletí"],
};

const router_cs_lib_localize_monthValues = {
  narrow: ["L", "Ú", "B", "D", "K", "Č", "Č", "S", "Z", "Ř", "L", "P"],
  abbreviated: [
    "led",
    "úno",
    "bře",
    "dub",
    "kvě",
    "čvn",
    "čvc",
    "srp",
    "zář",
    "říj",
    "lis",
    "pro",
  ],

  wide: [
    "leden",
    "únor",
    "březen",
    "duben",
    "květen",
    "červen",
    "červenec",
    "srpen",
    "září",
    "říjen",
    "listopad",
    "prosinec",
  ],
};

const router_cs_lib_localize_formattingMonthValues = {
  narrow: ["L", "Ú", "B", "D", "K", "Č", "Č", "S", "Z", "Ř", "L", "P"],
  abbreviated: [
    "led",
    "úno",
    "bře",
    "dub",
    "kvě",
    "čvn",
    "čvc",
    "srp",
    "zář",
    "říj",
    "lis",
    "pro",
  ],

  wide: [
    "ledna",
    "února",
    "března",
    "dubna",
    "května",
    "června",
    "července",
    "srpna",
    "září",
    "října",
    "listopadu",
    "prosince",
  ],
};

const router_cs_lib_localize_dayValues = {
  narrow: ["ne", "po", "út", "st", "čt", "pá", "so"],
  short: ["ne", "po", "út", "st", "čt", "pá", "so"],
  abbreviated: ["ned", "pon", "úte", "stř", "čtv", "pát", "sob"],
  wide: ["neděle", "pondělí", "úterý", "středa", "čtvrtek", "pátek", "sobota"],
};

const router_cs_lib_localize_dayPeriodValues = {
  narrow: {
    am: "dop.",
    pm: "odp.",
    midnight: "půlnoc",
    noon: "poledne",
    morning: "ráno",
    afternoon: "odpoledne",
    evening: "večer",
    night: "noc",
  },
  abbreviated: {
    am: "dop.",
    pm: "odp.",
    midnight: "půlnoc",
    noon: "poledne",
    morning: "ráno",
    afternoon: "odpoledne",
    evening: "večer",
    night: "noc",
  },
  wide: {
    am: "dopoledne",
    pm: "odpoledne",
    midnight: "půlnoc",
    noon: "poledne",
    morning: "ráno",
    afternoon: "odpoledne",
    evening: "večer",
    night: "noc",
  },
};

const router_cs_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "dop.",
    pm: "odp.",
    midnight: "půlnoc",
    noon: "poledne",
    morning: "ráno",
    afternoon: "odpoledne",
    evening: "večer",
    night: "noc",
  },
  abbreviated: {
    am: "dop.",
    pm: "odp.",
    midnight: "půlnoc",
    noon: "poledne",
    morning: "ráno",
    afternoon: "odpoledne",
    evening: "večer",
    night: "noc",
  },
  wide: {
    am: "dopoledne",
    pm: "odpoledne",
    midnight: "půlnoc",
    noon: "poledne",
    morning: "ráno",
    afternoon: "odpoledne",
    evening: "večer",
    night: "noc",
  },
};

const router_cs_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_cs_lib_localize_localize = {
  ordinalNumber: router_cs_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_cs_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_cs_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_cs_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_cs_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_cs_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_cs_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_cs_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/cs/_lib/match.mjs



const router_cs_lib_match_matchOrdinalNumberPattern = /^(\d+)\.?/i;
const router_cs_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_cs_lib_match_matchEraPatterns = {
  narrow: /^(p[řr](\.|ed) Kr\.|p[řr](\.|ed) n\. l\.|po Kr\.|n\. l\.)/i,
  abbreviated: /^(p[řr](\.|ed) Kr\.|p[řr](\.|ed) n\. l\.|po Kr\.|n\. l\.)/i,
  wide: /^(p[řr](\.|ed) Kristem|p[řr](\.|ed) na[šs][íi]m letopo[čc]tem|po Kristu|na[šs]eho letopo[čc]tu)/i,
};

const router_cs_lib_match_parseEraPatterns = {
  any: [/^p[řr]/i, /^(po|n)/i],
};

const router_cs_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]\. [čc]tvrtlet[íi]/i,
  wide: /^[1234]\. [čc]tvrtlet[íi]/i,
};
const router_cs_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_cs_lib_match_matchMonthPatterns = {
  narrow: /^[lúubdkčcszřrlp]/i,
  abbreviated:
    /^(led|[úu]no|b[řr]e|dub|kv[ěe]|[čc]vn|[čc]vc|srp|z[áa][řr]|[řr][íi]j|lis|pro)/i,
  wide: /^(leden|ledna|[úu]nora?|b[řr]ezen|b[řr]ezna|duben|dubna|kv[ěe]ten|kv[ěe]tna|[čc]erven(ec|ce)?|[čc]ervna|srpen|srpna|z[áa][řr][íi]|[řr][íi]jen|[řr][íi]jna|listopad(a|u)?|prosinec|prosince)/i,
};
const router_cs_lib_match_parseMonthPatterns = {
  narrow: [
    /^l/i,
    /^[úu]/i,
    /^b/i,
    /^d/i,
    /^k/i,
    /^[čc]/i,
    /^[čc]/i,
    /^s/i,
    /^z/i,
    /^[řr]/i,
    /^l/i,
    /^p/i,
  ],

  any: [
    /^led/i,
    /^[úu]n/i,
    /^b[řr]e/i,
    /^dub/i,
    /^kv[ěe]/i,
    /^[čc]vn|[čc]erven(?!\w)|[čc]ervna/i,
    /^[čc]vc|[čc]erven(ec|ce)/i,
    /^srp/i,
    /^z[áa][řr]/i,
    /^[řr][íi]j/i,
    /^lis/i,
    /^pro/i,
  ],
};

const router_cs_lib_match_matchDayPatterns = {
  narrow: /^[npuúsčps]/i,
  short: /^(ne|po|[úu]t|st|[čc]t|p[áa]|so)/i,
  abbreviated: /^(ned|pon|[úu]te|st[rř]|[čc]tv|p[áa]t|sob)/i,
  wide: /^(ned[ěe]le|pond[ěe]l[íi]|[úu]ter[ýy]|st[řr]eda|[čc]tvrtek|p[áa]tek|sobota)/i,
};

const router_cs_lib_match_parseDayPatterns = {
  narrow: [/^n/i, /^p/i, /^[úu]/i, /^s/i, /^[čc]/i, /^p/i, /^s/i],
  any: [/^ne/i, /^po/i, /^[úu]t/i, /^st/i, /^[čc]t/i, /^p[áa]/i, /^so/i],
};

const router_cs_lib_match_matchDayPeriodPatterns = {
  any: /^dopoledne|dop\.?|odpoledne|odp\.?|p[ůu]lnoc|poledne|r[áa]no|odpoledne|ve[čc]er|(v )?noci?/i,
};
const router_cs_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^dop/i,
    pm: /^odp/i,
    midnight: /^p[ůu]lnoc/i,
    noon: /^poledne/i,
    morning: /r[áa]no/i,
    afternoon: /odpoledne/i,
    evening: /ve[čc]er/i,
    night: /noc/i,
  },
};

const router_cs_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_cs_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_cs_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_cs_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_cs_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_cs_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_cs_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_cs_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_cs_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_cs_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_cs_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_cs_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_cs_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/cs.mjs






/**
 * @category Locales
 * @summary Czech locale.
 * @language Czech
 * @iso-639-2 ces
 * @author David Rus [@davidrus](https://github.com/davidrus)
 * @author Pavel Hrách [@SilenY](https://github.com/SilenY)
 * @author Jozef Bíroš [@JozefBiros](https://github.com/JozefBiros)
 */
const router_cs = {
  code: "cs",
  formatDistance: router_cs_lib_formatDistance_formatDistance,
  formatLong: router_cs_lib_formatLong_formatLong,
  formatRelative: router_cs_lib_formatRelative_formatRelative,
  localize: router_cs_lib_localize_localize,
  match: router_cs_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_cs = ((/* unused pure expression or super */ null && (router_cs)));

;// ./node_modules/date-fns/locale/cy/_lib/formatDistance.mjs
const router_cy_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "llai na eiliad",
    other: "llai na {{count}} eiliad",
  },

  xSeconds: {
    one: "1 eiliad",
    other: "{{count}} eiliad",
  },

  halfAMinute: "hanner munud",

  lessThanXMinutes: {
    one: "llai na munud",
    two: "llai na 2 funud",
    other: "llai na {{count}} munud",
  },

  xMinutes: {
    one: "1 munud",
    two: "2 funud",
    other: "{{count}} munud",
  },

  aboutXHours: {
    one: "tua 1 awr",
    other: "tua {{count}} awr",
  },

  xHours: {
    one: "1 awr",
    other: "{{count}} awr",
  },

  xDays: {
    one: "1 diwrnod",
    two: "2 ddiwrnod",
    other: "{{count}} diwrnod",
  },

  aboutXWeeks: {
    one: "tua 1 wythnos",
    two: "tua pythefnos",
    other: "tua {{count}} wythnos",
  },

  xWeeks: {
    one: "1 wythnos",
    two: "pythefnos",
    other: "{{count}} wythnos",
  },

  aboutXMonths: {
    one: "tua 1 mis",
    two: "tua 2 fis",
    other: "tua {{count}} mis",
  },

  xMonths: {
    one: "1 mis",
    two: "2 fis",
    other: "{{count}} mis",
  },

  aboutXYears: {
    one: "tua 1 flwyddyn",
    two: "tua 2 flynedd",
    other: "tua {{count}} mlynedd",
  },

  xYears: {
    one: "1 flwyddyn",
    two: "2 flynedd",
    other: "{{count}} mlynedd",
  },

  overXYears: {
    one: "dros 1 flwyddyn",
    two: "dros 2 flynedd",
    other: "dros {{count}} mlynedd",
  },

  almostXYears: {
    one: "bron 1 flwyddyn",
    two: "bron 2 flynedd",
    other: "bron {{count}} mlynedd",
  },
};

const router_cy_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_cy_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 2 && !!tokenValue.two) {
    result = tokenValue.two;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "mewn " + result;
    } else {
      return result + " yn ôl";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/cy/_lib/formatLong.mjs


const router_cy_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "dd/MM/yyyy",
};

const router_cy_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_cy_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'am' {{time}}",
  long: "{{date}} 'am' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_cy_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_cy_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_cy_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_cy_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/cy/_lib/formatRelative.mjs
const router_cy_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'diwethaf am' p",
  yesterday: "'ddoe am' p",
  today: "'heddiw am' p",
  tomorrow: "'yfory am' p",
  nextWeek: "eeee 'am' p",
  other: "P",
};

const router_cy_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_cy_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/cy/_lib/localize.mjs


const router_cy_lib_localize_eraValues = {
  narrow: ["C", "O"],
  abbreviated: ["CC", "OC"],
  wide: ["Cyn Crist", "Ar ôl Crist"],
};

const router_cy_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Ch1", "Ch2", "Ch3", "Ch4"],
  wide: ["Chwarter 1af", "2ail chwarter", "3ydd chwarter", "4ydd chwarter"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_cy_lib_localize_monthValues = {
  narrow: ["I", "Ch", "Ma", "E", "Mi", "Me", "G", "A", "Md", "H", "T", "Rh"],

  abbreviated: [
    "Ion",
    "Chwe",
    "Maw",
    "Ebr",
    "Mai",
    "Meh",
    "Gor",
    "Aws",
    "Med",
    "Hyd",
    "Tach",
    "Rhag",
  ],

  wide: [
    "Ionawr",
    "Chwefror",
    "Mawrth",
    "Ebrill",
    "Mai",
    "Mehefin",
    "Gorffennaf",
    "Awst",
    "Medi",
    "Hydref",
    "Tachwedd",
    "Rhagfyr",
  ],
};

const router_cy_lib_localize_dayValues = {
  narrow: ["S", "Ll", "M", "M", "I", "G", "S"],
  short: ["Su", "Ll", "Ma", "Me", "Ia", "Gw", "Sa"],
  abbreviated: ["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"],
  wide: [
    "dydd Sul",
    "dydd Llun",
    "dydd Mawrth",
    "dydd Mercher",
    "dydd Iau",
    "dydd Gwener",
    "dydd Sadwrn",
  ],
};

const router_cy_lib_localize_dayPeriodValues = {
  narrow: {
    am: "b",
    pm: "h",
    midnight: "hn",
    noon: "hd",
    morning: "bore",
    afternoon: "prynhawn",
    evening: "gyda'r nos",
    night: "nos",
  },
  abbreviated: {
    am: "yb",
    pm: "yh",
    midnight: "hanner nos",
    noon: "hanner dydd",
    morning: "bore",
    afternoon: "prynhawn",
    evening: "gyda'r nos",
    night: "nos",
  },
  wide: {
    am: "y.b.",
    pm: "y.h.",
    midnight: "hanner nos",
    noon: "hanner dydd",
    morning: "bore",
    afternoon: "prynhawn",
    evening: "gyda'r nos",
    night: "nos",
  },
};

const router_cy_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "b",
    pm: "h",
    midnight: "hn",
    noon: "hd",
    morning: "yn y bore",
    afternoon: "yn y prynhawn",
    evening: "gyda'r nos",
    night: "yn y nos",
  },
  abbreviated: {
    am: "yb",
    pm: "yh",
    midnight: "hanner nos",
    noon: "hanner dydd",
    morning: "yn y bore",
    afternoon: "yn y prynhawn",
    evening: "gyda'r nos",
    night: "yn y nos",
  },
  wide: {
    am: "y.b.",
    pm: "y.h.",
    midnight: "hanner nos",
    noon: "hanner dydd",
    morning: "yn y bore",
    afternoon: "yn y prynhawn",
    evening: "gyda'r nos",
    night: "yn y nos",
  },
};

const router_cy_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  if (number < 20) {
    switch (number) {
      case 0:
        return number + "fed";
      case 1:
        return number + "af";
      case 2:
        return number + "ail";
      case 3:
      case 4:
        return number + "ydd";
      case 5:
      case 6:
        return number + "ed";
      case 7:
      case 8:
      case 9:
      case 10:
      case 12:
      case 15:
      case 18:
        return number + "fed";
      case 11:
      case 13:
      case 14:
      case 16:
      case 17:
      case 19:
        return number + "eg";
    }
  } else if ((number >= 50 && number <= 60) || number === 80 || number >= 100) {
    return number + "fed";
  }
  return number + "ain";
};

const router_cy_lib_localize_localize = {
  ordinalNumber: router_cy_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_cy_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_cy_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_cy_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_cy_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_cy_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_cy_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/cy/_lib/match.mjs



const router_cy_lib_match_matchOrdinalNumberPattern = /^(\d+)(af|ail|ydd|ed|fed|eg|ain)?/i;
const router_cy_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_cy_lib_match_matchEraPatterns = {
  narrow: /^(c|o)/i,
  abbreviated: /^(c\.?\s?c\.?|o\.?\s?c\.?)/i,
  wide: /^(cyn christ|ar ôl crist|ar ol crist)/i,
};
const router_cy_lib_match_parseEraPatterns = {
  wide: [/^c/i, /^(ar ôl crist|ar ol crist)/i],
  any: [/^c/i, /^o/i],
};

const router_cy_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^ch[1234]/i,
  wide: /^(chwarter 1af)|([234](ail|ydd)? chwarter)/i,
};
const router_cy_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_cy_lib_match_matchMonthPatterns = {
  narrow: /^(i|ch|m|e|g|a|h|t|rh)/i,
  abbreviated: /^(ion|chwe|maw|ebr|mai|meh|gor|aws|med|hyd|tach|rhag)/i,
  wide: /^(ionawr|chwefror|mawrth|ebrill|mai|mehefin|gorffennaf|awst|medi|hydref|tachwedd|rhagfyr)/i,
};
const router_cy_lib_match_parseMonthPatterns = {
  narrow: [
    /^i/i,
    /^ch/i,
    /^m/i,
    /^e/i,
    /^m/i,
    /^m/i,
    /^g/i,
    /^a/i,
    /^m/i,
    /^h/i,
    /^t/i,
    /^rh/i,
  ],

  any: [
    /^io/i,
    /^ch/i,
    /^maw/i,
    /^e/i,
    /^mai/i,
    /^meh/i,
    /^g/i,
    /^a/i,
    /^med/i,
    /^h/i,
    /^t/i,
    /^rh/i,
  ],
};

const router_cy_lib_match_matchDayPatterns = {
  narrow: /^(s|ll|m|i|g)/i,
  short: /^(su|ll|ma|me|ia|gw|sa)/i,
  abbreviated: /^(sul|llun|maw|mer|iau|gwe|sad)/i,
  wide: /^dydd (sul|llun|mawrth|mercher|iau|gwener|sadwrn)/i,
};
const router_cy_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^ll/i, /^m/i, /^m/i, /^i/i, /^g/i, /^s/i],
  wide: [
    /^dydd su/i,
    /^dydd ll/i,
    /^dydd ma/i,
    /^dydd me/i,
    /^dydd i/i,
    /^dydd g/i,
    /^dydd sa/i,
  ],

  any: [/^su/i, /^ll/i, /^ma/i, /^me/i, /^i/i, /^g/i, /^sa/i],
};

const router_cy_lib_match_matchDayPeriodPatterns = {
  narrow: /^(b|h|hn|hd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,
  any: /^(y\.?\s?[bh]\.?|hanner nos|hanner dydd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,
};
const router_cy_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^b|(y\.?\s?b\.?)/i,
    pm: /^h|(y\.?\s?h\.?)|(yr hwyr)/i,
    midnight: /^hn|hanner nos/i,
    noon: /^hd|hanner dydd/i,
    morning: /bore/i,
    afternoon: /prynhawn/i,
    evening: /^gyda'r nos$/i,
    night: /blah/i,
  },
};

const router_cy_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_cy_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_cy_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_cy_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_cy_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_cy_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_cy_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_cy_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_cy_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_cy_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_cy_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_cy_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_cy_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/cy.mjs






/**
 * @category Locales
 * @summary Welsh locale.
 * @language Welsh
 * @iso-639-2 cym
 * @author Elwyn Malethan [@elmomalmo](https://github.com/elmomalmo)
 */
const router_cy = {
  code: "cy",
  formatDistance: router_cy_lib_formatDistance_formatDistance,
  formatLong: router_cy_lib_formatLong_formatLong,
  formatRelative: router_cy_lib_formatRelative_formatRelative,
  localize: router_cy_lib_localize_localize,
  match: router_cy_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_cy = ((/* unused pure expression or super */ null && (router_cy)));

;// ./node_modules/date-fns/locale/da/_lib/formatDistance.mjs
const router_da_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "mindre end ét sekund",
    other: "mindre end {{count}} sekunder",
  },

  xSeconds: {
    one: "1 sekund",
    other: "{{count}} sekunder",
  },

  halfAMinute: "ét halvt minut",

  lessThanXMinutes: {
    one: "mindre end ét minut",
    other: "mindre end {{count}} minutter",
  },

  xMinutes: {
    one: "1 minut",
    other: "{{count}} minutter",
  },

  aboutXHours: {
    one: "cirka 1 time",
    other: "cirka {{count}} timer",
  },

  xHours: {
    one: "1 time",
    other: "{{count}} timer",
  },

  xDays: {
    one: "1 dag",
    other: "{{count}} dage",
  },

  aboutXWeeks: {
    one: "cirka 1 uge",
    other: "cirka {{count}} uger",
  },

  xWeeks: {
    one: "1 uge",
    other: "{{count}} uger",
  },

  aboutXMonths: {
    one: "cirka 1 måned",
    other: "cirka {{count}} måneder",
  },

  xMonths: {
    one: "1 måned",
    other: "{{count}} måneder",
  },

  aboutXYears: {
    one: "cirka 1 år",
    other: "cirka {{count}} år",
  },

  xYears: {
    one: "1 år",
    other: "{{count}} år",
  },

  overXYears: {
    one: "over 1 år",
    other: "over {{count}} år",
  },

  almostXYears: {
    one: "næsten 1 år",
    other: "næsten {{count}} år",
  },
};

const router_da_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_da_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "om " + result;
    } else {
      return result + " siden";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/da/_lib/formatLong.mjs


const router_da_lib_formatLong_dateFormats = {
  full: "EEEE 'den' d. MMMM y",
  long: "d. MMMM y",
  medium: "d. MMM y",
  short: "dd/MM/y",
};

const router_da_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_da_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'kl'. {{time}}",
  long: "{{date}} 'kl'. {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_da_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_da_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_da_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_da_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/da/_lib/formatRelative.mjs
const router_da_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'sidste' eeee 'kl.' p",
  yesterday: "'i går kl.' p",
  today: "'i dag kl.' p",
  tomorrow: "'i morgen kl.' p",
  nextWeek: "'på' eeee 'kl.' p",
  other: "P",
};

const router_da_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_da_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/da/_lib/localize.mjs


const router_da_lib_localize_eraValues = {
  narrow: ["fvt", "vt"],
  abbreviated: ["f.v.t.", "v.t."],
  wide: ["før vesterlandsk tidsregning", "vesterlandsk tidsregning"],
};

const router_da_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1. kvt.", "2. kvt.", "3. kvt.", "4. kvt."],
  wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
};

const router_da_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "jan.",
    "feb.",
    "mar.",
    "apr.",
    "maj",
    "jun.",
    "jul.",
    "aug.",
    "sep.",
    "okt.",
    "nov.",
    "dec.",
  ],

  wide: [
    "januar",
    "februar",
    "marts",
    "april",
    "maj",
    "juni",
    "juli",
    "august",
    "september",
    "oktober",
    "november",
    "december",
  ],
};

// Note that 'Days - abbreviated - Formatting' has periods at the end.
// https://www.unicode.org/cldr/charts/32/summary/da.html#1760
// This makes grammatical sense in danish, as most abbreviations have periods.
const router_da_lib_localize_dayValues = {
  narrow: ["S", "M", "T", "O", "T", "F", "L"],
  short: ["sø", "ma", "ti", "on", "to", "fr", "lø"],
  abbreviated: ["søn.", "man.", "tir.", "ons.", "tor.", "fre.", "lør."],

  wide: [
    "søndag",
    "mandag",
    "tirsdag",
    "onsdag",
    "torsdag",
    "fredag",
    "lørdag",
  ],
};

const router_da_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "midnat",
    noon: "middag",
    morning: "morgen",
    afternoon: "eftermiddag",
    evening: "aften",
    night: "nat",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnat",
    noon: "middag",
    morning: "morgen",
    afternoon: "eftermiddag",
    evening: "aften",
    night: "nat",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnat",
    noon: "middag",
    morning: "morgen",
    afternoon: "eftermiddag",
    evening: "aften",
    night: "nat",
  },
};

const router_da_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "midnat",
    noon: "middag",
    morning: "om morgenen",
    afternoon: "om eftermiddagen",
    evening: "om aftenen",
    night: "om natten",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnat",
    noon: "middag",
    morning: "om morgenen",
    afternoon: "om eftermiddagen",
    evening: "om aftenen",
    night: "om natten",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnat",
    noon: "middag",
    morning: "om morgenen",
    afternoon: "om eftermiddagen",
    evening: "om aftenen",
    night: "om natten",
  },
};

const router_da_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_da_lib_localize_localize = {
  ordinalNumber: router_da_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_da_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_da_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_da_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_da_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_da_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_da_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/da/_lib/match.mjs



const router_da_lib_match_matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
const router_da_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_da_lib_match_matchEraPatterns = {
  narrow: /^(fKr|fvt|eKr|vt)/i,
  abbreviated: /^(f\.Kr\.?|f\.v\.t\.?|e\.Kr\.?|v\.t\.)/i,
  wide: /^(f.Kr.|før vesterlandsk tidsregning|e.Kr.|vesterlandsk tidsregning)/i,
};
const router_da_lib_match_parseEraPatterns = {
  any: [/^f/i, /^(v|e)/i],
};

const router_da_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]. kvt\./i,
  wide: /^[1234]\.? kvartal/i,
};
const router_da_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_da_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan.|feb.|mar.|apr.|maj|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
  wide: /^(januar|februar|marts|april|maj|juni|juli|august|september|oktober|november|december)/i,
};
const router_da_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^maj/i,
    /^jun/i,
    /^jul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_da_lib_match_matchDayPatterns = {
  narrow: /^[smtofl]/i,
  short: /^(søn.|man.|tir.|ons.|tor.|fre.|lør.)/i,
  abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i,
  wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i,
};
const router_da_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^o/i, /^t/i, /^f/i, /^l/i],
  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],
};

const router_da_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,
  any: /^([ap]\.?\s?m\.?|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,
};
const router_da_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /midnat/i,
    noon: /middag/i,
    morning: /morgen/i,
    afternoon: /eftermiddag/i,
    evening: /aften/i,
    night: /nat/i,
  },
};

const router_da_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_da_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_da_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_da_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_da_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_da_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_da_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_da_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_da_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_da_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_da_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_da_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_da_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/da.mjs






/**
 * @category Locales
 * @summary Danish locale.
 * @language Danish
 * @iso-639-2 dan
 * @author Mathias Wøbbe [@MathiasKandelborg](https://github.com/MathiasKandelborg)
 * @author Anders B. Hansen [@Andersbiha](https://github.com/Andersbiha)
 * @author [@kgram](https://github.com/kgram)
 * @author [@stefanbugge](https://github.com/stefanbugge)
 */
const router_da = {
  code: "da",
  formatDistance: router_da_lib_formatDistance_formatDistance,
  formatLong: router_da_lib_formatLong_formatLong,
  formatRelative: router_da_lib_formatRelative_formatRelative,
  localize: router_da_lib_localize_localize,
  match: router_da_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_da = ((/* unused pure expression or super */ null && (router_da)));

;// ./node_modules/date-fns/locale/de/_lib/formatDistance.mjs
const router_de_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    standalone: {
      one: "weniger als 1 Sekunde",
      other: "weniger als {{count}} Sekunden",
    },
    withPreposition: {
      one: "weniger als 1 Sekunde",
      other: "weniger als {{count}} Sekunden",
    },
  },

  xSeconds: {
    standalone: {
      one: "1 Sekunde",
      other: "{{count}} Sekunden",
    },
    withPreposition: {
      one: "1 Sekunde",
      other: "{{count}} Sekunden",
    },
  },

  halfAMinute: {
    standalone: "eine halbe Minute",
    withPreposition: "einer halben Minute",
  },

  lessThanXMinutes: {
    standalone: {
      one: "weniger als 1 Minute",
      other: "weniger als {{count}} Minuten",
    },
    withPreposition: {
      one: "weniger als 1 Minute",
      other: "weniger als {{count}} Minuten",
    },
  },

  xMinutes: {
    standalone: {
      one: "1 Minute",
      other: "{{count}} Minuten",
    },
    withPreposition: {
      one: "1 Minute",
      other: "{{count}} Minuten",
    },
  },

  aboutXHours: {
    standalone: {
      one: "etwa 1 Stunde",
      other: "etwa {{count}} Stunden",
    },
    withPreposition: {
      one: "etwa 1 Stunde",
      other: "etwa {{count}} Stunden",
    },
  },

  xHours: {
    standalone: {
      one: "1 Stunde",
      other: "{{count}} Stunden",
    },
    withPreposition: {
      one: "1 Stunde",
      other: "{{count}} Stunden",
    },
  },

  xDays: {
    standalone: {
      one: "1 Tag",
      other: "{{count}} Tage",
    },
    withPreposition: {
      one: "1 Tag",
      other: "{{count}} Tagen",
    },
  },

  aboutXWeeks: {
    standalone: {
      one: "etwa 1 Woche",
      other: "etwa {{count}} Wochen",
    },
    withPreposition: {
      one: "etwa 1 Woche",
      other: "etwa {{count}} Wochen",
    },
  },

  xWeeks: {
    standalone: {
      one: "1 Woche",
      other: "{{count}} Wochen",
    },
    withPreposition: {
      one: "1 Woche",
      other: "{{count}} Wochen",
    },
  },

  aboutXMonths: {
    standalone: {
      one: "etwa 1 Monat",
      other: "etwa {{count}} Monate",
    },
    withPreposition: {
      one: "etwa 1 Monat",
      other: "etwa {{count}} Monaten",
    },
  },

  xMonths: {
    standalone: {
      one: "1 Monat",
      other: "{{count}} Monate",
    },
    withPreposition: {
      one: "1 Monat",
      other: "{{count}} Monaten",
    },
  },

  aboutXYears: {
    standalone: {
      one: "etwa 1 Jahr",
      other: "etwa {{count}} Jahre",
    },
    withPreposition: {
      one: "etwa 1 Jahr",
      other: "etwa {{count}} Jahren",
    },
  },

  xYears: {
    standalone: {
      one: "1 Jahr",
      other: "{{count}} Jahre",
    },
    withPreposition: {
      one: "1 Jahr",
      other: "{{count}} Jahren",
    },
  },

  overXYears: {
    standalone: {
      one: "mehr als 1 Jahr",
      other: "mehr als {{count}} Jahre",
    },
    withPreposition: {
      one: "mehr als 1 Jahr",
      other: "mehr als {{count}} Jahren",
    },
  },

  almostXYears: {
    standalone: {
      one: "fast 1 Jahr",
      other: "fast {{count}} Jahre",
    },
    withPreposition: {
      one: "fast 1 Jahr",
      other: "fast {{count}} Jahren",
    },
  },
};

const router_de_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = options?.addSuffix
    ? router_de_lib_formatDistance_formatDistanceLocale[token].withPreposition
    : router_de_lib_formatDistance_formatDistanceLocale[token].standalone;
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return "vor " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/de/_lib/formatLong.mjs


// DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008
const router_de_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM y", // Montag, 7. Januar 2018
  long: "do MMMM y", // 7. Januar 2018
  medium: "do MMM y", // 7. Jan. 2018
  short: "dd.MM.y", // 07.01.2018
};

const router_de_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_de_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'um' {{time}}",
  long: "{{date}} 'um' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_de_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_de_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_de_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_de_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/de/_lib/formatRelative.mjs
const router_de_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'letzten' eeee 'um' p",
  yesterday: "'gestern um' p",
  today: "'heute um' p",
  tomorrow: "'morgen um' p",
  nextWeek: "eeee 'um' p",
  other: "P",
};

const router_de_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_de_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/de/_lib/localize.mjs


const router_de_lib_localize_eraValues = {
  narrow: ["v.Chr.", "n.Chr."],
  abbreviated: ["v.Chr.", "n.Chr."],
  wide: ["vor Christus", "nach Christus"],
};

const router_de_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"],
};

// Note: in German, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_de_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mär",
    "Apr",
    "Mai",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Okt",
    "Nov",
    "Dez",
  ],

  wide: [
    "Januar",
    "Februar",
    "März",
    "April",
    "Mai",
    "Juni",
    "Juli",
    "August",
    "September",
    "Oktober",
    "November",
    "Dezember",
  ],
};

// https://st.unicode.org/cldr-apps/v#/de/Gregorian/
const router_de_lib_localize_formattingMonthValues = {
  narrow: router_de_lib_localize_monthValues.narrow,
  abbreviated: [
    "Jan.",
    "Feb.",
    "März",
    "Apr.",
    "Mai",
    "Juni",
    "Juli",
    "Aug.",
    "Sep.",
    "Okt.",
    "Nov.",
    "Dez.",
  ],

  wide: router_de_lib_localize_monthValues.wide,
};

const router_de_lib_localize_dayValues = {
  narrow: ["S", "M", "D", "M", "D", "F", "S"],
  short: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
  abbreviated: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."],
  wide: [
    "Sonntag",
    "Montag",
    "Dienstag",
    "Mittwoch",
    "Donnerstag",
    "Freitag",
    "Samstag",
  ],
};

// https://www.unicode.org/cldr/charts/32/summary/de.html#1881
const router_de_lib_localize_dayPeriodValues = {
  narrow: {
    am: "vm.",
    pm: "nm.",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "Morgen",
    afternoon: "Nachm.",
    evening: "Abend",
    night: "Nacht",
  },
  abbreviated: {
    am: "vorm.",
    pm: "nachm.",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "Morgen",
    afternoon: "Nachmittag",
    evening: "Abend",
    night: "Nacht",
  },
  wide: {
    am: "vormittags",
    pm: "nachmittags",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "Morgen",
    afternoon: "Nachmittag",
    evening: "Abend",
    night: "Nacht",
  },
};
const router_de_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "vm.",
    pm: "nm.",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "morgens",
    afternoon: "nachm.",
    evening: "abends",
    night: "nachts",
  },
  abbreviated: {
    am: "vorm.",
    pm: "nachm.",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "morgens",
    afternoon: "nachmittags",
    evening: "abends",
    night: "nachts",
  },
  wide: {
    am: "vormittags",
    pm: "nachmittags",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "morgens",
    afternoon: "nachmittags",
    evening: "abends",
    night: "nachts",
  },
};

const router_de_lib_localize_ordinalNumber = (dirtyNumber) => {
  const number = Number(dirtyNumber);

  return number + ".";
};

const router_de_lib_localize_localize = {
  ordinalNumber: router_de_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_de_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_de_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_de_lib_localize_monthValues,
    formattingValues: router_de_lib_localize_formattingMonthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_de_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_de_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_de_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/de/_lib/match.mjs



const router_de_lib_match_matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
const router_de_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_de_lib_match_matchEraPatterns = {
  narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
  abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
  wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i,
};
const router_de_lib_match_parseEraPatterns = {
  any: [/^v/i, /^n/i],
};

const router_de_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](\.)? Quartal/i,
};
const router_de_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_de_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated:
    /^(j[aä]n|feb|mär[z]?|apr|mai|jun[i]?|jul[i]?|aug|sep|okt|nov|dez)\.?/i,
  wide: /^(januar|februar|märz|april|mai|juni|juli|august|september|oktober|november|dezember)/i,
};
const router_de_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^j[aä]/i,
    /^f/i,
    /^mär/i,
    /^ap/i,
    /^mai/i,
    /^jun/i,
    /^jul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_de_lib_match_matchDayPatterns = {
  narrow: /^[smdmf]/i,
  short: /^(so|mo|di|mi|do|fr|sa)/i,
  abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\.?/i,
  wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i,
};
const router_de_lib_match_parseDayPatterns = {
  any: [/^so/i, /^mo/i, /^di/i, /^mi/i, /^do/i, /^f/i, /^sa/i],
};

const router_de_lib_match_matchDayPeriodPatterns = {
  narrow: /^(vm\.?|nm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,
  abbreviated:
    /^(vorm\.?|nachm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,
  wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i,
};
const router_de_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^v/i,
    pm: /^n/i,
    midnight: /^Mitte/i,
    noon: /^Mitta/i,
    morning: /morgens/i,
    afternoon: /nachmittags/i, // will never be matched. Afternoon is matched by `pm`
    evening: /abends/i,
    night: /nachts/i, // will never be matched. Night is matched by `pm`
  },
};

const router_de_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_de_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_de_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_de_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_de_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_de_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_de_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_de_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_de_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_de_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_de_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_de_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_de_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/de.mjs






/**
 * @category Locales
 * @summary German locale.
 * @language German
 * @iso-639-2 deu
 * @author Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu)
 * @author Asia [@asia-t](https://github.com/asia-t)
 * @author Van Vuong Ngo [@vanvuongngo](https://github.com/vanvuongngo)
 * @author RomanErnst [@pex](https://github.com/pex)
 * @author Philipp Keck [@Philipp91](https://github.com/Philipp91)
 */
const router_de = {
  code: "de",
  formatDistance: router_de_lib_formatDistance_formatDistance,
  formatLong: router_de_lib_formatLong_formatLong,
  formatRelative: router_de_lib_formatRelative_formatRelative,
  localize: router_de_lib_localize_localize,
  match: router_de_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_de = ((/* unused pure expression or super */ null && (router_de)));

;// ./node_modules/date-fns/locale/de-AT/_lib/localize.mjs


const router_de_AT_lib_localize_eraValues = {
  narrow: ["v.Chr.", "n.Chr."],
  abbreviated: ["v.Chr.", "n.Chr."],
  wide: ["vor Christus", "nach Christus"],
};

const router_de_AT_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"],
};

// Note: in German, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_de_AT_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jän",
    "Feb",
    "Mär",
    "Apr",
    "Mai",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Okt",
    "Nov",
    "Dez",
  ],

  wide: [
    "Jänner",
    "Februar",
    "März",
    "April",
    "Mai",
    "Juni",
    "Juli",
    "August",
    "September",
    "Oktober",
    "November",
    "Dezember",
  ],
};

// https://st.unicode.org/cldr-apps/v#/de_AT/Gregorian/
const router_de_AT_lib_localize_formattingMonthValues = {
  narrow: router_de_AT_lib_localize_monthValues.narrow,
  abbreviated: [
    "Jän.",
    "Feb.",
    "März",
    "Apr.",
    "Mai",
    "Juni",
    "Juli",
    "Aug.",
    "Sep.",
    "Okt.",
    "Nov.",
    "Dez.",
  ],

  wide: router_de_AT_lib_localize_monthValues.wide,
};

const router_de_AT_lib_localize_dayValues = {
  narrow: ["S", "M", "D", "M", "D", "F", "S"],
  short: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
  abbreviated: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."],
  wide: [
    "Sonntag",
    "Montag",
    "Dienstag",
    "Mittwoch",
    "Donnerstag",
    "Freitag",
    "Samstag",
  ],
};

// https://www.unicode.org/cldr/charts/32/summary/de.html#1881
const router_de_AT_lib_localize_dayPeriodValues = {
  narrow: {
    am: "vm.",
    pm: "nm.",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "Morgen",
    afternoon: "Nachm.",
    evening: "Abend",
    night: "Nacht",
  },
  abbreviated: {
    am: "vorm.",
    pm: "nachm.",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "Morgen",
    afternoon: "Nachmittag",
    evening: "Abend",
    night: "Nacht",
  },
  wide: {
    am: "vormittags",
    pm: "nachmittags",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "Morgen",
    afternoon: "Nachmittag",
    evening: "Abend",
    night: "Nacht",
  },
};
const router_de_AT_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "vm.",
    pm: "nm.",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "morgens",
    afternoon: "nachm.",
    evening: "abends",
    night: "nachts",
  },
  abbreviated: {
    am: "vorm.",
    pm: "nachm.",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "morgens",
    afternoon: "nachmittags",
    evening: "abends",
    night: "nachts",
  },
  wide: {
    am: "vormittags",
    pm: "nachmittags",
    midnight: "Mitternacht",
    noon: "Mittag",
    morning: "morgens",
    afternoon: "nachmittags",
    evening: "abends",
    night: "nachts",
  },
};

const router_de_AT_lib_localize_ordinalNumber = (dirtyNumber) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_de_AT_lib_localize_localize = {
  ordinalNumber: router_de_AT_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_de_AT_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_de_AT_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_de_AT_lib_localize_monthValues,
    formattingValues: router_de_AT_lib_localize_formattingMonthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_de_AT_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_de_AT_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_de_AT_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/de-AT.mjs





// difference to 'de' locale


/**
 * @category Locales
 * @summary German locale (Austria).
 * @language German
 * @iso-639-2 deu
 * @author Christoph Tobias Stenglein [@cstenglein](https://github.com/cstenglein)
 */
const router_deAT = {
  code: "de-AT",
  formatDistance: router_de_lib_formatDistance_formatDistance,
  formatLong: router_de_lib_formatLong_formatLong,
  formatRelative: router_de_lib_formatRelative_formatRelative,
  localize: router_de_AT_lib_localize_localize,
  match: router_de_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_de_AT = ((/* unused pure expression or super */ null && (router_deAT)));

;// ./node_modules/date-fns/locale/el/_lib/formatDistance.mjs
const router_el_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "λιγότερο από ένα δευτερόλεπτο",
    other: "λιγότερο από {{count}} δευτερόλεπτα",
  },

  xSeconds: {
    one: "1 δευτερόλεπτο",
    other: "{{count}} δευτερόλεπτα",
  },

  halfAMinute: "μισό λεπτό",

  lessThanXMinutes: {
    one: "λιγότερο από ένα λεπτό",
    other: "λιγότερο από {{count}} λεπτά",
  },

  xMinutes: {
    one: "1 λεπτό",
    other: "{{count}} λεπτά",
  },

  aboutXHours: {
    one: "περίπου 1 ώρα",
    other: "περίπου {{count}} ώρες",
  },

  xHours: {
    one: "1 ώρα",
    other: "{{count}} ώρες",
  },

  xDays: {
    one: "1 ημέρα",
    other: "{{count}} ημέρες",
  },

  aboutXWeeks: {
    one: "περίπου 1 εβδομάδα",
    other: "περίπου {{count}} εβδομάδες",
  },

  xWeeks: {
    one: "1 εβδομάδα",
    other: "{{count}} εβδομάδες",
  },

  aboutXMonths: {
    one: "περίπου 1 μήνας",
    other: "περίπου {{count}} μήνες",
  },

  xMonths: {
    one: "1 μήνας",
    other: "{{count}} μήνες",
  },

  aboutXYears: {
    one: "περίπου 1 χρόνο",
    other: "περίπου {{count}} χρόνια",
  },

  xYears: {
    one: "1 χρόνο",
    other: "{{count}} χρόνια",
  },

  overXYears: {
    one: "πάνω από 1 χρόνο",
    other: "πάνω από {{count}} χρόνια",
  },

  almostXYears: {
    one: "περίπου 1 χρόνο",
    other: "περίπου {{count}} χρόνια",
  },
};

const router_el_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_el_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "σε " + result;
    } else {
      return result + " πριν";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/el/_lib/formatLong.mjs


const router_el_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "d/M/yy",
};

const router_el_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_el_lib_formatLong_dateTimeFormats = {
  full: "{{date}} - {{time}}",
  long: "{{date}} - {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_el_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_el_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_el_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_el_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/el/_lib/formatRelative.mjs
const router_el_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    switch (date.getDay()) {
      case 6: //Σάββατο
        return "'το προηγούμενο' eeee 'στις' p";
      default:
        return "'την προηγούμενη' eeee 'στις' p";
    }
  },
  yesterday: "'χθες στις' p",
  today: "'σήμερα στις' p",
  tomorrow: "'αύριο στις' p",
  nextWeek: "eeee 'στις' p",
  other: "P",
};

const router_el_lib_formatRelative_formatRelative = (token, date) => {
  const format = router_el_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") return format(date);

  return format;
};

;// ./node_modules/date-fns/locale/el/_lib/localize.mjs


const router_el_lib_localize_eraValues = {
  narrow: ["πΧ", "μΧ"],
  abbreviated: ["π.Χ.", "μ.Χ."],
  wide: ["προ Χριστού", "μετά Χριστόν"],
};

const router_el_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Τ1", "Τ2", "Τ3", "Τ4"],
  wide: ["1ο τρίμηνο", "2ο τρίμηνο", "3ο τρίμηνο", "4ο τρίμηνο"],
};

const router_el_lib_localize_monthValues = {
  narrow: ["Ι", "Φ", "Μ", "Α", "Μ", "Ι", "Ι", "Α", "Σ", "Ο", "Ν", "Δ"],
  abbreviated: [
    "Ιαν",
    "Φεβ",
    "Μάρ",
    "Απρ",
    "Μάι",
    "Ιούν",
    "Ιούλ",
    "Αύγ",
    "Σεπ",
    "Οκτ",
    "Νοέ",
    "Δεκ",
  ],

  wide: [
    "Ιανουάριος",
    "Φεβρουάριος",
    "Μάρτιος",
    "Απρίλιος",
    "Μάιος",
    "Ιούνιος",
    "Ιούλιος",
    "Αύγουστος",
    "Σεπτέμβριος",
    "Οκτώβριος",
    "Νοέμβριος",
    "Δεκέμβριος",
  ],
};

const router_el_lib_localize_formattingMonthValues = {
  narrow: ["Ι", "Φ", "Μ", "Α", "Μ", "Ι", "Ι", "Α", "Σ", "Ο", "Ν", "Δ"],
  abbreviated: [
    "Ιαν",
    "Φεβ",
    "Μαρ",
    "Απρ",
    "Μαΐ",
    "Ιουν",
    "Ιουλ",
    "Αυγ",
    "Σεπ",
    "Οκτ",
    "Νοε",
    "Δεκ",
  ],

  wide: [
    "Ιανουαρίου",
    "Φεβρουαρίου",
    "Μαρτίου",
    "Απριλίου",
    "Μαΐου",
    "Ιουνίου",
    "Ιουλίου",
    "Αυγούστου",
    "Σεπτεμβρίου",
    "Οκτωβρίου",
    "Νοεμβρίου",
    "Δεκεμβρίου",
  ],
};

const router_el_lib_localize_dayValues = {
  narrow: ["Κ", "Δ", "T", "Τ", "Π", "Π", "Σ"],
  short: ["Κυ", "Δε", "Τρ", "Τε", "Πέ", "Πα", "Σά"],
  abbreviated: ["Κυρ", "Δευ", "Τρί", "Τετ", "Πέμ", "Παρ", "Σάβ"],
  wide: [
    "Κυριακή",
    "Δευτέρα",
    "Τρίτη",
    "Τετάρτη",
    "Πέμπτη",
    "Παρασκευή",
    "Σάββατο",
  ],
};

const router_el_lib_localize_dayPeriodValues = {
  narrow: {
    am: "πμ",
    pm: "μμ",
    midnight: "μεσάνυχτα",
    noon: "μεσημέρι",
    morning: "πρωί",
    afternoon: "απόγευμα",
    evening: "βράδυ",
    night: "νύχτα",
  },
  abbreviated: {
    am: "π.μ.",
    pm: "μ.μ.",
    midnight: "μεσάνυχτα",
    noon: "μεσημέρι",
    morning: "πρωί",
    afternoon: "απόγευμα",
    evening: "βράδυ",
    night: "νύχτα",
  },
  wide: {
    am: "π.μ.",
    pm: "μ.μ.",
    midnight: "μεσάνυχτα",
    noon: "μεσημέρι",
    morning: "πρωί",
    afternoon: "απόγευμα",
    evening: "βράδυ",
    night: "νύχτα",
  },
};

const router_el_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = options?.unit;
  let suffix;

  if (unit === "year" || unit === "month") {
    suffix = "ος";
  } else if (
    unit === "week" ||
    unit === "dayOfYear" ||
    unit === "day" ||
    unit === "hour" ||
    unit === "date"
  ) {
    suffix = "η";
  } else {
    suffix = "ο";
  }

  return number + suffix;
};

const router_el_lib_localize_localize = {
  ordinalNumber: router_el_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_el_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_el_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_el_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_el_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_el_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_el_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/el/_lib/match.mjs



const router_el_lib_match_matchOrdinalNumberPattern = /^(\d+)(ος|η|ο)?/i;
const router_el_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_el_lib_match_matchEraPatterns = {
  narrow: /^(πΧ|μΧ)/i,
  abbreviated: /^(π\.?\s?χ\.?|π\.?\s?κ\.?\s?χ\.?|μ\.?\s?χ\.?|κ\.?\s?χ\.?)/i,
  wide: /^(προ Χριστο(ύ|υ)|πριν απ(ό|ο) την Κοιν(ή|η) Χρονολογ(ί|ι)α|μετ(ά|α) Χριστ(ό|ο)ν|Κοιν(ή|η) Χρονολογ(ί|ι)α)/i,
};
const router_el_lib_match_parseEraPatterns = {
  any: [/^π/i, /^(μ|κ)/i],
};

const router_el_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^τ[1234]/i,
  wide: /^[1234]ο? τρ(ί|ι)μηνο/i,
};
const router_el_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_el_lib_match_matchMonthPatterns = {
  narrow: /^[ιφμαμιιασονδ]/i,
  abbreviated:
    /^(ιαν|φεβ|μ[άα]ρ|απρ|μ[άα][ιΐ]|ιο[ύυ]ν|ιο[ύυ]λ|α[ύυ]γ|σεπ|οκτ|νο[έε]|δεκ)/i,
  wide: /^(μ[άα][ιΐ]|α[ύυ]γο[υύ]στ)(ος|ου)|(ιανου[άα]ρ|φεβρου[άα]ρ|μ[άα]ρτ|απρ[ίι]λ|ιο[ύυ]ν|ιο[ύυ]λ|σεπτ[έε]μβρ|οκτ[ώω]βρ|νο[έε]μβρ|δεκ[έε]μβρ)(ιος|ίου)/i,
};
const router_el_lib_match_parseMonthPatterns = {
  narrow: [
    /^ι/i,
    /^φ/i,
    /^μ/i,
    /^α/i,
    /^μ/i,
    /^ι/i,
    /^ι/i,
    /^α/i,
    /^σ/i,
    /^ο/i,
    /^ν/i,
    /^δ/i,
  ],

  any: [
    /^ια/i,
    /^φ/i,
    /^μ[άα]ρ/i,
    /^απ/i,
    /^μ[άα][ιΐ]/i,
    /^ιο[ύυ]ν/i,
    /^ιο[ύυ]λ/i,
    /^α[ύυ]/i,
    /^σ/i,
    /^ο/i,
    /^ν/i,
    /^δ/i,
  ],
};

const router_el_lib_match_matchDayPatterns = {
  narrow: /^[κδτπσ]/i,
  short: /^(κυ|δε|τρ|τε|π[εέ]|π[αά]|σ[αά])/i,
  abbreviated: /^(κυρ|δευ|τρι|τετ|πεμ|παρ|σαβ)/i,
  wide: /^(κυριακ(ή|η)|δευτ(έ|ε)ρα|τρ(ί|ι)τη|τετ(ά|α)ρτη|π(έ|ε)μπτη|παρασκευ(ή|η)|σ(ά|α)ββατο)/i,
};
const router_el_lib_match_parseDayPatterns = {
  narrow: [/^κ/i, /^δ/i, /^τ/i, /^τ/i, /^π/i, /^π/i, /^σ/i],
  any: [/^κ/i, /^δ/i, /^τρ/i, /^τε/i, /^π[εέ]/i, /^π[αά]/i, /^σ/i],
};

const router_el_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(πμ|μμ|μεσ(ά|α)νυχτα|μεσημ(έ|ε)ρι|πρω(ί|ι)|απ(ό|ο)γευμα|βρ(ά|α)δυ|ν(ύ|υ)χτα)/i,
  any: /^([πμ]\.?\s?μ\.?|μεσ(ά|α)νυχτα|μεσημ(έ|ε)ρι|πρω(ί|ι)|απ(ό|ο)γευμα|βρ(ά|α)δυ|ν(ύ|υ)χτα)/i,
};
const router_el_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^πμ|π\.\s?μ\./i,
    pm: /^μμ|μ\.\s?μ\./i,
    midnight: /^μεσάν/i,
    noon: /^μεσημ(έ|ε)/i,
    morning: /πρω(ί|ι)/i,
    afternoon: /απ(ό|ο)γευμα/i,
    evening: /βρ(ά|α)δυ/i,
    night: /ν(ύ|υ)χτα/i,
  },
};

const router_el_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_el_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_el_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_el_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_el_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_el_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_el_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_el_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_el_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_el_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_el_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_el_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_el_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/el.mjs






/**
 * @category Locales
 * @summary Greek locale.
 * @language Greek
 * @iso-639-2 ell
 * @author Fanis Katsimpas [@fanixk](https://github.com/fanixk)
 * @author Theodoros Orfanidis [@teoulas](https://github.com/teoulas)
 */
const router_el = {
  code: "el",
  formatDistance: router_el_lib_formatDistance_formatDistance,
  formatLong: router_el_lib_formatLong_formatLong,
  formatRelative: router_el_lib_formatRelative_formatRelative,
  localize: router_el_lib_localize_localize,
  match: router_el_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_el = ((/* unused pure expression or super */ null && (router_el)));

;// ./node_modules/date-fns/locale/en-AU/_lib/formatLong.mjs


const router_en_AU_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "dd/MM/yyyy",
};

const router_en_AU_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_en_AU_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_en_AU_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_en_AU_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_en_AU_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_en_AU_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/en-AU.mjs






/**
 * @category Locales
 * @summary English locale (Australia).
 * @language English
 * @iso-639-2 eng
 * @author Julien Malige [@JulienMalige](https://github.com/JulienMalige)
 */
const router_enAU = {
  code: "en-AU",
  formatDistance: router_formatDistance,
  formatLong: router_en_AU_lib_formatLong_formatLong,
  formatRelative: router_formatRelative,
  localize: router_localize,
  match: router_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_en_AU = ((/* unused pure expression or super */ null && (router_enAU)));

;// ./node_modules/date-fns/locale/en-CA/_lib/formatDistance.mjs
const router_en_CA_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds",
  },

  xSeconds: {
    one: "a second",
    other: "{{count}} seconds",
  },

  halfAMinute: "half a minute",

  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes",
  },

  xMinutes: {
    one: "a minute",
    other: "{{count}} minutes",
  },

  aboutXHours: {
    one: "about an hour",
    other: "about {{count}} hours",
  },

  xHours: {
    one: "an hour",
    other: "{{count}} hours",
  },

  xDays: {
    one: "a day",
    other: "{{count}} days",
  },

  aboutXWeeks: {
    one: "about a week",
    other: "about {{count}} weeks",
  },

  xWeeks: {
    one: "a week",
    other: "{{count}} weeks",
  },

  aboutXMonths: {
    one: "about a month",
    other: "about {{count}} months",
  },

  xMonths: {
    one: "a month",
    other: "{{count}} months",
  },

  aboutXYears: {
    one: "about a year",
    other: "about {{count}} years",
  },

  xYears: {
    one: "a year",
    other: "{{count}} years",
  },

  overXYears: {
    one: "over a year",
    other: "over {{count}} years",
  },

  almostXYears: {
    one: "almost a year",
    other: "almost {{count}} years",
  },
};

const router_en_CA_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_en_CA_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/en-CA/_lib/formatLong.mjs


const router_en_CA_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, yyyy",
  long: "MMMM do, yyyy",
  medium: "MMM d, yyyy",
  short: "yyyy-MM-dd",
};

const router_en_CA_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_en_CA_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_en_CA_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_en_CA_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_en_CA_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_en_CA_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/en-CA.mjs






/**
 * @category Locales
 * @summary English locale (Canada).
 * @language English
 * @iso-639-2 eng
 * @author Mark Owsiak [@markowsiak](https://github.com/markowsiak)
 * @author Marco Imperatore [@mimperatore](https://github.com/mimperatore)
 */
const router_enCA = {
  code: "en-CA",
  formatDistance: router_en_CA_lib_formatDistance_formatDistance,
  formatLong: router_en_CA_lib_formatLong_formatLong,
  formatRelative: router_formatRelative,
  localize: router_localize,
  match: router_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_en_CA = ((/* unused pure expression or super */ null && (router_enCA)));

;// ./node_modules/date-fns/locale/en-GB/_lib/formatLong.mjs


const router_en_GB_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "dd/MM/yyyy",
};

const router_en_GB_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_en_GB_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_en_GB_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_en_GB_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_en_GB_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_en_GB_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/en-GB.mjs






/**
 * @category Locales
 * @summary English locale (United Kingdom).
 * @language English
 * @iso-639-2 eng
 * @author Alex [@glintik](https://github.com/glintik)
 */
const router_enGB = {
  code: "en-GB",
  formatDistance: router_formatDistance,
  formatLong: router_en_GB_lib_formatLong_formatLong,
  formatRelative: router_formatRelative,
  localize: router_localize,
  match: router_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_en_GB = ((/* unused pure expression or super */ null && (router_enGB)));

;// ./node_modules/date-fns/locale/en-IE.mjs






/**
 * @category Locales
 * @summary English locale (Ireland).
 * @language English
 * @iso-639-2 eng
 * @author Tetiana [@tan75](https://github.com/tan75)
 */
const router_enIE = {
  code: "en-IE",
  formatDistance: router_formatDistance,
  formatLong: router_en_GB_lib_formatLong_formatLong,
  formatRelative: router_formatRelative,
  localize: router_localize,
  match: router_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_en_IE = ((/* unused pure expression or super */ null && (router_enIE)));

;// ./node_modules/date-fns/locale/en-IN/_lib/formatLong.mjs


const router_en_IN_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM, yyyy",
  medium: "d MMM, yyyy",
  short: "dd/MM/yyyy",
};

const router_en_IN_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_en_IN_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_en_IN_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_en_IN_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_en_IN_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_en_IN_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/en-IN.mjs






/**
 * @category Locales
 * @summary English locale (India).
 * @language English
 * @iso-639-2 eng
 * @author Galeel Bhasha Satthar [@gbhasha](https://github.com/gbhasha)
 */
const router_enIN = {
  code: "en-IN",
  formatDistance: router_formatDistance,
  formatLong: router_en_IN_lib_formatLong_formatLong,
  formatRelative: router_formatRelative,
  localize: router_localize,
  match: router_match,
  options: {
    weekStartsOn: 1, // Monday is the first day of the week.
    firstWeekContainsDate: 4, // The week that contains Jan 4th is the first week of the year.
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_en_IN = ((/* unused pure expression or super */ null && (router_enIN)));

;// ./node_modules/date-fns/locale/en-NZ/_lib/formatLong.mjs


const router_en_NZ_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "dd/MM/yyyy",
};

const router_en_NZ_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_en_NZ_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_en_NZ_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_en_NZ_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_en_NZ_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_en_NZ_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/en-NZ.mjs






/**
 * @category Locales
 * @summary English locale (New Zealand).
 * @language English
 * @iso-639-2 eng
 * @author Murray Lucas [@muntact](https://github.com/muntact)
 */
const router_enNZ = {
  code: "en-NZ",
  formatDistance: router_formatDistance,
  formatLong: router_en_NZ_lib_formatLong_formatLong,
  formatRelative: router_formatRelative,
  localize: router_localize,
  match: router_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_en_NZ = ((/* unused pure expression or super */ null && (router_enNZ)));

;// ./node_modules/date-fns/locale/en-ZA/_lib/formatLong.mjs


const router_en_ZA_lib_formatLong_dateFormats = {
  full: "EEEE, dd MMMM yyyy",
  long: "dd MMMM yyyy",
  medium: "dd MMM yyyy",
  short: "yyyy/MM/dd",
};

const router_en_ZA_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_en_ZA_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_en_ZA_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_en_ZA_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_en_ZA_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_en_ZA_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/en-ZA.mjs






/**
 * @category Locales
 * @summary English locale (South Africa).
 * @language English
 * @iso-639-2 eng
 * @author Shaila Kavrakova [@shaykav](https://github.com/shaykav)
 */
const router_enZA = {
  code: "en-ZA",
  formatDistance: router_formatDistance,
  formatLong: router_en_ZA_lib_formatLong_formatLong,
  formatRelative: router_formatRelative,
  localize: router_localize,
  match: router_match,
  options: {
    weekStartsOn: 0, // Sunday is the first day of the week.
    firstWeekContainsDate: 1, // The week that contains Jan 1st is the first week of the year.
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_en_ZA = ((/* unused pure expression or super */ null && (router_enZA)));

;// ./node_modules/date-fns/locale/eo/_lib/formatDistance.mjs
const router_eo_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "malpli ol sekundo",
    other: "malpli ol {{count}} sekundoj",
  },

  xSeconds: {
    one: "1 sekundo",
    other: "{{count}} sekundoj",
  },

  halfAMinute: "duonminuto",

  lessThanXMinutes: {
    one: "malpli ol minuto",
    other: "malpli ol {{count}} minutoj",
  },

  xMinutes: {
    one: "1 minuto",
    other: "{{count}} minutoj",
  },

  aboutXHours: {
    one: "proksimume 1 horo",
    other: "proksimume {{count}} horoj",
  },

  xHours: {
    one: "1 horo",
    other: "{{count}} horoj",
  },

  xDays: {
    one: "1 tago",
    other: "{{count}} tagoj",
  },

  aboutXMonths: {
    one: "proksimume 1 monato",
    other: "proksimume {{count}} monatoj",
  },

  xWeeks: {
    one: "1 semajno",
    other: "{{count}} semajnoj",
  },

  aboutXWeeks: {
    one: "proksimume 1 semajno",
    other: "proksimume {{count}} semajnoj",
  },

  xMonths: {
    one: "1 monato",
    other: "{{count}} monatoj",
  },

  aboutXYears: {
    one: "proksimume 1 jaro",
    other: "proksimume {{count}} jaroj",
  },

  xYears: {
    one: "1 jaro",
    other: "{{count}} jaroj",
  },

  overXYears: {
    one: "pli ol 1 jaro",
    other: "pli ol {{count}} jaroj",
  },

  almostXYears: {
    one: "preskaŭ 1 jaro",
    other: "preskaŭ {{count}} jaroj",
  },
};

const router_eo_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_eo_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options?.comparison && options.comparison > 0) {
      return "post " + result;
    } else {
      return "antaŭ " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/eo/_lib/formatLong.mjs


const router_eo_lib_formatLong_dateFormats = {
  full: "EEEE, do 'de' MMMM y",
  long: "y-MMMM-dd",
  medium: "y-MMM-dd",
  short: "yyyy-MM-dd",
};

const router_eo_lib_formatLong_timeFormats = {
  full: "Ho 'horo kaj' m:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_eo_lib_formatLong_dateTimeFormats = {
  any: "{{date}} {{time}}",
};

const router_eo_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_eo_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_eo_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_eo_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/eo/_lib/formatRelative.mjs
const router_eo_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'pasinta' eeee 'je' p",
  yesterday: "'hieraŭ je' p",
  today: "'hodiaŭ je' p",
  tomorrow: "'morgaŭ je' p",
  nextWeek: "eeee 'je' p",
  other: "P",
};

const router_eo_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_eo_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/eo/_lib/localize.mjs


const router_eo_lib_localize_eraValues = {
  narrow: ["aK", "pK"],
  abbreviated: ["a.K.E.", "p.K.E."],
  wide: ["antaŭ Komuna Erao", "Komuna Erao"],
};

const router_eo_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: [
    "1-a kvaronjaro",
    "2-a kvaronjaro",
    "3-a kvaronjaro",
    "4-a kvaronjaro",
  ],
};

const router_eo_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "jan",
    "feb",
    "mar",
    "apr",
    "maj",
    "jun",
    "jul",
    "aŭg",
    "sep",
    "okt",
    "nov",
    "dec",
  ],

  wide: [
    "januaro",
    "februaro",
    "marto",
    "aprilo",
    "majo",
    "junio",
    "julio",
    "aŭgusto",
    "septembro",
    "oktobro",
    "novembro",
    "decembro",
  ],
};

const router_eo_lib_localize_dayValues = {
  narrow: ["D", "L", "M", "M", "Ĵ", "V", "S"],
  short: ["di", "lu", "ma", "me", "ĵa", "ve", "sa"],
  abbreviated: ["dim", "lun", "mar", "mer", "ĵaŭ", "ven", "sab"],
  wide: [
    "dimanĉo",
    "lundo",
    "mardo",
    "merkredo",
    "ĵaŭdo",
    "vendredo",
    "sabato",
  ],
};

const router_eo_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "noktomezo",
    noon: "tagmezo",
    morning: "matene",
    afternoon: "posttagmeze",
    evening: "vespere",
    night: "nokte",
  },
  abbreviated: {
    am: "a.t.m.",
    pm: "p.t.m.",
    midnight: "noktomezo",
    noon: "tagmezo",
    morning: "matene",
    afternoon: "posttagmeze",
    evening: "vespere",
    night: "nokte",
  },
  wide: {
    am: "antaŭtagmeze",
    pm: "posttagmeze",
    midnight: "noktomezo",
    noon: "tagmezo",
    morning: "matene",
    afternoon: "posttagmeze",
    evening: "vespere",
    night: "nokte",
  },
};

const router_eo_lib_localize_ordinalNumber = (dirtyNumber) => {
  const number = Number(dirtyNumber);
  return number + "-a";
};

const router_eo_lib_localize_localize = {
  ordinalNumber: router_eo_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_eo_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_eo_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: function (quarter) {
      return Number(quarter) - 1;
    },
  }),

  month: router_buildLocalizeFn({
    values: router_eo_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_eo_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_eo_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/eo/_lib/match.mjs



const router_eo_lib_match_matchOrdinalNumberPattern = /^(\d+)(-?a)?/i;
const router_eo_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_eo_lib_match_matchEraPatterns = {
  narrow: /^([ap]k)/i,
  abbreviated: /^([ap]\.?\s?k\.?\s?e\.?)/i,
  wide: /^((antaǔ |post )?komuna erao)/i,
};
const router_eo_lib_match_parseEraPatterns = {
  any: [/^a/i, /^[kp]/i],
};

const router_eo_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^k[1234]/i,
  wide: /^[1234](-?a)? kvaronjaro/i,
};
const router_eo_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_eo_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|a(ŭ|ux|uh|u)g|sep|okt|nov|dec)/i,
  wide: /^(januaro|februaro|marto|aprilo|majo|junio|julio|a(ŭ|ux|uh|u)gusto|septembro|oktobro|novembro|decembro)/i,
};
const router_eo_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^maj/i,
    /^jun/i,
    /^jul/i,
    /^a(u|ŭ)/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_eo_lib_match_matchDayPatterns = {
  narrow: /^[dlmĵjvs]/i,
  short: /^(di|lu|ma|me|(ĵ|jx|jh|j)a|ve|sa)/i,
  abbreviated: /^(dim|lun|mar|mer|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)|ven|sab)/i,
  wide: /^(diman(ĉ|cx|ch|c)o|lundo|mardo|merkredo|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)do|vendredo|sabato)/i,
};
const router_eo_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^(j|ĵ)/i, /^v/i, /^s/i],
  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^(j|ĵ)/i, /^v/i, /^s/i],
};

const router_eo_lib_match_matchDayPeriodPatterns = {
  narrow: /^([ap]|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,
  abbreviated:
    /^([ap][.\s]?t[.\s]?m[.\s]?|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,
  wide: /^(anta(ŭ|ux)tagmez|posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo]/i,
};
const router_eo_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^noktom/i,
    noon: /^t/i,
    morning: /^m/i,
    afternoon: /^posttagmeze/i,
    evening: /^v/i,
    night: /^n/i,
  },
};

const router_eo_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_eo_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_eo_lib_match_parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    },
  }),

  era: router_buildMatchFn({
    matchPatterns: router_eo_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eo_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_eo_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eo_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function (index) {
      return index + 1;
    },
  }),

  month: router_buildMatchFn({
    matchPatterns: router_eo_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eo_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_eo_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eo_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_eo_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eo_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/eo.mjs






/**
 * @category Locales
 * @summary Esperanto locale.
 * @language Esperanto
 * @iso-639-2 epo
 * @author date-fns
 */
const router_eo = {
  code: "eo",
  formatDistance: router_eo_lib_formatDistance_formatDistance,
  formatLong: router_eo_lib_formatLong_formatLong,
  formatRelative: router_eo_lib_formatRelative_formatRelative,
  localize: router_eo_lib_localize_localize,
  match: router_eo_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_eo = ((/* unused pure expression or super */ null && (router_eo)));

;// ./node_modules/date-fns/locale/es/_lib/formatDistance.mjs
const router_es_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "menos de un segundo",
    other: "menos de {{count}} segundos",
  },

  xSeconds: {
    one: "1 segundo",
    other: "{{count}} segundos",
  },

  halfAMinute: "medio minuto",

  lessThanXMinutes: {
    one: "menos de un minuto",
    other: "menos de {{count}} minutos",
  },

  xMinutes: {
    one: "1 minuto",
    other: "{{count}} minutos",
  },

  aboutXHours: {
    one: "alrededor de 1 hora",
    other: "alrededor de {{count}} horas",
  },

  xHours: {
    one: "1 hora",
    other: "{{count}} horas",
  },

  xDays: {
    one: "1 día",
    other: "{{count}} días",
  },

  aboutXWeeks: {
    one: "alrededor de 1 semana",
    other: "alrededor de {{count}} semanas",
  },

  xWeeks: {
    one: "1 semana",
    other: "{{count}} semanas",
  },

  aboutXMonths: {
    one: "alrededor de 1 mes",
    other: "alrededor de {{count}} meses",
  },

  xMonths: {
    one: "1 mes",
    other: "{{count}} meses",
  },

  aboutXYears: {
    one: "alrededor de 1 año",
    other: "alrededor de {{count}} años",
  },

  xYears: {
    one: "1 año",
    other: "{{count}} años",
  },

  overXYears: {
    one: "más de 1 año",
    other: "más de {{count}} años",
  },

  almostXYears: {
    one: "casi 1 año",
    other: "casi {{count}} años",
  },
};

const router_es_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_es_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "en " + result;
    } else {
      return "hace " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/es/_lib/formatLong.mjs


const router_es_lib_formatLong_dateFormats = {
  full: "EEEE, d 'de' MMMM 'de' y",
  long: "d 'de' MMMM 'de' y",
  medium: "d MMM y",
  short: "dd/MM/y",
};

const router_es_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_es_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'a las' {{time}}",
  long: "{{date}} 'a las' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_es_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_es_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_es_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_es_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/es/_lib/formatRelative.mjs
const router_es_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'el' eeee 'pasado a la' p",
  yesterday: "'ayer a la' p",
  today: "'hoy a la' p",
  tomorrow: "'mañana a la' p",
  nextWeek: "eeee 'a la' p",
  other: "P",
};

const router_formatRelative_formatRelativeLocalePlural = {
  lastWeek: "'el' eeee 'pasado a las' p",
  yesterday: "'ayer a las' p",
  today: "'hoy a las' p",
  tomorrow: "'mañana a las' p",
  nextWeek: "eeee 'a las' p",
  other: "P",
};

const router_es_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  if (date.getHours() !== 1) {
    return router_formatRelative_formatRelativeLocalePlural[token];
  } else {
    return router_es_lib_formatRelative_formatRelativeLocale[token];
  }
};

;// ./node_modules/date-fns/locale/es/_lib/localize.mjs


const router_es_lib_localize_eraValues = {
  narrow: ["AC", "DC"],
  abbreviated: ["AC", "DC"],
  wide: ["antes de cristo", "después de cristo"],
};

const router_es_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["T1", "T2", "T3", "T4"],
  wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"],
};

const router_es_lib_localize_monthValues = {
  narrow: ["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
  abbreviated: [
    "ene",
    "feb",
    "mar",
    "abr",
    "may",
    "jun",
    "jul",
    "ago",
    "sep",
    "oct",
    "nov",
    "dic",
  ],

  wide: [
    "enero",
    "febrero",
    "marzo",
    "abril",
    "mayo",
    "junio",
    "julio",
    "agosto",
    "septiembre",
    "octubre",
    "noviembre",
    "diciembre",
  ],
};

const router_es_lib_localize_dayValues = {
  narrow: ["d", "l", "m", "m", "j", "v", "s"],
  short: ["do", "lu", "ma", "mi", "ju", "vi", "sá"],
  abbreviated: ["dom", "lun", "mar", "mié", "jue", "vie", "sáb"],
  wide: [
    "domingo",
    "lunes",
    "martes",
    "miércoles",
    "jueves",
    "viernes",
    "sábado",
  ],
};

const router_es_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mn",
    noon: "md",
    morning: "mañana",
    afternoon: "tarde",
    evening: "tarde",
    night: "noche",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "medianoche",
    noon: "mediodia",
    morning: "mañana",
    afternoon: "tarde",
    evening: "tarde",
    night: "noche",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "medianoche",
    noon: "mediodia",
    morning: "mañana",
    afternoon: "tarde",
    evening: "tarde",
    night: "noche",
  },
};

const router_es_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mn",
    noon: "md",
    morning: "de la mañana",
    afternoon: "de la tarde",
    evening: "de la tarde",
    night: "de la noche",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "medianoche",
    noon: "mediodia",
    morning: "de la mañana",
    afternoon: "de la tarde",
    evening: "de la tarde",
    night: "de la noche",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "medianoche",
    noon: "mediodia",
    morning: "de la mañana",
    afternoon: "de la tarde",
    evening: "de la tarde",
    night: "de la noche",
  },
};

const router_es_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "º";
};

const router_es_lib_localize_localize = {
  ordinalNumber: router_es_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_es_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_es_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => Number(quarter) - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_es_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_es_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_es_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_es_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/es/_lib/match.mjs



const router_es_lib_match_matchOrdinalNumberPattern = /^(\d+)(º)?/i;
const router_es_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_es_lib_match_matchEraPatterns = {
  narrow: /^(ac|dc|a|d)/i,
  abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
  wide: /^(antes de cristo|antes de la era com[uú]n|despu[eé]s de cristo|era com[uú]n)/i,
};
const router_es_lib_match_parseEraPatterns = {
  any: [/^ac/i, /^dc/i],
  wide: [
    /^(antes de cristo|antes de la era com[uú]n)/i,
    /^(despu[eé]s de cristo|era com[uú]n)/i,
  ],
};

const router_es_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^T[1234]/i,
  wide: /^[1234](º)? trimestre/i,
};
const router_es_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_es_lib_match_matchMonthPatterns = {
  narrow: /^[efmajsond]/i,
  abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,
  wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
};
const router_es_lib_match_parseMonthPatterns = {
  narrow: [
    /^e/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^en/i,
    /^feb/i,
    /^mar/i,
    /^abr/i,
    /^may/i,
    /^jun/i,
    /^jul/i,
    /^ago/i,
    /^sep/i,
    /^oct/i,
    /^nov/i,
    /^dic/i,
  ],
};

const router_es_lib_match_matchDayPatterns = {
  narrow: /^[dlmjvs]/i,
  short: /^(do|lu|ma|mi|ju|vi|s[áa])/i,
  abbreviated: /^(dom|lun|mar|mi[ée]|jue|vie|s[áa]b)/i,
  wide: /^(domingo|lunes|martes|mi[ée]rcoles|jueves|viernes|s[áa]bado)/i,
};
const router_es_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
  any: [/^do/i, /^lu/i, /^ma/i, /^mi/i, /^ju/i, /^vi/i, /^sa/i],
};

const router_es_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mn|md|(de la|a las) (mañana|tarde|noche))/i,
  any: /^([ap]\.?\s?m\.?|medianoche|mediodia|(de la|a las) (mañana|tarde|noche))/i,
};
const router_es_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mn/i,
    noon: /^md/i,
    morning: /mañana/i,
    afternoon: /tarde/i,
    evening: /tarde/i,
    night: /noche/i,
  },
};

const router_es_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_es_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_es_lib_match_parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    },
  }),

  era: router_buildMatchFn({
    matchPatterns: router_es_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_es_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_es_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_es_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_es_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_es_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_es_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_es_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_es_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_es_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/es.mjs






/**
 * @category Locales
 * @summary Spanish locale.
 * @language Spanish
 * @iso-639-2 spa
 * @author Juan Angosto [@juanangosto](https://github.com/juanangosto)
 * @author Guillermo Grau [@guigrpa](https://github.com/guigrpa)
 * @author Fernando Agüero [@fjaguero](https://github.com/fjaguero)
 * @author Gastón Haro [@harogaston](https://github.com/harogaston)
 * @author Yago Carballo [@YagoCarballo](https://github.com/YagoCarballo)
 */
const router_es = {
  code: "es",
  formatDistance: router_es_lib_formatDistance_formatDistance,
  formatLong: router_es_lib_formatLong_formatLong,
  formatRelative: router_es_lib_formatRelative_formatRelative,
  localize: router_es_lib_localize_localize,
  match: router_es_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_es = ((/* unused pure expression or super */ null && (router_es)));

;// ./node_modules/date-fns/locale/et/_lib/formatDistance.mjs
const router_et_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    standalone: {
      one: "vähem kui üks sekund",
      other: "vähem kui {{count}} sekundit",
    },
    withPreposition: {
      one: "vähem kui ühe sekundi",
      other: "vähem kui {{count}} sekundi",
    },
  },

  xSeconds: {
    standalone: {
      one: "üks sekund",
      other: "{{count}} sekundit",
    },
    withPreposition: {
      one: "ühe sekundi",
      other: "{{count}} sekundi",
    },
  },

  halfAMinute: {
    standalone: "pool minutit",
    withPreposition: "poole minuti",
  },

  lessThanXMinutes: {
    standalone: {
      one: "vähem kui üks minut",
      other: "vähem kui {{count}} minutit",
    },
    withPreposition: {
      one: "vähem kui ühe minuti",
      other: "vähem kui {{count}} minuti",
    },
  },

  xMinutes: {
    standalone: {
      one: "üks minut",
      other: "{{count}} minutit",
    },
    withPreposition: {
      one: "ühe minuti",
      other: "{{count}} minuti",
    },
  },

  aboutXHours: {
    standalone: {
      one: "umbes üks tund",
      other: "umbes {{count}} tundi",
    },
    withPreposition: {
      one: "umbes ühe tunni",
      other: "umbes {{count}} tunni",
    },
  },

  xHours: {
    standalone: {
      one: "üks tund",
      other: "{{count}} tundi",
    },
    withPreposition: {
      one: "ühe tunni",
      other: "{{count}} tunni",
    },
  },

  xDays: {
    standalone: {
      one: "üks päev",
      other: "{{count}} päeva",
    },
    withPreposition: {
      one: "ühe päeva",
      other: "{{count}} päeva",
    },
  },

  aboutXWeeks: {
    standalone: {
      one: "umbes üks nädal",
      other: "umbes {{count}} nädalat",
    },
    withPreposition: {
      one: "umbes ühe nädala",
      other: "umbes {{count}} nädala",
    },
  },

  xWeeks: {
    standalone: {
      one: "üks nädal",
      other: "{{count}} nädalat",
    },
    withPreposition: {
      one: "ühe nädala",
      other: "{{count}} nädala",
    },
  },

  aboutXMonths: {
    standalone: {
      one: "umbes üks kuu",
      other: "umbes {{count}} kuud",
    },
    withPreposition: {
      one: "umbes ühe kuu",
      other: "umbes {{count}} kuu",
    },
  },

  xMonths: {
    standalone: {
      one: "üks kuu",
      other: "{{count}} kuud",
    },
    withPreposition: {
      one: "ühe kuu",
      other: "{{count}} kuu",
    },
  },

  aboutXYears: {
    standalone: {
      one: "umbes üks aasta",
      other: "umbes {{count}} aastat",
    },
    withPreposition: {
      one: "umbes ühe aasta",
      other: "umbes {{count}} aasta",
    },
  },

  xYears: {
    standalone: {
      one: "üks aasta",
      other: "{{count}} aastat",
    },
    withPreposition: {
      one: "ühe aasta",
      other: "{{count}} aasta",
    },
  },

  overXYears: {
    standalone: {
      one: "rohkem kui üks aasta",
      other: "rohkem kui {{count}} aastat",
    },
    withPreposition: {
      one: "rohkem kui ühe aasta",
      other: "rohkem kui {{count}} aasta",
    },
  },

  almostXYears: {
    standalone: {
      one: "peaaegu üks aasta",
      other: "peaaegu {{count}} aastat",
    },
    withPreposition: {
      one: "peaaegu ühe aasta",
      other: "peaaegu {{count}} aasta",
    },
  },
};

const router_et_lib_formatDistance_formatDistance = (token, count, options) => {
  const usageGroup = options?.addSuffix
    ? router_et_lib_formatDistance_formatDistanceLocale[token].withPreposition
    : router_et_lib_formatDistance_formatDistanceLocale[token].standalone;

  let result;
  if (typeof usageGroup === "string") {
    result = usageGroup;
  } else if (count === 1) {
    result = usageGroup.one;
  } else {
    result = usageGroup.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + " pärast";
    } else {
      return result + " eest";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/et/_lib/formatLong.mjs


const router_et_lib_formatLong_dateFormats = {
  full: "EEEE, d. MMMM y",
  long: "d. MMMM y",
  medium: "d. MMM y",
  short: "dd.MM.y",
};

const router_et_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_et_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'kell' {{time}}",
  long: "{{date}} 'kell' {{time}}",
  medium: "{{date}}. {{time}}",
  short: "{{date}}. {{time}}",
};

const router_et_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_et_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_et_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_et_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/et/_lib/formatRelative.mjs
const router_et_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'eelmine' eeee 'kell' p",
  yesterday: "'eile kell' p",
  today: "'täna kell' p",
  tomorrow: "'homme kell' p",
  nextWeek: "'järgmine' eeee 'kell' p",
  other: "P",
};

const router_et_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_et_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/et/_lib/localize.mjs


const router_et_lib_localize_eraValues = {
  narrow: ["e.m.a", "m.a.j"],
  abbreviated: ["e.m.a", "m.a.j"],
  wide: ["enne meie ajaarvamist", "meie ajaarvamise järgi"],
};

const router_et_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
};

const router_et_lib_localize_monthValues = {
  narrow: ["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "jaan",
    "veebr",
    "märts",
    "apr",
    "mai",
    "juuni",
    "juuli",
    "aug",
    "sept",
    "okt",
    "nov",
    "dets",
  ],

  wide: [
    "jaanuar",
    "veebruar",
    "märts",
    "aprill",
    "mai",
    "juuni",
    "juuli",
    "august",
    "september",
    "oktoober",
    "november",
    "detsember",
  ],
};

const router_et_lib_localize_dayValues = {
  narrow: ["P", "E", "T", "K", "N", "R", "L"],
  short: ["P", "E", "T", "K", "N", "R", "L"],
  abbreviated: [
    "pühap.",
    "esmasp.",
    "teisip.",
    "kolmap.",
    "neljap.",
    "reede.",
    "laup.",
  ],

  wide: [
    "pühapäev",
    "esmaspäev",
    "teisipäev",
    "kolmapäev",
    "neljapäev",
    "reede",
    "laupäev",
  ],
};

const router_et_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "kesköö",
    noon: "keskpäev",
    morning: "hommik",
    afternoon: "pärastlõuna",
    evening: "õhtu",
    night: "öö",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "kesköö",
    noon: "keskpäev",
    morning: "hommik",
    afternoon: "pärastlõuna",
    evening: "õhtu",
    night: "öö",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "kesköö",
    noon: "keskpäev",
    morning: "hommik",
    afternoon: "pärastlõuna",
    evening: "õhtu",
    night: "öö",
  },
};

const router_et_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "keskööl",
    noon: "keskpäeval",
    morning: "hommikul",
    afternoon: "pärastlõunal",
    evening: "õhtul",
    night: "öösel",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "keskööl",
    noon: "keskpäeval",
    morning: "hommikul",
    afternoon: "pärastlõunal",
    evening: "õhtul",
    night: "öösel",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "keskööl",
    noon: "keskpäeval",
    morning: "hommikul",
    afternoon: "pärastlõunal",
    evening: "õhtul",
    night: "öösel",
  },
};

const router_et_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_et_lib_localize_localize = {
  ordinalNumber: router_et_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_et_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_et_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_et_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_et_lib_localize_monthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_et_lib_localize_dayValues,
    defaultWidth: "wide",
    formattingValues: router_et_lib_localize_dayValues,
    defaultFormattingWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_et_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_et_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/et/_lib/match.mjs



const router_et_lib_match_matchOrdinalNumberPattern = /^\d+\./i;
const router_et_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_et_lib_match_matchEraPatterns = {
  narrow: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
  abbreviated: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
  wide: /^(enne meie ajaarvamist|meie ajaarvamise järgi|enne Kristust|pärast Kristust)/i,
};
const router_et_lib_match_parseEraPatterns = {
  any: [/^e/i, /^(m|p)/i],
};

const router_et_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^K[1234]/i,
  wide: /^[1234](\.)? kvartal/i,
};
const router_et_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_et_lib_match_matchMonthPatterns = {
  narrow: /^[jvmasond]/i,
  abbreviated: /^(jaan|veebr|märts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets)/i,
  wide: /^(jaanuar|veebruar|märts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember)/i,
};
const router_et_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^v/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^v/i,
    /^mär/i,
    /^ap/i,
    /^mai/i,
    /^juun/i,
    /^juul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_et_lib_match_matchDayPatterns = {
  narrow: /^[petknrl]/i,
  short: /^[petknrl]/i,
  abbreviated: /^(püh?|esm?|tei?|kolm?|nel?|ree?|laup?)\.?/i,
  wide: /^(pühapäev|esmaspäev|teisipäev|kolmapäev|neljapäev|reede|laupäev)/i,
};
const router_et_lib_match_parseDayPatterns = {
  any: [/^p/i, /^e/i, /^t/i, /^k/i, /^n/i, /^r/i, /^l/i],
};

const router_et_lib_match_matchDayPeriodPatterns = {
  any: /^(am|pm|keskööl?|keskpäev(al)?|hommik(ul)?|pärastlõunal?|õhtul?|öö(sel)?)/i,
};
const router_et_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^keskö/i,
    noon: /^keskp/i,
    morning: /hommik/i,
    afternoon: /pärastlõuna/i,
    evening: /õhtu/i,
    night: /öö/i,
  },
};

const router_et_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_et_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_et_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_et_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_et_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_et_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_et_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_et_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_et_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_et_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_et_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_et_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_et_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/et.mjs






/**
 * @category Locales
 * @summary Estonian locale.
 * @language Estonian
 * @iso-639-2 est
 * @author Priit Hansen [@HansenPriit](https://github.com/priithansen)
 */
const router_et = {
  code: "et",
  formatDistance: router_et_lib_formatDistance_formatDistance,
  formatLong: router_et_lib_formatLong_formatLong,
  formatRelative: router_et_lib_formatRelative_formatRelative,
  localize: router_et_lib_localize_localize,
  match: router_et_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_et = ((/* unused pure expression or super */ null && (router_et)));

;// ./node_modules/date-fns/locale/eu/_lib/formatDistance.mjs
const router_eu_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "segundo bat baino gutxiago",
    other: "{{count}} segundo baino gutxiago",
  },

  xSeconds: {
    one: "1 segundo",
    other: "{{count}} segundo",
  },

  halfAMinute: "minutu erdi",

  lessThanXMinutes: {
    one: "minutu bat baino gutxiago",
    other: "{{count}} minutu baino gutxiago",
  },

  xMinutes: {
    one: "1 minutu",
    other: "{{count}} minutu",
  },

  aboutXHours: {
    one: "1 ordu gutxi gorabehera",
    other: "{{count}} ordu gutxi gorabehera",
  },

  xHours: {
    one: "1 ordu",
    other: "{{count}} ordu",
  },

  xDays: {
    one: "1 egun",
    other: "{{count}} egun",
  },

  aboutXWeeks: {
    one: "aste 1 inguru",
    other: "{{count}} aste inguru",
  },

  xWeeks: {
    one: "1 aste",
    other: "{{count}} astean",
  },

  aboutXMonths: {
    one: "1 hilabete gutxi gorabehera",
    other: "{{count}} hilabete gutxi gorabehera",
  },

  xMonths: {
    one: "1 hilabete",
    other: "{{count}} hilabete",
  },

  aboutXYears: {
    one: "1 urte gutxi gorabehera",
    other: "{{count}} urte gutxi gorabehera",
  },

  xYears: {
    one: "1 urte",
    other: "{{count}} urte",
  },

  overXYears: {
    one: "1 urte baino gehiago",
    other: "{{count}} urte baino gehiago",
  },

  almostXYears: {
    one: "ia 1 urte",
    other: "ia {{count}} urte",
  },
};

const router_eu_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_eu_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "en " + result;
    } else {
      return "duela " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/eu/_lib/formatLong.mjs


const router_eu_lib_formatLong_dateFormats = {
  full: "EEEE, y'ko' MMMM'ren' d'a' y'ren'",
  long: "y'ko' MMMM'ren' d'a'",
  medium: "y MMM d",
  short: "yy/MM/dd",
};

const router_eu_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_eu_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'tan' {{time}}",
  long: "{{date}} 'tan' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_eu_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_eu_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_eu_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_eu_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/eu/_lib/formatRelative.mjs
const router_eu_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'joan den' eeee, LT",
  yesterday: "'atzo,' p",
  today: "'gaur,' p",
  tomorrow: "'bihar,' p",
  nextWeek: "eeee, p",
  other: "P",
};

const router_lib_formatRelative_formatRelativeLocalePlural = {
  lastWeek: "'joan den' eeee, p",
  yesterday: "'atzo,' p",
  today: "'gaur,' p",
  tomorrow: "'bihar,' p",
  nextWeek: "eeee, p",
  other: "P",
};

const router_eu_lib_formatRelative_formatRelative = (token, date) => {
  if (date.getHours() !== 1) {
    return router_lib_formatRelative_formatRelativeLocalePlural[token];
  }
  return router_eu_lib_formatRelative_formatRelativeLocale[token];
};

;// ./node_modules/date-fns/locale/eu/_lib/localize.mjs


const router_eu_lib_localize_eraValues = {
  narrow: ["k.a.", "k.o."],
  abbreviated: ["k.a.", "k.o."],
  wide: ["kristo aurretik", "kristo ondoren"],
};

const router_eu_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1H", "2H", "3H", "4H"],
  wide: [
    "1. hiruhilekoa",
    "2. hiruhilekoa",
    "3. hiruhilekoa",
    "4. hiruhilekoa",
  ],
};

const router_eu_lib_localize_monthValues = {
  narrow: ["u", "o", "m", "a", "m", "e", "u", "a", "i", "u", "a", "a"],
  abbreviated: [
    "urt",
    "ots",
    "mar",
    "api",
    "mai",
    "eka",
    "uzt",
    "abu",
    "ira",
    "urr",
    "aza",
    "abe",
  ],

  wide: [
    "urtarrila",
    "otsaila",
    "martxoa",
    "apirila",
    "maiatza",
    "ekaina",
    "uztaila",
    "abuztua",
    "iraila",
    "urria",
    "azaroa",
    "abendua",
  ],
};

const router_eu_lib_localize_dayValues = {
  narrow: ["i", "a", "a", "a", "o", "o", "l"],
  short: ["ig", "al", "as", "az", "og", "or", "lr"],
  abbreviated: ["iga", "ast", "ast", "ast", "ost", "ost", "lar"],
  wide: [
    "igandea",
    "astelehena",
    "asteartea",
    "asteazkena",
    "osteguna",
    "ostirala",
    "larunbata",
  ],
};

const router_eu_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "ge",
    noon: "eg",
    morning: "goiza",
    afternoon: "arratsaldea",
    evening: "arratsaldea",
    night: "gaua",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "gauerdia",
    noon: "eguerdia",
    morning: "goiza",
    afternoon: "arratsaldea",
    evening: "arratsaldea",
    night: "gaua",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "gauerdia",
    noon: "eguerdia",
    morning: "goiza",
    afternoon: "arratsaldea",
    evening: "arratsaldea",
    night: "gaua",
  },
};

const router_eu_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "ge",
    noon: "eg",
    morning: "goizean",
    afternoon: "arratsaldean",
    evening: "arratsaldean",
    night: "gauean",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "gauerdia",
    noon: "eguerdia",
    morning: "goizean",
    afternoon: "arratsaldean",
    evening: "arratsaldean",
    night: "gauean",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "gauerdia",
    noon: "eguerdia",
    morning: "goizean",
    afternoon: "arratsaldean",
    evening: "arratsaldean",
    night: "gauean",
  },
};

const router_eu_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_eu_lib_localize_localize = {
  ordinalNumber: router_eu_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_eu_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_eu_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_eu_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_eu_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_eu_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_eu_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/eu/_lib/match.mjs



const router_eu_lib_match_matchOrdinalNumberPattern = /^(\d+)(.)?/i;
const router_eu_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_eu_lib_match_matchEraPatterns = {
  narrow: /^(k.a.|k.o.)/i,
  abbreviated: /^(k.a.|k.o.)/i,
  wide: /^(kristo aurretik|kristo ondoren)/i,
};
const router_eu_lib_match_parseEraPatterns = {
  narrow: [/^k.a./i, /^k.o./i],
  abbreviated: [/^(k.a.)/i, /^(k.o.)/i],
  wide: [/^(kristo aurretik)/i, /^(kristo ondoren)/i],
};

const router_eu_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]H/i,
  wide: /^[1234](.)? hiruhilekoa/i,
};
const router_eu_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_eu_lib_match_matchMonthPatterns = {
  narrow: /^[uomaei]/i,
  abbreviated: /^(urt|ots|mar|api|mai|eka|uzt|abu|ira|urr|aza|abe)/i,
  wide: /^(urtarrila|otsaila|martxoa|apirila|maiatza|ekaina|uztaila|abuztua|iraila|urria|azaroa|abendua)/i,
};
const router_eu_lib_match_parseMonthPatterns = {
  narrow: [
    /^u/i,
    /^o/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^e/i,
    /^u/i,
    /^a/i,
    /^i/i,
    /^u/i,
    /^a/i,
    /^a/i,
  ],

  any: [
    /^urt/i,
    /^ots/i,
    /^mar/i,
    /^api/i,
    /^mai/i,
    /^eka/i,
    /^uzt/i,
    /^abu/i,
    /^ira/i,
    /^urr/i,
    /^aza/i,
    /^abe/i,
  ],
};

const router_eu_lib_match_matchDayPatterns = {
  narrow: /^[iaol]/i,
  short: /^(ig|al|as|az|og|or|lr)/i,
  abbreviated: /^(iga|ast|ast|ast|ost|ost|lar)/i,
  wide: /^(igandea|astelehena|asteartea|asteazkena|osteguna|ostirala|larunbata)/i,
};
const router_eu_lib_match_parseDayPatterns = {
  narrow: [/^i/i, /^a/i, /^a/i, /^a/i, /^o/i, /^o/i, /^l/i],
  short: [/^ig/i, /^al/i, /^as/i, /^az/i, /^og/i, /^or/i, /^lr/i],
  abbreviated: [/^iga/i, /^ast/i, /^ast/i, /^ast/i, /^ost/i, /^ost/i, /^lar/i],

  wide: [
    /^igandea/i,
    /^astelehena/i,
    /^asteartea/i,
    /^asteazkena/i,
    /^osteguna/i,
    /^ostirala/i,
    /^larunbata/i,
  ],
};

const router_eu_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|ge|eg|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,
  any: /^([ap]\.?\s?m\.?|gauerdia|eguerdia|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,
};
const router_eu_lib_match_parseDayPeriodPatterns = {
  narrow: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^ge/i,
    noon: /^eg/i,
    morning: /goiz/i,
    afternoon: /arratsaldea/i,
    evening: /arratsaldea/i,
    night: /gau/i,
  },
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^gauerdia/i,
    noon: /^eguerdia/i,
    morning: /goiz/i,
    afternoon: /arratsaldea/i,
    evening: /arratsaldea/i,
    night: /gau/i,
  },
};

const router_eu_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_eu_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_eu_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_eu_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eu_lib_match_parseEraPatterns,
    defaultParseWidth: "wide",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_eu_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eu_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_eu_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eu_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_eu_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_eu_lib_match_parseDayPatterns,
    defaultParseWidth: "wide",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_eu_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_eu_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/eu.mjs






/**
 * @category Locales
 * @summary Basque locale.
 * @language Basque
 * @iso-639-2 eus
 * @author Jacob Söderblom [@JacobSoderblom](https://github.com/JacobSoderblom)
 */
const router_eu = {
  code: "eu",
  formatDistance: router_eu_lib_formatDistance_formatDistance,
  formatLong: router_eu_lib_formatLong_formatLong,
  formatRelative: router_eu_lib_formatRelative_formatRelative,
  localize: router_eu_lib_localize_localize,
  match: router_eu_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_eu = ((/* unused pure expression or super */ null && (router_eu)));

;// ./node_modules/date-fns/locale/fa-IR/_lib/formatDistance.mjs
const router_fa_IR_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "کمتر از یک ثانیه",
    other: "کمتر از {{count}} ثانیه",
  },

  xSeconds: {
    one: "1 ثانیه",
    other: "{{count}} ثانیه",
  },

  halfAMinute: "نیم دقیقه",

  lessThanXMinutes: {
    one: "کمتر از یک دقیقه",
    other: "کمتر از {{count}} دقیقه",
  },

  xMinutes: {
    one: "1 دقیقه",
    other: "{{count}} دقیقه",
  },

  aboutXHours: {
    one: "حدود 1 ساعت",
    other: "حدود {{count}} ساعت",
  },

  xHours: {
    one: "1 ساعت",
    other: "{{count}} ساعت",
  },

  xDays: {
    one: "1 روز",
    other: "{{count}} روز",
  },

  aboutXWeeks: {
    one: "حدود 1 هفته",
    other: "حدود {{count}} هفته",
  },

  xWeeks: {
    one: "1 هفته",
    other: "{{count}} هفته",
  },

  aboutXMonths: {
    one: "حدود 1 ماه",
    other: "حدود {{count}} ماه",
  },

  xMonths: {
    one: "1 ماه",
    other: "{{count}} ماه",
  },

  aboutXYears: {
    one: "حدود 1 سال",
    other: "حدود {{count}} سال",
  },

  xYears: {
    one: "1 سال",
    other: "{{count}} سال",
  },

  overXYears: {
    one: "بیشتر از 1 سال",
    other: "بیشتر از {{count}} سال",
  },

  almostXYears: {
    one: "نزدیک 1 سال",
    other: "نزدیک {{count}} سال",
  },
};

const router_fa_IR_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_fa_IR_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "در " + result;
    } else {
      return result + " قبل";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/fa-IR/_lib/formatLong.mjs


const router_fa_IR_lib_formatLong_dateFormats = {
  full: "EEEE do MMMM y",
  long: "do MMMM y",
  medium: "d MMM y",
  short: "yyyy/MM/dd",
};

const router_fa_IR_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_fa_IR_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'در' {{time}}",
  long: "{{date}} 'در' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_fa_IR_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_fa_IR_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_fa_IR_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_fa_IR_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/fa-IR/_lib/formatRelative.mjs
const router_fa_IR_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'گذشته در' p",
  yesterday: "'دیروز در' p",
  today: "'امروز در' p",
  tomorrow: "'فردا در' p",
  nextWeek: "eeee 'در' p",
  other: "P",
};

const router_fa_IR_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_fa_IR_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/fa-IR/_lib/localize.mjs


const router_fa_IR_lib_localize_eraValues = {
  narrow: ["ق", "ب"],
  abbreviated: ["ق.م.", "ب.م."],
  wide: ["قبل از میلاد", "بعد از میلاد"],
};

const router_fa_IR_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["س‌م1", "س‌م2", "س‌م3", "س‌م4"],
  wide: ["سه‌ماهه 1", "سه‌ماهه 2", "سه‌ماهه 3", "سه‌ماهه 4"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_fa_IR_lib_localize_monthValues = {
  narrow: ["ژ", "ف", "م", "آ", "م", "ج", "ج", "آ", "س", "ا", "ن", "د"],
  abbreviated: [
    "ژانـ",
    "فور",
    "مارس",
    "آپر",
    "می",
    "جون",
    "جولـ",
    "آگو",
    "سپتـ",
    "اکتـ",
    "نوامـ",
    "دسامـ",
  ],

  wide: [
    "ژانویه",
    "فوریه",
    "مارس",
    "آپریل",
    "می",
    "جون",
    "جولای",
    "آگوست",
    "سپتامبر",
    "اکتبر",
    "نوامبر",
    "دسامبر",
  ],
};

const router_fa_IR_lib_localize_dayValues = {
  narrow: ["ی", "د", "س", "چ", "پ", "ج", "ش"],
  short: ["1ش", "2ش", "3ش", "4ش", "5ش", "ج", "ش"],
  abbreviated: [
    "یکشنبه",
    "دوشنبه",
    "سه‌شنبه",
    "چهارشنبه",
    "پنجشنبه",
    "جمعه",
    "شنبه",
  ],

  wide: ["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"],
};

const router_fa_IR_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ق",
    pm: "ب",
    midnight: "ن",
    noon: "ظ",
    morning: "ص",
    afternoon: "ب.ظ.",
    evening: "ع",
    night: "ش",
  },
  abbreviated: {
    am: "ق.ظ.",
    pm: "ب.ظ.",
    midnight: "نیمه‌شب",
    noon: "ظهر",
    morning: "صبح",
    afternoon: "بعدازظهر",
    evening: "عصر",
    night: "شب",
  },
  wide: {
    am: "قبل‌ازظهر",
    pm: "بعدازظهر",
    midnight: "نیمه‌شب",
    noon: "ظهر",
    morning: "صبح",
    afternoon: "بعدازظهر",
    evening: "عصر",
    night: "شب",
  },
};

const router_fa_IR_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ق",
    pm: "ب",
    midnight: "ن",
    noon: "ظ",
    morning: "ص",
    afternoon: "ب.ظ.",
    evening: "ع",
    night: "ش",
  },
  abbreviated: {
    am: "ق.ظ.",
    pm: "ب.ظ.",
    midnight: "نیمه‌شب",
    noon: "ظهر",
    morning: "صبح",
    afternoon: "بعدازظهر",
    evening: "عصر",
    night: "شب",
  },
  wide: {
    am: "قبل‌ازظهر",
    pm: "بعدازظهر",
    midnight: "نیمه‌شب",
    noon: "ظهر",
    morning: "صبح",
    afternoon: "بعدازظهر",
    evening: "عصر",
    night: "شب",
  },
};

const router_fa_IR_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_fa_IR_lib_localize_localize = {
  ordinalNumber: router_fa_IR_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_fa_IR_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_fa_IR_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_fa_IR_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_fa_IR_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_fa_IR_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_fa_IR_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/fa-IR/_lib/match.mjs



const router_fa_IR_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_fa_IR_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_fa_IR_lib_match_matchEraPatterns = {
  narrow: /^(ق|ب)/i,
  abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?د\.?\s?م\.?|م\.?\s?|د\.?\s?م\.?)/i,
  wide: /^(قبل از میلاد|قبل از دوران مشترک|میلادی|دوران مشترک|بعد از میلاد)/i,
};
const router_fa_IR_lib_match_parseEraPatterns = {
  any: [/^قبل/i, /^بعد/i],
};

const router_fa_IR_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^س‌م[1234]/i,
  wide: /^سه‌ماهه [1234]/i,
};
const router_fa_IR_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_fa_IR_lib_match_matchMonthPatterns = {
  narrow: /^[جژفمآاماسند]/i,
  abbreviated:
    /^(جنو|ژانـ|ژانویه|فوریه|فور|مارس|آوریل|آپر|مه|می|ژوئن|جون|جول|جولـ|ژوئیه|اوت|آگو|سپتمبر|سپتامبر|اکتبر|اکتوبر|نوامبر|نوامـ|دسامبر|دسامـ|دسم)/i,
  wide: /^(ژانویه|جنوری|فبروری|فوریه|مارچ|مارس|آپریل|اپریل|ایپریل|آوریل|مه|می|ژوئن|جون|جولای|ژوئیه|آگست|اگست|آگوست|اوت|سپتمبر|سپتامبر|اکتبر|اکتوبر|نوامبر|نومبر|دسامبر|دسمبر)/i,
};
const router_fa_IR_lib_match_parseMonthPatterns = {
  narrow: [
    /^(ژ|ج)/i,
    /^ف/i,
    /^م/i,
    /^(آ|ا)/i,
    /^م/i,
    /^(ژ|ج)/i,
    /^(ج|ژ)/i,
    /^(آ|ا)/i,
    /^س/i,
    /^ا/i,
    /^ن/i,
    /^د/i,
  ],

  any: [
    /^ژا/i,
    /^ف/i,
    /^ما/i,
    /^آپ/i,
    /^(می|مه)/i,
    /^(ژوئن|جون)/i,
    /^(ژوئی|جول)/i,
    /^(اوت|آگ)/i,
    /^س/i,
    /^(اوک|اک)/i,
    /^ن/i,
    /^د/i,
  ],
};

const router_fa_IR_lib_match_matchDayPatterns = {
  narrow: /^[شیدسچپج]/i,
  short: /^(ش|ج|1ش|2ش|3ش|4ش|5ش)/i,
  abbreviated: /^(یکشنبه|دوشنبه|سه‌شنبه|چهارشنبه|پنج‌شنبه|جمعه|شنبه)/i,
  wide: /^(یکشنبه|دوشنبه|سه‌شنبه|چهارشنبه|پنج‌شنبه|جمعه|شنبه)/i,
};
const router_fa_IR_lib_match_parseDayPatterns = {
  narrow: [/^ی/i, /^دو/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i],
  any: [
    /^(ی|1ش|یکشنبه)/i,
    /^(د|2ش|دوشنبه)/i,
    /^(س|3ش|سه‌شنبه)/i,
    /^(چ|4ش|چهارشنبه)/i,
    /^(پ|5ش|پنجشنبه)/i,
    /^(ج|جمعه)/i,
    /^(ش|شنبه)/i,
  ],
};

const router_fa_IR_lib_match_matchDayPeriodPatterns = {
  narrow: /^(ب|ق|ن|ظ|ص|ب.ظ.|ع|ش)/i,
  abbreviated: /^(ق.ظ.|ب.ظ.|نیمه‌شب|ظهر|صبح|بعدازظهر|عصر|شب)/i,
  wide: /^(قبل‌ازظهر|نیمه‌شب|ظهر|صبح|بعدازظهر|عصر|شب)/i,
};
const router_fa_IR_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^(ق|ق.ظ.|قبل‌ازظهر)/i,
    pm: /^(ب|ب.ظ.|بعدازظهر)/i,
    midnight: /^(‌نیمه‌شب|ن)/i,
    noon: /^(ظ|ظهر)/i,
    morning: /(ص|صبح)/i,
    afternoon: /(ب|ب.ظ.|بعدازظهر)/i,
    evening: /(ع|عصر)/i,
    night: /(ش|شب)/i,
  },
};

const router_fa_IR_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_fa_IR_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_fa_IR_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_fa_IR_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fa_IR_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_fa_IR_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fa_IR_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_fa_IR_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fa_IR_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_fa_IR_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fa_IR_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_fa_IR_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fa_IR_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/fa-IR.mjs






/**
 * @category Locales
 * @summary Persian/Farsi locale (Iran).
 * @language Persian
 * @iso-639-2 ira
 * @author Morteza Ziyae [@mort3za](https://github.com/mort3za)
 */
const router_faIR = {
  code: "fa-IR",
  formatDistance: router_fa_IR_lib_formatDistance_formatDistance,
  formatLong: router_fa_IR_lib_formatLong_formatLong,
  formatRelative: router_fa_IR_lib_formatRelative_formatRelative,
  localize: router_fa_IR_lib_localize_localize,
  match: router_fa_IR_lib_match_match,
  options: {
    weekStartsOn: 6 /* Saturday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_fa_IR = ((/* unused pure expression or super */ null && (router_faIR)));

;// ./node_modules/date-fns/locale/fi/_lib/formatDistance.mjs
function router_futureSeconds(text) {
  return text.replace(/sekuntia?/, "sekunnin");
}

function router_futureMinutes(text) {
  return text.replace(/minuuttia?/, "minuutin");
}

function router_futureHours(text) {
  return text.replace(/tuntia?/, "tunnin");
}

function router_futureDays(text) {
  return text.replace(/päivää?/, "päivän");
}

function router_futureWeeks(text) {
  return text.replace(/(viikko|viikkoa)/, "viikon");
}

function router_futureMonths(text) {
  return text.replace(/(kuukausi|kuukautta)/, "kuukauden");
}

function router_futureYears(text) {
  return text.replace(/(vuosi|vuotta)/, "vuoden");
}

const router_fi_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "alle sekunti",
    other: "alle {{count}} sekuntia",
    futureTense: router_futureSeconds,
  },

  xSeconds: {
    one: "sekunti",
    other: "{{count}} sekuntia",
    futureTense: router_futureSeconds,
  },

  halfAMinute: {
    one: "puoli minuuttia",
    other: "puoli minuuttia",
    futureTense: (_text) => "puolen minuutin",
  },

  lessThanXMinutes: {
    one: "alle minuutti",
    other: "alle {{count}} minuuttia",
    futureTense: router_futureMinutes,
  },

  xMinutes: {
    one: "minuutti",
    other: "{{count}} minuuttia",
    futureTense: router_futureMinutes,
  },

  aboutXHours: {
    one: "noin tunti",
    other: "noin {{count}} tuntia",
    futureTense: router_futureHours,
  },

  xHours: {
    one: "tunti",
    other: "{{count}} tuntia",
    futureTense: router_futureHours,
  },

  xDays: {
    one: "päivä",
    other: "{{count}} päivää",
    futureTense: router_futureDays,
  },

  aboutXWeeks: {
    one: "noin viikko",
    other: "noin {{count}} viikkoa",
    futureTense: router_futureWeeks,
  },

  xWeeks: {
    one: "viikko",
    other: "{{count}} viikkoa",
    futureTense: router_futureWeeks,
  },

  aboutXMonths: {
    one: "noin kuukausi",
    other: "noin {{count}} kuukautta",
    futureTense: router_futureMonths,
  },

  xMonths: {
    one: "kuukausi",
    other: "{{count}} kuukautta",
    futureTense: router_futureMonths,
  },

  aboutXYears: {
    one: "noin vuosi",
    other: "noin {{count}} vuotta",
    futureTense: router_futureYears,
  },

  xYears: {
    one: "vuosi",
    other: "{{count}} vuotta",
    futureTense: router_futureYears,
  },

  overXYears: {
    one: "yli vuosi",
    other: "yli {{count}} vuotta",
    futureTense: router_futureYears,
  },

  almostXYears: {
    one: "lähes vuosi",
    other: "lähes {{count}} vuotta",
    futureTense: router_futureYears,
  },
};

const router_fi_lib_formatDistance_formatDistance = (token, count, options) => {
  const tokenValue = router_fi_lib_formatDistance_formatDistanceLocale[token];
  const result =
    count === 1
      ? tokenValue.one
      : tokenValue.other.replace("{{count}}", String(count));

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return tokenValue.futureTense(result) + " kuluttua";
    } else {
      return result + " sitten";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/fi/_lib/formatLong.mjs


const router_fi_lib_formatLong_dateFormats = {
  full: "eeee d. MMMM y",
  long: "d. MMMM y",
  medium: "d. MMM y",
  short: "d.M.y",
};

const router_fi_lib_formatLong_timeFormats = {
  full: "HH.mm.ss zzzz",
  long: "HH.mm.ss z",
  medium: "HH.mm.ss",
  short: "HH.mm",
};

const router_fi_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'klo' {{time}}",
  long: "{{date}} 'klo' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_fi_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_fi_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_fi_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_fi_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/fi/_lib/formatRelative.mjs
const router_fi_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'viime' eeee 'klo' p",
  yesterday: "'eilen klo' p",
  today: "'tänään klo' p",
  tomorrow: "'huomenna klo' p",
  nextWeek: "'ensi' eeee 'klo' p",
  other: "P",
};

const router_fi_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_fi_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/fi/_lib/localize.mjs


const router_fi_lib_localize_eraValues = {
  narrow: ["eaa.", "jaa."],
  abbreviated: ["eaa.", "jaa."],
  wide: ["ennen ajanlaskun alkua", "jälkeen ajanlaskun alun"],
};

const router_fi_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1. kvartaali", "2. kvartaali", "3. kvartaali", "4. kvartaali"],
};

const router_fi_lib_localize_monthValues = {
  narrow: ["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"],
  abbreviated: [
    "tammi",
    "helmi",
    "maalis",
    "huhti",
    "touko",
    "kesä",
    "heinä",
    "elo",
    "syys",
    "loka",
    "marras",
    "joulu",
  ],

  wide: [
    "tammikuu",
    "helmikuu",
    "maaliskuu",
    "huhtikuu",
    "toukokuu",
    "kesäkuu",
    "heinäkuu",
    "elokuu",
    "syyskuu",
    "lokakuu",
    "marraskuu",
    "joulukuu",
  ],
};

const router_fi_lib_localize_formattingMonthValues = {
  narrow: router_fi_lib_localize_monthValues.narrow,
  abbreviated: router_fi_lib_localize_monthValues.abbreviated,
  wide: [
    "tammikuuta",
    "helmikuuta",
    "maaliskuuta",
    "huhtikuuta",
    "toukokuuta",
    "kesäkuuta",
    "heinäkuuta",
    "elokuuta",
    "syyskuuta",
    "lokakuuta",
    "marraskuuta",
    "joulukuuta",
  ],
};

const router_fi_lib_localize_dayValues = {
  narrow: ["S", "M", "T", "K", "T", "P", "L"],
  short: ["su", "ma", "ti", "ke", "to", "pe", "la"],
  abbreviated: ["sunn.", "maan.", "tiis.", "kesk.", "torst.", "perj.", "la"],

  wide: [
    "sunnuntai",
    "maanantai",
    "tiistai",
    "keskiviikko",
    "torstai",
    "perjantai",
    "lauantai",
  ],
};

const router_formattingDayValues = {
  narrow: router_fi_lib_localize_dayValues.narrow,
  short: router_fi_lib_localize_dayValues.short,
  abbreviated: router_fi_lib_localize_dayValues.abbreviated,
  wide: [
    "sunnuntaina",
    "maanantaina",
    "tiistaina",
    "keskiviikkona",
    "torstaina",
    "perjantaina",
    "lauantaina",
  ],
};

const router_fi_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ap",
    pm: "ip",
    midnight: "keskiyö",
    noon: "keskipäivä",
    morning: "ap",
    afternoon: "ip",
    evening: "illalla",
    night: "yöllä",
  },
  abbreviated: {
    am: "ap",
    pm: "ip",
    midnight: "keskiyö",
    noon: "keskipäivä",
    morning: "ap",
    afternoon: "ip",
    evening: "illalla",
    night: "yöllä",
  },
  wide: {
    am: "ap",
    pm: "ip",
    midnight: "keskiyöllä",
    noon: "keskipäivällä",
    morning: "aamupäivällä",
    afternoon: "iltapäivällä",
    evening: "illalla",
    night: "yöllä",
  },
};

const router_fi_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_fi_lib_localize_localize = {
  ordinalNumber: router_fi_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_fi_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_fi_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_fi_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_fi_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_fi_lib_localize_dayValues,
    defaultWidth: "wide",
    formattingValues: router_formattingDayValues,
    defaultFormattingWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_fi_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/fi/_lib/match.mjs



const router_fi_lib_match_matchOrdinalNumberPattern = /^(\d+)(\.)/i;
const router_fi_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_fi_lib_match_matchEraPatterns = {
  narrow: /^(e|j)/i,
  abbreviated: /^(eaa.|jaa.)/i,
  wide: /^(ennen ajanlaskun alkua|jälkeen ajanlaskun alun)/i,
};
const router_fi_lib_match_parseEraPatterns = {
  any: [/^e/i, /^j/i],
};

const router_fi_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234]\.? kvartaali/i,
};
const router_fi_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_fi_lib_match_matchMonthPatterns = {
  narrow: /^[thmkeslj]/i,
  abbreviated:
    /^(tammi|helmi|maalis|huhti|touko|kesä|heinä|elo|syys|loka|marras|joulu)/i,
  wide: /^(tammikuu|helmikuu|maaliskuu|huhtikuu|toukokuu|kesäkuu|heinäkuu|elokuu|syyskuu|lokakuu|marraskuu|joulukuu)(ta)?/i,
};
const router_fi_lib_match_parseMonthPatterns = {
  narrow: [
    /^t/i,
    /^h/i,
    /^m/i,
    /^h/i,
    /^t/i,
    /^k/i,
    /^h/i,
    /^e/i,
    /^s/i,
    /^l/i,
    /^m/i,
    /^j/i,
  ],

  any: [
    /^ta/i,
    /^hel/i,
    /^maa/i,
    /^hu/i,
    /^to/i,
    /^k/i,
    /^hei/i,
    /^e/i,
    /^s/i,
    /^l/i,
    /^mar/i,
    /^j/i,
  ],
};

const router_fi_lib_match_matchDayPatterns = {
  narrow: /^[smtkpl]/i,
  short: /^(su|ma|ti|ke|to|pe|la)/i,
  abbreviated: /^(sunn.|maan.|tiis.|kesk.|torst.|perj.|la)/i,
  wide: /^(sunnuntai|maanantai|tiistai|keskiviikko|torstai|perjantai|lauantai)(na)?/i,
};
const router_fi_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^k/i, /^t/i, /^p/i, /^l/i],
  any: [/^s/i, /^m/i, /^ti/i, /^k/i, /^to/i, /^p/i, /^l/i],
};

const router_fi_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(ap|ip|keskiyö|keskipäivä|aamupäivällä|iltapäivällä|illalla|yöllä)/i,
  any: /^(ap|ip|keskiyöllä|keskipäivällä|aamupäivällä|iltapäivällä|illalla|yöllä)/i,
};
const router_fi_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ap/i,
    pm: /^ip/i,
    midnight: /^keskiyö/i,
    noon: /^keskipäivä/i,
    morning: /aamupäivällä/i,
    afternoon: /iltapäivällä/i,
    evening: /illalla/i,
    night: /yöllä/i,
  },
};

const router_fi_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_fi_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_fi_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_fi_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fi_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_fi_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fi_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_fi_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fi_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_fi_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fi_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_fi_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_fi_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/fi.mjs






/**
 * @category Locales
 * @summary Finnish locale.
 * @language Finnish
 * @iso-639-2 fin
 * @author Pyry-Samuli Lahti [@Pyppe](https://github.com/Pyppe)
 * @author Edo Rivai [@mikolajgrzyb](https://github.com/mikolajgrzyb)
 * @author Samu Juvonen [@sjuvonen](https://github.com/sjuvonen)
 */
const router_fi = {
  code: "fi",
  formatDistance: router_fi_lib_formatDistance_formatDistance,
  formatLong: router_fi_lib_formatLong_formatLong,
  formatRelative: router_fi_lib_formatRelative_formatRelative,
  localize: router_fi_lib_localize_localize,
  match: router_fi_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_fi = ((/* unused pure expression or super */ null && (router_fi)));

;// ./node_modules/date-fns/locale/fr/_lib/formatDistance.mjs
const router_fr_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "moins d’une seconde",
    other: "moins de {{count}} secondes",
  },

  xSeconds: {
    one: "1 seconde",
    other: "{{count}} secondes",
  },

  halfAMinute: "30 secondes",

  lessThanXMinutes: {
    one: "moins d’une minute",
    other: "moins de {{count}} minutes",
  },

  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes",
  },

  aboutXHours: {
    one: "environ 1 heure",
    other: "environ {{count}} heures",
  },

  xHours: {
    one: "1 heure",
    other: "{{count}} heures",
  },

  xDays: {
    one: "1 jour",
    other: "{{count}} jours",
  },

  aboutXWeeks: {
    one: "environ 1 semaine",
    other: "environ {{count}} semaines",
  },

  xWeeks: {
    one: "1 semaine",
    other: "{{count}} semaines",
  },

  aboutXMonths: {
    one: "environ 1 mois",
    other: "environ {{count}} mois",
  },

  xMonths: {
    one: "1 mois",
    other: "{{count}} mois",
  },

  aboutXYears: {
    one: "environ 1 an",
    other: "environ {{count}} ans",
  },

  xYears: {
    one: "1 an",
    other: "{{count}} ans",
  },

  overXYears: {
    one: "plus d’un an",
    other: "plus de {{count}} ans",
  },

  almostXYears: {
    one: "presqu’un an",
    other: "presque {{count}} ans",
  },
};

const router_fr_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;
  const form = router_fr_lib_formatDistance_formatDistanceLocale[token];
  if (typeof form === "string") {
    result = form;
  } else if (count === 1) {
    result = form.one;
  } else {
    result = form.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "dans " + result;
    } else {
      return "il y a " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/fr/_lib/formatLong.mjs


const router_fr_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd/MM/y",
};

const router_fr_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_fr_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'à' {{time}}",
  long: "{{date}} 'à' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_fr_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_fr_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_fr_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_fr_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/fr/_lib/formatRelative.mjs
const router_fr_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'dernier à' p",
  yesterday: "'hier à' p",
  today: "'aujourd’hui à' p",
  tomorrow: "'demain à' p'",
  nextWeek: "eeee 'prochain à' p",
  other: "P",
};

const router_fr_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_fr_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/fr/_lib/localize.mjs


const router_fr_lib_localize_eraValues = {
  narrow: ["av. J.-C", "ap. J.-C"],
  abbreviated: ["av. J.-C", "ap. J.-C"],
  wide: ["avant Jésus-Christ", "après Jésus-Christ"],
};

const router_fr_lib_localize_quarterValues = {
  narrow: ["T1", "T2", "T3", "T4"],
  abbreviated: ["1er trim.", "2ème trim.", "3ème trim.", "4ème trim."],
  wide: ["1er trimestre", "2ème trimestre", "3ème trimestre", "4ème trimestre"],
};

const router_fr_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "janv.",
    "févr.",
    "mars",
    "avr.",
    "mai",
    "juin",
    "juil.",
    "août",
    "sept.",
    "oct.",
    "nov.",
    "déc.",
  ],

  wide: [
    "janvier",
    "février",
    "mars",
    "avril",
    "mai",
    "juin",
    "juillet",
    "août",
    "septembre",
    "octobre",
    "novembre",
    "décembre",
  ],
};

const router_fr_lib_localize_dayValues = {
  narrow: ["D", "L", "M", "M", "J", "V", "S"],
  short: ["di", "lu", "ma", "me", "je", "ve", "sa"],
  abbreviated: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],

  wide: [
    "dimanche",
    "lundi",
    "mardi",
    "mercredi",
    "jeudi",
    "vendredi",
    "samedi",
  ],
};

const router_fr_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "minuit",
    noon: "midi",
    morning: "mat.",
    afternoon: "ap.m.",
    evening: "soir",
    night: "mat.",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "minuit",
    noon: "midi",
    morning: "matin",
    afternoon: "après-midi",
    evening: "soir",
    night: "matin",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "minuit",
    noon: "midi",
    morning: "du matin",
    afternoon: "de l’après-midi",
    evening: "du soir",
    night: "du matin",
  },
};

const router_fr_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = options?.unit;

  if (number === 0) return "0";

  const feminineUnits = ["year", "week", "hour", "minute", "second"];
  let suffix;

  if (number === 1) {
    suffix = unit && feminineUnits.includes(unit) ? "ère" : "er";
  } else {
    suffix = "ème";
  }

  return number + suffix;
};

const router_LONG_MONTHS_TOKENS = ["MMM", "MMMM"];

const router_fr_lib_localize_localize = {
  preprocessor: (date, parts) => {
    // Replaces the `do` tokens with `d` when used with long month tokens and the day of the month is greater than one.
    // Use case "do MMMM" => 1er août, 29 août
    // see https://github.com/date-fns/date-fns/issues/1391

    if (date.getDate() === 1) return parts;

    const hasLongMonthToken = parts.some(
      (part) => part.isToken && router_LONG_MONTHS_TOKENS.includes(part.value),
    );

    if (!hasLongMonthToken) return parts;

    return parts.map((part) =>
      part.isToken && part.value === "do"
        ? { isToken: true, value: "d" }
        : part,
    );
  },

  ordinalNumber: router_fr_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_fr_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_fr_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_fr_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_fr_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_fr_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/fr/_lib/match.mjs



const router_fr_lib_match_matchOrdinalNumberPattern = /^(\d+)(ième|ère|ème|er|e)?/i;
const router_fr_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_fr_lib_match_matchEraPatterns = {
  narrow: /^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,
  abbreviated: /^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,
  wide: /^(avant Jésus-Christ|après Jésus-Christ)/i,
};
const router_fr_lib_match_parseEraPatterns = {
  any: [/^av/i, /^ap/i],
};

const router_fr_lib_match_matchQuarterPatterns = {
  narrow: /^T?[1234]/i,
  abbreviated: /^[1234](er|ème|e)? trim\.?/i,
  wide: /^[1234](er|ème|e)? trimestre/i,
};
const router_fr_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_fr_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated:
    /^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\.?/i,
  wide: /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
};
const router_fr_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^av/i,
    /^ma/i,
    /^juin/i,
    /^juil/i,
    /^ao/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_fr_lib_match_matchDayPatterns = {
  narrow: /^[lmjvsd]/i,
  short: /^(di|lu|ma|me|je|ve|sa)/i,
  abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,
  wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i,
};
const router_fr_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
  any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i],
};

const router_fr_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,
  any: /^([ap]\.?\s?m\.?|du matin|de l'après[-\s]midi|du soir|de la nuit)/i,
};
const router_fr_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^min/i,
    noon: /^mid/i,
    morning: /mat/i,
    afternoon: /ap/i,
    evening: /soir/i,
    night: /nuit/i,
  },
};

const router_fr_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_fr_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_fr_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_fr_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fr_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_fr_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fr_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_fr_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fr_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_fr_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fr_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_fr_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_fr_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/fr.mjs






/**
 * @category Locales
 * @summary French locale.
 * @language French
 * @iso-639-2 fra
 * @author Jean Dupouy [@izeau](https://github.com/izeau)
 * @author François B [@fbonzon](https://github.com/fbonzon)
 */
const router_fr = {
  code: "fr",
  formatDistance: router_fr_lib_formatDistance_formatDistance,
  formatLong: router_fr_lib_formatLong_formatLong,
  formatRelative: router_fr_lib_formatRelative_formatRelative,
  localize: router_fr_lib_localize_localize,
  match: router_fr_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_fr = ((/* unused pure expression or super */ null && (router_fr)));

;// ./node_modules/date-fns/locale/fr-CA/_lib/formatLong.mjs


const router_fr_CA_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "yy-MM-dd",
};

const router_fr_CA_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_fr_CA_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'à' {{time}}",
  long: "{{date}} 'à' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_fr_CA_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_fr_CA_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_fr_CA_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_fr_CA_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/fr-CA.mjs
// Same as fr





// Unique for fr-CA


/**
 * @category Locales
 * @summary French locale (Canada).
 * @language French
 * @iso-639-2 fra
 * @author Jean Dupouy [@izeau](https://github.com/izeau)
 * @author François B [@fbonzon](https://github.com/fbonzon)
 * @author Gabriele Petrioli [@gpetrioli](https://github.com/gpetrioli)
 */
const router_frCA = {
  code: "fr-CA",
  formatDistance: router_fr_lib_formatDistance_formatDistance,
  formatLong: router_fr_CA_lib_formatLong_formatLong,
  formatRelative: router_fr_lib_formatRelative_formatRelative,
  localize: router_fr_lib_localize_localize,
  match: router_fr_lib_match_match,

  // Unique for fr-CA
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_fr_CA = ((/* unused pure expression or super */ null && (router_frCA)));

;// ./node_modules/date-fns/locale/fr-CH/_lib/formatLong.mjs


const router_fr_CH_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd.MM.y",
};

const router_fr_CH_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_fr_CH_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'à' {{time}}",
  long: "{{date}} 'à' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_fr_CH_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_fr_CH_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_fr_CH_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_fr_CH_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/fr-CH/_lib/formatRelative.mjs
const router_fr_CH_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'la semaine dernière à' p",
  yesterday: "'hier à' p",
  today: "'aujourd’hui à' p",
  tomorrow: "'demain à' p'",
  nextWeek: "eeee 'la semaine prochaine à' p",
  other: "P",
};

const router_fr_CH_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_fr_CH_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/fr-CH.mjs
// Same as fr




// Unique for fr-CH



/**
 * @category Locales
 * @summary French locale (Switzerland).
 * @language French
 * @iso-639-2 fra
 * @author Jean Dupouy [@izeau](https://github.com/izeau)
 * @author François B [@fbonzon](https://github.com/fbonzon)
 * @author Van Vuong Ngo [@vanvuongngo](https://github.com/vanvuongngo)
 * @author Alex Hoeing [@dcbn](https://github.com/dcbn)
 */
const router_frCH = {
  code: "fr-CH",
  formatDistance: router_fr_lib_formatDistance_formatDistance,
  formatLong: router_fr_CH_lib_formatLong_formatLong,
  formatRelative: router_fr_CH_lib_formatRelative_formatRelative,
  localize: router_fr_lib_localize_localize,
  match: router_fr_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_fr_CH = ((/* unused pure expression or super */ null && (router_frCH)));

;// ./node_modules/date-fns/locale/fy/_lib/formatDistance.mjs
const router_fy_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "minder as 1 sekonde",
    other: "minder as {{count}} sekonden",
  },

  xSeconds: {
    one: "1 sekonde",
    other: "{{count}} sekonden",
  },

  halfAMinute: "oardel minút",

  lessThanXMinutes: {
    one: "minder as 1 minút",
    other: "minder as {{count}} minuten",
  },

  xMinutes: {
    one: "1 minút",
    other: "{{count}} minuten",
  },

  aboutXHours: {
    one: "sawat 1 oere",
    other: "sawat {{count}} oere",
  },

  xHours: {
    one: "1 oere",
    other: "{{count}} oere",
  },

  xDays: {
    one: "1 dei",
    other: "{{count}} dagen",
  },

  aboutXWeeks: {
    one: "sawat 1 wike",
    other: "sawat {{count}} wiken",
  },

  xWeeks: {
    one: "1 wike",
    other: "{{count}} wiken",
  },

  aboutXMonths: {
    one: "sawat 1 moanne",
    other: "sawat {{count}} moannen",
  },

  xMonths: {
    one: "1 moanne",
    other: "{{count}} moannen",
  },

  aboutXYears: {
    one: "sawat 1 jier",
    other: "sawat {{count}} jier",
  },

  xYears: {
    one: "1 jier",
    other: "{{count}} jier",
  },

  overXYears: {
    one: "mear as 1 jier",
    other: "mear as {{count}}s jier",
  },

  almostXYears: {
    one: "hast 1 jier",
    other: "hast {{count}} jier",
  },
};

const router_fy_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_fy_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "oer " + result;
    } else {
      return result + " lyn";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/fy/_lib/formatLong.mjs


const router_fy_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd-MM-y",
};

const router_fy_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_fy_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'om' {{time}}",
  long: "{{date}} 'om' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_fy_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_fy_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_fy_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_fy_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/fy/_lib/formatRelative.mjs
const router_fy_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'ôfrûne' eeee 'om' p",
  yesterday: "'juster om' p",
  today: "'hjoed om' p",
  tomorrow: "'moarn om' p",
  nextWeek: "eeee 'om' p",
  other: "P",
};

const router_fy_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_fy_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/fy/_lib/localize.mjs


const router_fy_lib_localize_eraValues = {
  narrow: ["f.K.", "n.K."],
  abbreviated: ["f.Kr.", "n.Kr."],
  wide: ["foar Kristus", "nei Kristus"],
};

const router_fy_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: ["1e fearnsjier", "2e fearnsjier", "3e fearnsjier", "4e fearnsjier"],
};

const router_fy_lib_localize_monthValues = {
  narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
  abbreviated: [
    "jan.",
    "feb.",
    "mrt.",
    "apr.",
    "mai.",
    "jun.",
    "jul.",
    "aug.",
    "sep.",
    "okt.",
    "nov.",
    "des.",
  ],

  wide: [
    "jannewaris",
    "febrewaris",
    "maart",
    "april",
    "maaie",
    "juny",
    "july",
    "augustus",
    "septimber",
    "oktober",
    "novimber",
    "desimber",
  ],
};

const router_fy_lib_localize_dayValues = {
  narrow: ["s", "m", "t", "w", "t", "f", "s"],
  short: ["si", "mo", "ti", "wo", "to", "fr", "so"],
  abbreviated: ["snein", "moa", "tii", "woa", "ton", "fre", "sneon"],
  wide: [
    "snein",
    "moandei",
    "tiisdei",
    "woansdei",
    "tongersdei",
    "freed",
    "sneon",
  ],
};

const router_fy_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "middei",
    morning: "moarns",
    afternoon: "middeis",
    evening: "jûns",
    night: "nachts",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "middei",
    morning: "moarns",
    afternoon: "middeis",
    evening: "jûns",
    night: "nachts",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "middei",
    morning: "moarns",
    afternoon: "middeis",
    evening: "jûns",
    night: "nachts",
  },
};

const router_fy_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "e";
};

const router_fy_lib_localize_localize = {
  ordinalNumber: router_fy_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_fy_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_fy_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_fy_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_fy_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_fy_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/fy/_lib/match.mjs



const router_fy_lib_match_matchOrdinalNumberPattern = /^(\d+)e?/i;
const router_fy_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_fy_lib_match_matchEraPatterns = {
  narrow: /^([fn]\.? ?K\.?)/,
  abbreviated: /^([fn]\. ?Kr\.?)/,
  wide: /^((foar|nei) Kristus)/,
};
const router_fy_lib_match_parseEraPatterns = {
  any: [/^f/, /^n/],
};

const router_fy_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^K[1234]/i,
  wide: /^[1234]e fearnsjier/i,
};

const router_fy_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_fy_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated:
    /^(jan.|feb.|mrt.|apr.|mai.|jun.|jul.|aug.|sep.|okt.|nov.|des.)/i,
  wide: /^(jannewaris|febrewaris|maart|april|maaie|juny|july|augustus|septimber|oktober|novimber|desimber)/i,
};
const router_fy_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^jan/i,
    /^feb/i,
    /^m(r|a)/i,
    /^apr/i,
    /^mai/i,
    /^jun/i,
    /^jul/i,
    /^aug/i,
    /^sep/i,
    /^okt/i,
    /^nov/i,
    /^des/i,
  ],
};

const router_fy_lib_match_matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(si|mo|ti|wo|to|fr|so)/i,
  abbreviated: /^(snein|moa|tii|woa|ton|fre|sneon)/i,
  wide: /^(snein|moandei|tiisdei|woansdei|tongersdei|freed|sneon)/i,
};
const router_fy_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^sn/i, /^mo/i, /^ti/i, /^wo/i, /^to/i, /^fr/i, /^sn/i],
};

const router_fy_lib_match_matchDayPeriodPatterns = {
  any: /^(am|pm|middernacht|middeis|moarns|middei|jûns|nachts)/i,
};
const router_fy_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^am/i,
    pm: /^pm/i,
    midnight: /^middernacht/i,
    noon: /^middei/i,
    morning: /moarns/i,
    afternoon: /^middeis/i,
    evening: /jûns/i,
    night: /nachts/i,
  },
};

const router_fy_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_fy_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_fy_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_fy_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fy_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_fy_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fy_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_fy_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fy_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_fy_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_fy_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_fy_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_fy_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/fy.mjs






/**
 * @category Locales
 * @summary Western Frisian locale (Netherlands).
 * @language West Frisian
 * @iso-639-2 fry
 * @author Damon Asberg [@damon02](https://github.com/damon02)
 */
const router_fy = {
  code: "fy",
  formatDistance: router_fy_lib_formatDistance_formatDistance,
  formatLong: router_fy_lib_formatLong_formatLong,
  formatRelative: router_fy_lib_formatRelative_formatRelative,
  localize: router_fy_lib_localize_localize,
  match: router_fy_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_fy = ((/* unused pure expression or super */ null && (router_fy)));

;// ./node_modules/date-fns/locale/gd/_lib/formatDistance.mjs
const router_gd_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "nas lugha na diog",
    other: "nas lugha na {{count}} diogan",
  },

  xSeconds: {
    one: "1 diog",
    two: "2 dhiog",
    twenty: "20 diog",
    other: "{{count}} diogan",
  },

  halfAMinute: "leth mhionaid",

  lessThanXMinutes: {
    one: "nas lugha na mionaid",
    other: "nas lugha na {{count}} mionaidean",
  },

  xMinutes: {
    one: "1 mionaid",
    two: "2 mhionaid",
    twenty: "20 mionaid",
    other: "{{count}} mionaidean",
  },

  aboutXHours: {
    one: "mu uair de thìde",
    other: "mu {{count}} uairean de thìde",
  },

  xHours: {
    one: "1 uair de thìde",
    two: "2 uair de thìde",
    twenty: "20 uair de thìde",
    other: "{{count}} uairean de thìde",
  },

  xDays: {
    one: "1 là",
    other: "{{count}} là",
  },

  aboutXWeeks: {
    one: "mu 1 seachdain",
    other: "mu {{count}} seachdainean",
  },

  xWeeks: {
    one: "1 seachdain",
    other: "{{count}} seachdainean",
  },

  aboutXMonths: {
    one: "mu mhìos",
    other: "mu {{count}} mìosan",
  },

  xMonths: {
    one: "1 mìos",
    other: "{{count}} mìosan",
  },

  aboutXYears: {
    one: "mu bhliadhna",
    other: "mu {{count}} bliadhnaichean",
  },

  xYears: {
    one: "1 bhliadhna",
    other: "{{count}} bliadhna",
  },

  overXYears: {
    one: "còrr is bliadhna",
    other: "còrr is {{count}} bliadhnaichean",
  },

  almostXYears: {
    one: "cha mhòr bliadhna",
    other: "cha mhòr {{count}} bliadhnaichean",
  },
};

const router_gd_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_gd_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 2 && !!tokenValue.two) {
    result = tokenValue.two;
  } else if (count === 20 && !!tokenValue.twenty) {
    result = tokenValue.twenty;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "ann an " + result;
    } else {
      return "o chionn " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/gd/_lib/formatLong.mjs


const router_gd_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_gd_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_gd_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'aig' {{time}}",
  long: "{{date}} 'aig' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_gd_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_gd_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_gd_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_gd_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/gd/_lib/formatRelative.mjs
const router_gd_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'mu dheireadh' eeee 'aig' p", //FIX
  yesterday: "'an-dè aig' p",
  today: "'an-diugh aig' p",
  tomorrow: "'a-màireach aig' p",
  nextWeek: "eeee 'aig' p",
  other: "P",
};

const router_gd_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_gd_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/gd/_lib/localize.mjs


const router_gd_lib_localize_eraValues = {
  narrow: ["R", "A"],
  abbreviated: ["RC", "AD"],
  wide: ["ro Chrìosta", "anno domini"],
};

const router_gd_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["C1", "C2", "C3", "C4"],
  wide: [
    "a' chiad chairteal",
    "an dàrna cairteal",
    "an treas cairteal",
    "an ceathramh cairteal",
  ],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_gd_lib_localize_monthValues = {
  narrow: ["F", "G", "M", "G", "C", "Ò", "I", "L", "S", "D", "S", "D"],
  abbreviated: [
    "Faoi",
    "Gear",
    "Màrt",
    "Gibl",
    "Cèit",
    "Ògmh",
    "Iuch",
    "Lùn",
    "Sult",
    "Dàmh",
    "Samh",
    "Dùbh",
  ],

  wide: [
    "Am Faoilleach",
    "An Gearran",
    "Am Màrt",
    "An Giblean",
    "An Cèitean",
    "An t-Ògmhios",
    "An t-Iuchar",
    "An Lùnastal",
    "An t-Sultain",
    "An Dàmhair",
    "An t-Samhain",
    "An Dùbhlachd",
  ],
};

const router_gd_lib_localize_dayValues = {
  narrow: ["D", "L", "M", "C", "A", "H", "S"],
  short: ["Dò", "Lu", "Mà", "Ci", "Ar", "Ha", "Sa"],
  abbreviated: ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"],
  wide: [
    "Didòmhnaich",
    "Diluain",
    "Dimàirt",
    "Diciadain",
    "Diardaoin",
    "Dihaoine",
    "Disathairne",
  ],
};

const router_gd_lib_localize_dayPeriodValues = {
  narrow: {
    am: "m",
    pm: "f",
    midnight: "m.o.",
    noon: "m.l.",
    morning: "madainn",
    afternoon: "feasgar",
    evening: "feasgar",
    night: "oidhche",
  },
  abbreviated: {
    am: "M.",
    pm: "F.",
    midnight: "meadhan oidhche",
    noon: "meadhan là",
    morning: "madainn",
    afternoon: "feasgar",
    evening: "feasgar",
    night: "oidhche",
  },
  wide: {
    am: "m.",
    pm: "f.",
    midnight: "meadhan oidhche",
    noon: "meadhan là",
    morning: "madainn",
    afternoon: "feasgar",
    evening: "feasgar",
    night: "oidhche",
  },
};

const router_gd_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "m",
    pm: "f",
    midnight: "m.o.",
    noon: "m.l.",
    morning: "sa mhadainn",
    afternoon: "feasgar",
    evening: "feasgar",
    night: "air an oidhche",
  },
  abbreviated: {
    am: "M.",
    pm: "F.",
    midnight: "meadhan oidhche",
    noon: "meadhan là",
    morning: "sa mhadainn",
    afternoon: "feasgar",
    evening: "feasgar",
    night: "air an oidhche",
  },
  wide: {
    am: "m.",
    pm: "f.",
    midnight: "meadhan oidhche",
    noon: "meadhan là",
    morning: "sa mhadainn",
    afternoon: "feasgar",
    evening: "feasgar",
    night: "air an oidhche",
  },
};

const router_gd_lib_localize_ordinalNumber = (dirtyNumber) => {
  const number = Number(dirtyNumber);
  const rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "d";
      case 2:
        return number + "na";
    }
  }

  if (rem100 === 12) {
    return number + "na";
  }

  return number + "mh";
};

const router_gd_lib_localize_localize = {
  ordinalNumber: router_gd_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_gd_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_gd_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_gd_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_gd_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_gd_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_gd_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/gd/_lib/match.mjs



const router_gd_lib_match_matchOrdinalNumberPattern = /^(\d+)(d|na|tr|mh)?/i;
const router_gd_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_gd_lib_match_matchEraPatterns = {
  narrow: /^(r|a)/i,
  abbreviated: /^(r\.?\s?c\.?|r\.?\s?a\.?\s?c\.?|a\.?\s?d\.?|a\.?\s?c\.?)/i,
  wide: /^(ro Chrìosta|ron aois choitchinn|anno domini|aois choitcheann)/i,
};
const router_gd_lib_match_parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i],
};

const router_gd_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^c[1234]/i,
  wide: /^[1234](cd|na|tr|mh)? cairteal/i,
};
const router_gd_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_gd_lib_match_matchMonthPatterns = {
  narrow: /^[fgmcòilsd]/i,
  abbreviated: /^(faoi|gear|màrt|gibl|cèit|ògmh|iuch|lùn|sult|dàmh|samh|dùbh)/i,
  wide: /^(am faoilleach|an gearran|am màrt|an giblean|an cèitean|an t-Ògmhios|an t-Iuchar|an lùnastal|an t-Sultain|an dàmhair|an t-Samhain|an dùbhlachd)/i,
};
const router_gd_lib_match_parseMonthPatterns = {
  narrow: [
    /^f/i,
    /^g/i,
    /^m/i,
    /^g/i,
    /^c/i,
    /^ò/i,
    /^i/i,
    /^l/i,
    /^s/i,
    /^d/i,
    /^s/i,
    /^d/i,
  ],

  any: [
    /^fa/i,
    /^ge/i,
    /^mà/i,
    /^gi/i,
    /^c/i,
    /^ò/i,
    /^i/i,
    /^l/i,
    /^su/i,
    /^d/i,
    /^sa/i,
    /^d/i,
  ],
};

const router_gd_lib_match_matchDayPatterns = {
  narrow: /^[dlmcahs]/i,
  short: /^(dò|lu|mà|ci|ar|ha|sa)/i,
  abbreviated: /^(did|dil|dim|dic|dia|dih|dis)/i,
  wide: /^(didòmhnaich|diluain|dimàirt|diciadain|diardaoin|dihaoine|disathairne)/i,
};
const router_gd_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],
  any: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],
};

const router_gd_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,
  any: /^([ap]\.?\s?m\.?|meadhan oidhche|meadhan là|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,
};
const router_gd_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^m/i,
    pm: /^f/i,
    midnight: /^meadhan oidhche/i,
    noon: /^meadhan là/i,
    morning: /sa mhadainn/i,
    afternoon: /feasgar/i,
    evening: /feasgar/i,
    night: /air an oidhche/i,
  },
};

const router_gd_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_gd_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_gd_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_gd_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gd_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_gd_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gd_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_gd_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gd_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_gd_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gd_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_gd_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_gd_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/gd.mjs






/**
 * @category Locales
 * @summary Scottish Gaelic.
 * @language Scottish Gaelic
 * @iso-639-2 gla
 * @author Lee Driscoll [@leedriscoll](https://github.com/leedriscoll)
 */
const router_gd = {
  code: "gd",
  formatDistance: router_gd_lib_formatDistance_formatDistance,
  formatLong: router_gd_lib_formatLong_formatLong,
  formatRelative: router_gd_lib_formatRelative_formatRelative,
  localize: router_gd_lib_localize_localize,
  match: router_gd_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_gd = ((/* unused pure expression or super */ null && (router_gd)));

;// ./node_modules/date-fns/locale/gl/_lib/formatDistance.mjs
const router_gl_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "menos dun segundo",
    other: "menos de {{count}} segundos",
  },

  xSeconds: {
    one: "1 segundo",
    other: "{{count}} segundos",
  },

  halfAMinute: "medio minuto",

  lessThanXMinutes: {
    one: "menos dun minuto",
    other: "menos de {{count}} minutos",
  },

  xMinutes: {
    one: "1 minuto",
    other: "{{count}} minutos",
  },

  aboutXHours: {
    one: "arredor dunha hora",
    other: "arredor de {{count}} horas",
  },

  xHours: {
    one: "1 hora",
    other: "{{count}} horas",
  },

  xDays: {
    one: "1 día",
    other: "{{count}} días",
  },

  aboutXWeeks: {
    one: "arredor dunha semana",
    other: "arredor de {{count}} semanas",
  },

  xWeeks: {
    one: "1 semana",
    other: "{{count}} semanas",
  },

  aboutXMonths: {
    one: "arredor de 1 mes",
    other: "arredor de {{count}} meses",
  },

  xMonths: {
    one: "1 mes",
    other: "{{count}} meses",
  },

  aboutXYears: {
    one: "arredor dun ano",
    other: "arredor de {{count}} anos",
  },

  xYears: {
    one: "1 ano",
    other: "{{count}} anos",
  },

  overXYears: {
    one: "máis dun ano",
    other: "máis de {{count}} anos",
  },

  almostXYears: {
    one: "case un ano",
    other: "case {{count}} anos",
  },
};

const router_gl_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_gl_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "en " + result;
    } else {
      return "hai " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/gl/_lib/formatLong.mjs


const router_gl_lib_formatLong_dateFormats = {
  full: "EEEE, d 'de' MMMM y",
  long: "d 'de' MMMM y",
  medium: "d MMM y",
  short: "dd/MM/y",
};

const router_gl_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_gl_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'ás' {{time}}",
  long: "{{date}} 'ás' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_gl_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_gl_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_gl_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_gl_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/gl/_lib/formatRelative.mjs
const router_gl_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'o' eeee 'pasado á' LT",
  yesterday: "'onte á' p",
  today: "'hoxe á' p",
  tomorrow: "'mañá á' p",
  nextWeek: "eeee 'á' p",
  other: "P",
};

const router_gl_lib_formatRelative_formatRelativeLocalePlural = {
  lastWeek: "'o' eeee 'pasado ás' p",
  yesterday: "'onte ás' p",
  today: "'hoxe ás' p",
  tomorrow: "'mañá ás' p",
  nextWeek: "eeee 'ás' p",
  other: "P",
};

const router_gl_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  if (date.getHours() !== 1) {
    return router_gl_lib_formatRelative_formatRelativeLocalePlural[token];
  }
  return router_gl_lib_formatRelative_formatRelativeLocale[token];
};

;// ./node_modules/date-fns/locale/gl/_lib/localize.mjs


const router_gl_lib_localize_eraValues = {
  narrow: ["AC", "DC"],
  abbreviated: ["AC", "DC"],
  wide: ["antes de cristo", "despois de cristo"],
};

const router_gl_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["T1", "T2", "T3", "T4"],
  wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"],
};

const router_gl_lib_localize_monthValues = {
  narrow: ["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
  abbreviated: [
    "xan",
    "feb",
    "mar",
    "abr",
    "mai",
    "xun",
    "xul",
    "ago",
    "set",
    "out",
    "nov",
    "dec",
  ],

  wide: [
    "xaneiro",
    "febreiro",
    "marzo",
    "abril",
    "maio",
    "xuño",
    "xullo",
    "agosto",
    "setembro",
    "outubro",
    "novembro",
    "decembro",
  ],
};

const router_gl_lib_localize_dayValues = {
  narrow: ["d", "l", "m", "m", "j", "v", "s"],
  short: ["do", "lu", "ma", "me", "xo", "ve", "sa"],
  abbreviated: ["dom", "lun", "mar", "mer", "xov", "ven", "sab"],
  wide: ["domingo", "luns", "martes", "mércores", "xoves", "venres", "sábado"],
};

const router_gl_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mn",
    noon: "md",
    morning: "mañá",
    afternoon: "tarde",
    evening: "tarde",
    night: "noite",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "medianoite",
    noon: "mediodía",
    morning: "mañá",
    afternoon: "tarde",
    evening: "tardiña",
    night: "noite",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "medianoite",
    noon: "mediodía",
    morning: "mañá",
    afternoon: "tarde",
    evening: "tardiña",
    night: "noite",
  },
};

const router_gl_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mn",
    noon: "md",
    morning: "da mañá",
    afternoon: "da tarde",
    evening: "da tardiña",
    night: "da noite",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "medianoite",
    noon: "mediodía",
    morning: "da mañá",
    afternoon: "da tarde",
    evening: "da tardiña",
    night: "da noite",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "medianoite",
    noon: "mediodía",
    morning: "da mañá",
    afternoon: "da tarde",
    evening: "da tardiña",
    night: "da noite",
  },
};

const router_gl_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "º";
};

const router_gl_lib_localize_localize = {
  ordinalNumber: router_gl_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_gl_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_gl_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_gl_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_gl_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_gl_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_gl_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/gl/_lib/match.mjs



const router_gl_lib_match_matchOrdinalNumberPattern = /^(\d+)(º)?/i;
const router_gl_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_gl_lib_match_matchEraPatterns = {
  narrow: /^(ac|dc|a|d)/i,
  abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
  wide: /^(antes de cristo|antes da era com[uú]n|despois de cristo|era com[uú]n)/i,
};
const router_gl_lib_match_parseEraPatterns = {
  any: [/^ac/i, /^dc/i],
  wide: [
    /^(antes de cristo|antes da era com[uú]n)/i,
    /^(despois de cristo|era com[uú]n)/i,
  ],
};

const router_gl_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^T[1234]/i,
  wide: /^[1234](º)? trimestre/i,
};
const router_gl_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_gl_lib_match_matchMonthPatterns = {
  narrow: /^[xfmasond]/i,
  abbreviated: /^(xan|feb|mar|abr|mai|xun|xul|ago|set|out|nov|dec)/i,
  wide: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,
};
const router_gl_lib_match_parseMonthPatterns = {
  narrow: [
    /^x/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^x/i,
    /^x/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^xan/i,
    /^feb/i,
    /^mar/i,
    /^abr/i,
    /^mai/i,
    /^xun/i,
    /^xul/i,
    /^ago/i,
    /^set/i,
    /^out/i,
    /^nov/i,
    /^dec/i,
  ],
};

const router_gl_lib_match_matchDayPatterns = {
  narrow: /^[dlmxvs]/i,
  short: /^(do|lu|ma|me|xo|ve|sa)/i,
  abbreviated: /^(dom|lun|mar|mer|xov|ven|sab)/i,
  wide: /^(domingo|luns|martes|m[eé]rcores|xoves|venres|s[áa]bado)/i,
};
const router_gl_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^x/i, /^v/i, /^s/i],
  any: [/^do/i, /^lu/i, /^ma/i, /^me/i, /^xo/i, /^ve/i, /^sa/i],
};

const router_gl_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mn|md|(da|[aá]s) (mañ[aá]|tarde|noite))/i,
  any: /^([ap]\.?\s?m\.?|medianoite|mediod[ií]a|(da|[aá]s) (mañ[aá]|tarde|noite))/i,
};
const router_gl_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mn/i,
    noon: /^md/i,
    morning: /mañ[aá]/i,
    afternoon: /tarde/i,
    evening: /tardiña/i,
    night: /noite/i,
  },
};

const router_gl_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_gl_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_gl_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_gl_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gl_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_gl_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gl_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_gl_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gl_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_gl_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gl_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_gl_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_gl_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/gl.mjs






/**
 * @category Locales
 * @summary Galician locale.
 * @language Galician
 * @iso-639-2 glg
 * @author Alberto Doval - Cocodin Technology[@cocodinTech](https://github.com/cocodinTech)
 * @author Fidel Pita [@fidelpita](https://github.com/fidelpita)
 */
const router_gl = {
  code: "gl",
  formatDistance: router_gl_lib_formatDistance_formatDistance,
  formatLong: router_gl_lib_formatLong_formatLong,
  formatRelative: router_gl_lib_formatRelative_formatRelative,
  localize: router_gl_lib_localize_localize,
  match: router_gl_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_gl = ((/* unused pure expression or super */ null && (router_gl)));

;// ./node_modules/date-fns/locale/gu/_lib/formatDistance.mjs
// Source: https://www.unicode.org/cldr/charts/32/summary/gu.html
const router_gu_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "હમણાં", // CLDR #1461
    other: "​આશરે {{count}} સેકંડ",
  },

  xSeconds: {
    one: "1 સેકંડ",
    other: "{{count}} સેકંડ",
  },

  halfAMinute: "અડધી મિનિટ",

  lessThanXMinutes: {
    one: "આ મિનિટ", // CLDR #1448
    other: "​આશરે {{count}} મિનિટ",
  },

  xMinutes: {
    one: "1 મિનિટ",
    other: "{{count}} મિનિટ",
  },

  aboutXHours: {
    one: "​આશરે 1 કલાક",
    other: "​આશરે {{count}} કલાક",
  },

  xHours: {
    one: "1 કલાક",
    other: "{{count}} કલાક",
  },

  xDays: {
    one: "1 દિવસ",
    other: "{{count}} દિવસ",
  },

  aboutXWeeks: {
    one: "આશરે 1 અઠવાડિયું",
    other: "આશરે {{count}} અઠવાડિયા",
  },

  xWeeks: {
    one: "1 અઠવાડિયું",
    other: "{{count}} અઠવાડિયા",
  },

  aboutXMonths: {
    one: "આશરે 1 મહિનો",
    other: "આશરે {{count}} મહિના",
  },

  xMonths: {
    one: "1 મહિનો",
    other: "{{count}} મહિના",
  },

  aboutXYears: {
    one: "આશરે 1 વર્ષ",
    other: "આશરે {{count}} વર્ષ",
  },

  xYears: {
    one: "1 વર્ષ",
    other: "{{count}} વર્ષ",
  },

  overXYears: {
    one: "1 વર્ષથી વધુ",
    other: "{{count}} વર્ષથી વધુ",
  },

  almostXYears: {
    one: "લગભગ 1 વર્ષ",
    other: "લગભગ {{count}} વર્ષ",
  },
};

const router_gu_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_gu_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "માં";
    } else {
      return result + " પહેલાં";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/gu/_lib/formatLong.mjs


//Source: https://www.unicode.org/cldr/charts/32/summary/gu.html
const router_gu_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM, y", // CLDR #1825
  long: "d MMMM, y", // CLDR #1826
  medium: "d MMM, y", // CLDR #1827
  short: "d/M/yy", // CLDR #1828
};

const router_gu_lib_formatLong_timeFormats = {
  full: "hh:mm:ss a zzzz", // CLDR #1829
  long: "hh:mm:ss a z", // CLDR #1830
  medium: "hh:mm:ss a", // CLDR #1831
  short: "hh:mm a", // CLDR #1832
};

const router_gu_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}", // CLDR #1833
  long: "{{date}} {{time}}", // CLDR #1834
  medium: "{{date}} {{time}}", // CLDR #1835
  short: "{{date}} {{time}}", // CLDR #1836
};

const router_gu_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_gu_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_gu_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_gu_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/gu/_lib/formatRelative.mjs
// Source: https://www.unicode.org/cldr/charts/32/summary/gu.html

const router_gu_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'પાછલા' eeee p", // CLDR #1384
  yesterday: "'ગઈકાલે' p", // CLDR #1409
  today: "'આજે' p", // CLDR #1410
  tomorrow: "'આવતીકાલે' p", // CLDR #1411
  nextWeek: "eeee p", // CLDR #1386
  other: "P",
};

const router_gu_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_gu_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/gu/_lib/localize.mjs


// https://www.unicode.org/cldr/charts/32/summary/gu.html
// #1621 - #1630
const router_gu_lib_localize_eraValues = {
  narrow: ["ઈસપૂ", "ઈસ"],
  abbreviated: ["ઈ.સ.પૂર્વે", "ઈ.સ."],
  wide: ["ઈસવીસન પૂર્વે", "ઈસવીસન"],
};

// https://www.unicode.org/cldr/charts/32/summary/gu.html
// #1631 - #1654
const router_gu_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1લો ત્રિમાસ", "2જો ત્રિમાસ", "3જો ત્રિમાસ", "4થો ત્રિમાસ"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.

// https://www.unicode.org/cldr/charts/32/summary/gu.html
// #1655 - #1726
const router_gu_lib_localize_monthValues = {
  narrow: ["જા", "ફે", "મા", "એ", "મે", "જૂ", "જુ", "ઓ", "સ", "ઓ", "ન", "ડિ"],

  abbreviated: [
    "જાન્યુ",
    "ફેબ્રુ",
    "માર્ચ",
    "એપ્રિલ",
    "મે",
    "જૂન",
    "જુલાઈ",
    "ઑગસ્ટ",
    "સપ્ટે",
    "ઓક્ટો",
    "નવે",
    "ડિસે",
  ],

  wide: [
    "જાન્યુઆરી",
    "ફેબ્રુઆરી",
    "માર્ચ",
    "એપ્રિલ",
    "મે",
    "જૂન",
    "જુલાઇ",
    "ઓગસ્ટ",
    "સપ્ટેમ્બર",
    "ઓક્ટોબર",
    "નવેમ્બર",
    "ડિસેમ્બર",
  ],
};

// https://www.unicode.org/cldr/charts/32/summary/gu.html
// #1727 - #1768
const router_gu_lib_localize_dayValues = {
  narrow: ["ર", "સો", "મં", "બુ", "ગુ", "શુ", "શ"],
  short: ["ર", "સો", "મં", "બુ", "ગુ", "શુ", "શ"],
  abbreviated: ["રવિ", "સોમ", "મંગળ", "બુધ", "ગુરુ", "શુક્ર", "શનિ"],
  wide: [
    "રવિવાર" /* Sunday */,
    "સોમવાર" /* Monday */,
    "મંગળવાર" /* Tuesday */,
    "બુધવાર" /* Wednesday */,
    "ગુરુવાર" /* Thursday */,
    "શુક્રવાર" /* Friday */,
    "શનિવાર" /* Saturday */,
  ],
};

// https://www.unicode.org/cldr/charts/32/summary/gu.html
// #1783 - #1824
const router_gu_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "મ.રાત્રિ",
    noon: "બ.",
    morning: "સવારે",
    afternoon: "બપોરે",
    evening: "સાંજે",
    night: "રાત્રે",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "​મધ્યરાત્રિ",
    noon: "બપોરે",
    morning: "સવારે",
    afternoon: "બપોરે",
    evening: "સાંજે",
    night: "રાત્રે",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "​મધ્યરાત્રિ",
    noon: "બપોરે",
    morning: "સવારે",
    afternoon: "બપોરે",
    evening: "સાંજે",
    night: "રાત્રે",
  },
};

const router_gu_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "મ.રાત્રિ",
    noon: "બપોરે",
    morning: "સવારે",
    afternoon: "બપોરે",
    evening: "સાંજે",
    night: "રાત્રે",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "મધ્યરાત્રિ",
    noon: "બપોરે",
    morning: "સવારે",
    afternoon: "બપોરે",
    evening: "સાંજે",
    night: "રાત્રે",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "​મધ્યરાત્રિ",
    noon: "બપોરે",
    morning: "સવારે",
    afternoon: "બપોરે",
    evening: "સાંજે",
    night: "રાત્રે",
  },
};

const router_gu_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_gu_lib_localize_localize = {
  ordinalNumber: router_gu_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_gu_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_gu_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_gu_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_gu_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_gu_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_gu_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/gu/_lib/match.mjs



const router_gu_lib_match_matchOrdinalNumberPattern = /^(\d+)(લ|જ|થ|ઠ્ઠ|મ)?/i;
const router_gu_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_gu_lib_match_matchEraPatterns = {
  narrow: /^(ઈસપૂ|ઈસ)/i,
  abbreviated: /^(ઈ\.સ\.પૂર્વે|ઈ\.સ\.)/i,
  wide: /^(ઈસવીસન\sપૂર્વે|ઈસવીસન)/i,
};
const router_gu_lib_match_parseEraPatterns = {
  any: [/^ઈસપૂ/i, /^ઈસ/i],
};

const router_gu_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](લો|જો|થો)? ત્રિમાસ/i,
};
const router_gu_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_gu_lib_match_matchMonthPatterns = {
  // eslint-disable-next-line no-misleading-character-class
  narrow: /^[જાફેમાએમેજૂજુઓસઓનડિ]/i,
  abbreviated:
    /^(જાન્યુ|ફેબ્રુ|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઈ|ઑગસ્ટ|સપ્ટે|ઓક્ટો|નવે|ડિસે)/i,
  wide: /^(જાન્યુઆરી|ફેબ્રુઆરી|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઇ|ઓગસ્ટ|સપ્ટેમ્બર|ઓક્ટોબર|નવેમ્બર|ડિસેમ્બર)/i,
};
const router_gu_lib_match_parseMonthPatterns = {
  narrow: [
    /^જા/i,
    /^ફે/i,
    /^મા/i,
    /^એ/i,
    /^મે/i,
    /^જૂ/i,
    /^જુ/i,
    /^ઑગ/i,
    /^સ/i,
    /^ઓક્ટો/i,
    /^ન/i,
    /^ડિ/i,
  ],

  any: [
    /^જા/i,
    /^ફે/i,
    /^મા/i,
    /^એ/i,
    /^મે/i,
    /^જૂ/i,
    /^જુ/i,
    /^ઑગ/i,
    /^સ/i,
    /^ઓક્ટો/i,
    /^ન/i,
    /^ડિ/i,
  ],
};

const router_gu_lib_match_matchDayPatterns = {
  narrow: /^(ર|સો|મં|બુ|ગુ|શુ|શ)/i,
  short: /^(ર|સો|મં|બુ|ગુ|શુ|શ)/i,
  abbreviated: /^(રવિ|સોમ|મંગળ|બુધ|ગુરુ|શુક્ર|શનિ)/i,
  wide: /^(રવિવાર|સોમવાર|મંગળવાર|બુધવાર|ગુરુવાર|શુક્રવાર|શનિવાર)/i,
};
const router_gu_lib_match_parseDayPatterns = {
  narrow: [/^ર/i, /^સો/i, /^મં/i, /^બુ/i, /^ગુ/i, /^શુ/i, /^શ/i],
  any: [/^ર/i, /^સો/i, /^મં/i, /^બુ/i, /^ગુ/i, /^શુ/i, /^શ/i],
};

const router_gu_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|મ\.?|સ|બ|સાં|રા)/i,
  any: /^(a|p|મ\.?|સ|બ|સાં|રા)/i,
};
const router_gu_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^મ\.?/i,
    noon: /^બ/i,
    morning: /સ/i,
    afternoon: /બ/i,
    evening: /સાં/i,
    night: /રા/i,
  },
};

const router_gu_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_gu_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_gu_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_gu_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gu_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_gu_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gu_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_gu_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gu_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_gu_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_gu_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_gu_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_gu_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/gu.mjs






/**
 * @category Locales
 * @summary Gujarati locale (India).
 * @language Gujarati
 * @iso-639-2 guj
 * @author Manaday Mavani [@ManadayM](https://github.com/manadaym)
 */
const router_gu = {
  code: "gu",
  formatDistance: router_gu_lib_formatDistance_formatDistance,
  formatLong: router_gu_lib_formatLong_formatLong,
  formatRelative: router_gu_lib_formatRelative_formatRelative,
  localize: router_gu_lib_localize_localize,
  match: router_gu_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_gu = ((/* unused pure expression or super */ null && (router_gu)));

;// ./node_modules/date-fns/locale/he/_lib/formatDistance.mjs
const router_he_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "פחות משנייה",
    two: "פחות משתי שניות",
    other: "פחות מ־{{count}} שניות",
  },

  xSeconds: {
    one: "שנייה",
    two: "שתי שניות",
    other: "{{count}} שניות",
  },

  halfAMinute: "חצי דקה",

  lessThanXMinutes: {
    one: "פחות מדקה",
    two: "פחות משתי דקות",
    other: "פחות מ־{{count}} דקות",
  },

  xMinutes: {
    one: "דקה",
    two: "שתי דקות",
    other: "{{count}} דקות",
  },

  aboutXHours: {
    one: "כשעה",
    two: "כשעתיים",
    other: "כ־{{count}} שעות",
  },

  xHours: {
    one: "שעה",
    two: "שעתיים",
    other: "{{count}} שעות",
  },

  xDays: {
    one: "יום",
    two: "יומיים",
    other: "{{count}} ימים",
  },

  aboutXWeeks: {
    one: "כשבוע",
    two: "כשבועיים",
    other: "כ־{{count}} שבועות",
  },

  xWeeks: {
    one: "שבוע",
    two: "שבועיים",
    other: "{{count}} שבועות",
  },

  aboutXMonths: {
    one: "כחודש",
    two: "כחודשיים",
    other: "כ־{{count}} חודשים",
  },

  xMonths: {
    one: "חודש",
    two: "חודשיים",
    other: "{{count}} חודשים",
  },

  aboutXYears: {
    one: "כשנה",
    two: "כשנתיים",
    other: "כ־{{count}} שנים",
  },

  xYears: {
    one: "שנה",
    two: "שנתיים",
    other: "{{count}} שנים",
  },

  overXYears: {
    one: "יותר משנה",
    two: "יותר משנתיים",
    other: "יותר מ־{{count}} שנים",
  },

  almostXYears: {
    one: "כמעט שנה",
    two: "כמעט שנתיים",
    other: "כמעט {{count}} שנים",
  },
};

const router_he_lib_formatDistance_formatDistance = (token, count, options) => {
  // Return word instead of `in one day` or `one day ago`
  if (token === "xDays" && options?.addSuffix && count <= 2) {
    if (options.comparison && options.comparison > 0) {
      return count === 1 ? "מחר" : "מחרתיים";
    }

    return count === 1 ? "אתמול" : "שלשום";
  }

  let result;

  const tokenValue = router_he_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 2) {
    result = tokenValue.two;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "בעוד " + result;
    } else {
      return "לפני " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/he/_lib/formatLong.mjs


const router_he_lib_formatLong_dateFormats = {
  full: "EEEE, d בMMMM y",
  long: "d בMMMM y",
  medium: "d בMMM y",
  short: "d.M.y",
};

const router_he_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_he_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'בשעה' {{time}}",
  long: "{{date}} 'בשעה' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_he_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_he_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_he_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_he_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/he/_lib/formatRelative.mjs
const router_he_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'שעבר בשעה' p",
  yesterday: "'אתמול בשעה' p",
  today: "'היום בשעה' p",
  tomorrow: "'מחר בשעה' p",
  nextWeek: "eeee 'בשעה' p",
  other: "P",
};

const router_he_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_he_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/he/_lib/localize.mjs


const router_he_lib_localize_eraValues = {
  narrow: ["לפנה״ס", "לספירה"],
  abbreviated: ["לפנה״ס", "לספירה"],
  wide: ["לפני הספירה", "לספירה"],
};

const router_he_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["רבעון 1", "רבעון 2", "רבעון 3", "רבעון 4"],
};

const router_he_lib_localize_monthValues = {
  narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],

  abbreviated: [
    "ינו׳",
    "פבר׳",
    "מרץ",
    "אפר׳",
    "מאי",
    "יוני",
    "יולי",
    "אוג׳",
    "ספט׳",
    "אוק׳",
    "נוב׳",
    "דצמ׳",
  ],

  wide: [
    "ינואר",
    "פברואר",
    "מרץ",
    "אפריל",
    "מאי",
    "יוני",
    "יולי",
    "אוגוסט",
    "ספטמבר",
    "אוקטובר",
    "נובמבר",
    "דצמבר",
  ],
};

const router_he_lib_localize_dayValues = {
  narrow: ["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"],
  short: ["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"],
  abbreviated: [
    "יום א׳",
    "יום ב׳",
    "יום ג׳",
    "יום ד׳",
    "יום ה׳",
    "יום ו׳",
    "שבת",
  ],

  wide: [
    "יום ראשון",
    "יום שני",
    "יום שלישי",
    "יום רביעי",
    "יום חמישי",
    "יום שישי",
    "יום שבת",
  ],
};

const router_he_lib_localize_dayPeriodValues = {
  narrow: {
    am: "לפנה״צ",
    pm: "אחה״צ",
    midnight: "חצות",
    noon: "צהריים",
    morning: "בוקר",
    afternoon: "אחר הצהריים",
    evening: "ערב",
    night: "לילה",
  },
  abbreviated: {
    am: "לפנה״צ",
    pm: "אחה״צ",
    midnight: "חצות",
    noon: "צהריים",
    morning: "בוקר",
    afternoon: "אחר הצהריים",
    evening: "ערב",
    night: "לילה",
  },
  wide: {
    am: "לפנה״צ",
    pm: "אחה״צ",
    midnight: "חצות",
    noon: "צהריים",
    morning: "בוקר",
    afternoon: "אחר הצהריים",
    evening: "ערב",
    night: "לילה",
  },
};

const router_he_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "לפנה״צ",
    pm: "אחה״צ",
    midnight: "חצות",
    noon: "צהריים",
    morning: "בבוקר",
    afternoon: "בצהריים",
    evening: "בערב",
    night: "בלילה",
  },
  abbreviated: {
    am: "לפנה״צ",
    pm: "אחה״צ",
    midnight: "חצות",
    noon: "צהריים",
    morning: "בבוקר",
    afternoon: "אחר הצהריים",
    evening: "בערב",
    night: "בלילה",
  },
  wide: {
    am: "לפנה״צ",
    pm: "אחה״צ",
    midnight: "חצות",
    noon: "צהריים",
    morning: "בבוקר",
    afternoon: "אחר הצהריים",
    evening: "בערב",
    night: "בלילה",
  },
};

const router_he_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);

  // We only show words till 10
  if (number <= 0 || number > 10) return String(number);

  const unit = String(options?.unit);

  const isFemale = ["year", "hour", "minute", "second"].indexOf(unit) >= 0;

  const male = [
    "ראשון",
    "שני",
    "שלישי",
    "רביעי",
    "חמישי",
    "שישי",
    "שביעי",
    "שמיני",
    "תשיעי",
    "עשירי",
  ];

  const female = [
    "ראשונה",
    "שנייה",
    "שלישית",
    "רביעית",
    "חמישית",
    "שישית",
    "שביעית",
    "שמינית",
    "תשיעית",
    "עשירית",
  ];

  const index = number - 1;
  return isFemale ? female[index] : male[index];
};

const router_he_lib_localize_localize = {
  ordinalNumber: router_he_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_he_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_he_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_he_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_he_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_he_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_he_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/he/_lib/match.mjs



const router_he_lib_match_matchOrdinalNumberPattern =
  /^(\d+|(ראשון|שני|שלישי|רביעי|חמישי|שישי|שביעי|שמיני|תשיעי|עשירי|ראשונה|שנייה|שלישית|רביעית|חמישית|שישית|שביעית|שמינית|תשיעית|עשירית))/i;
const router_he_lib_match_parseOrdinalNumberPattern = /^(\d+|רא|שנ|של|רב|ח|שי|שב|שמ|ת|ע)/i;

const router_he_lib_match_matchEraPatterns = {
  narrow: /^ל(ספירה|פנה״ס)/i,
  abbreviated: /^ל(ספירה|פנה״ס)/i,
  wide: /^ל(פני ה)?ספירה/i,
};
const router_he_lib_match_parseEraPatterns = {
  any: [/^לפ/i, /^לס/i],
};

const router_he_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^רבעון [1234]/i,
};
const router_he_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_he_lib_match_matchMonthPatterns = {
  narrow: /^\d+/i,
  abbreviated: /^(ינו|פבר|מרץ|אפר|מאי|יוני|יולי|אוג|ספט|אוק|נוב|דצמ)׳?/i,
  wide: /^(ינואר|פברואר|מרץ|אפריל|מאי|יוני|יולי|אוגוסט|ספטמבר|אוקטובר|נובמבר|דצמבר)/i,
};
const router_he_lib_match_parseMonthPatterns = {
  narrow: [
    /^1$/i,
    /^2/i,
    /^3/i,
    /^4/i,
    /^5/i,
    /^6/i,
    /^7/i,
    /^8/i,
    /^9/i,
    /^10/i,
    /^11/i,
    /^12/i,
  ],

  any: [
    /^ינ/i,
    /^פ/i,
    /^מר/i,
    /^אפ/i,
    /^מא/i,
    /^יונ/i,
    /^יול/i,
    /^אוג/i,
    /^ס/i,
    /^אוק/i,
    /^נ/i,
    /^ד/i,
  ],
};

const router_he_lib_match_matchDayPatterns = {
  narrow: /^[אבגדהוש]׳/i,
  short: /^[אבגדהוש]׳/i,
  abbreviated: /^(שבת|יום (א|ב|ג|ד|ה|ו)׳)/i,
  wide: /^יום (ראשון|שני|שלישי|רביעי|חמישי|שישי|שבת)/i,
};
const router_he_lib_match_parseDayPatterns = {
  abbreviated: [/א׳$/i, /ב׳$/i, /ג׳$/i, /ד׳$/i, /ה׳$/i, /ו׳$/i, /^ש/i],
  wide: [/ן$/i, /ני$/i, /לישי$/i, /עי$/i, /מישי$/i, /שישי$/i, /ת$/i],
  any: [/^א/i, /^ב/i, /^ג/i, /^ד/i, /^ה/i, /^ו/i, /^ש/i],
};

const router_he_lib_match_matchDayPeriodPatterns = {
  any: /^(אחר ה|ב)?(חצות|צהריים|בוקר|ערב|לילה|אחה״צ|לפנה״צ)/i,
};
const router_he_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^לפ/i,
    pm: /^אחה/i,
    midnight: /^ח/i,
    noon: /^צ/i,
    morning: /בוקר/i,
    afternoon: /בצ|אחר/i,
    evening: /ערב/i,
    night: /לילה/i,
  },
};

const router_ordinalName = ["רא", "שנ", "של", "רב", "ח", "שי", "שב", "שמ", "ת", "ע"];

const router_he_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_he_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_he_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => {
      const number = parseInt(value, 10);
      return isNaN(number) ? router_ordinalName.indexOf(value) + 1 : number;
    },
  }),

  era: router_buildMatchFn({
    matchPatterns: router_he_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_he_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_he_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_he_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_he_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_he_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_he_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_he_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_he_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_he_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/he.mjs






/**
 * @category Locales
 * @summary Hebrew locale.
 * @language Hebrew
 * @iso-639-2 heb
 * @author Nir Lahad [@nirlah](https://github.com/nirlah)
 */
const router_he = {
  code: "he",
  formatDistance: router_he_lib_formatDistance_formatDistance,
  formatLong: router_he_lib_formatLong_formatLong,
  formatRelative: router_he_lib_formatRelative_formatRelative,
  localize: router_he_lib_localize_localize,
  match: router_he_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_he = ((/* unused pure expression or super */ null && (router_he)));

;// ./node_modules/date-fns/locale/hi/_lib/localize.mjs


const router_localize_numberValues = {
  locale: {
    1: "१",
    2: "२",
    3: "३",
    4: "४",
    5: "५",
    6: "६",
    7: "७",
    8: "८",
    9: "९",
    0: "०",
  },
  number: {
    "१": "1",
    "२": "2",
    "३": "3",
    "४": "4",
    "५": "5",
    "६": "6",
    "७": "7",
    "८": "8",
    "९": "9",
    "०": "0",
  },
};

// CLDR #1585 - #1592
const router_hi_lib_localize_eraValues = {
  narrow: ["ईसा-पूर्व", "ईस्वी"],
  abbreviated: ["ईसा-पूर्व", "ईस्वी"],
  wide: ["ईसा-पूर्व", "ईसवी सन"],
};

// CLDR #1593 - #1616
const router_hi_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["ति1", "ति2", "ति3", "ति4"],
  wide: ["पहली तिमाही", "दूसरी तिमाही", "तीसरी तिमाही", "चौथी तिमाही"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
// https://www.unicode.org/cldr/charts/32/summary/hi.html
// CLDR #1617 - #1688
const router_hi_lib_localize_monthValues = {
  narrow: [
    "ज",
    "फ़",
    "मा",
    "अ",
    "मई",
    "जू",
    "जु",
    "अग",
    "सि",
    "अक्टू",
    "न",
    "दि",
  ],

  abbreviated: [
    "जन",
    "फ़र",
    "मार्च",
    "अप्रैल",
    "मई",
    "जून",
    "जुल",
    "अग",
    "सित",
    "अक्टू",
    "नव",
    "दिस",
  ],

  wide: [
    "जनवरी",
    "फ़रवरी",
    "मार्च",
    "अप्रैल",
    "मई",
    "जून",
    "जुलाई",
    "अगस्त",
    "सितंबर",
    "अक्टूबर",
    "नवंबर",
    "दिसंबर",
  ],
};

// CLDR #1689 - #1744
const router_hi_lib_localize_dayValues = {
  narrow: ["र", "सो", "मं", "बु", "गु", "शु", "श"],
  short: ["र", "सो", "मं", "बु", "गु", "शु", "श"],
  abbreviated: ["रवि", "सोम", "मंगल", "बुध", "गुरु", "शुक्र", "शनि"],
  wide: [
    "रविवार",
    "सोमवार",
    "मंगलवार",
    "बुधवार",
    "गुरुवार",
    "शुक्रवार",
    "शनिवार",
  ],
};

const router_hi_lib_localize_dayPeriodValues = {
  narrow: {
    am: "पूर्वाह्न",
    pm: "अपराह्न",
    midnight: "मध्यरात्रि",
    noon: "दोपहर",
    morning: "सुबह",
    afternoon: "दोपहर",
    evening: "शाम",
    night: "रात",
  },
  abbreviated: {
    am: "पूर्वाह्न",
    pm: "अपराह्न",
    midnight: "मध्यरात्रि",
    noon: "दोपहर",
    morning: "सुबह",
    afternoon: "दोपहर",
    evening: "शाम",
    night: "रात",
  },
  wide: {
    am: "पूर्वाह्न",
    pm: "अपराह्न",
    midnight: "मध्यरात्रि",
    noon: "दोपहर",
    morning: "सुबह",
    afternoon: "दोपहर",
    evening: "शाम",
    night: "रात",
  },
};

const router_hi_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "पूर्वाह्न",
    pm: "अपराह्न",
    midnight: "मध्यरात्रि",
    noon: "दोपहर",
    morning: "सुबह",
    afternoon: "दोपहर",
    evening: "शाम",
    night: "रात",
  },
  abbreviated: {
    am: "पूर्वाह्न",
    pm: "अपराह्न",
    midnight: "मध्यरात्रि",
    noon: "दोपहर",
    morning: "सुबह",
    afternoon: "दोपहर",
    evening: "शाम",
    night: "रात",
  },
  wide: {
    am: "पूर्वाह्न",
    pm: "अपराह्न",
    midnight: "मध्यरात्रि",
    noon: "दोपहर",
    morning: "सुबह",
    afternoon: "दोपहर",
    evening: "शाम",
    night: "रात",
  },
};

const router_hi_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return router_localize_numberToLocale(number);
};

function router_localeToNumber(locale) {
  const enNumber = locale.toString().replace(/[१२३४५६७८९०]/g, function (match) {
    return router_localize_numberValues.number[match];
  });
  return Number(enNumber);
}

function router_localize_numberToLocale(enNumber) {
  return enNumber.toString().replace(/\d/g, function (match) {
    return router_localize_numberValues.locale[match];
  });
}

const router_hi_lib_localize_localize = {
  ordinalNumber: router_hi_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_hi_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_hi_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_hi_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_hi_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_hi_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_hi_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/hi/_lib/formatDistance.mjs


// Source: https://www.unicode.org/cldr/charts/32/summary/hi.html

const router_hi_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "१ सेकंड से कम", // CLDR #1310
    other: "{{count}} सेकंड से कम",
  },

  xSeconds: {
    one: "१ सेकंड",
    other: "{{count}} सेकंड",
  },

  halfAMinute: "आधा मिनट",

  lessThanXMinutes: {
    one: "१ मिनट से कम",
    other: "{{count}} मिनट से कम",
  },

  xMinutes: {
    one: "१ मिनट", // CLDR #1307
    other: "{{count}} मिनट",
  },

  aboutXHours: {
    one: "लगभग १ घंटा",
    other: "लगभग {{count}} घंटे",
  },

  xHours: {
    one: "१ घंटा", // CLDR #1304
    other: "{{count}} घंटे", // CLDR #4467
  },

  xDays: {
    one: "१ दिन", // CLDR #1286
    other: "{{count}} दिन",
  },

  aboutXWeeks: {
    one: "लगभग १ सप्ताह",
    other: "लगभग {{count}} सप्ताह",
  },

  xWeeks: {
    one: "१ सप्ताह",
    other: "{{count}} सप्ताह",
  },

  aboutXMonths: {
    one: "लगभग १ महीना",
    other: "लगभग {{count}} महीने",
  },

  xMonths: {
    one: "१ महीना",
    other: "{{count}} महीने",
  },

  aboutXYears: {
    one: "लगभग १ वर्ष",
    other: "लगभग {{count}} वर्ष", // CLDR #4823
  },

  xYears: {
    one: "१ वर्ष",
    other: "{{count}} वर्ष",
  },

  overXYears: {
    one: "१ वर्ष से अधिक",
    other: "{{count}} वर्ष से अधिक",
  },

  almostXYears: {
    one: "लगभग १ वर्ष",
    other: "लगभग {{count}} वर्ष",
  },
};

const router_hi_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_hi_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", router_localize_numberToLocale(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "मे ";
    } else {
      return result + " पहले";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/hi/_lib/formatLong.mjs


const router_hi_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM, y", // CLDR #1787
  long: "do MMMM, y", // CLDR #1788
  medium: "d MMM, y", // CLDR #1789
  short: "dd/MM/yyyy", // CLDR #1790
};

const router_hi_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz", // CLDR #1791
  long: "h:mm:ss a z", // CLDR #1792
  medium: "h:mm:ss a", // CLDR #1793
  short: "h:mm a", // CLDR #1794
};

const router_hi_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'को' {{time}}", // CLDR #1795
  long: "{{date}} 'को' {{time}}", // CLDR #1796
  medium: "{{date}}, {{time}}", // CLDR #1797
  short: "{{date}}, {{time}}", // CLDR #1798
};

const router_hi_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_hi_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_hi_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_hi_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/hi/_lib/formatRelative.mjs
const router_hi_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'पिछले' eeee p",
  yesterday: "'कल' p",
  today: "'आज' p",
  tomorrow: "'कल' p",
  nextWeek: "eeee 'को' p",
  other: "P",
};

const router_hi_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_hi_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/hi/_lib/match.mjs




const router_hi_lib_match_matchOrdinalNumberPattern = /^[०१२३४५६७८९]+/i;
const router_hi_lib_match_parseOrdinalNumberPattern = /^[०१२३४५६७८९]+/i;

const router_hi_lib_match_matchEraPatterns = {
  narrow: /^(ईसा-पूर्व|ईस्वी)/i,
  abbreviated: /^(ईसा\.?\s?पूर्व\.?|ईसा\.?)/i,
  wide: /^(ईसा-पूर्व|ईसवी पूर्व|ईसवी सन|ईसवी)/i,
};

const router_hi_lib_match_parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i],
};

const router_hi_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^ति[1234]/i,
  wide: /^[1234](पहली|दूसरी|तीसरी|चौथी)? तिमाही/i,
};
const router_hi_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_hi_lib_match_matchMonthPatterns = {
  // eslint-disable-next-line no-misleading-character-class
  narrow: /^[जफ़माअप्मईजूनजुअगसिअक्तनदि]/i,
  abbreviated: /^(जन|फ़र|मार्च|अप्|मई|जून|जुल|अग|सित|अक्तू|नव|दिस)/i,
  wide: /^(जनवरी|फ़रवरी|मार्च|अप्रैल|मई|जून|जुलाई|अगस्त|सितंबर|अक्तूबर|नवंबर|दिसंबर)/i,
};
const router_hi_lib_match_parseMonthPatterns = {
  narrow: [
    /^ज/i,
    /^फ़/i,
    /^मा/i,
    /^अप्/i,
    /^मई/i,
    /^जू/i,
    /^जु/i,
    /^अग/i,
    /^सि/i,
    /^अक्तू/i,
    /^न/i,
    /^दि/i,
  ],

  any: [
    /^जन/i,
    /^फ़/i,
    /^मा/i,
    /^अप्/i,
    /^मई/i,
    /^जू/i,
    /^जु/i,
    /^अग/i,
    /^सि/i,
    /^अक्तू/i,
    /^नव/i,
    /^दिस/i,
  ],
};

const router_hi_lib_match_matchDayPatterns = {
  // eslint-disable-next-line no-misleading-character-class
  narrow: /^[रविसोममंगलबुधगुरुशुक्रशनि]/i,
  short: /^(रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि)/i,
  abbreviated: /^(रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि)/i,
  wide: /^(रविवार|सोमवार|मंगलवार|बुधवार|गुरुवार|शुक्रवार|शनिवार)/i,
};
const router_hi_lib_match_parseDayPatterns = {
  narrow: [/^रवि/i, /^सोम/i, /^मंगल/i, /^बुध/i, /^गुरु/i, /^शुक्र/i, /^शनि/i],

  any: [/^रवि/i, /^सोम/i, /^मंगल/i, /^बुध/i, /^गुरु/i, /^शुक्र/i, /^शनि/i],
};

const router_hi_lib_match_matchDayPeriodPatterns = {
  narrow: /^(पू|अ|म|द.\?|सु|दो|शा|रा)/i,
  any: /^(पूर्वाह्न|अपराह्न|म|द.\?|सु|दो|शा|रा)/i,
};
const router_hi_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^पूर्वाह्न/i,
    pm: /^अपराह्न/i,
    midnight: /^मध्य/i,
    noon: /^दो/i,
    morning: /सु/i,
    afternoon: /दो/i,
    evening: /शा/i,
    night: /रा/i,
  },
};

const router_hi_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_hi_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_hi_lib_match_parseOrdinalNumberPattern,
    valueCallback: router_localeToNumber,
  }),

  era: router_buildMatchFn({
    matchPatterns: router_hi_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hi_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_hi_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hi_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_hi_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hi_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_hi_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hi_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_hi_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_hi_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/hi.mjs






/**
 * @category Locales
 * @summary Hindi locale (India).
 * @language Hindi
 * @iso-639-2 hin
 * @author Mukesh Mandiwal [@mukeshmandiwal](https://github.com/mukeshmandiwal)
 */
const router_hi = {
  code: "hi",
  formatDistance: router_hi_lib_formatDistance_formatDistance,
  formatLong: router_hi_lib_formatLong_formatLong,
  formatRelative: router_hi_lib_formatRelative_formatRelative,
  localize: router_hi_lib_localize_localize,
  match: router_hi_lib_match_match,
  options: {
    weekStartsOn: 0 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_hi = ((/* unused pure expression or super */ null && (router_hi)));

;// ./node_modules/date-fns/locale/hr/_lib/formatDistance.mjs
const router_hr_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      standalone: "manje od 1 sekunde",
      withPrepositionAgo: "manje od 1 sekunde",
      withPrepositionIn: "manje od 1 sekundu",
    },
    dual: "manje od {{count}} sekunde",
    other: "manje od {{count}} sekundi",
  },

  xSeconds: {
    one: {
      standalone: "1 sekunda",
      withPrepositionAgo: "1 sekunde",
      withPrepositionIn: "1 sekundu",
    },
    dual: "{{count}} sekunde",
    other: "{{count}} sekundi",
  },

  halfAMinute: "pola minute",

  lessThanXMinutes: {
    one: {
      standalone: "manje od 1 minute",
      withPrepositionAgo: "manje od 1 minute",
      withPrepositionIn: "manje od 1 minutu",
    },
    dual: "manje od {{count}} minute",
    other: "manje od {{count}} minuta",
  },

  xMinutes: {
    one: {
      standalone: "1 minuta",
      withPrepositionAgo: "1 minute",
      withPrepositionIn: "1 minutu",
    },
    dual: "{{count}} minute",
    other: "{{count}} minuta",
  },

  aboutXHours: {
    one: {
      standalone: "oko 1 sat",
      withPrepositionAgo: "oko 1 sat",
      withPrepositionIn: "oko 1 sat",
    },
    dual: "oko {{count}} sata",
    other: "oko {{count}} sati",
  },

  xHours: {
    one: {
      standalone: "1 sat",
      withPrepositionAgo: "1 sat",
      withPrepositionIn: "1 sat",
    },
    dual: "{{count}} sata",
    other: "{{count}} sati",
  },

  xDays: {
    one: {
      standalone: "1 dan",
      withPrepositionAgo: "1 dan",
      withPrepositionIn: "1 dan",
    },
    dual: "{{count}} dana",
    other: "{{count}} dana",
  },

  aboutXWeeks: {
    one: {
      standalone: "oko 1 tjedan",
      withPrepositionAgo: "oko 1 tjedan",
      withPrepositionIn: "oko 1 tjedan",
    },
    dual: "oko {{count}} tjedna",
    other: "oko {{count}} tjedana",
  },

  xWeeks: {
    one: {
      standalone: "1 tjedan",
      withPrepositionAgo: "1 tjedan",
      withPrepositionIn: "1 tjedan",
    },
    dual: "{{count}} tjedna",
    other: "{{count}} tjedana",
  },

  aboutXMonths: {
    one: {
      standalone: "oko 1 mjesec",
      withPrepositionAgo: "oko 1 mjesec",
      withPrepositionIn: "oko 1 mjesec",
    },
    dual: "oko {{count}} mjeseca",
    other: "oko {{count}} mjeseci",
  },

  xMonths: {
    one: {
      standalone: "1 mjesec",
      withPrepositionAgo: "1 mjesec",
      withPrepositionIn: "1 mjesec",
    },
    dual: "{{count}} mjeseca",
    other: "{{count}} mjeseci",
  },

  aboutXYears: {
    one: {
      standalone: "oko 1 godinu",
      withPrepositionAgo: "oko 1 godinu",
      withPrepositionIn: "oko 1 godinu",
    },
    dual: "oko {{count}} godine",
    other: "oko {{count}} godina",
  },

  xYears: {
    one: {
      standalone: "1 godina",
      withPrepositionAgo: "1 godine",
      withPrepositionIn: "1 godinu",
    },
    dual: "{{count}} godine",
    other: "{{count}} godina",
  },

  overXYears: {
    one: {
      standalone: "preko 1 godinu",
      withPrepositionAgo: "preko 1 godinu",
      withPrepositionIn: "preko 1 godinu",
    },
    dual: "preko {{count}} godine",
    other: "preko {{count}} godina",
  },

  almostXYears: {
    one: {
      standalone: "gotovo 1 godinu",
      withPrepositionAgo: "gotovo 1 godinu",
      withPrepositionIn: "gotovo 1 godinu",
    },
    dual: "gotovo {{count}} godine",
    other: "gotovo {{count}} godina",
  },
};

const router_hr_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_hr_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    if (options?.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        result = tokenValue.one.withPrepositionIn;
      } else {
        result = tokenValue.one.withPrepositionAgo;
      }
    } else {
      result = tokenValue.one.standalone;
    }
  } else if (
    count % 10 > 1 &&
    count % 10 < 5 && // if last digit is between 2 and 4
    String(count).substr(-2, 1) !== "1" // unless the 2nd to last digit is "1"
  ) {
    result = tokenValue.dual.replace("{{count}}", String(count));
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "za " + result;
    } else {
      return "prije " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/hr/_lib/formatLong.mjs


const router_hr_lib_formatLong_dateFormats = {
  full: "EEEE, d. MMMM y.",
  long: "d. MMMM y.",
  medium: "d. MMM y.",
  short: "dd. MM. y.",
};

const router_hr_lib_formatLong_timeFormats = {
  full: "HH:mm:ss (zzzz)",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_hr_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'u' {{time}}",
  long: "{{date}} 'u' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_hr_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_hr_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_hr_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_hr_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/hr/_lib/formatRelative.mjs
const router_hr_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    switch (date.getDay()) {
      case 0:
        return "'prošlu nedjelju u' p";
      case 3:
        return "'prošlu srijedu u' p";
      case 6:
        return "'prošlu subotu u' p";
      default:
        return "'prošli' EEEE 'u' p";
    }
  },
  yesterday: "'jučer u' p",
  today: "'danas u' p",
  tomorrow: "'sutra u' p",
  nextWeek: (date) => {
    switch (date.getDay()) {
      case 0:
        return "'iduću nedjelju u' p";
      case 3:
        return "'iduću srijedu u' p";
      case 6:
        return "'iduću subotu u' p";
      default:
        return "'prošli' EEEE 'u' p";
    }
  },
  other: "P",
};

const router_hr_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  const format = router_hr_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/hr/_lib/localize.mjs


const router_hr_lib_localize_eraValues = {
  narrow: ["pr.n.e.", "AD"],
  abbreviated: ["pr. Kr.", "po. Kr."],
  wide: ["Prije Krista", "Poslije Krista"],
};

const router_hr_lib_localize_quarterValues = {
  narrow: ["1.", "2.", "3.", "4."],
  abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."],
  wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
};

const router_hr_lib_localize_monthValues = {
  narrow: [
    "1.",
    "2.",
    "3.",
    "4.",
    "5.",
    "6.",
    "7.",
    "8.",
    "9.",
    "10.",
    "11.",
    "12.",
  ],

  abbreviated: [
    "sij",
    "velj",
    "ožu",
    "tra",
    "svi",
    "lip",
    "srp",
    "kol",
    "ruj",
    "lis",
    "stu",
    "pro",
  ],

  wide: [
    "siječanj",
    "veljača",
    "ožujak",
    "travanj",
    "svibanj",
    "lipanj",
    "srpanj",
    "kolovoz",
    "rujan",
    "listopad",
    "studeni",
    "prosinac",
  ],
};

const router_hr_lib_localize_formattingMonthValues = {
  narrow: [
    "1.",
    "2.",
    "3.",
    "4.",
    "5.",
    "6.",
    "7.",
    "8.",
    "9.",
    "10.",
    "11.",
    "12.",
  ],

  abbreviated: [
    "sij",
    "velj",
    "ožu",
    "tra",
    "svi",
    "lip",
    "srp",
    "kol",
    "ruj",
    "lis",
    "stu",
    "pro",
  ],

  wide: [
    "siječnja",
    "veljače",
    "ožujka",
    "travnja",
    "svibnja",
    "lipnja",
    "srpnja",
    "kolovoza",
    "rujna",
    "listopada",
    "studenog",
    "prosinca",
  ],
};

const router_hr_lib_localize_dayValues = {
  narrow: ["N", "P", "U", "S", "Č", "P", "S"],
  short: ["ned", "pon", "uto", "sri", "čet", "pet", "sub"],
  abbreviated: ["ned", "pon", "uto", "sri", "čet", "pet", "sub"],
  wide: [
    "nedjelja",
    "ponedjeljak",
    "utorak",
    "srijeda",
    "četvrtak",
    "petak",
    "subota",
  ],
};

const router_hr_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutro",
    afternoon: "popodne",
    evening: "navečer",
    night: "noću",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutro",
    afternoon: "popodne",
    evening: "navečer",
    night: "noću",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutro",
    afternoon: "poslije podne",
    evening: "navečer",
    night: "noću",
  },
};

const router_hr_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutro",
    afternoon: "popodne",
    evening: "navečer",
    night: "noću",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutro",
    afternoon: "popodne",
    evening: "navečer",
    night: "noću",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutro",
    afternoon: "poslije podne",
    evening: "navečer",
    night: "noću",
  },
};

const router_hr_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_hr_lib_localize_localize = {
  ordinalNumber: router_hr_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_hr_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_hr_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_hr_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_hr_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_hr_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_hr_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_hr_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/hr/_lib/match.mjs



const router_hr_lib_match_matchOrdinalNumberPattern = /^(\d+)\./i;
const router_hr_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_hr_lib_match_matchEraPatterns = {
  narrow: /^(pr\.n\.e\.|AD)/i,
  abbreviated: /^(pr\.\s?Kr\.|po\.\s?Kr\.)/i,
  wide: /^(Prije Krista|prije nove ere|Poslije Krista|nova era)/i,
};
const router_hr_lib_match_parseEraPatterns = {
  any: [/^pr/i, /^(po|nova)/i],
};

const router_hr_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]\.\s?kv\.?/i,
  wide: /^[1234]\. kvartal/i,
};
const router_hr_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_hr_lib_match_matchMonthPatterns = {
  narrow: /^(10|11|12|[123456789])\./i,
  abbreviated: /^(sij|velj|(ožu|ozu)|tra|svi|lip|srp|kol|ruj|lis|stu|pro)/i,
  wide: /^((siječanj|siječnja|sijecanj|sijecnja)|(veljača|veljače|veljaca|veljace)|(ožujak|ožujka|ozujak|ozujka)|(travanj|travnja)|(svibanj|svibnja)|(lipanj|lipnja)|(srpanj|srpnja)|(kolovoz|kolovoza)|(rujan|rujna)|(listopad|listopada)|(studeni|studenog)|(prosinac|prosinca))/i,
};
const router_hr_lib_match_parseMonthPatterns = {
  narrow: [
    /1/i,
    /2/i,
    /3/i,
    /4/i,
    /5/i,
    /6/i,
    /7/i,
    /8/i,
    /9/i,
    /10/i,
    /11/i,
    /12/i,
  ],

  abbreviated: [
    /^sij/i,
    /^velj/i,
    /^(ožu|ozu)/i,
    /^tra/i,
    /^svi/i,
    /^lip/i,
    /^srp/i,
    /^kol/i,
    /^ruj/i,
    /^lis/i,
    /^stu/i,
    /^pro/i,
  ],

  wide: [
    /^sij/i,
    /^velj/i,
    /^(ožu|ozu)/i,
    /^tra/i,
    /^svi/i,
    /^lip/i,
    /^srp/i,
    /^kol/i,
    /^ruj/i,
    /^lis/i,
    /^stu/i,
    /^pro/i,
  ],
};

const router_hr_lib_match_matchDayPatterns = {
  narrow: /^[npusčc]/i,
  short: /^(ned|pon|uto|sri|(čet|cet)|pet|sub)/i,
  abbreviated: /^(ned|pon|uto|sri|(čet|cet)|pet|sub)/i,
  wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(četvrtak|cetvrtak)|petak|subota)/i,
};
const router_hr_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
};

const router_hr_lib_match_matchDayPeriodPatterns = {
  any: /^(am|pm|ponoc|ponoć|(po)?podne|navecer|navečer|noću|poslije podne|ujutro)/i,
};
const router_hr_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^pono/i,
    noon: /^pod/i,
    morning: /jutro/i,
    afternoon: /(poslije\s|po)+podne/i,
    evening: /(navece|naveče)/i,
    night: /(nocu|noću)/i,
  },
};

const router_hr_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_hr_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_hr_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_hr_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hr_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_hr_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hr_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_hr_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hr_lib_match_parseMonthPatterns,
    defaultParseWidth: "wide",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_hr_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hr_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_hr_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_hr_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/hr.mjs






/**
 * @category Locales
 * @summary Croatian locale.
 * @language Croatian
 * @iso-639-2 hrv
 * @author Matija Marohnić [@silvenon](https://github.com/silvenon)
 * @author Manico [@manico](https://github.com/manico)
 * @author Ivan Jeržabek [@jerzabek](https://github.com/jerzabek)
 */
const router_hr = {
  code: "hr",
  formatDistance: router_hr_lib_formatDistance_formatDistance,
  formatLong: router_hr_lib_formatLong_formatLong,
  formatRelative: router_hr_lib_formatRelative_formatRelative,
  localize: router_hr_lib_localize_localize,
  match: router_hr_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_hr = ((/* unused pure expression or super */ null && (router_hr)));

;// ./node_modules/date-fns/locale/ht/_lib/formatDistance.mjs
const router_ht_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "mwens pase yon segond",
    other: "mwens pase {{count}} segond",
  },

  xSeconds: {
    one: "1 segond",
    other: "{{count}} segond",
  },

  halfAMinute: "30 segond",

  lessThanXMinutes: {
    one: "mwens pase yon minit",
    other: "mwens pase {{count}} minit",
  },

  xMinutes: {
    one: "1 minit",
    other: "{{count}} minit",
  },

  aboutXHours: {
    one: "anviwon inè",
    other: "anviwon {{count}} è",
  },

  xHours: {
    one: "1 lè",
    other: "{{count}} lè",
  },

  xDays: {
    one: "1 jou",
    other: "{{count}} jou",
  },

  aboutXWeeks: {
    one: "anviwon 1 semèn",
    other: "anviwon {{count}} semèn",
  },

  xWeeks: {
    one: "1 semèn",
    other: "{{count}} semèn",
  },

  aboutXMonths: {
    one: "anviwon 1 mwa",
    other: "anviwon {{count}} mwa",
  },

  xMonths: {
    one: "1 mwa",
    other: "{{count}} mwa",
  },

  aboutXYears: {
    one: "anviwon 1 an",
    other: "anviwon {{count}} an",
  },

  xYears: {
    one: "1 an",
    other: "{{count}} an",
  },

  overXYears: {
    one: "plis pase 1 an",
    other: "plis pase {{count}} an",
  },

  almostXYears: {
    one: "prèske 1 an",
    other: "prèske {{count}} an",
  },
};

const router_ht_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ht_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "nan " + result;
    } else {
      return "sa fè " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ht/_lib/formatLong.mjs


const router_ht_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd/MM/y",
};

const router_ht_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_ht_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'nan lè' {{time}}",
  long: "{{date}} 'nan lè' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ht_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ht_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ht_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ht_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ht/_lib/formatRelative.mjs
const router_ht_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'pase nan lè' p",
  yesterday: "'yè nan lè' p",
  today: "'jodi a' p",
  tomorrow: "'demen nan lè' p'",
  nextWeek: "eeee 'pwochen nan lè' p",
  other: "P",
};

const router_ht_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ht_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ht/_lib/localize.mjs


const router_ht_lib_localize_eraValues = {
  narrow: ["av. J.-K", "ap. J.-K"],
  abbreviated: ["av. J.-K", "ap. J.-K"],
  wide: ["anvan Jezi Kris", "apre Jezi Kris"],
};

const router_ht_lib_localize_quarterValues = {
  narrow: ["T1", "T2", "T3", "T4"],
  abbreviated: ["1ye trim.", "2yèm trim.", "3yèm trim.", "4yèm trim."],
  wide: ["1ye trimès", "2yèm trimès", "3yèm trimès", "4yèm trimès"],
};

const router_ht_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"],
  abbreviated: [
    "janv.",
    "fevr.",
    "mas",
    "avr.",
    "me",
    "jen",
    "jiyè",
    "out",
    "sept.",
    "okt.",
    "nov.",
    "des.",
  ],

  wide: [
    "janvye",
    "fevrye",
    "mas",
    "avril",
    "me",
    "jen",
    "jiyè",
    "out",
    "septanm",
    "oktòb",
    "novanm",
    "desanm",
  ],
};

const router_ht_lib_localize_dayValues = {
  narrow: ["D", "L", "M", "M", "J", "V", "S"],
  short: ["di", "le", "ma", "mè", "je", "va", "sa"],
  abbreviated: ["dim.", "len.", "mad.", "mèk.", "jed.", "van.", "sam."],

  wide: ["dimanch", "lendi", "madi", "mèkredi", "jedi", "vandredi", "samdi"],
};

const router_ht_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "minwit",
    noon: "midi",
    morning: "mat.",
    afternoon: "ap.m.",
    evening: "swa",
    night: "mat.",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "minwit",
    noon: "midi",
    morning: "maten",
    afternoon: "aprèmidi",
    evening: "swa",
    night: "maten",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "minwit",
    noon: "midi",
    morning: "nan maten",
    afternoon: "nan aprèmidi",
    evening: "nan aswè",
    night: "nan maten",
  },
};

const router_ht_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  if (number === 0) return String(number);

  const suffix = number === 1 ? "ye" : "yèm";

  return number + suffix;
};

const router_ht_lib_localize_localize = {
  ordinalNumber: router_ht_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ht_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ht_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ht_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ht_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ht_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ht/_lib/match.mjs



const router_ht_lib_match_matchOrdinalNumberPattern = /^(\d+)(ye|yèm)?/i;
const router_ht_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ht_lib_match_matchEraPatterns = {
  narrow: /^(av\.J\.K|ap\.J\.K|ap\.J\.-K)/i,
  abbreviated: /^(av\.J\.-K|av\.J-K|apr\.J\.-K|apr\.J-K|ap\.J-K)/i,
  wide: /^(avan Jezi Kris|apre Jezi Kris)/i,
};
const router_ht_lib_match_parseEraPatterns = {
  any: [/^av/i, /^ap/i],
};

const router_ht_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^t[1234]/i,
  wide: /^[1234](ye|yèm)? trimès/i,
};
const router_ht_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ht_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(janv|fevr|mas|avr|me|jen|jiyè|out|sept|okt|nov|des)\.?/i,
  wide: /^(janvye|fevrye|mas|avril|me|jen|jiyè|out|septanm|oktòb|novanm|desanm)/i,
};
const router_ht_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^o/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^ma/i,
    /^av/i,
    /^me/i,
    /^je/i,
    /^ji/i,
    /^ou/i,
    /^s/i,
    /^ok/i,
    /^n/i,
    /^d/i,
  ],
};

const router_ht_lib_match_matchDayPatterns = {
  narrow: /^[lmjvsd]/i,
  short: /^(di|le|ma|me|je|va|sa)/i,
  abbreviated: /^(dim|len|mad|mèk|jed|van|sam)\.?/i,
  wide: /^(dimanch|lendi|madi|mèkredi|jedi|vandredi|samdi)/i,
};
const router_ht_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
  any: [/^di/i, /^le/i, /^ma/i, /^mè/i, /^je/i, /^va/i, /^sa/i],
};

const router_ht_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|minwit|midi|mat\.?|ap\.?m\.?|swa)/i,
  any: /^([ap]\.?\s?m\.?|nan maten|nan aprèmidi|nan aswè)/i,
};
const router_ht_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^min/i,
    noon: /^mid/i,
    morning: /mat/i,
    afternoon: /ap/i,
    evening: /sw/i,
    night: /nwit/i,
  },
};

const router_ht_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ht_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ht_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ht_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ht_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ht_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ht_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ht_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ht_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ht_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ht_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ht_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ht_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ht.mjs






/**
 * @category Locales
 * @summary Haitian Creole locale.
 * @language Haitian Creole
 * @iso-639-2 hat
 * @author Rubens Mariuzzo [@rmariuzzo](https://github.com/rmariuzzo)
 * @author Watson Marcelain [@watsongm24](https://github.com/watsongm24)
 */
const router_ht = {
  code: "ht",
  formatDistance: router_ht_lib_formatDistance_formatDistance,
  formatLong: router_ht_lib_formatLong_formatLong,
  formatRelative: router_ht_lib_formatRelative_formatRelative,
  localize: router_ht_lib_localize_localize,
  match: router_ht_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ht = ((/* unused pure expression or super */ null && (router_ht)));

;// ./node_modules/date-fns/locale/hu/_lib/formatDistance.mjs
const router_translations = {
  about: "körülbelül",
  over: "több mint",
  almost: "majdnem",
  lessthan: "kevesebb mint",
};

const router_withoutSuffixes = {
  xseconds: " másodperc",
  halfaminute: "fél perc",
  xminutes: " perc",
  xhours: " óra",
  xdays: " nap",
  xweeks: " hét",
  xmonths: " hónap",
  xyears: " év",
};

const router_withSuffixes = {
  xseconds: {
    "-1": " másodperccel ezelőtt",
    1: " másodperc múlva",
    0: " másodperce",
  },
  halfaminute: {
    "-1": "fél perccel ezelőtt",
    1: "fél perc múlva",
    0: "fél perce",
  },
  xminutes: {
    "-1": " perccel ezelőtt",
    1: " perc múlva",
    0: " perce",
  },
  xhours: {
    "-1": " órával ezelőtt",
    1: " óra múlva",
    0: " órája",
  },
  xdays: {
    "-1": " nappal ezelőtt",
    1: " nap múlva",
    0: " napja",
  },
  xweeks: {
    "-1": " héttel ezelőtt",
    1: " hét múlva",
    0: " hete",
  },
  xmonths: {
    "-1": " hónappal ezelőtt",
    1: " hónap múlva",
    0: " hónapja",
  },
  xyears: {
    "-1": " évvel ezelőtt",
    1: " év múlva",
    0: " éve",
  },
};

const router_hu_lib_formatDistance_formatDistance = (token, count, options) => {
  const adverb = token.match(/about|over|almost|lessthan/i);
  const unit = adverb ? token.replace(adverb[0], "") : token;

  const addSuffix = options?.addSuffix === true;
  const key = unit.toLowerCase();
  const comparison = options?.comparison || 0;

  const translated = addSuffix
    ? router_withSuffixes[key][comparison]
    : router_withoutSuffixes[key];

  let result = key === "halfaminute" ? translated : count + translated;

  if (adverb) {
    const adv = adverb[0].toLowerCase();
    result = router_translations[adv] + " " + result;
  }

  return result;
};

;// ./node_modules/date-fns/locale/hu/_lib/formatLong.mjs


const router_hu_lib_formatLong_dateFormats = {
  full: "y. MMMM d., EEEE",
  long: "y. MMMM d.",
  medium: "y. MMM d.",
  short: "y. MM. dd.",
};

const router_hu_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_hu_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_hu_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_hu_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_hu_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_hu_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/hu/_lib/formatRelative.mjs
const router_hu_lib_formatRelative_accusativeWeekdays = [
  "vasárnap",
  "hétfőn",
  "kedden",
  "szerdán",
  "csütörtökön",
  "pénteken",
  "szombaton",
];

function router_week(isFuture) {
  return (date) => {
    const weekday = router_hu_lib_formatRelative_accusativeWeekdays[date.getDay()];
    const prefix = isFuture ? "" : "'múlt' ";
    return `${prefix}'${weekday}' p'-kor'`;
  };
}
const router_hu_lib_formatRelative_formatRelativeLocale = {
  lastWeek: router_week(false),
  yesterday: "'tegnap' p'-kor'",
  today: "'ma' p'-kor'",
  tomorrow: "'holnap' p'-kor'",
  nextWeek: router_week(true),
  other: "P",
};

const router_hu_lib_formatRelative_formatRelative = (token, date) => {
  const format = router_hu_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/hu/_lib/localize.mjs


const router_hu_lib_localize_eraValues = {
  narrow: ["ie.", "isz."],
  abbreviated: ["i. e.", "i. sz."],
  wide: ["Krisztus előtt", "időszámításunk szerint"],
};

const router_hu_lib_localize_quarterValues = {
  narrow: ["1.", "2.", "3.", "4."],
  abbreviated: ["1. n.év", "2. n.év", "3. n.év", "4. n.év"],
  wide: ["1. negyedév", "2. negyedév", "3. negyedév", "4. negyedév"],
};

const router_formattingQuarterValues = {
  narrow: ["I.", "II.", "III.", "IV."],
  abbreviated: ["I. n.év", "II. n.év", "III. n.év", "IV. n.év"],
  wide: ["I. negyedév", "II. negyedév", "III. negyedév", "IV. negyedév"],
};

const router_hu_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "Á", "M", "J", "J", "A", "Sz", "O", "N", "D"],

  abbreviated: [
    "jan.",
    "febr.",
    "márc.",
    "ápr.",
    "máj.",
    "jún.",
    "júl.",
    "aug.",
    "szept.",
    "okt.",
    "nov.",
    "dec.",
  ],

  wide: [
    "január",
    "február",
    "március",
    "április",
    "május",
    "június",
    "július",
    "augusztus",
    "szeptember",
    "október",
    "november",
    "december",
  ],
};

const router_hu_lib_localize_dayValues = {
  narrow: ["V", "H", "K", "Sz", "Cs", "P", "Sz"],
  short: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
  abbreviated: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
  wide: [
    "vasárnap",
    "hétfő",
    "kedd",
    "szerda",
    "csütörtök",
    "péntek",
    "szombat",
  ],
};

const router_hu_lib_localize_dayPeriodValues = {
  narrow: {
    am: "de.",
    pm: "du.",
    midnight: "éjfél",
    noon: "dél",
    morning: "reggel",
    afternoon: "du.",
    evening: "este",
    night: "éjjel",
  },
  abbreviated: {
    am: "de.",
    pm: "du.",
    midnight: "éjfél",
    noon: "dél",
    morning: "reggel",
    afternoon: "du.",
    evening: "este",
    night: "éjjel",
  },
  wide: {
    am: "de.",
    pm: "du.",
    midnight: "éjfél",
    noon: "dél",
    morning: "reggel",
    afternoon: "délután",
    evening: "este",
    night: "éjjel",
  },
};

const router_hu_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_hu_lib_localize_localize = {
  ordinalNumber: router_hu_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_hu_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_hu_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
    formattingValues: router_formattingQuarterValues,
    defaultFormattingWidth: "wide",
  }),

  month: router_buildLocalizeFn({
    values: router_hu_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_hu_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_hu_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/hu/_lib/match.mjs



const router_hu_lib_match_matchOrdinalNumberPattern = /^(\d+)\.?/i;
const router_hu_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_hu_lib_match_matchEraPatterns = {
  narrow: /^(ie\.|isz\.)/i,
  abbreviated: /^(i\.\s?e\.?|b?\s?c\s?e|i\.\s?sz\.?)/i,
  wide: /^(Krisztus előtt|időszámításunk előtt|időszámításunk szerint|i\. sz\.)/i,
};
const router_hu_lib_match_parseEraPatterns = {
  narrow: [/ie/i, /isz/i],
  abbreviated: [/^(i\.?\s?e\.?|b\s?ce)/i, /^(i\.?\s?sz\.?|c\s?e)/i],
  any: [/előtt/i, /(szerint|i. sz.)/i],
};

const router_hu_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]\.?/i,
  abbreviated: /^[1234]?\.?\s?n\.év/i,
  wide: /^([1234]|I|II|III|IV)?\.?\s?negyedév/i,
};
const router_hu_lib_match_parseQuarterPatterns = {
  any: [/1|I$/i, /2|II$/i, /3|III/i, /4|IV/i],
};

const router_hu_lib_match_matchMonthPatterns = {
  narrow: /^[jfmaásond]|sz/i,
  abbreviated:
    /^(jan\.?|febr\.?|márc\.?|ápr\.?|máj\.?|jún\.?|júl\.?|aug\.?|szept\.?|okt\.?|nov\.?|dec\.?)/i,
  wide: /^(január|február|március|április|május|június|július|augusztus|szeptember|október|november|december)/i,
};
const router_hu_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a|á/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s|sz/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^már/i,
    /^áp/i,
    /^máj/i,
    /^jún/i,
    /^júl/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_hu_lib_match_matchDayPatterns = {
  narrow: /^([vhkpc]|sz|cs|sz)/i,
  short: /^([vhkp]|sze|cs|szo)/i,
  abbreviated: /^([vhkp]|sze|cs|szo)/i,
  wide: /^(vasárnap|hétfő|kedd|szerda|csütörtök|péntek|szombat)/i,
};
const router_hu_lib_match_parseDayPatterns = {
  narrow: [/^v/i, /^h/i, /^k/i, /^sz/i, /^c/i, /^p/i, /^sz/i],
  any: [/^v/i, /^h/i, /^k/i, /^sze/i, /^c/i, /^p/i, /^szo/i],
};

const router_hu_lib_match_matchDayPeriodPatterns = {
  any: /^((de|du)\.?|éjfél|délután|dél|reggel|este|éjjel)/i,
};
const router_hu_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^de\.?/i,
    pm: /^du\.?/i,
    midnight: /^éjf/i,
    noon: /^dé/i,
    morning: /reg/i,
    afternoon: /^délu\.?/i,
    evening: /es/i,
    night: /éjj/i,
  },
};

const router_hu_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_hu_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_hu_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_hu_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hu_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_hu_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hu_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_hu_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hu_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_hu_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hu_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_hu_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_hu_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/hu.mjs






/**
 * @category Locales
 * @summary Hungarian locale.
 * @language Hungarian
 * @iso-639-2 hun
 * @author Pavlo Shpak [@pshpak](https://github.com/pshpak)
 * @author Eduardo Pardo [@eduardopsll](https://github.com/eduardopsll)
 * @author Zoltan Szepesi [@twodcube](https://github.com/twodcube)
 */
const router_hu = {
  code: "hu",
  formatDistance: router_hu_lib_formatDistance_formatDistance,
  formatLong: router_hu_lib_formatLong_formatLong,
  formatRelative: router_hu_lib_formatRelative_formatRelative,
  localize: router_hu_lib_localize_localize,
  match: router_hu_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_hu = ((/* unused pure expression or super */ null && (router_hu)));

;// ./node_modules/date-fns/locale/hy/_lib/formatDistance.mjs
const router_hy_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "ավելի քիչ քան 1 վայրկյան",
    other: "ավելի քիչ քան {{count}} վայրկյան",
  },

  xSeconds: {
    one: "1 վայրկյան",
    other: "{{count}} վայրկյան",
  },

  halfAMinute: "կես րոպե",

  lessThanXMinutes: {
    one: "ավելի քիչ քան 1 րոպե",
    other: "ավելի քիչ քան {{count}} րոպե",
  },

  xMinutes: {
    one: "1 րոպե",
    other: "{{count}} րոպե",
  },

  aboutXHours: {
    one: "մոտ 1 ժամ",
    other: "մոտ {{count}} ժամ",
  },

  xHours: {
    one: "1 ժամ",
    other: "{{count}} ժամ",
  },

  xDays: {
    one: "1 օր",
    other: "{{count}} օր",
  },

  aboutXWeeks: {
    one: "մոտ 1 շաբաթ",
    other: "մոտ {{count}} շաբաթ",
  },

  xWeeks: {
    one: "1 շաբաթ",
    other: "{{count}} շաբաթ",
  },

  aboutXMonths: {
    one: "մոտ 1 ամիս",
    other: "մոտ {{count}} ամիս",
  },

  xMonths: {
    one: "1 ամիս",
    other: "{{count}} ամիս",
  },

  aboutXYears: {
    one: "մոտ 1 տարի",
    other: "մոտ {{count}} տարի",
  },

  xYears: {
    one: "1 տարի",
    other: "{{count}} տարի",
  },

  overXYears: {
    one: "ավելի քան 1 տարի",
    other: "ավելի քան {{count}} տարի",
  },

  almostXYears: {
    one: "համարյա 1 տարի",
    other: "համարյա {{count}} տարի",
  },
};

const router_hy_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_hy_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + " հետո";
    } else {
      return result + " առաջ";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/hy/_lib/formatLong.mjs


const router_hy_lib_formatLong_dateFormats = {
  full: "d MMMM, y, EEEE",
  long: "d MMMM, y",
  medium: "d MMM, y",
  short: "dd.MM.yyyy",
};

const router_hy_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_hy_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'ժ․'{{time}}",
  long: "{{date}} 'ժ․'{{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_hy_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_hy_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_hy_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_hy_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/hy/_lib/formatRelative.mjs
const router_hy_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'նախորդ' eeee p'֊ին'",
  yesterday: "'երեկ' p'֊ին'",
  today: "'այսօր' p'֊ին'",
  tomorrow: "'վաղը' p'֊ին'",
  nextWeek: "'հաջորդ' eeee p'֊ին'",
  other: "P",
};

const router_hy_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_hy_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/hy/_lib/localize.mjs


const router_hy_lib_localize_eraValues = {
  narrow: ["Ք", "Մ"],
  abbreviated: ["ՔԱ", "ՄԹ"],
  wide: ["Քրիստոսից առաջ", "Մեր թվարկության"],
};

const router_hy_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Ք1", "Ք2", "Ք3", "Ք4"],
  wide: ["1֊ին քառորդ", "2֊րդ քառորդ", "3֊րդ քառորդ", "4֊րդ քառորդ"],
};

const router_hy_lib_localize_monthValues = {
  narrow: ["Հ", "Փ", "Մ", "Ա", "Մ", "Հ", "Հ", "Օ", "Ս", "Հ", "Ն", "Դ"],
  abbreviated: [
    "հուն",
    "փետ",
    "մար",
    "ապր",
    "մայ",
    "հուն",
    "հուլ",
    "օգս",
    "սեպ",
    "հոկ",
    "նոյ",
    "դեկ",
  ],

  wide: [
    "հունվար",
    "փետրվար",
    "մարտ",
    "ապրիլ",
    "մայիս",
    "հունիս",
    "հուլիս",
    "օգոստոս",
    "սեպտեմբեր",
    "հոկտեմբեր",
    "նոյեմբեր",
    "դեկտեմբեր",
  ],
};

const router_hy_lib_localize_dayValues = {
  narrow: ["Կ", "Ե", "Ե", "Չ", "Հ", "Ո", "Շ"],
  short: ["կր", "եր", "եք", "չք", "հգ", "ուր", "շբ"],
  abbreviated: ["կիր", "երկ", "երք", "չոր", "հնգ", "ուրբ", "շաբ"],
  wide: [
    "կիրակի",
    "երկուշաբթի",
    "երեքշաբթի",
    "չորեքշաբթի",
    "հինգշաբթի",
    "ուրբաթ",
    "շաբաթ",
  ],
};

const router_hy_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "կեսգշ",
    noon: "կեսօր",
    morning: "առավոտ",
    afternoon: "ցերեկ",
    evening: "երեկո",
    night: "գիշեր",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "կեսգիշեր",
    noon: "կեսօր",
    morning: "առավոտ",
    afternoon: "ցերեկ",
    evening: "երեկո",
    night: "գիշեր",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "կեսգիշեր",
    noon: "կեսօր",
    morning: "առավոտ",
    afternoon: "ցերեկ",
    evening: "երեկո",
    night: "գիշեր",
  },
};

const router_hy_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "կեսգշ",
    noon: "կեսօր",
    morning: "առավոտը",
    afternoon: "ցերեկը",
    evening: "երեկոյան",
    night: "գիշերը",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "կեսգիշերին",
    noon: "կեսօրին",
    morning: "առավոտը",
    afternoon: "ցերեկը",
    evening: "երեկոյան",
    night: "գիշերը",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "կեսգիշերին",
    noon: "կեսօրին",
    morning: "առավոտը",
    afternoon: "ցերեկը",
    evening: "երեկոյան",
    night: "գիշերը",
  },
};

const router_hy_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`.
  //
  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'.

  const rem100 = number % 100;
  if (rem100 < 10) {
    if (rem100 % 10 === 1) {
      return number + "֊ին";
    }
  }
  return number + "֊րդ";
};

const router_hy_lib_localize_localize = {
  ordinalNumber: router_hy_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_hy_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_hy_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_hy_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_hy_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_hy_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_hy_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/hy/_lib/match.mjs



const router_hy_lib_match_matchOrdinalNumberPattern = /^(\d+)((-|֊)?(ին|րդ))?/i;
const router_hy_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_hy_lib_match_matchEraPatterns = {
  narrow: /^(Ք|Մ)/i,
  abbreviated: /^(Ք\.?\s?Ա\.?|Մ\.?\s?Թ\.?\s?Ա\.?|Մ\.?\s?Թ\.?|Ք\.?\s?Հ\.?)/i,
  wide: /^(քրիստոսից առաջ|մեր թվարկությունից առաջ|մեր թվարկության|քրիստոսից հետո)/i,
};
const router_hy_lib_match_parseEraPatterns = {
  any: [/^ք/i, /^մ/i],
};

const router_hy_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^ք[1234]/i,
  wide: /^[1234]((-|֊)?(ին|րդ)) քառորդ/i,
};
const router_hy_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_hy_lib_match_matchMonthPatterns = {
  narrow: /^[հփմաօսնդ]/i,
  abbreviated: /^(հուն|փետ|մար|ապր|մայ|հուն|հուլ|օգս|սեպ|հոկ|նոյ|դեկ)/i,
  wide: /^(հունվար|փետրվար|մարտ|ապրիլ|մայիս|հունիս|հուլիս|օգոստոս|սեպտեմբեր|հոկտեմբեր|նոյեմբեր|դեկտեմբեր)/i,
};
const router_hy_lib_match_parseMonthPatterns = {
  narrow: [
    /^հ/i,
    /^փ/i,
    /^մ/i,
    /^ա/i,
    /^մ/i,
    /^հ/i,
    /^հ/i,
    /^օ/i,
    /^ս/i,
    /^հ/i,
    /^ն/i,
    /^դ/i,
  ],

  any: [
    /^հու/i,
    /^փ/i,
    /^մար/i,
    /^ա/i,
    /^մայ/i,
    /^հուն/i,
    /^հուլ/i,
    /^օ/i,
    /^ս/i,
    /^հոկ/i,
    /^ն/i,
    /^դ/i,
  ],
};

const router_hy_lib_match_matchDayPatterns = {
  narrow: /^[եչհոշկ]/i,
  short: /^(կր|եր|եք|չք|հգ|ուր|շբ)/i,
  abbreviated: /^(կիր|երկ|երք|չոր|հնգ|ուրբ|շաբ)/i,
  wide: /^(կիրակի|երկուշաբթի|երեքշաբթի|չորեքշաբթի|հինգշաբթի|ուրբաթ|շաբաթ)/i,
};
const router_hy_lib_match_parseDayPatterns = {
  narrow: [/^կ/i, /^ե/i, /^ե/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i],
  short: [/^կ/i, /^եր/i, /^եք/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i],
  abbreviated: [/^կ/i, /^երկ/i, /^երք/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i],

  wide: [/^կ/i, /^երկ/i, /^երե/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i],
};

const router_hy_lib_match_matchDayPeriodPatterns = {
  narrow: /^([ap]|կեսգշ|կեսօր|(առավոտը?|ցերեկը?|երեկո(յան)?|գիշերը?))/i,
  any: /^([ap]\.?\s?m\.?|կեսգիշեր(ին)?|կեսօր(ին)?|(առավոտը?|ցերեկը?|երեկո(յան)?|գիշերը?))/i,
};
const router_hy_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /կեսգիշեր/i,
    noon: /կեսօր/i,
    morning: /առավոտ/i,
    afternoon: /ցերեկ/i,
    evening: /երեկո/i,
    night: /գիշեր/i,
  },
};

const router_hy_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_hy_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_hy_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_hy_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hy_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_hy_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hy_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_hy_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hy_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_hy_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_hy_lib_match_parseDayPatterns,
    defaultParseWidth: "wide",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_hy_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_hy_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/hy.mjs






/**
 * @category Locales
 * @summary Armenian locale
 * @language Armenian
 * @iso-639-2 arm
 * @author Alex Igityan [@alexigityan](https://github.com/alexigityan)
 */
const router_hy = {
  code: "hy",
  formatDistance: router_hy_lib_formatDistance_formatDistance,
  formatLong: router_hy_lib_formatLong_formatLong,
  formatRelative: router_hy_lib_formatRelative_formatRelative,
  localize: router_hy_lib_localize_localize,
  match: router_hy_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_hy = ((/* unused pure expression or super */ null && (router_hy)));

;// ./node_modules/date-fns/locale/id/_lib/formatDistance.mjs
const router_id_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "kurang dari 1 detik",
    other: "kurang dari {{count}} detik",
  },

  xSeconds: {
    one: "1 detik",
    other: "{{count}} detik",
  },

  halfAMinute: "setengah menit",

  lessThanXMinutes: {
    one: "kurang dari 1 menit",
    other: "kurang dari {{count}} menit",
  },

  xMinutes: {
    one: "1 menit",
    other: "{{count}} menit",
  },

  aboutXHours: {
    one: "sekitar 1 jam",
    other: "sekitar {{count}} jam",
  },

  xHours: {
    one: "1 jam",
    other: "{{count}} jam",
  },

  xDays: {
    one: "1 hari",
    other: "{{count}} hari",
  },

  aboutXWeeks: {
    one: "sekitar 1 minggu",
    other: "sekitar {{count}} minggu",
  },

  xWeeks: {
    one: "1 minggu",
    other: "{{count}} minggu",
  },

  aboutXMonths: {
    one: "sekitar 1 bulan",
    other: "sekitar {{count}} bulan",
  },

  xMonths: {
    one: "1 bulan",
    other: "{{count}} bulan",
  },

  aboutXYears: {
    one: "sekitar 1 tahun",
    other: "sekitar {{count}} tahun",
  },

  xYears: {
    one: "1 tahun",
    other: "{{count}} tahun",
  },

  overXYears: {
    one: "lebih dari 1 tahun",
    other: "lebih dari {{count}} tahun",
  },

  almostXYears: {
    one: "hampir 1 tahun",
    other: "hampir {{count}} tahun",
  },
};

const router_id_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_id_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "dalam waktu " + result;
    } else {
      return result + " yang lalu";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/id/_lib/formatLong.mjs


const router_id_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "d/M/yyyy",
};

const router_id_lib_formatLong_timeFormats = {
  full: "HH.mm.ss",
  long: "HH.mm.ss",
  medium: "HH.mm",
  short: "HH.mm",
};

const router_id_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'pukul' {{time}}",
  long: "{{date}} 'pukul' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_id_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_id_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_id_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_id_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/id/_lib/formatRelative.mjs
const router_id_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'lalu pukul' p",
  yesterday: "'Kemarin pukul' p",
  today: "'Hari ini pukul' p",
  tomorrow: "'Besok pukul' p",
  nextWeek: "eeee 'pukul' p",
  other: "P",
};

const router_id_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_id_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/id/_lib/localize.mjs


// All data for localization are taken from this page
// https://www.unicode.org/cldr/charts/32/summary/id.html
const router_id_lib_localize_eraValues = {
  narrow: ["SM", "M"],
  abbreviated: ["SM", "M"],
  wide: ["Sebelum Masehi", "Masehi"],
};

const router_id_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: ["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"],
};

// Note: in Indonesian, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_id_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "Mei",
    "Jun",
    "Jul",
    "Agt",
    "Sep",
    "Okt",
    "Nov",
    "Des",
  ],

  wide: [
    "Januari",
    "Februari",
    "Maret",
    "April",
    "Mei",
    "Juni",
    "Juli",
    "Agustus",
    "September",
    "Oktober",
    "November",
    "Desember",
  ],
};

const router_id_lib_localize_dayValues = {
  narrow: ["M", "S", "S", "R", "K", "J", "S"],
  short: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
  abbreviated: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
  wide: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"],
};

const router_id_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "siang",
    evening: "sore",
    night: "malam",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "siang",
    evening: "sore",
    night: "malam",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "siang",
    evening: "sore",
    night: "malam",
  },
};

const router_id_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "siang",
    evening: "sore",
    night: "malam",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "siang",
    evening: "sore",
    night: "malam",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "siang",
    evening: "sore",
    night: "malam",
  },
};

const router_id_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  // Can't use "pertama", "kedua" because can't be parsed

  return "ke-" + number;
};

const router_id_lib_localize_localize = {
  ordinalNumber: router_id_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_id_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_id_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_id_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_id_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_id_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_id_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/id/_lib/match.mjs



const router_id_lib_match_matchOrdinalNumberPattern = /^ke-(\d+)?/i;
const router_id_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_id_lib_match_matchEraPatterns = {
  narrow: /^(sm|m)/i,
  abbreviated: /^(s\.?\s?m\.?|s\.?\s?e\.?\s?u\.?|m\.?|e\.?\s?u\.?)/i,
  wide: /^(sebelum masehi|sebelum era umum|masehi|era umum)/i,
};
const router_id_lib_match_parseEraPatterns = {
  any: [/^s/i, /^(m|e)/i],
};

const router_id_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^K-?\s[1234]/i,
  wide: /^Kuartal ke-?\s?[1234]/i,
};
const router_id_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_id_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i,
  wide: /^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i,
};
const router_id_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^ma/i,
    /^ap/i,
    /^me/i,
    /^jun/i,
    /^jul/i,
    /^ag/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_id_lib_match_matchDayPatterns = {
  narrow: /^[srkjm]/i,
  short: /^(min|sen|sel|rab|kam|jum|sab)/i,
  abbreviated: /^(min|sen|sel|rab|kam|jum|sab)/i,
  wide: /^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i,
};
const router_id_lib_match_parseDayPatterns = {
  narrow: [/^m/i, /^s/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],
  any: [/^m/i, /^sen/i, /^sel/i, /^r/i, /^k/i, /^j/i, /^sa/i],
};

const router_id_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|tengah m|tengah h|(di(\swaktu)?) (pagi|siang|sore|malam))/i,
  any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|(di(\swaktu)?) (pagi|siang|sore|malam))/i,
};
const router_id_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^pm/i,
    midnight: /^tengah m/i,
    noon: /^tengah h/i,
    morning: /pagi/i,
    afternoon: /siang/i,
    evening: /sore/i,
    night: /malam/i,
  },
};

const router_id_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_id_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_id_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_id_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_id_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_id_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_id_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_id_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_id_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_id_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_id_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_id_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_id_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/id.mjs






/**
 * @category Locales
 * @summary Indonesian locale.
 * @language Indonesian
 * @iso-639-2 ind
 * @author Rahmat Budiharso [@rbudiharso](https://github.com/rbudiharso)
 * @author Benget Nata [@bentinata](https://github.com/bentinata)
 * @author Budi Irawan [@deerawan](https://github.com/deerawan)
 * @author Try Ajitiono [@imballinst](https://github.com/imballinst)
 */
const router_id = {
  code: "id",
  formatDistance: router_id_lib_formatDistance_formatDistance,
  formatLong: router_id_lib_formatLong_formatLong,
  formatRelative: router_id_lib_formatRelative_formatRelative,
  localize: router_id_lib_localize_localize,
  match: router_id_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_id = ((/* unused pure expression or super */ null && (router_id)));

;// ./node_modules/date-fns/locale/is/_lib/formatDistance.mjs
const router_is_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "minna en 1 sekúnda",
    other: "minna en {{count}} sekúndur",
  },

  xSeconds: {
    one: "1 sekúnda",
    other: "{{count}} sekúndur",
  },

  halfAMinute: "hálf mínúta",

  lessThanXMinutes: {
    one: "minna en 1 mínúta",
    other: "minna en {{count}} mínútur",
  },

  xMinutes: {
    one: "1 mínúta",
    other: "{{count}} mínútur",
  },

  aboutXHours: {
    one: "u.þ.b. 1 klukkustund",
    other: "u.þ.b. {{count}} klukkustundir",
  },

  xHours: {
    one: "1 klukkustund",
    other: "{{count}} klukkustundir",
  },

  xDays: {
    one: "1 dagur",
    other: "{{count}} dagar",
  },

  aboutXWeeks: {
    one: "um viku",
    other: "um {{count}} vikur",
  },

  xWeeks: {
    one: "1 viku",
    other: "{{count}} vikur",
  },

  aboutXMonths: {
    one: "u.þ.b. 1 mánuður",
    other: "u.þ.b. {{count}} mánuðir",
  },

  xMonths: {
    one: "1 mánuður",
    other: "{{count}} mánuðir",
  },

  aboutXYears: {
    one: "u.þ.b. 1 ár",
    other: "u.þ.b. {{count}} ár",
  },

  xYears: {
    one: "1 ár",
    other: "{{count}} ár",
  },

  overXYears: {
    one: "meira en 1 ár",
    other: "meira en {{count}} ár",
  },

  almostXYears: {
    one: "næstum 1 ár",
    other: "næstum {{count}} ár",
  },
};

const router_is_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_is_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "í " + result;
    } else {
      return result + " síðan";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/is/_lib/formatLong.mjs


const router_is_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM y",
  long: "do MMMM y",
  medium: "do MMM y",
  short: "d.MM.y",
};

const router_is_lib_formatLong_timeFormats = {
  full: "'kl'. HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_is_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'kl.' {{time}}",
  long: "{{date}} 'kl.' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_is_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_is_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_is_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_is_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/is/_lib/formatRelative.mjs
const router_is_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'síðasta' dddd 'kl.' p",
  yesterday: "'í gær kl.' p",
  today: "'í dag kl.' p",
  tomorrow: "'á morgun kl.' p",
  nextWeek: "dddd 'kl.' p",
  other: "P",
};

const router_is_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_is_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/is/_lib/localize.mjs


const router_is_lib_localize_eraValues = {
  narrow: ["f.Kr.", "e.Kr."],
  abbreviated: ["f.Kr.", "e.Kr."],
  wide: ["fyrir Krist", "eftir Krist"],
};

const router_is_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1F", "2F", "3F", "4F"],
  wide: ["1. fjórðungur", "2. fjórðungur", "3. fjórðungur", "4. fjórðungur"],
};

const router_is_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "Á", "S", "Ó", "N", "D"],
  abbreviated: [
    "jan.",
    "feb.",
    "mars",
    "apríl",
    "maí",
    "júní",
    "júlí",
    "ágúst",
    "sept.",
    "okt.",
    "nóv.",
    "des.",
  ],

  wide: [
    "janúar",
    "febrúar",
    "mars",
    "apríl",
    "maí",
    "júní",
    "júlí",
    "ágúst",
    "september",
    "október",
    "nóvember",
    "desember",
  ],
};

const router_is_lib_localize_dayValues = {
  narrow: ["S", "M", "Þ", "M", "F", "F", "L"],
  short: ["Su", "Má", "Þr", "Mi", "Fi", "Fö", "La"],
  abbreviated: ["sun.", "mán.", "þri.", "mið.", "fim.", "fös.", "lau."],

  wide: [
    "sunnudagur",
    "mánudagur",
    "þriðjudagur",
    "miðvikudagur",
    "fimmtudagur",
    "föstudagur",
    "laugardagur",
  ],
};

const router_is_lib_localize_dayPeriodValues = {
  narrow: {
    am: "f",
    pm: "e",
    midnight: "miðnætti",
    noon: "hádegi",
    morning: "morgunn",
    afternoon: "síðdegi",
    evening: "kvöld",
    night: "nótt",
  },
  abbreviated: {
    am: "f.h.",
    pm: "e.h.",
    midnight: "miðnætti",
    noon: "hádegi",
    morning: "morgunn",
    afternoon: "síðdegi",
    evening: "kvöld",
    night: "nótt",
  },
  wide: {
    am: "fyrir hádegi",
    pm: "eftir hádegi",
    midnight: "miðnætti",
    noon: "hádegi",
    morning: "morgunn",
    afternoon: "síðdegi",
    evening: "kvöld",
    night: "nótt",
  },
};

const router_is_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "f",
    pm: "e",
    midnight: "á miðnætti",
    noon: "á hádegi",
    morning: "að morgni",
    afternoon: "síðdegis",
    evening: "um kvöld",
    night: "um nótt",
  },
  abbreviated: {
    am: "f.h.",
    pm: "e.h.",
    midnight: "á miðnætti",
    noon: "á hádegi",
    morning: "að morgni",
    afternoon: "síðdegis",
    evening: "um kvöld",
    night: "um nótt",
  },
  wide: {
    am: "fyrir hádegi",
    pm: "eftir hádegi",
    midnight: "á miðnætti",
    noon: "á hádegi",
    morning: "að morgni",
    afternoon: "síðdegis",
    evening: "um kvöld",
    night: "um nótt",
  },
};

const router_is_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  return number + ".";
};

const router_is_lib_localize_localize = {
  ordinalNumber: router_is_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_is_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_is_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_is_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_is_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_is_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_is_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/is/_lib/match.mjs



const router_is_lib_match_matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
const router_is_lib_match_parseOrdinalNumberPattern = /\d+(\.)?/i;

const router_is_lib_match_matchEraPatterns = {
  narrow: /^(f\.Kr\.|e\.Kr\.)/i,
  abbreviated: /^(f\.Kr\.|e\.Kr\.)/i,
  wide: /^(fyrir Krist|eftir Krist)/i,
};
const router_is_lib_match_parseEraPatterns = {
  any: [/^(f\.Kr\.)/i, /^(e\.Kr\.)/i],
};

const router_is_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]\.?/i,
  abbreviated: /^q[1234]\.?/i,
  wide: /^[1234]\.? fjórðungur/i,
};
const router_is_lib_match_parseQuarterPatterns = {
  any: [/1\.?/i, /2\.?/i, /3\.?/i, /4\.?/i],
};

const router_is_lib_match_matchMonthPatterns = {
  narrow: /^[jfmásónd]/i,
  abbreviated:
    /^(jan\.|feb\.|mars\.|apríl\.|maí|júní|júlí|águst|sep\.|oct\.|nov\.|dec\.)/i,
  wide: /^(januar|febrúar|mars|apríl|maí|júní|júlí|águst|september|október|nóvember|desember)/i,
};

const router_is_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^á/i,
    /^s/i,
    /^ó/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^maí/i,
    /^jún/i,
    /^júl/i,
    /^áu/i,
    /^s/i,
    /^ó/i,
    /^n/i,
    /^d/i,
  ],
};

const router_is_lib_match_matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|má|þr|mi|fi|fö|la)/i,
  abbreviated: /^(sun|mán|þri|mið|fim|fös|lau)\.?/i,
  wide: /^(sunnudagur|mánudagur|þriðjudagur|miðvikudagur|fimmtudagur|föstudagur|laugardagur)/i,
};
const router_is_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^þ/i, /^m/i, /^f/i, /^f/i, /^l/i],
  any: [/^su/i, /^má/i, /^þr/i, /^mi/i, /^fi/i, /^fö/i, /^la/i],
};

const router_is_lib_match_matchDayPeriodPatterns = {
  narrow: /^(f|e|síðdegis|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i,
  any: /^(fyrir hádegi|eftir hádegi|[ef]\.?h\.?|síðdegis|morgunn|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i,
};
const router_is_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^f/i,
    pm: /^e/i,
    midnight: /^mi/i,
    noon: /^há/i,
    morning: /morgunn/i,
    afternoon: /síðdegi/i,
    evening: /kvöld/i,
    night: /nótt/i,
  },
};

const router_is_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_is_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_is_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_is_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_is_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_is_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_is_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_is_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_is_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_is_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_is_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_is_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_is_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/is.mjs






/**
 * @category Locales
 * @summary Icelandic locale.
 * @language Icelandic
 * @iso-639-2 isl
 * @author Derek Blank [@derekblank](https://github.com/derekblank)
 * @author Arnór Ýmir [@lamayg](https://github.com/lamayg)
 */
const router_is = {
  code: "is",
  formatDistance: router_is_lib_formatDistance_formatDistance,
  formatLong: router_is_lib_formatLong_formatLong,
  formatRelative: router_is_lib_formatRelative_formatRelative,
  localize: router_is_lib_localize_localize,
  match: router_is_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_is = ((/* unused pure expression or super */ null && (router_is)));

;// ./node_modules/date-fns/locale/it/_lib/formatDistance.mjs
const router_it_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "meno di un secondo",
    other: "meno di {{count}} secondi",
  },

  xSeconds: {
    one: "un secondo",
    other: "{{count}} secondi",
  },

  halfAMinute: "alcuni secondi",

  lessThanXMinutes: {
    one: "meno di un minuto",
    other: "meno di {{count}} minuti",
  },

  xMinutes: {
    one: "un minuto",
    other: "{{count}} minuti",
  },

  aboutXHours: {
    one: "circa un'ora",
    other: "circa {{count}} ore",
  },

  xHours: {
    one: "un'ora",
    other: "{{count}} ore",
  },

  xDays: {
    one: "un giorno",
    other: "{{count}} giorni",
  },

  aboutXWeeks: {
    one: "circa una settimana",
    other: "circa {{count}} settimane",
  },

  xWeeks: {
    one: "una settimana",
    other: "{{count}} settimane",
  },

  aboutXMonths: {
    one: "circa un mese",
    other: "circa {{count}} mesi",
  },

  xMonths: {
    one: "un mese",
    other: "{{count}} mesi",
  },

  aboutXYears: {
    one: "circa un anno",
    other: "circa {{count}} anni",
  },

  xYears: {
    one: "un anno",
    other: "{{count}} anni",
  },

  overXYears: {
    one: "più di un anno",
    other: "più di {{count}} anni",
  },

  almostXYears: {
    one: "quasi un anno",
    other: "quasi {{count}} anni",
  },
};

const router_it_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_it_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "tra " + result;
    } else {
      return result + " fa";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/it/_lib/formatLong.mjs


const router_it_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd/MM/y",
};

const router_it_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_it_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_it_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_it_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_it_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_it_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/it/_lib/formatRelative.mjs


const router_formatRelative_weekdays = [
  "domenica",
  "lunedì",
  "martedì",
  "mercoledì",
  "giovedì",
  "venerdì",
  "sabato",
];

function router_it_lib_formatRelative_lastWeek(day) {
  switch (day) {
    case 0:
      return "'domenica scorsa alle' p";
    default:
      return "'" + router_formatRelative_weekdays[day] + " scorso alle' p";
  }
}

function router_it_lib_formatRelative_thisWeek(day) {
  return "'" + router_formatRelative_weekdays[day] + " alle' p";
}

function router_it_lib_formatRelative_nextWeek(day) {
  switch (day) {
    case 0:
      return "'domenica prossima alle' p";
    default:
      return "'" + router_formatRelative_weekdays[day] + " prossimo alle' p";
  }
}

const router_it_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_it_lib_formatRelative_thisWeek(day);
    } else {
      return router_it_lib_formatRelative_lastWeek(day);
    }
  },
  yesterday: "'ieri alle' p",
  today: "'oggi alle' p",
  tomorrow: "'domani alle' p",
  nextWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_it_lib_formatRelative_thisWeek(day);
    } else {
      return router_it_lib_formatRelative_nextWeek(day);
    }
  },
  other: "P",
};

const router_it_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_it_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/it/_lib/localize.mjs


const router_it_lib_localize_eraValues = {
  narrow: ["aC", "dC"],
  abbreviated: ["a.C.", "d.C."],
  wide: ["avanti Cristo", "dopo Cristo"],
};

const router_it_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["T1", "T2", "T3", "T4"],
  wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"],
};

const router_it_lib_localize_monthValues = {
  narrow: ["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"],
  abbreviated: [
    "gen",
    "feb",
    "mar",
    "apr",
    "mag",
    "giu",
    "lug",
    "ago",
    "set",
    "ott",
    "nov",
    "dic",
  ],

  wide: [
    "gennaio",
    "febbraio",
    "marzo",
    "aprile",
    "maggio",
    "giugno",
    "luglio",
    "agosto",
    "settembre",
    "ottobre",
    "novembre",
    "dicembre",
  ],
};

const router_it_lib_localize_dayValues = {
  narrow: ["D", "L", "M", "M", "G", "V", "S"],
  short: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
  abbreviated: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
  wide: [
    "domenica",
    "lunedì",
    "martedì",
    "mercoledì",
    "giovedì",
    "venerdì",
    "sabato",
  ],
};

const router_it_lib_localize_dayPeriodValues = {
  narrow: {
    am: "m.",
    pm: "p.",
    midnight: "mezzanotte",
    noon: "mezzogiorno",
    morning: "mattina",
    afternoon: "pomeriggio",
    evening: "sera",
    night: "notte",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "mezzanotte",
    noon: "mezzogiorno",
    morning: "mattina",
    afternoon: "pomeriggio",
    evening: "sera",
    night: "notte",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "mezzanotte",
    noon: "mezzogiorno",
    morning: "mattina",
    afternoon: "pomeriggio",
    evening: "sera",
    night: "notte",
  },
};

const router_it_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "m.",
    pm: "p.",
    midnight: "mezzanotte",
    noon: "mezzogiorno",
    morning: "di mattina",
    afternoon: "del pomeriggio",
    evening: "di sera",
    night: "di notte",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "mezzanotte",
    noon: "mezzogiorno",
    morning: "di mattina",
    afternoon: "del pomeriggio",
    evening: "di sera",
    night: "di notte",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "mezzanotte",
    noon: "mezzogiorno",
    morning: "di mattina",
    afternoon: "del pomeriggio",
    evening: "di sera",
    night: "di notte",
  },
};

const router_it_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return String(number);
};

const router_it_lib_localize_localize = {
  ordinalNumber: router_it_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_it_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_it_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_it_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_it_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_it_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_it_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/it/_lib/match.mjs



const router_it_lib_match_matchOrdinalNumberPattern = /^(\d+)(º)?/i;
const router_it_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_it_lib_match_matchEraPatterns = {
  narrow: /^(aC|dC)/i,
  abbreviated: /^(a\.?\s?C\.?|a\.?\s?e\.?\s?v\.?|d\.?\s?C\.?|e\.?\s?v\.?)/i,
  wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i,
};
const router_it_lib_match_parseEraPatterns = {
  any: [/^a/i, /^(d|e)/i],
};

const router_it_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^t[1234]/i,
  wide: /^[1234](º)? trimestre/i,
};
const router_it_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_it_lib_match_matchMonthPatterns = {
  narrow: /^[gfmalsond]/i,
  abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i,
  wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i,
};
const router_it_lib_match_parseMonthPatterns = {
  narrow: [
    /^g/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^g/i,
    /^l/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ge/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^mag/i,
    /^gi/i,
    /^l/i,
    /^ag/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_it_lib_match_matchDayPatterns = {
  narrow: /^[dlmgvs]/i,
  short: /^(do|lu|ma|me|gi|ve|sa)/i,
  abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i,
  wide: /^(domenica|luned[i|ì]|marted[i|ì]|mercoled[i|ì]|gioved[i|ì]|venerd[i|ì]|sabato)/i,
};
const router_it_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^g/i, /^v/i, /^s/i],
  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^g/i, /^v/i, /^s/i],
};

const router_it_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(a|m\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,
  any: /^([ap]\.?\s?m\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,
};
const router_it_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mezza/i,
    noon: /^mezzo/i,
    morning: /mattina/i,
    afternoon: /pomeriggio/i,
    evening: /sera/i,
    night: /notte/i,
  },
};

const router_it_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_it_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_it_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_it_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_it_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_it_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_it_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_it_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_it_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_it_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_it_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_it_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_it_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/it.mjs






/**
 * @category Locales
 * @summary Italian locale.
 * @language Italian
 * @iso-639-2 ita
 * @author Alberto Restifo [@albertorestifo](https://github.com/albertorestifo)
 * @author Giovanni Polimeni [@giofilo](https://github.com/giofilo)
 * @author Vincenzo Carrese [@vin-car](https://github.com/vin-car)
 */
const router_it = {
  code: "it",
  formatDistance: router_it_lib_formatDistance_formatDistance,
  formatLong: router_it_lib_formatLong_formatLong,
  formatRelative: router_it_lib_formatRelative_formatRelative,
  localize: router_it_lib_localize_localize,
  match: router_it_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_it = ((/* unused pure expression or super */ null && (router_it)));

;// ./node_modules/date-fns/locale/it-CH/_lib/formatLong.mjs


const router_it_CH_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd.MM.y",
};

const router_it_CH_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_it_CH_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_it_CH_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_it_CH_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_it_CH_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_it_CH_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/it-CH.mjs






/**
 * @category Locales
 * @summary Italian locale (Switzerland).
 * @language Italian
 * @iso-639-2 ita
 * @author Mike Peyer [@maic66](https://github.com/maic66)
 */
const router_itCH = {
  code: "it-CH",
  formatDistance: router_it_lib_formatDistance_formatDistance,
  formatLong: router_it_CH_lib_formatLong_formatLong,
  formatRelative: router_it_lib_formatRelative_formatRelative,
  localize: router_it_lib_localize_localize,
  match: router_it_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_it_CH = ((/* unused pure expression or super */ null && (router_itCH)));

;// ./node_modules/date-fns/locale/ja/_lib/formatDistance.mjs
const router_ja_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "1秒未満",
    other: "{{count}}秒未満",
    oneWithSuffix: "約1秒",
    otherWithSuffix: "約{{count}}秒",
  },

  xSeconds: {
    one: "1秒",
    other: "{{count}}秒",
  },

  halfAMinute: "30秒",

  lessThanXMinutes: {
    one: "1分未満",
    other: "{{count}}分未満",
    oneWithSuffix: "約1分",
    otherWithSuffix: "約{{count}}分",
  },

  xMinutes: {
    one: "1分",
    other: "{{count}}分",
  },

  aboutXHours: {
    one: "約1時間",
    other: "約{{count}}時間",
  },

  xHours: {
    one: "1時間",
    other: "{{count}}時間",
  },

  xDays: {
    one: "1日",
    other: "{{count}}日",
  },

  aboutXWeeks: {
    one: "約1週間",
    other: "約{{count}}週間",
  },

  xWeeks: {
    one: "1週間",
    other: "{{count}}週間",
  },

  aboutXMonths: {
    one: "約1か月",
    other: "約{{count}}か月",
  },

  xMonths: {
    one: "1か月",
    other: "{{count}}か月",
  },

  aboutXYears: {
    one: "約1年",
    other: "約{{count}}年",
  },

  xYears: {
    one: "1年",
    other: "{{count}}年",
  },

  overXYears: {
    one: "1年以上",
    other: "{{count}}年以上",
  },

  almostXYears: {
    one: "1年近く",
    other: "{{count}}年近く",
  },
};

const router_ja_lib_formatDistance_formatDistance = (token, count, options) => {
  options = options || {};

  let result;

  const tokenValue = router_ja_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    if (options.addSuffix && tokenValue.oneWithSuffix) {
      result = tokenValue.oneWithSuffix;
    } else {
      result = tokenValue.one;
    }
  } else {
    if (options.addSuffix && tokenValue.otherWithSuffix) {
      result = tokenValue.otherWithSuffix.replace("{{count}}", String(count));
    } else {
      result = tokenValue.other.replace("{{count}}", String(count));
    }
  }

  if (options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "後";
    } else {
      return result + "前";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ja/_lib/formatLong.mjs


const router_ja_lib_formatLong_dateFormats = {
  full: "y年M月d日EEEE",
  long: "y年M月d日",
  medium: "y/MM/dd",
  short: "y/MM/dd",
};

const router_ja_lib_formatLong_timeFormats = {
  full: "H時mm分ss秒 zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_ja_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_ja_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ja_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ja_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ja_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ja/_lib/formatRelative.mjs
const router_ja_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "先週のeeeeのp",
  yesterday: "昨日のp",
  today: "今日のp",
  tomorrow: "明日のp",
  nextWeek: "翌週のeeeeのp",
  other: "P",
};

const router_ja_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) => {
  return router_ja_lib_formatRelative_formatRelativeLocale[token];
};

;// ./node_modules/date-fns/locale/ja/_lib/localize.mjs


const router_ja_lib_localize_eraValues = {
  narrow: ["BC", "AC"],
  abbreviated: ["紀元前", "西暦"],
  wide: ["紀元前", "西暦"],
};

const router_ja_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["第1四半期", "第2四半期", "第3四半期", "第4四半期"],
};

const router_ja_lib_localize_monthValues = {
  narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],

  abbreviated: [
    "1月",
    "2月",
    "3月",
    "4月",
    "5月",
    "6月",
    "7月",
    "8月",
    "9月",
    "10月",
    "11月",
    "12月",
  ],

  wide: [
    "1月",
    "2月",
    "3月",
    "4月",
    "5月",
    "6月",
    "7月",
    "8月",
    "9月",
    "10月",
    "11月",
    "12月",
  ],
};

const router_ja_lib_localize_dayValues = {
  narrow: ["日", "月", "火", "水", "木", "金", "土"],
  short: ["日", "月", "火", "水", "木", "金", "土"],
  abbreviated: ["日", "月", "火", "水", "木", "金", "土"],
  wide: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"],
};

const router_ja_lib_localize_dayPeriodValues = {
  narrow: {
    am: "午前",
    pm: "午後",
    midnight: "深夜",
    noon: "正午",
    morning: "朝",
    afternoon: "午後",
    evening: "夜",
    night: "深夜",
  },
  abbreviated: {
    am: "午前",
    pm: "午後",
    midnight: "深夜",
    noon: "正午",
    morning: "朝",
    afternoon: "午後",
    evening: "夜",
    night: "深夜",
  },
  wide: {
    am: "午前",
    pm: "午後",
    midnight: "深夜",
    noon: "正午",
    morning: "朝",
    afternoon: "午後",
    evening: "夜",
    night: "深夜",
  },
};
const router_ja_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "午前",
    pm: "午後",
    midnight: "深夜",
    noon: "正午",
    morning: "朝",
    afternoon: "午後",
    evening: "夜",
    night: "深夜",
  },
  abbreviated: {
    am: "午前",
    pm: "午後",
    midnight: "深夜",
    noon: "正午",
    morning: "朝",
    afternoon: "午後",
    evening: "夜",
    night: "深夜",
  },
  wide: {
    am: "午前",
    pm: "午後",
    midnight: "深夜",
    noon: "正午",
    morning: "朝",
    afternoon: "午後",
    evening: "夜",
    night: "深夜",
  },
};

const router_ja_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = String(options?.unit);

  switch (unit) {
    case "year":
      return `${number}年`;
    case "quarter":
      return `第${number}四半期`;
    case "month":
      return `${number}月`;
    case "week":
      return `第${number}週`;
    case "date":
      return `${number}日`;
    case "hour":
      return `${number}時`;
    case "minute":
      return `${number}分`;
    case "second":
      return `${number}秒`;
    default:
      return `${number}`;
  }
};

const router_ja_lib_localize_localize = {
  ordinalNumber: router_ja_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ja_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ja_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => Number(quarter) - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ja_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ja_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ja_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ja_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ja/_lib/match.mjs



const router_ja_lib_match_matchOrdinalNumberPattern = /^第?\d+(年|四半期|月|週|日|時|分|秒)?/i;
const router_ja_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ja_lib_match_matchEraPatterns = {
  narrow: /^(B\.?C\.?|A\.?D\.?)/i,
  abbreviated: /^(紀元[前後]|西暦)/i,
  wide: /^(紀元[前後]|西暦)/i,
};
const router_ja_lib_match_parseEraPatterns = {
  narrow: [/^B/i, /^A/i],
  any: [/^(紀元前)/i, /^(西暦|紀元後)/i],
};

const router_ja_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^Q[1234]/i,
  wide: /^第[1234一二三四１２３４]四半期/i,
};
const router_ja_lib_match_parseQuarterPatterns = {
  any: [/(1|一|１)/i, /(2|二|２)/i, /(3|三|３)/i, /(4|四|４)/i],
};

const router_ja_lib_match_matchMonthPatterns = {
  narrow: /^([123456789]|1[012])/,
  abbreviated: /^([123456789]|1[012])月/i,
  wide: /^([123456789]|1[012])月/i,
};
const router_ja_lib_match_parseMonthPatterns = {
  any: [
    /^1\D/,
    /^2/,
    /^3/,
    /^4/,
    /^5/,
    /^6/,
    /^7/,
    /^8/,
    /^9/,
    /^10/,
    /^11/,
    /^12/,
  ],
};

const router_ja_lib_match_matchDayPatterns = {
  narrow: /^[日月火水木金土]/,
  short: /^[日月火水木金土]/,
  abbreviated: /^[日月火水木金土]/,
  wide: /^[日月火水木金土]曜日/,
};
const router_ja_lib_match_parseDayPatterns = {
  any: [/^日/, /^月/, /^火/, /^水/, /^木/, /^金/, /^土/],
};

const router_ja_lib_match_matchDayPeriodPatterns = {
  any: /^(AM|PM|午前|午後|正午|深夜|真夜中|夜|朝)/i,
};
const router_ja_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^(A|午前)/i,
    pm: /^(P|午後)/i,
    midnight: /^深夜|真夜中/i,
    noon: /^正午/i,
    morning: /^朝/i,
    afternoon: /^午後/i,
    evening: /^夜/i,
    night: /^深夜/i,
  },
};

const router_ja_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ja_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ja_lib_match_parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    },
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ja_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ja_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ja_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ja_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ja_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ja_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ja_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ja_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ja_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ja_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ja.mjs






/**
 * @category Locales
 * @summary Japanese locale.
 * @language Japanese
 * @iso-639-2 jpn
 * @author Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu)
 * @author Yamagishi Kazutoshi [@ykzts](https://github.com/ykzts)
 * @author Luca Ban [@mesqueeb](https://github.com/mesqueeb)
 * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)
 * @author Taiki IKeda [@so99ynoodles](https://github.com/so99ynoodles)
 */
const router_ja = {
  code: "ja",
  formatDistance: router_ja_lib_formatDistance_formatDistance,
  formatLong: router_ja_lib_formatLong_formatLong,
  formatRelative: router_ja_lib_formatRelative_formatRelative,
  localize: router_ja_lib_localize_localize,
  match: router_ja_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ja = ((/* unused pure expression or super */ null && (router_ja)));

;// ./node_modules/date-fns/locale/ja-Hira/_lib/formatDistance.mjs
const router_ja_Hira_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "1びょうみまん",
    other: "{{count}}びょうみまん",
    oneWithSuffix: "やく1びょう",
    otherWithSuffix: "やく{{count}}びょう",
  },

  xSeconds: {
    one: "1びょう",
    other: "{{count}}びょう",
  },

  halfAMinute: "30びょう",

  lessThanXMinutes: {
    one: "1ぷんみまん",
    other: "{{count}}ふんみまん",
    oneWithSuffix: "やく1ぷん",
    otherWithSuffix: "やく{{count}}ふん",
  },

  xMinutes: {
    one: "1ぷん",
    other: "{{count}}ふん",
  },

  aboutXHours: {
    one: "やく1じかん",
    other: "やく{{count}}じかん",
  },

  xHours: {
    one: "1じかん",
    other: "{{count}}じかん",
  },

  xDays: {
    one: "1にち",
    other: "{{count}}にち",
  },

  aboutXWeeks: {
    one: "やく1しゅうかん",
    other: "やく{{count}}しゅうかん",
  },

  xWeeks: {
    one: "1しゅうかん",
    other: "{{count}}しゅうかん",
  },

  aboutXMonths: {
    one: "やく1かげつ",
    other: "やく{{count}}かげつ",
  },

  xMonths: {
    one: "1かげつ",
    other: "{{count}}かげつ",
  },

  aboutXYears: {
    one: "やく1ねん",
    other: "やく{{count}}ねん",
  },

  xYears: {
    one: "1ねん",
    other: "{{count}}ねん",
  },

  overXYears: {
    one: "1ねんいじょう",
    other: "{{count}}ねんいじょう",
  },

  almostXYears: {
    one: "1ねんちかく",
    other: "{{count}}ねんちかく",
  },
};

const router_ja_Hira_lib_formatDistance_formatDistance = (token, count, options) => {
  options = options || {};

  let result;

  const tokenValue = router_ja_Hira_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    if (options.addSuffix && tokenValue.oneWithSuffix) {
      result = tokenValue.oneWithSuffix;
    } else {
      result = tokenValue.one;
    }
  } else {
    if (options.addSuffix && tokenValue.otherWithSuffix) {
      result = tokenValue.otherWithSuffix.replace("{{count}}", String(count));
    } else {
      result = tokenValue.other.replace("{{count}}", String(count));
    }
  }

  if (options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "あと";
    } else {
      return result + "まえ";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ja-Hira/_lib/formatLong.mjs


const router_ja_Hira_lib_formatLong_dateFormats = {
  full: "yねんMがつdにちEEEE",
  long: "yねんMがつdにち",
  medium: "y/MM/dd",
  short: "y/MM/dd",
};

const router_ja_Hira_lib_formatLong_timeFormats = {
  full: "Hじmmふんssびょう zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_ja_Hira_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_ja_Hira_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ja_Hira_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ja_Hira_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ja_Hira_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ja-Hira/_lib/formatRelative.mjs
const router_ja_Hira_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "せんしゅうのeeeeのp",
  yesterday: "きのうのp",
  today: "きょうのp",
  tomorrow: "あしたのp",
  nextWeek: "よくしゅうのeeeeのp",
  other: "P",
};

const router_ja_Hira_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) => {
  return router_ja_Hira_lib_formatRelative_formatRelativeLocale[token];
};

;// ./node_modules/date-fns/locale/ja-Hira/_lib/localize.mjs


const router_ja_Hira_lib_localize_eraValues = {
  narrow: ["BC", "AC"],
  abbreviated: ["きげんぜん", "せいれき"],
  wide: ["きげんぜん", "せいれき"],
};

const router_ja_Hira_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["だい1しはんき", "だい2しはんき", "だい3しはんき", "だい4しはんき"],
};

const router_ja_Hira_lib_localize_monthValues = {
  narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],

  abbreviated: [
    "1がつ",
    "2がつ",
    "3がつ",
    "4がつ",
    "5がつ",
    "6がつ",
    "7がつ",
    "8がつ",
    "9がつ",
    "10がつ",
    "11がつ",
    "12がつ",
  ],

  wide: [
    "1がつ",
    "2がつ",
    "3がつ",
    "4がつ",
    "5がつ",
    "6がつ",
    "7がつ",
    "8がつ",
    "9がつ",
    "10がつ",
    "11がつ",
    "12がつ",
  ],
};

const router_ja_Hira_lib_localize_dayValues = {
  narrow: ["にち", "げつ", "か", "すい", "もく", "きん", "ど"],
  short: ["にち", "げつ", "か", "すい", "もく", "きん", "ど"],
  abbreviated: ["にち", "げつ", "か", "すい", "もく", "きん", "ど"],
  wide: [
    "にちようび",
    "げつようび",
    "かようび",
    "すいようび",
    "もくようび",
    "きんようび",
    "どようび",
  ],
};

const router_ja_Hira_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ごぜん",
    pm: "ごご",
    midnight: "しんや",
    noon: "しょうご",
    morning: "あさ",
    afternoon: "ごご",
    evening: "よる",
    night: "しんや",
  },
  abbreviated: {
    am: "ごぜん",
    pm: "ごご",
    midnight: "しんや",
    noon: "しょうご",
    morning: "あさ",
    afternoon: "ごご",
    evening: "よる",
    night: "しんや",
  },
  wide: {
    am: "ごぜん",
    pm: "ごご",
    midnight: "しんや",
    noon: "しょうご",
    morning: "あさ",
    afternoon: "ごご",
    evening: "よる",
    night: "しんや",
  },
};
const router_ja_Hira_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ごぜん",
    pm: "ごご",
    midnight: "しんや",
    noon: "しょうご",
    morning: "あさ",
    afternoon: "ごご",
    evening: "よる",
    night: "しんや",
  },
  abbreviated: {
    am: "ごぜん",
    pm: "ごご",
    midnight: "しんや",
    noon: "しょうご",
    morning: "あさ",
    afternoon: "ごご",
    evening: "よる",
    night: "しんや",
  },
  wide: {
    am: "ごぜん",
    pm: "ごご",
    midnight: "しんや",
    noon: "しょうご",
    morning: "あさ",
    afternoon: "ごご",
    evening: "よる",
    night: "しんや",
  },
};

const router_ja_Hira_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = String(options?.unit);

  switch (unit) {
    case "year":
      return `${number}ねん`;
    case "quarter":
      return `だい${number}しはんき`;
    case "month":
      return `${number}がつ`;
    case "week":
      return `だい${number}しゅう`;
    case "date":
      return `${number}にち`;
    case "hour":
      return `${number}じ`;
    case "minute":
      return `${number}ふん`;
    case "second":
      return `${number}びょう`;
    default:
      return `${number}`;
  }
};

const router_ja_Hira_lib_localize_localize = {
  ordinalNumber: router_ja_Hira_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ja_Hira_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ja_Hira_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => Number(quarter) - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ja_Hira_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ja_Hira_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ja_Hira_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ja_Hira_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ja-Hira/_lib/match.mjs



const router_ja_Hira_lib_match_matchOrdinalNumberPattern =
  /^だ?い?\d+(ねん|しはんき|がつ|しゅう|にち|じ|ふん|びょう)?/i;
const router_ja_Hira_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ja_Hira_lib_match_matchEraPatterns = {
  narrow: /^(B\.?C\.?|A\.?D\.?)/i,
  abbreviated: /^(きげん[前後]|せいれき)/i,
  wide: /^(きげん[前後]|せいれき)/i,
};
const router_ja_Hira_lib_match_parseEraPatterns = {
  narrow: [/^B/i, /^A/i],
  any: [/^(きげんぜん)/i, /^(せいれき|きげんご)/i],
};

const router_ja_Hira_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^Q[1234]/i,
  wide: /^だい[1234一二三四１２３４]しはんき/i,
};
const router_ja_Hira_lib_match_parseQuarterPatterns = {
  any: [/(1|一|１)/i, /(2|二|２)/i, /(3|三|３)/i, /(4|四|４)/i],
};

const router_ja_Hira_lib_match_matchMonthPatterns = {
  narrow: /^([123456789]|1[012])/,
  abbreviated: /^([123456789]|1[012])がつ/i,
  wide: /^([123456789]|1[012])がつ/i,
};
const router_ja_Hira_lib_match_parseMonthPatterns = {
  any: [
    /^1\D/,
    /^2/,
    /^3/,
    /^4/,
    /^5/,
    /^6/,
    /^7/,
    /^8/,
    /^9/,
    /^10/,
    /^11/,
    /^12/,
  ],
};

const router_ja_Hira_lib_match_matchDayPatterns = {
  narrow: /^(にち|げつ|か|すい|もく|きん|ど)/,
  short: /^(にち|げつ|か|すい|もく|きん|ど)/,
  abbreviated: /^(にち|げつ|か|すい|もく|きん|ど)/,
  wide: /^(にち|げつ|か|すい|もく|きん|ど)ようび/,
};
const router_ja_Hira_lib_match_parseDayPatterns = {
  any: [/^にち/, /^げつ/, /^か/, /^すい/, /^もく/, /^きん/, /^ど/],
};

const router_ja_Hira_lib_match_matchDayPeriodPatterns = {
  any: /^(AM|PM|ごぜん|ごご|しょうご|しんや|まよなか|よる|あさ)/i,
};
const router_ja_Hira_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^(A|ごぜん)/i,
    pm: /^(P|ごご)/i,
    midnight: /^しんや|まよなか/i,
    noon: /^しょうご/i,
    morning: /^あさ/i,
    afternoon: /^ごご/i,
    evening: /^よる/i,
    night: /^しんや/i,
  },
};

const router_ja_Hira_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ja_Hira_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ja_Hira_lib_match_parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    },
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ja_Hira_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ja_Hira_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ja_Hira_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ja_Hira_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ja_Hira_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ja_Hira_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ja_Hira_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ja_Hira_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ja_Hira_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ja_Hira_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ja-Hira.mjs






/**
 * @category Locales
 * @summary Japanese (Hiragana) locale.
 * @language Japanese (Hiragana)
 * @iso-639-2 jpn
 * @author Eri Hiramatsu [@Eritutteo](https://github.com/Eritutteo)
 */
const router_jaHira = {
  code: "ja-Hira",
  formatDistance: router_ja_Hira_lib_formatDistance_formatDistance,
  formatLong: router_ja_Hira_lib_formatLong_formatLong,
  formatRelative: router_ja_Hira_lib_formatRelative_formatRelative,
  localize: router_ja_Hira_lib_localize_localize,
  match: router_ja_Hira_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_ja_Hira = ((/* unused pure expression or super */ null && (router_jaHira)));

;// ./node_modules/date-fns/locale/ka/_lib/formatDistance.mjs
const router_ka_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    past: "{{count}} წამზე ნაკლები ხნის წინ",
    present: "{{count}} წამზე ნაკლები",
    future: "{{count}} წამზე ნაკლებში",
  },

  xSeconds: {
    past: "{{count}} წამის წინ",
    present: "{{count}} წამი",
    future: "{{count}} წამში",
  },

  halfAMinute: {
    past: "ნახევარი წუთის წინ",
    present: "ნახევარი წუთი",
    future: "ნახევარი წუთში",
  },

  lessThanXMinutes: {
    past: "{{count}} წუთზე ნაკლები ხნის წინ",
    present: "{{count}} წუთზე ნაკლები",
    future: "{{count}} წუთზე ნაკლებში",
  },

  xMinutes: {
    past: "{{count}} წუთის წინ",
    present: "{{count}} წუთი",
    future: "{{count}} წუთში",
  },

  aboutXHours: {
    past: "დაახლოებით {{count}} საათის წინ",
    present: "დაახლოებით {{count}} საათი",
    future: "დაახლოებით {{count}} საათში",
  },

  xHours: {
    past: "{{count}} საათის წინ",
    present: "{{count}} საათი",
    future: "{{count}} საათში",
  },

  xDays: {
    past: "{{count}} დღის წინ",
    present: "{{count}} დღე",
    future: "{{count}} დღეში",
  },

  aboutXWeeks: {
    past: "დაახლოებით {{count}} კვირას წინ",
    present: "დაახლოებით {{count}} კვირა",
    future: "დაახლოებით {{count}} კვირაში",
  },

  xWeeks: {
    past: "{{count}} კვირას კვირა",
    present: "{{count}} კვირა",
    future: "{{count}} კვირაში",
  },

  aboutXMonths: {
    past: "დაახლოებით {{count}} თვის წინ",
    present: "დაახლოებით {{count}} თვე",
    future: "დაახლოებით {{count}} თვეში",
  },

  xMonths: {
    past: "{{count}} თვის წინ",
    present: "{{count}} თვე",
    future: "{{count}} თვეში",
  },

  aboutXYears: {
    past: "დაახლოებით {{count}} წლის წინ",
    present: "დაახლოებით {{count}} წელი",
    future: "დაახლოებით {{count}} წელში",
  },

  xYears: {
    past: "{{count}} წლის წინ",
    present: "{{count}} წელი",
    future: "{{count}} წელში",
  },

  overXYears: {
    past: "{{count}} წელზე მეტი ხნის წინ",
    present: "{{count}} წელზე მეტი",
    future: "{{count}} წელზე მეტი ხნის შემდეგ",
  },

  almostXYears: {
    past: "თითქმის {{count}} წლის წინ",
    present: "თითქმის {{count}} წელი",
    future: "თითქმის {{count}} წელში",
  },
};

const router_ka_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ka_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (
    options?.addSuffix &&
    options.comparison &&
    options.comparison > 0
  ) {
    result = tokenValue.future.replace("{{count}}", String(count));
  } else if (options?.addSuffix) {
    result = tokenValue.past.replace("{{count}}", String(count));
  } else {
    result = tokenValue.present.replace("{{count}}", String(count));
  }

  return result;
};

;// ./node_modules/date-fns/locale/ka/_lib/formatLong.mjs


const router_ka_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM, y",
  long: "do, MMMM, y",
  medium: "d, MMM, y",
  short: "dd/MM/yyyy",
};

const router_ka_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_ka_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}'-ზე'",
  long: "{{date}} {{time}}'-ზე'",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ka_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ka_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ka_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ka_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ka/_lib/formatRelative.mjs
const router_ka_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'წინა' eeee p'-ზე'",
  yesterday: "'გუშინ' p'-ზე'",
  today: "'დღეს' p'-ზე'",
  tomorrow: "'ხვალ' p'-ზე'",
  nextWeek: "'შემდეგი' eeee p'-ზე'",
  other: "P",
};

const router_ka_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ka_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ka/_lib/localize.mjs


const router_ka_lib_localize_eraValues = {
  narrow: ["ჩ.წ-მდე", "ჩ.წ"],
  abbreviated: ["ჩვ.წ-მდე", "ჩვ.წ"],
  wide: ["ჩვენს წელთაღრიცხვამდე", "ჩვენი წელთაღრიცხვით"],
};

const router_ka_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-ლი კვ", "2-ე კვ", "3-ე კვ", "4-ე კვ"],
  wide: ["1-ლი კვარტალი", "2-ე კვარტალი", "3-ე კვარტალი", "4-ე კვარტალი"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_ka_lib_localize_monthValues = {
  narrow: [
    "ია",
    "თე",
    "მა",
    "აპ",
    "მს",
    "ვნ",
    "ვლ",
    "აგ",
    "სე",
    "ოქ",
    "ნო",
    "დე",
  ],

  abbreviated: [
    "იან",
    "თებ",
    "მარ",
    "აპრ",
    "მაი",
    "ივნ",
    "ივლ",
    "აგვ",
    "სექ",
    "ოქტ",
    "ნოე",
    "დეკ",
  ],

  wide: [
    "იანვარი",
    "თებერვალი",
    "მარტი",
    "აპრილი",
    "მაისი",
    "ივნისი",
    "ივლისი",
    "აგვისტო",
    "სექტემბერი",
    "ოქტომბერი",
    "ნოემბერი",
    "დეკემბერი",
  ],
};

const router_ka_lib_localize_dayValues = {
  narrow: ["კვ", "ორ", "სა", "ოთ", "ხუ", "პა", "შა"],
  short: ["კვი", "ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ"],
  abbreviated: ["კვი", "ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ"],
  wide: [
    "კვირა",
    "ორშაბათი",
    "სამშაბათი",
    "ოთხშაბათი",
    "ხუთშაბათი",
    "პარასკევი",
    "შაბათი",
  ],
};

const router_ka_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "შუაღამე",
    noon: "შუადღე",
    morning: "დილა",
    afternoon: "საღამო",
    evening: "საღამო",
    night: "ღამე",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "შუაღამე",
    noon: "შუადღე",
    morning: "დილა",
    afternoon: "საღამო",
    evening: "საღამო",
    night: "ღამე",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "შუაღამე",
    noon: "შუადღე",
    morning: "დილა",
    afternoon: "საღამო",
    evening: "საღამო",
    night: "ღამე",
  },
};

const router_ka_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "შუაღამით",
    noon: "შუადღისას",
    morning: "დილით",
    afternoon: "ნაშუადღევს",
    evening: "საღამოს",
    night: "ღამით",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "შუაღამით",
    noon: "შუადღისას",
    morning: "დილით",
    afternoon: "ნაშუადღევს",
    evening: "საღამოს",
    night: "ღამით",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "შუაღამით",
    noon: "შუადღისას",
    morning: "დილით",
    afternoon: "ნაშუადღევს",
    evening: "საღამოს",
    night: "ღამით",
  },
};

const router_ka_lib_localize_ordinalNumber = (dirtyNumber) => {
  const number = Number(dirtyNumber);

  if (number === 1) {
    return number + "-ლი";
  }

  return number + "-ე";
};

const router_ka_lib_localize_localize = {
  ordinalNumber: router_ka_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ka_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ka_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ka_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ka_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ka_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ka_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ka/_lib/match.mjs



const router_ka_lib_match_matchOrdinalNumberPattern = /^(\d+)(-ლი|-ე)?/i;
const router_ka_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ka_lib_match_matchEraPatterns = {
  narrow: /^(ჩვ?\.წ)/i,
  abbreviated: /^(ჩვ?\.წ)/i,
  wide: /^(ჩვენს წელთაღრიცხვამდე|ქრისტეშობამდე|ჩვენი წელთაღრიცხვით|ქრისტეშობიდან)/i,
};
const router_ka_lib_match_parseEraPatterns = {
  any: [
    /^(ჩვენს წელთაღრიცხვამდე|ქრისტეშობამდე)/i,
    /^(ჩვენი წელთაღრიცხვით|ქრისტეშობიდან)/i,
  ],
};

const router_ka_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]-(ლი|ე)? კვ/i,
  wide: /^[1234]-(ლი|ე)? კვარტალი/i,
};
const router_ka_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ka_lib_match_matchMonthPatterns = {
  any: /^(ია|თე|მა|აპ|მს|ვნ|ვლ|აგ|სე|ოქ|ნო|დე)/i,
};
const router_ka_lib_match_parseMonthPatterns = {
  any: [
    /^ია/i,
    /^თ/i,
    /^მარ/i,
    /^აპ/i,
    /^მაი/i,
    /^ი?ვნ/i,
    /^ი?ვლ/i,
    /^აგ/i,
    /^ს/i,
    /^ო/i,
    /^ნ/i,
    /^დ/i,
  ],
};

const router_ka_lib_match_matchDayPatterns = {
  narrow: /^(კვ|ორ|სა|ოთ|ხუ|პა|შა)/i,
  short: /^(კვი|ორშ|სამ|ოთხ|ხუთ|პარ|შაბ)/i,
  wide: /^(კვირა|ორშაბათი|სამშაბათი|ოთხშაბათი|ხუთშაბათი|პარასკევი|შაბათი)/i,
};
const router_ka_lib_match_parseDayPatterns = {
  any: [/^კვ/i, /^ორ/i, /^სა/i, /^ოთ/i, /^ხუ/i, /^პა/i, /^შა/i],
};

const router_ka_lib_match_matchDayPeriodPatterns = {
  any: /^([ap]\.?\s?m\.?|შუაღ|დილ)/i,
};
const router_ka_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^შუაღ/i,
    noon: /^შუადღ/i,
    morning: /^დილ/i,
    afternoon: /ნაშუადღევს/i,
    evening: /საღამო/i,
    night: /ღამ/i,
  },
};

const router_ka_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ka_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ka_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ka_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ka_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ka_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ka_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ka_lib_match_matchMonthPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ka_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ka_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ka_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ka_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ka_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ka.mjs






/**
 * @category Locales
 * @summary Georgian locale.
 * @language Georgian
 * @iso-639-2 geo
 * @author Lado Lomidze [@Landish](https://github.com/Landish)
 * @author Nick Shvelidze [@shvelo](https://github.com/shvelo)
 */
const router_ka = {
  code: "ka",
  formatDistance: router_ka_lib_formatDistance_formatDistance,
  formatLong: router_ka_lib_formatLong_formatLong,
  formatRelative: router_ka_lib_formatRelative_formatRelative,
  localize: router_ka_lib_localize_localize,
  match: router_ka_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ka = ((/* unused pure expression or super */ null && (router_ka)));

;// ./node_modules/date-fns/locale/kk/_lib/formatDistance.mjs
const router_kk_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    regular: {
      one: "1 секундтан аз",
      singularNominative: "{{count}} секундтан аз",
      singularGenitive: "{{count}} секундтан аз",
      pluralGenitive: "{{count}} секундтан аз",
    },
    future: {
      one: "бір секундтан кейін",
      singularNominative: "{{count}} секундтан кейін",
      singularGenitive: "{{count}} секундтан кейін",
      pluralGenitive: "{{count}} секундтан кейін",
    },
  },

  xSeconds: {
    regular: {
      singularNominative: "{{count}} секунд",
      singularGenitive: "{{count}} секунд",
      pluralGenitive: "{{count}} секунд",
    },
    past: {
      singularNominative: "{{count}} секунд бұрын",
      singularGenitive: "{{count}} секунд бұрын",
      pluralGenitive: "{{count}} секунд бұрын",
    },
    future: {
      singularNominative: "{{count}} секундтан кейін",
      singularGenitive: "{{count}} секундтан кейін",
      pluralGenitive: "{{count}} секундтан кейін",
    },
  },

  halfAMinute: (options) => {
    if (options?.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        return "жарты минут ішінде";
      } else {
        return "жарты минут бұрын";
      }
    }

    return "жарты минут";
  },

  lessThanXMinutes: {
    regular: {
      one: "1 минуттан аз",
      singularNominative: "{{count}} минуттан аз",
      singularGenitive: "{{count}} минуттан аз",
      pluralGenitive: "{{count}} минуттан аз",
    },
    future: {
      one: "минуттан кем ",
      singularNominative: "{{count}} минуттан кем",
      singularGenitive: "{{count}} минуттан кем",
      pluralGenitive: "{{count}} минуттан кем",
    },
  },

  xMinutes: {
    regular: {
      singularNominative: "{{count}} минут",
      singularGenitive: "{{count}} минут",
      pluralGenitive: "{{count}} минут",
    },
    past: {
      singularNominative: "{{count}} минут бұрын",
      singularGenitive: "{{count}} минут бұрын",
      pluralGenitive: "{{count}} минут бұрын",
    },
    future: {
      singularNominative: "{{count}} минуттан кейін",
      singularGenitive: "{{count}} минуттан кейін",
      pluralGenitive: "{{count}} минуттан кейін",
    },
  },

  aboutXHours: {
    regular: {
      singularNominative: "шамамен {{count}} сағат",
      singularGenitive: "шамамен {{count}} сағат",
      pluralGenitive: "шамамен {{count}} сағат",
    },
    future: {
      singularNominative: "шамамен {{count}} сағаттан кейін",
      singularGenitive: "шамамен {{count}} сағаттан кейін",
      pluralGenitive: "шамамен {{count}} сағаттан кейін",
    },
  },

  xHours: {
    regular: {
      singularNominative: "{{count}} сағат",
      singularGenitive: "{{count}} сағат",
      pluralGenitive: "{{count}} сағат",
    },
  },

  xDays: {
    regular: {
      singularNominative: "{{count}} күн",
      singularGenitive: "{{count}} күн",
      pluralGenitive: "{{count}} күн",
    },
    future: {
      singularNominative: "{{count}} күннен кейін",
      singularGenitive: "{{count}} күннен кейін",
      pluralGenitive: "{{count}} күннен кейін",
    },
  },

  aboutXWeeks: {
    type: "weeks",
    one: "шамамен 1 апта",
    other: "шамамен {{count}} апта",
  },

  xWeeks: {
    type: "weeks",
    one: "1 апта",
    other: "{{count}} апта",
  },

  aboutXMonths: {
    regular: {
      singularNominative: "шамамен {{count}} ай",
      singularGenitive: "шамамен {{count}} ай",
      pluralGenitive: "шамамен {{count}} ай",
    },
    future: {
      singularNominative: "шамамен {{count}} айдан кейін",
      singularGenitive: "шамамен {{count}} айдан кейін",
      pluralGenitive: "шамамен {{count}} айдан кейін",
    },
  },

  xMonths: {
    regular: {
      singularNominative: "{{count}} ай",
      singularGenitive: "{{count}} ай",
      pluralGenitive: "{{count}} ай",
    },
  },

  aboutXYears: {
    regular: {
      singularNominative: "шамамен {{count}} жыл",
      singularGenitive: "шамамен {{count}} жыл",
      pluralGenitive: "шамамен {{count}} жыл",
    },
    future: {
      singularNominative: "шамамен {{count}} жылдан кейін",
      singularGenitive: "шамамен {{count}} жылдан кейін",
      pluralGenitive: "шамамен {{count}} жылдан кейін",
    },
  },

  xYears: {
    regular: {
      singularNominative: "{{count}} жыл",
      singularGenitive: "{{count}} жыл",
      pluralGenitive: "{{count}} жыл",
    },
    future: {
      singularNominative: "{{count}} жылдан кейін",
      singularGenitive: "{{count}} жылдан кейін",
      pluralGenitive: "{{count}} жылдан кейін",
    },
  },

  overXYears: {
    regular: {
      singularNominative: "{{count}} жылдан астам",
      singularGenitive: "{{count}} жылдан астам",
      pluralGenitive: "{{count}} жылдан астам",
    },
    future: {
      singularNominative: "{{count}} жылдан астам",
      singularGenitive: "{{count}} жылдан астам",
      pluralGenitive: "{{count}} жылдан астам",
    },
  },

  almostXYears: {
    regular: {
      singularNominative: "{{count}} жылға жақын",
      singularGenitive: "{{count}} жылға жақын",
      pluralGenitive: "{{count}} жылға жақын",
    },
    future: {
      singularNominative: "{{count}} жылдан кейін",
      singularGenitive: "{{count}} жылдан кейін",
      pluralGenitive: "{{count}} жылдан кейін",
    },
  },
};

function router_lib_formatDistance_declension(scheme, count) {
  // scheme for count=1 exists
  if (scheme.one && count === 1) return scheme.one;

  const rem10 = count % 10;
  const rem100 = count % 100;

  // 1, 21, 31, ...
  if (rem10 === 1 && rem100 !== 11) {
    return scheme.singularNominative.replace("{{count}}", String(count));

    // 2, 3, 4, 22, 23, 24, 32 ...
  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
    return scheme.singularGenitive.replace("{{count}}", String(count));

    // 5, 6, 7, 8, 9, 10, 11, ...
  } else {
    return scheme.pluralGenitive.replace("{{count}}", String(count));
  }
}

const router_kk_lib_formatDistance_formatDistance = (token, count, options) => {
  const tokenValue = router_kk_lib_formatDistance_formatDistanceLocale[token];

  if (typeof tokenValue === "function") return tokenValue(options);

  if (tokenValue.type === "weeks") {
    return count === 1
      ? tokenValue.one
      : tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      if (tokenValue.future) {
        return router_lib_formatDistance_declension(tokenValue.future, count);
      } else {
        return router_lib_formatDistance_declension(tokenValue.regular, count) + " кейін";
      }
    } else {
      if (tokenValue.past) {
        return router_lib_formatDistance_declension(tokenValue.past, count);
      } else {
        return router_lib_formatDistance_declension(tokenValue.regular, count) + " бұрын";
      }
    }
  } else {
    return router_lib_formatDistance_declension(tokenValue.regular, count);
  }
};

;// ./node_modules/date-fns/locale/kk/_lib/formatLong.mjs


const router_kk_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM y 'ж.'",
  long: "do MMMM y 'ж.'",
  medium: "d MMM y 'ж.'",
  short: "dd.MM.yyyy",
};

const router_kk_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_kk_lib_formatLong_dateTimeFormats = {
  any: "{{date}}, {{time}}",
};

const router_kk_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_kk_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_kk_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_kk_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/kk/_lib/formatRelative.mjs


const router_kk_lib_formatRelative_accusativeWeekdays = [
  "жексенбіде",
  "дүйсенбіде",
  "сейсенбіде",
  "сәрсенбіде",
  "бейсенбіде",
  "жұмада",
  "сенбіде",
];

function router_kk_lib_formatRelative_lastWeek(day) {
  const weekday = router_kk_lib_formatRelative_accusativeWeekdays[day];

  return "'өткен " + weekday + " сағат' p'-де'";
}

function router_kk_lib_formatRelative_thisWeek(day) {
  const weekday = router_kk_lib_formatRelative_accusativeWeekdays[day];

  return "'" + weekday + " сағат' p'-де'";
}

function router_kk_lib_formatRelative_nextWeek(day) {
  const weekday = router_kk_lib_formatRelative_accusativeWeekdays[day];

  return "'келесі " + weekday + " сағат' p'-де'";
}

const router_kk_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_kk_lib_formatRelative_thisWeek(day);
    } else {
      return router_kk_lib_formatRelative_lastWeek(day);
    }
  },
  yesterday: "'кеше сағат' p'-де'",
  today: "'бүгін сағат' p'-де'",
  tomorrow: "'ертең сағат' p'-де'",
  nextWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_kk_lib_formatRelative_thisWeek(day);
    } else {
      return router_kk_lib_formatRelative_nextWeek(day);
    }
  },
  other: "P",
};

const router_kk_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_kk_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/kk/_lib/localize.mjs


const router_kk_lib_localize_eraValues = {
  narrow: ["б.з.д.", "б.з."],
  abbreviated: ["б.з.д.", "б.з."],
  wide: ["біздің заманымызға дейін", "біздің заманымыз"],
};

const router_kk_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-ші тоқ.", "2-ші тоқ.", "3-ші тоқ.", "4-ші тоқ."],
  wide: ["1-ші тоқсан", "2-ші тоқсан", "3-ші тоқсан", "4-ші тоқсан"],
};

const router_kk_lib_localize_monthValues = {
  narrow: ["Қ", "А", "Н", "С", "М", "М", "Ш", "Т", "Қ", "Қ", "Қ", "Ж"],
  abbreviated: [
    "қаң",
    "ақп",
    "нау",
    "сәу",
    "мам",
    "мау",
    "шіл",
    "там",
    "қыр",
    "қаз",
    "қар",
    "жел",
  ],

  wide: [
    "қаңтар",
    "ақпан",
    "наурыз",
    "сәуір",
    "мамыр",
    "маусым",
    "шілде",
    "тамыз",
    "қыркүйек",
    "қазан",
    "қараша",
    "желтоқсан",
  ],
};
const router_kk_lib_localize_formattingMonthValues = {
  narrow: ["Қ", "А", "Н", "С", "М", "М", "Ш", "Т", "Қ", "Қ", "Қ", "Ж"],
  abbreviated: [
    "қаң",
    "ақп",
    "нау",
    "сәу",
    "мам",
    "мау",
    "шіл",
    "там",
    "қыр",
    "қаз",
    "қар",
    "жел",
  ],

  wide: [
    "қаңтар",
    "ақпан",
    "наурыз",
    "сәуір",
    "мамыр",
    "маусым",
    "шілде",
    "тамыз",
    "қыркүйек",
    "қазан",
    "қараша",
    "желтоқсан",
  ],
};

const router_kk_lib_localize_dayValues = {
  narrow: ["Ж", "Д", "С", "С", "Б", "Ж", "С"],
  short: ["жс", "дс", "сс", "ср", "бс", "жм", "сб"],
  abbreviated: ["жс", "дс", "сс", "ср", "бс", "жм", "сб"],
  wide: [
    "жексенбі",
    "дүйсенбі",
    "сейсенбі",
    "сәрсенбі",
    "бейсенбі",
    "жұма",
    "сенбі",
  ],
};

const router_kk_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ТД",
    pm: "ТК",
    midnight: "түн ортасы",
    noon: "түс",
    morning: "таң",
    afternoon: "күндіз",
    evening: "кеш",
    night: "түн",
  },
  wide: {
    am: "ТД",
    pm: "ТК",
    midnight: "түн ортасы",
    noon: "түс",
    morning: "таң",
    afternoon: "күндіз",
    evening: "кеш",
    night: "түн",
  },
};

const router_kk_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ТД",
    pm: "ТК",
    midnight: "түн ортасында",
    noon: "түс",
    morning: "таң",
    afternoon: "күн",
    evening: "кеш",
    night: "түн",
  },
  wide: {
    am: "ТД",
    pm: "ТК",
    midnight: "түн ортасында",
    noon: "түсте",
    morning: "таңертең",
    afternoon: "күндіз",
    evening: "кеште",
    night: "түнде",
  },
};

const router_localize_suffixes = {
  0: "-ші",
  1: "-ші",
  2: "-ші",
  3: "-ші",
  4: "-ші",
  5: "-ші",
  6: "-шы",
  7: "-ші",
  8: "-ші",
  9: "-шы",
  10: "-шы",
  20: "-шы",
  30: "-шы",
  40: "-шы",
  50: "-ші",
  60: "-шы",
  70: "-ші",
  80: "-ші",
  90: "-шы",
  100: "-ші",
};

const router_kk_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  const mod10 = number % 10;
  const b = number >= 100 ? 100 : null;
  const suffix =
    router_localize_suffixes[number] || router_localize_suffixes[mod10] || (b && router_localize_suffixes[b]) || "";

  return number + suffix;
};

const router_kk_lib_localize_localize = {
  ordinalNumber: router_kk_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_kk_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_kk_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_kk_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_kk_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_kk_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_kk_lib_localize_dayPeriodValues,
    defaultWidth: "any",
    formattingValues: router_kk_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/kk/_lib/match.mjs



const router_kk_lib_match_matchOrdinalNumberPattern = /^(\d+)(-?(ші|шы))?/i;
const router_kk_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_kk_lib_match_matchEraPatterns = {
  narrow: /^((б )?з\.?\s?д\.?)/i,
  abbreviated: /^((б )?з\.?\s?д\.?)/i,
  wide: /^(біздің заманымызға дейін|біздің заманымыз|біздің заманымыздан)/i,
};
const router_kk_lib_match_parseEraPatterns = {
  any: [/^б/i, /^з/i],
};

const router_kk_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](-?ші)? тоқ.?/i,
  wide: /^[1234](-?ші)? тоқсан/i,
};
const router_kk_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_kk_lib_match_matchMonthPatterns = {
  narrow: /^(қ|а|н|с|м|мау|ш|т|қыр|қаз|қар|ж)/i,
  abbreviated: /^(қаң|ақп|нау|сәу|мам|мау|шіл|там|қыр|қаз|қар|жел)/i,
  wide: /^(қаңтар|ақпан|наурыз|сәуір|мамыр|маусым|шілде|тамыз|қыркүйек|қазан|қараша|желтоқсан)/i,
};
const router_kk_lib_match_parseMonthPatterns = {
  narrow: [
    /^қ/i,
    /^а/i,
    /^н/i,
    /^с/i,
    /^м/i,
    /^м/i,
    /^ш/i,
    /^т/i,
    /^қ/i,
    /^қ/i,
    /^қ/i,
    /^ж/i,
  ],

  abbreviated: [
    /^қаң/i,
    /^ақп/i,
    /^нау/i,
    /^сәу/i,
    /^мам/i,
    /^мау/i,
    /^шіл/i,
    /^там/i,
    /^қыр/i,
    /^қаз/i,
    /^қар/i,
    /^жел/i,
  ],

  any: [
    /^қ/i,
    /^а/i,
    /^н/i,
    /^с/i,
    /^м/i,
    /^м/i,
    /^ш/i,
    /^т/i,
    /^қ/i,
    /^қ/i,
    /^қ/i,
    /^ж/i,
  ],
};

const router_kk_lib_match_matchDayPatterns = {
  narrow: /^(ж|д|с|с|б|ж|с)/i,
  short: /^(жс|дс|сс|ср|бс|жм|сб)/i,
  wide: /^(жексенбі|дүйсенбі|сейсенбі|сәрсенбі|бейсенбі|жұма|сенбі)/i,
};
const router_kk_lib_match_parseDayPatterns = {
  narrow: [/^ж/i, /^д/i, /^с/i, /^с/i, /^б/i, /^ж/i, /^с/i],
  short: [/^жс/i, /^дс/i, /^сс/i, /^ср/i, /^бс/i, /^жм/i, /^сб/i],
  any: [
    /^ж[ек]/i,
    /^д[үй]/i,
    /^сe[й]/i,
    /^сә[р]/i,
    /^б[ей]/i,
    /^ж[ұм]/i,
    /^се[н]/i,
  ],
};

const router_kk_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i,
  wide: /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i,
  any: /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i,
};
const router_kk_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ТД/i,
    pm: /^ТК/i,
    midnight: /^түн орта/i,
    noon: /^күндіз/i,
    morning: /таң/i,
    afternoon: /түс/i,
    evening: /кеш/i,
    night: /түн/i,
  },
};

const router_kk_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_kk_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_kk_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_kk_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kk_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_kk_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kk_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_kk_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kk_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_kk_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kk_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_kk_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kk_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/kk.mjs






/**
 * @category Locales
 * @summary Kazakh locale.
 * @language Kazakh
 * @iso-639-2 kaz
 * @author Nikita Bayev [@drugoi](https://github.com/drugoi)
 */
const router_kk = {
  code: "kk",
  formatDistance: router_kk_lib_formatDistance_formatDistance,
  formatLong: router_kk_lib_formatLong_formatLong,
  formatRelative: router_kk_lib_formatRelative_formatRelative,
  localize: router_kk_lib_localize_localize,
  match: router_kk_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_kk = ((/* unused pure expression or super */ null && (router_kk)));

;// ./node_modules/date-fns/locale/km/_lib/formatDistance.mjs
const router_km_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: "តិចជាង {{count}} វិនាទី",
  xSeconds: "{{count}} វិនាទី",
  halfAMinute: "កន្លះនាទី",
  lessThanXMinutes: "តិចជាង {{count}} នាទី",
  xMinutes: "{{count}} នាទី",
  aboutXHours: "ប្រហែល {{count}} ម៉ោង",
  xHours: "{{count}} ម៉ោង",
  xDays: "{{count}} ថ្ងៃ",
  aboutXWeeks: "ប្រហែល {{count}} សប្តាហ៍",
  xWeeks: "{{count}} សប្តាហ៍",
  aboutXMonths: "ប្រហែល {{count}} ខែ",
  xMonths: "{{count}} ខែ",
  aboutXYears: "ប្រហែល {{count}} ឆ្នាំ",
  xYears: "{{count}} ឆ្នាំ",
  overXYears: "ជាង {{count}} ឆ្នាំ",
  almostXYears: "ជិត {{count}} ឆ្នាំ",
};

const router_km_lib_formatDistance_formatDistance = (token, count, options) => {
  const tokenValue = router_km_lib_formatDistance_formatDistanceLocale[token];

  let result = tokenValue;

  if (typeof count === "number") {
    result = result.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "ក្នុងរយៈពេល " + result;
    } else {
      return result + "មុន";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/km/_lib/formatLong.mjs


const router_km_lib_formatLong_dateFormats = {
  full: "EEEE do MMMM y",
  long: "do MMMM y",
  medium: "d MMM y",
  short: "dd/MM/yyyy",
};

const router_km_lib_formatLong_timeFormats = {
  full: "h:mm:ss a",
  long: "h:mm:ss a",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_km_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'ម៉ោង' {{time}}",
  long: "{{date}} 'ម៉ោង' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_km_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_km_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_km_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_km_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/km/_lib/formatRelative.mjs
const router_km_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'ថ្ងៃ'eeee'ស​ប្តា​ហ៍​មុនម៉ោង' p",
  yesterday: "'ម្សិលមិញនៅម៉ោង' p",
  today: "'ថ្ងៃនេះម៉ោង' p",
  tomorrow: "'ថ្ងៃស្អែកម៉ោង' p",
  nextWeek: "'ថ្ងៃ'eeee'ស​ប្តា​ហ៍​ក្រោយម៉ោង' p",
  other: "P",
};

const router_km_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_km_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/km/_lib/localize.mjs


const router_km_lib_localize_eraValues = {
  narrow: ["ម.គស", "គស"],
  abbreviated: ["មុនគ.ស", "គ.ស"],
  wide: ["មុនគ្រិស្តសករាជ", "នៃគ្រិស្តសករាជ"],
};

const router_km_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["ត្រីមាសទី 1", "ត្រីមាសទី 2", "ត្រីមាសទី 3", "ត្រីមាសទី 4"],
};

const router_km_lib_localize_monthValues = {
  narrow: [
    "ម.ក",
    "ក.ម",
    "មិ",
    "ម.ស",
    "ឧ.ស",
    "ម.ថ",
    "ក.ដ",
    "សី",
    "កញ",
    "តុ",
    "វិ",
    "ធ",
  ],

  abbreviated: [
    "មករា",
    "កុម្ភៈ",
    "មីនា",
    "មេសា",
    "ឧសភា",
    "មិថុនា",
    "កក្កដា",
    "សីហា",
    "កញ្ញា",
    "តុលា",
    "វិច្ឆិកា",
    "ធ្នូ",
  ],

  wide: [
    "មករា",
    "កុម្ភៈ",
    "មីនា",
    "មេសា",
    "ឧសភា",
    "មិថុនា",
    "កក្កដា",
    "សីហា",
    "កញ្ញា",
    "តុលា",
    "វិច្ឆិកា",
    "ធ្នូ",
  ],
};

const router_km_lib_localize_dayValues = {
  narrow: ["អា", "ច", "អ", "ព", "ព្រ", "សុ", "ស"],
  short: ["អា", "ច", "អ", "ព", "ព្រ", "សុ", "ស"],
  abbreviated: ["អា", "ច", "អ", "ព", "ព្រ", "សុ", "ស"],
  wide: ["អាទិត្យ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"],
};

const router_km_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ព្រឹក",
    pm: "ល្ងាច",
    midnight: "​ពេលកណ្ដាលអធ្រាត្រ",
    noon: "ពេលថ្ងៃត្រង់",
    morning: "ពេលព្រឹក",
    afternoon: "ពេលរសៀល",
    evening: "ពេលល្ងាច",
    night: "ពេលយប់",
  },
  abbreviated: {
    am: "ព្រឹក",
    pm: "ល្ងាច",
    midnight: "​ពេលកណ្ដាលអធ្រាត្រ",
    noon: "ពេលថ្ងៃត្រង់",
    morning: "ពេលព្រឹក",
    afternoon: "ពេលរសៀល",
    evening: "ពេលល្ងាច",
    night: "ពេលយប់",
  },
  wide: {
    am: "ព្រឹក",
    pm: "ល្ងាច",
    midnight: "​ពេលកណ្ដាលអធ្រាត្រ",
    noon: "ពេលថ្ងៃត្រង់",
    morning: "ពេលព្រឹក",
    afternoon: "ពេលរសៀល",
    evening: "ពេលល្ងាច",
    night: "ពេលយប់",
  },
};

const router_km_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ព្រឹក",
    pm: "ល្ងាច",
    midnight: "​ពេលកណ្ដាលអធ្រាត្រ",
    noon: "ពេលថ្ងៃត្រង់",
    morning: "ពេលព្រឹក",
    afternoon: "ពេលរសៀល",
    evening: "ពេលល្ងាច",
    night: "ពេលយប់",
  },
  abbreviated: {
    am: "ព្រឹក",
    pm: "ល្ងាច",
    midnight: "​ពេលកណ្ដាលអធ្រាត្រ",
    noon: "ពេលថ្ងៃត្រង់",
    morning: "ពេលព្រឹក",
    afternoon: "ពេលរសៀល",
    evening: "ពេលល្ងាច",
    night: "ពេលយប់",
  },
  wide: {
    am: "ព្រឹក",
    pm: "ល្ងាច",
    midnight: "​ពេលកណ្ដាលអធ្រាត្រ",
    noon: "ពេលថ្ងៃត្រង់",
    morning: "ពេលព្រឹក",
    afternoon: "ពេលរសៀល",
    evening: "ពេលល្ងាច",
    night: "ពេលយប់",
  },
};

const router_km_lib_localize_ordinalNumber = (dirtyNumber, _) => {
  const number = Number(dirtyNumber);
  return number.toString();
};

const router_km_lib_localize_localize = {
  ordinalNumber: router_km_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_km_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_km_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_km_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_km_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_km_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_km_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/km/_lib/match.mjs



const router_km_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_km_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_km_lib_match_matchEraPatterns = {
  narrow: /^(ម\.)?គស/i,
  abbreviated: /^(មុន)?គ\.ស/i,
  wide: /^(មុន|នៃ)គ្រិស្តសករាជ/i,
};
const router_km_lib_match_parseEraPatterns = {
  any: [/^(ម|មុន)គ\.?ស/i, /^(នៃ)?គ\.?ស/i],
};

const router_km_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^(ត្រីមាស)(ទី)?\s?[1234]/i,
};
const router_km_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_km_lib_match_matchMonthPatterns = {
  narrow: /^(ម\.ក|ក\.ម|មិ|ម\.ស|ឧ\.ស|ម\.ថ|ក\.ដ|សី|កញ|តុ|វិ|ធ)/i,
  abbreviated:
    /^(មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ)/i,
  wide: /^(មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ)/i,
};
const router_km_lib_match_parseMonthPatterns = {
  narrow: [
    /^ម\.ក/i,
    /^ក\.ម/i,
    /^មិ/i,
    /^ម\.ស/i,
    /^ឧ\.ស/i,
    /^ម\.ថ/i,
    /^ក\.ដ/i,
    /^សី/i,
    /^កញ/i,
    /^តុ/i,
    /^វិ/i,
    /^ធ/i,
  ],

  any: [
    /^មក/i,
    /^កុ/i,
    /^មីន/i,
    /^មេ/i,
    /^ឧស/i,
    /^មិថ/i,
    /^កក/i,
    /^សី/i,
    /^កញ/i,
    /^តុ/i,
    /^វិច/i,
    /^ធ/i,
  ],
};

const router_km_lib_match_matchDayPatterns = {
  narrow: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,
  short: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,
  abbreviated: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,
  wide: /^(អាទិត្យ|ចន្ទ|អង្គារ|ពុធ|ព្រហស្បតិ៍|សុក្រ|សៅរ៍)/i,
};
const router_km_lib_match_parseDayPatterns = {
  narrow: [/^អា/i, /^ច/i, /^អ/i, /^ព/i, /^ព្រ/i, /^សុ/i, /^ស/i],
  any: [/^អា/i, /^ច/i, /^អ/i, /^ព/i, /^ព្រ/i, /^សុ/i, /^សៅ/i],
};

const router_km_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(ព្រឹក|ល្ងាច|ពេលព្រឹក|ពេលថ្ងៃត្រង់|ពេលល្ងាច|ពេលរសៀល|ពេលយប់|ពេលកណ្ដាលអធ្រាត្រ)/i,
  any: /^(ព្រឹក|ល្ងាច|ពេលព្រឹក|ពេលថ្ងៃត្រង់|ពេលល្ងាច|ពេលរសៀល|ពេលយប់|ពេលកណ្ដាលអធ្រាត្រ)/i,
};

const router_km_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ព្រឹក/i,
    pm: /^ល្ងាច/i,
    midnight: /^ពេលកណ្ដាលអធ្រាត្រ/i,
    noon: /^ពេលថ្ងៃត្រង់/i,
    morning: /ពេលព្រឹក/i,
    afternoon: /ពេលរសៀល/i,
    evening: /ពេលល្ងាច/i,
    night: /ពេលយប់/i,
  },
};

const router_km_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_km_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_km_lib_match_parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    },
  }),

  era: router_buildMatchFn({
    matchPatterns: router_km_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_km_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_km_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_km_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_km_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_km_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_km_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_km_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_km_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_km_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/km.mjs






/**
 * @category Locales
 * @summary Khmer locale (Cambodian).
 * @language Khmer
 * @iso-639-2 khm
 * @author Seanghay Yath [@seanghay](https://github.com/seanghay)
 */
const router_km = {
  code: "km",
  formatDistance: router_km_lib_formatDistance_formatDistance,
  formatLong: router_km_lib_formatLong_formatLong,
  formatRelative: router_km_lib_formatRelative_formatRelative,
  localize: router_km_lib_localize_localize,
  match: router_km_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_km = ((/* unused pure expression or super */ null && (router_km)));

;// ./node_modules/date-fns/locale/kn/_lib/formatDistance.mjs
// note: no implementation for weeks

const router_kn_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      default: "1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ",
      future: "1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ",
      past: "1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ",
    },
    other: {
      default: "{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ",
      future: "{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ",
      past: "{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ",
    },
  },

  xSeconds: {
    one: {
      default: "1 ಸೆಕೆಂಡ್",
      future: "1 ಸೆಕೆಂಡ್‌ನಲ್ಲಿ",
      past: "1 ಸೆಕೆಂಡ್ ಹಿಂದೆ",
    },
    other: {
      default: "{{count}} ಸೆಕೆಂಡುಗಳು",
      future: "{{count}} ಸೆಕೆಂಡ್‌ಗಳಲ್ಲಿ",
      past: "{{count}} ಸೆಕೆಂಡ್ ಹಿಂದೆ",
    },
  },

  halfAMinute: {
    other: {
      default: "ಅರ್ಧ ನಿಮಿಷ",
      future: "ಅರ್ಧ ನಿಮಿಷದಲ್ಲಿ",
      past: "ಅರ್ಧ ನಿಮಿಷದ ಹಿಂದೆ",
    },
  },

  lessThanXMinutes: {
    one: {
      default: "1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ",
      future: "1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ",
      past: "1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ",
    },
    other: {
      default: "{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ",
      future: "{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ",
      past: "{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ",
    },
  },

  xMinutes: {
    one: {
      default: "1 ನಿಮಿಷ",
      future: "1 ನಿಮಿಷದಲ್ಲಿ",
      past: "1 ನಿಮಿಷದ ಹಿಂದೆ",
    },
    other: {
      default: "{{count}} ನಿಮಿಷಗಳು",
      future: "{{count}} ನಿಮಿಷಗಳಲ್ಲಿ",
      past: "{{count}} ನಿಮಿಷಗಳ ಹಿಂದೆ",
    },
  },

  aboutXHours: {
    one: {
      default: "ಸುಮಾರು 1 ಗಂಟೆ",
      future: "ಸುಮಾರು 1 ಗಂಟೆಯಲ್ಲಿ",
      past: "ಸುಮಾರು 1 ಗಂಟೆ ಹಿಂದೆ",
    },
    other: {
      default: "ಸುಮಾರು {{count}} ಗಂಟೆಗಳು",
      future: "ಸುಮಾರು {{count}} ಗಂಟೆಗಳಲ್ಲಿ",
      past: "ಸುಮಾರು {{count}} ಗಂಟೆಗಳ ಹಿಂದೆ",
    },
  },

  xHours: {
    one: {
      default: "1 ಗಂಟೆ",
      future: "1 ಗಂಟೆಯಲ್ಲಿ",
      past: "1 ಗಂಟೆ ಹಿಂದೆ",
    },
    other: {
      default: "{{count}} ಗಂಟೆಗಳು",
      future: "{{count}} ಗಂಟೆಗಳಲ್ಲಿ",
      past: "{{count}} ಗಂಟೆಗಳ ಹಿಂದೆ",
    },
  },

  xDays: {
    one: {
      default: "1 ದಿನ",
      future: "1 ದಿನದಲ್ಲಿ",
      past: "1 ದಿನದ ಹಿಂದೆ",
    },
    other: {
      default: "{{count}} ದಿನಗಳು",
      future: "{{count}} ದಿನಗಳಲ್ಲಿ",
      past: "{{count}} ದಿನಗಳ ಹಿಂದೆ",
    },
  },

  // TODO
  // aboutXWeeks: {},

  // TODO
  // xWeeks: {},

  aboutXMonths: {
    one: {
      default: "ಸುಮಾರು 1 ತಿಂಗಳು",
      future: "ಸುಮಾರು 1 ತಿಂಗಳಲ್ಲಿ",
      past: "ಸುಮಾರು 1 ತಿಂಗಳ ಹಿಂದೆ",
    },
    other: {
      default: "ಸುಮಾರು {{count}} ತಿಂಗಳು",
      future: "ಸುಮಾರು {{count}} ತಿಂಗಳುಗಳಲ್ಲಿ",
      past: "ಸುಮಾರು {{count}} ತಿಂಗಳುಗಳ ಹಿಂದೆ",
    },
  },

  xMonths: {
    one: {
      default: "1 ತಿಂಗಳು",
      future: "1 ತಿಂಗಳಲ್ಲಿ",
      past: "1 ತಿಂಗಳ ಹಿಂದೆ",
    },
    other: {
      default: "{{count}} ತಿಂಗಳು",
      future: "{{count}} ತಿಂಗಳುಗಳಲ್ಲಿ",
      past: "{{count}} ತಿಂಗಳುಗಳ ಹಿಂದೆ",
    },
  },

  aboutXYears: {
    one: {
      default: "ಸುಮಾರು 1 ವರ್ಷ",
      future: "ಸುಮಾರು 1 ವರ್ಷದಲ್ಲಿ",
      past: "ಸುಮಾರು 1 ವರ್ಷದ ಹಿಂದೆ",
    },
    other: {
      default: "ಸುಮಾರು {{count}} ವರ್ಷಗಳು",
      future: "ಸುಮಾರು {{count}} ವರ್ಷಗಳಲ್ಲಿ",
      past: "ಸುಮಾರು {{count}} ವರ್ಷಗಳ ಹಿಂದೆ",
    },
  },

  xYears: {
    one: {
      default: "1 ವರ್ಷ",
      future: "1 ವರ್ಷದಲ್ಲಿ",
      past: "1 ವರ್ಷದ ಹಿಂದೆ",
    },
    other: {
      default: "{{count}} ವರ್ಷಗಳು",
      future: "{{count}} ವರ್ಷಗಳಲ್ಲಿ",
      past: "{{count}} ವರ್ಷಗಳ ಹಿಂದೆ",
    },
  },

  overXYears: {
    one: {
      default: "1 ವರ್ಷದ ಮೇಲೆ",
      future: "1 ವರ್ಷದ ಮೇಲೆ",
      past: "1 ವರ್ಷದ ಮೇಲೆ",
    },
    other: {
      default: "{{count}} ವರ್ಷಗಳ ಮೇಲೆ",
      future: "{{count}} ವರ್ಷಗಳ ಮೇಲೆ",
      past: "{{count}} ವರ್ಷಗಳ ಮೇಲೆ",
    },
  },

  almostXYears: {
    one: {
      default: "ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ",
      future: "ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ",
      past: "ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ",
    },
    other: {
      default: "ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ",
      future: "ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ",
      past: "ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ",
    },
  },
};

function router_getResultByTense(parentToken, options) {
  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return parentToken.future;
    } else {
      return parentToken.past;
    }
  }
  return parentToken.default;
}

const router_kn_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_kn_lib_formatDistance_formatDistanceLocale[token];

  if (tokenValue.one && count === 1) {
    result = router_getResultByTense(tokenValue.one, options);
  } else {
    result = router_getResultByTense(tokenValue.other, options);
  }

  return result.replace("{{count}}", String(count));
};

;// ./node_modules/date-fns/locale/kn/_lib/formatLong.mjs


// Reference: https://www.unicode.org/cldr/charts/32/summary/kn.html

const router_kn_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM d, y", // CLDR 1816
  long: "MMMM d, y", // CLDR 1817
  medium: "MMM d, y", // CLDR 1818
  short: "d/M/yy", // CLDR 1819
};

const router_kn_lib_formatLong_timeFormats = {
  full: "hh:mm:ss a zzzz", // CLDR 1820
  long: "hh:mm:ss a z", // CLDR 1821
  medium: "hh:mm:ss a", // CLDR 1822
  short: "hh:mm a", // CLDR 1823
};

const router_kn_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}", // CLDR 1824
  long: "{{date}} {{time}}", // CLDR 1825
  medium: "{{date}} {{time}}", // CLDR 1826
  short: "{{date}} {{time}}", // CLDR 1827
};

const router_kn_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_kn_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_kn_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_kn_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/kn/_lib/formatRelative.mjs
const router_kn_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'ಕಳೆದ' eeee p 'ಕ್ಕೆ'",
  yesterday: "'ನಿನ್ನೆ' p 'ಕ್ಕೆ'",
  today: "'ಇಂದು' p 'ಕ್ಕೆ'",
  tomorrow: "'ನಾಳೆ' p 'ಕ್ಕೆ'",
  nextWeek: "eeee p 'ಕ್ಕೆ'",
  other: "P",
};

const router_kn_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_kn_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/kn/_lib/localize.mjs


// Reference: https://www.unicode.org/cldr/charts/32/summary/kn.html

const router_kn_lib_localize_eraValues = {
  narrow: ["ಕ್ರಿ.ಪೂ", "ಕ್ರಿ.ಶ"],
  abbreviated: ["ಕ್ರಿ.ಪೂ", "ಕ್ರಿ.ಶ"], // CLDR #1618, #1620
  wide: ["ಕ್ರಿಸ್ತ ಪೂರ್ವ", "ಕ್ರಿಸ್ತ ಶಕ"], // CLDR #1614, #1616
};

const router_kn_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["ತ್ರೈ 1", "ತ್ರೈ 2", "ತ್ರೈ 3", "ತ್ರೈ 4"], // CLDR #1630 - #1638
  wide: ["1ನೇ ತ್ರೈಮಾಸಿಕ", "2ನೇ ತ್ರೈಮಾಸಿಕ", "3ನೇ ತ್ರೈಮಾಸಿಕ", "4ನೇ ತ್ರೈಮಾಸಿಕ"],
  // CLDR #1622 - #1629
};

// CLDR #1646 - #1717
const router_kn_lib_localize_monthValues = {
  narrow: ["ಜ", "ಫೆ", "ಮಾ", "ಏ", "ಮೇ", "ಜೂ", "ಜು", "ಆ", "ಸೆ", "ಅ", "ನ", "ಡಿ"],

  abbreviated: [
    "ಜನ",
    "ಫೆಬ್ರ",
    "ಮಾರ್ಚ್",
    "ಏಪ್ರಿ",
    "ಮೇ",
    "ಜೂನ್",
    "ಜುಲೈ",
    "ಆಗ",
    "ಸೆಪ್ಟೆಂ",
    "ಅಕ್ಟೋ",
    "ನವೆಂ",
    "ಡಿಸೆಂ",
  ],

  wide: [
    "ಜನವರಿ",
    "ಫೆಬ್ರವರಿ",
    "ಮಾರ್ಚ್",
    "ಏಪ್ರಿಲ್",
    "ಮೇ",
    "ಜೂನ್",
    "ಜುಲೈ",
    "ಆಗಸ್ಟ್",
    "ಸೆಪ್ಟೆಂಬರ್",
    "ಅಕ್ಟೋಬರ್",
    "ನವೆಂಬರ್",
    "ಡಿಸೆಂಬರ್",
  ],
};

// CLDR #1718 - #1773
const router_kn_lib_localize_dayValues = {
  narrow: ["ಭಾ", "ಸೋ", "ಮಂ", "ಬು", "ಗು", "ಶು", "ಶ"],
  short: ["ಭಾನು", "ಸೋಮ", "ಮಂಗಳ", "ಬುಧ", "ಗುರು", "ಶುಕ್ರ", "ಶನಿ"],
  abbreviated: ["ಭಾನು", "ಸೋಮ", "ಮಂಗಳ", "ಬುಧ", "ಗುರು", "ಶುಕ್ರ", "ಶನಿ"],
  wide: [
    "ಭಾನುವಾರ",
    "ಸೋಮವಾರ",
    "ಮಂಗಳವಾರ",
    "ಬುಧವಾರ",
    "ಗುರುವಾರ",
    "ಶುಕ್ರವಾರ",
    "ಶನಿವಾರ",
  ],
};

// CLDR #1774 - #1815
const router_kn_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ಪೂರ್ವಾಹ್ನ",
    pm: "ಅಪರಾಹ್ನ",
    midnight: "ಮಧ್ಯರಾತ್ರಿ",
    noon: "ಮಧ್ಯಾಹ್ನ",
    morning: "ಬೆಳಗ್ಗೆ",
    afternoon: "ಮಧ್ಯಾಹ್ನ",
    evening: "ಸಂಜೆ",
    night: "ರಾತ್ರಿ",
  },
  abbreviated: {
    am: "ಪೂರ್ವಾಹ್ನ",
    pm: "ಅಪರಾಹ್ನ",
    midnight: "ಮಧ್ಯರಾತ್ರಿ",
    noon: "ಮಧ್ಯಾನ್ಹ",
    morning: "ಬೆಳಗ್ಗೆ",
    afternoon: "ಮಧ್ಯಾನ್ಹ",
    evening: "ಸಂಜೆ",
    night: "ರಾತ್ರಿ",
  },
  wide: {
    am: "ಪೂರ್ವಾಹ್ನ",
    pm: "ಅಪರಾಹ್ನ",
    midnight: "ಮಧ್ಯರಾತ್ರಿ",
    noon: "ಮಧ್ಯಾನ್ಹ",
    morning: "ಬೆಳಗ್ಗೆ",
    afternoon: "ಮಧ್ಯಾನ್ಹ",
    evening: "ಸಂಜೆ",
    night: "ರಾತ್ರಿ",
  },
};

const router_kn_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ಪೂ",
    pm: "ಅ",
    midnight: "ಮಧ್ಯರಾತ್ರಿ",
    noon: "ಮಧ್ಯಾನ್ಹ",
    morning: "ಬೆಳಗ್ಗೆ",
    afternoon: "ಮಧ್ಯಾನ್ಹ",
    evening: "ಸಂಜೆ",
    night: "ರಾತ್ರಿ",
  },
  abbreviated: {
    am: "ಪೂರ್ವಾಹ್ನ",
    pm: "ಅಪರಾಹ್ನ",
    midnight: "ಮಧ್ಯ ರಾತ್ರಿ",
    noon: "ಮಧ್ಯಾನ್ಹ",
    morning: "ಬೆಳಗ್ಗೆ",
    afternoon: "ಮಧ್ಯಾನ್ಹ",
    evening: "ಸಂಜೆ",
    night: "ರಾತ್ರಿ",
  },
  wide: {
    am: "ಪೂರ್ವಾಹ್ನ",
    pm: "ಅಪರಾಹ್ನ",
    midnight: "ಮಧ್ಯ ರಾತ್ರಿ",
    noon: "ಮಧ್ಯಾನ್ಹ",
    morning: "ಬೆಳಗ್ಗೆ",
    afternoon: "ಮಧ್ಯಾನ್ಹ",
    evening: "ಸಂಜೆ",
    night: "ರಾತ್ರಿ",
  },
};

const router_kn_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "ನೇ";
};

const router_kn_lib_localize_localize = {
  ordinalNumber: router_kn_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_kn_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_kn_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_kn_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_kn_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_kn_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_kn_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/kn/_lib/match.mjs



const router_kn_lib_match_matchOrdinalNumberPattern = /^(\d+)(ನೇ|ನೆ)?/i;
const router_kn_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_kn_lib_match_matchEraPatterns = {
  narrow: /^(ಕ್ರಿ.ಪೂ|ಕ್ರಿ.ಶ)/i,
  abbreviated: /^(ಕ್ರಿ\.?\s?ಪೂ\.?|ಕ್ರಿ\.?\s?ಶ\.?|ಪ್ರ\.?\s?ಶ\.?)/i,
  wide: /^(ಕ್ರಿಸ್ತ ಪೂರ್ವ|ಕ್ರಿಸ್ತ ಶಕ|ಪ್ರಸಕ್ತ ಶಕ)/i,
};
const router_kn_lib_match_parseEraPatterns = {
  any: [/^ಪೂ/i, /^(ಶ|ಪ್ರ)/i],
};

const router_kn_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^ತ್ರೈ[1234]|ತ್ರೈ [1234]| [1234]ತ್ರೈ/i,
  wide: /^[1234](ನೇ)? ತ್ರೈಮಾಸಿಕ/i,
};
const router_kn_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_kn_lib_match_matchMonthPatterns = {
  narrow: /^(ಜೂ|ಜು|ಜ|ಫೆ|ಮಾ|ಏ|ಮೇ|ಆ|ಸೆ|ಅ|ನ|ಡಿ)/i,
  abbreviated:
    /^(ಜನ|ಫೆಬ್ರ|ಮಾರ್ಚ್|ಏಪ್ರಿ|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗ|ಸೆಪ್ಟೆಂ|ಅಕ್ಟೋ|ನವೆಂ|ಡಿಸೆಂ)/i,
  wide: /^(ಜನವರಿ|ಫೆಬ್ರವರಿ|ಮಾರ್ಚ್|ಏಪ್ರಿಲ್|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗಸ್ಟ್|ಸೆಪ್ಟೆಂಬರ್|ಅಕ್ಟೋಬರ್|ನವೆಂಬರ್|ಡಿಸೆಂಬರ್)/i,
};
const router_kn_lib_match_parseMonthPatterns = {
  narrow: [
    /^ಜ$/i,
    /^ಫೆ/i,
    /^ಮಾ/i,
    /^ಏ/i,
    /^ಮೇ/i,
    /^ಜೂ/i,
    /^ಜು$/i,
    /^ಆ/i,
    /^ಸೆ/i,
    /^ಅ/i,
    /^ನ/i,
    /^ಡಿ/i,
  ],

  any: [
    /^ಜನ/i,
    /^ಫೆ/i,
    /^ಮಾ/i,
    /^ಏ/i,
    /^ಮೇ/i,
    /^ಜೂನ್/i,
    /^ಜುಲೈ/i,
    /^ಆ/i,
    /^ಸೆ/i,
    /^ಅ/i,
    /^ನ/i,
    /^ಡಿ/i,
  ],
};

const router_kn_lib_match_matchDayPatterns = {
  narrow: /^(ಭಾ|ಸೋ|ಮ|ಬು|ಗು|ಶು|ಶ)/i,
  short: /^(ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ)/i,
  abbreviated: /^(ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ)/i,
  wide: /^(ಭಾನುವಾರ|ಸೋಮವಾರ|ಮಂಗಳವಾರ|ಬುಧವಾರ|ಗುರುವಾರ|ಶುಕ್ರವಾರ|ಶನಿವಾರ)/i,
};
const router_kn_lib_match_parseDayPatterns = {
  narrow: [/^ಭಾ/i, /^ಸೋ/i, /^ಮ/i, /^ಬು/i, /^ಗು/i, /^ಶು/i, /^ಶ/i],
  any: [/^ಭಾ/i, /^ಸೋ/i, /^ಮ/i, /^ಬು/i, /^ಗು/i, /^ಶು/i, /^ಶ/i],
};

const router_kn_lib_match_matchDayPeriodPatterns = {
  narrow: /^(ಪೂ|ಅ|ಮಧ್ಯರಾತ್ರಿ|ಮಧ್ಯಾನ್ಹ|ಬೆಳಗ್ಗೆ|ಸಂಜೆ|ರಾತ್ರಿ)/i,
  any: /^(ಪೂರ್ವಾಹ್ನ|ಅಪರಾಹ್ನ|ಮಧ್ಯರಾತ್ರಿ|ಮಧ್ಯಾನ್ಹ|ಬೆಳಗ್ಗೆ|ಸಂಜೆ|ರಾತ್ರಿ)/i,
};
const router_kn_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ಪೂ/i,
    pm: /^ಅ/i,
    midnight: /ಮಧ್ಯರಾತ್ರಿ/i,
    noon: /ಮಧ್ಯಾನ್ಹ/i,
    morning: /ಬೆಳಗ್ಗೆ/i,
    afternoon: /ಮಧ್ಯಾನ್ಹ/i,
    evening: /ಸಂಜೆ/i,
    night: /ರಾತ್ರಿ/i,
  },
};

const router_kn_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_kn_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_kn_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_kn_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kn_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_kn_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kn_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_kn_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kn_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_kn_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_kn_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_kn_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_kn_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/kn.mjs






/**
 * @category Locales
 * @summary Kannada locale (India).
 * @language Kannada
 * @iso-639-2 kan
 * @author Manjunatha Gouli [@developergouli](https://github.com/developergouli)
 */
const router_kn = {
  code: "kn",
  formatDistance: router_kn_lib_formatDistance_formatDistance,
  formatLong: router_kn_lib_formatLong_formatLong,
  formatRelative: router_kn_lib_formatRelative_formatRelative,
  localize: router_kn_lib_localize_localize,
  match: router_kn_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_kn = ((/* unused pure expression or super */ null && (router_kn)));

;// ./node_modules/date-fns/locale/ko/_lib/formatDistance.mjs
const router_ko_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "1초 미만",
    other: "{{count}}초 미만",
  },

  xSeconds: {
    one: "1초",
    other: "{{count}}초",
  },

  halfAMinute: "30초",

  lessThanXMinutes: {
    one: "1분 미만",
    other: "{{count}}분 미만",
  },

  xMinutes: {
    one: "1분",
    other: "{{count}}분",
  },

  aboutXHours: {
    one: "약 1시간",
    other: "약 {{count}}시간",
  },

  xHours: {
    one: "1시간",
    other: "{{count}}시간",
  },

  xDays: {
    one: "1일",
    other: "{{count}}일",
  },

  aboutXWeeks: {
    one: "약 1주",
    other: "약 {{count}}주",
  },

  xWeeks: {
    one: "1주",
    other: "{{count}}주",
  },

  aboutXMonths: {
    one: "약 1개월",
    other: "약 {{count}}개월",
  },

  xMonths: {
    one: "1개월",
    other: "{{count}}개월",
  },

  aboutXYears: {
    one: "약 1년",
    other: "약 {{count}}년",
  },

  xYears: {
    one: "1년",
    other: "{{count}}년",
  },

  overXYears: {
    one: "1년 이상",
    other: "{{count}}년 이상",
  },

  almostXYears: {
    one: "거의 1년",
    other: "거의 {{count}}년",
  },
};

const router_ko_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ko_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + " 후";
    } else {
      return result + " 전";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ko/_lib/formatLong.mjs


const router_ko_lib_formatLong_dateFormats = {
  full: "y년 M월 d일 EEEE",
  long: "y년 M월 d일",
  medium: "y.MM.dd",
  short: "y.MM.dd",
};

const router_ko_lib_formatLong_timeFormats = {
  full: "a H시 mm분 ss초 zzzz",
  long: "a H:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_ko_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_ko_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ko_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ko_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ko_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ko/_lib/formatRelative.mjs
const router_ko_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'지난' eeee p",
  yesterday: "'어제' p",
  today: "'오늘' p",
  tomorrow: "'내일' p",
  nextWeek: "'다음' eeee p",
  other: "P",
};

const router_ko_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ko_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ko/_lib/localize.mjs


const router_ko_lib_localize_eraValues = {
  narrow: ["BC", "AD"],
  abbreviated: ["BC", "AD"],
  wide: ["기원전", "서기"],
};

const router_ko_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1분기", "2분기", "3분기", "4분기"],
};

const router_ko_lib_localize_monthValues = {
  narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],

  abbreviated: [
    "1월",
    "2월",
    "3월",
    "4월",
    "5월",
    "6월",
    "7월",
    "8월",
    "9월",
    "10월",
    "11월",
    "12월",
  ],

  wide: [
    "1월",
    "2월",
    "3월",
    "4월",
    "5월",
    "6월",
    "7월",
    "8월",
    "9월",
    "10월",
    "11월",
    "12월",
  ],
};

const router_ko_lib_localize_dayValues = {
  narrow: ["일", "월", "화", "수", "목", "금", "토"],
  short: ["일", "월", "화", "수", "목", "금", "토"],
  abbreviated: ["일", "월", "화", "수", "목", "금", "토"],
  wide: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"],
};

const router_ko_lib_localize_dayPeriodValues = {
  narrow: {
    am: "오전",
    pm: "오후",
    midnight: "자정",
    noon: "정오",
    morning: "아침",
    afternoon: "오후",
    evening: "저녁",
    night: "밤",
  },
  abbreviated: {
    am: "오전",
    pm: "오후",
    midnight: "자정",
    noon: "정오",
    morning: "아침",
    afternoon: "오후",
    evening: "저녁",
    night: "밤",
  },
  wide: {
    am: "오전",
    pm: "오후",
    midnight: "자정",
    noon: "정오",
    morning: "아침",
    afternoon: "오후",
    evening: "저녁",
    night: "밤",
  },
};

const router_ko_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "오전",
    pm: "오후",
    midnight: "자정",
    noon: "정오",
    morning: "아침",
    afternoon: "오후",
    evening: "저녁",
    night: "밤",
  },
  abbreviated: {
    am: "오전",
    pm: "오후",
    midnight: "자정",
    noon: "정오",
    morning: "아침",
    afternoon: "오후",
    evening: "저녁",
    night: "밤",
  },
  wide: {
    am: "오전",
    pm: "오후",
    midnight: "자정",
    noon: "정오",
    morning: "아침",
    afternoon: "오후",
    evening: "저녁",
    night: "밤",
  },
};

const router_ko_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = String(options?.unit);

  switch (unit) {
    case "minute":
    case "second":
      return String(number);
    case "date":
      return number + "일";
    default:
      return number + "번째";
  }
};

const router_ko_lib_localize_localize = {
  ordinalNumber: router_ko_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ko_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ko_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ko_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ko_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ko_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ko_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ko/_lib/match.mjs



const router_ko_lib_match_matchOrdinalNumberPattern = /^(\d+)(일|번째)?/i;
const router_ko_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ko_lib_match_matchEraPatterns = {
  narrow: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(기원전|서기)/i,
};
const router_ko_lib_match_parseEraPatterns = {
  any: [/^(bc|기원전)/i, /^(ad|서기)/i],
};

const router_ko_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234]사?분기/i,
};
const router_ko_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ko_lib_match_matchMonthPatterns = {
  narrow: /^(1[012]|[123456789])/,
  abbreviated: /^(1[012]|[123456789])월/i,
  wide: /^(1[012]|[123456789])월/i,
};
const router_ko_lib_match_parseMonthPatterns = {
  any: [
    /^1월?$/,
    /^2/,
    /^3/,
    /^4/,
    /^5/,
    /^6/,
    /^7/,
    /^8/,
    /^9/,
    /^10/,
    /^11/,
    /^12/,
  ],
};

const router_ko_lib_match_matchDayPatterns = {
  narrow: /^[일월화수목금토]/,
  short: /^[일월화수목금토]/,
  abbreviated: /^[일월화수목금토]/,
  wide: /^[일월화수목금토]요일/,
};
const router_ko_lib_match_parseDayPatterns = {
  any: [/^일/, /^월/, /^화/, /^수/, /^목/, /^금/, /^토/],
};

const router_ko_lib_match_matchDayPeriodPatterns = {
  any: /^(am|pm|오전|오후|자정|정오|아침|저녁|밤)/i,
};
const router_ko_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^(am|오전)/i,
    pm: /^(pm|오후)/i,
    midnight: /^자정/i,
    noon: /^정오/i,
    morning: /^아침/i,
    afternoon: /^오후/i,
    evening: /^저녁/i,
    night: /^밤/i,
  },
};

const router_ko_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ko_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ko_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ko_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ko_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ko_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ko_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ko_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ko_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ko_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ko_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ko_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ko_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ko.mjs






/**
 * @category Locales
 * @summary Korean locale.
 * @language Korean
 * @iso-639-2 kor
 * @author Hong Chulju [@angdev](https://github.com/angdev)
 * @author Lee Seoyoen [@iamssen](https://github.com/iamssen)
 * @author Taiki IKeda [@so99ynoodles](https://github.com/so99ynoodles)
 */
const router_ko = {
  code: "ko",
  formatDistance: router_ko_lib_formatDistance_formatDistance,
  formatLong: router_ko_lib_formatLong_formatLong,
  formatRelative: router_ko_lib_formatRelative_formatRelative,
  localize: router_ko_lib_localize_localize,
  match: router_ko_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ko = ((/* unused pure expression or super */ null && (router_ko)));

;// ./node_modules/date-fns/locale/lb/_lib/formatDistance.mjs
const router_lb_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    standalone: {
      one: "manner wéi eng Sekonn",
      other: "manner wéi {{count}} Sekonnen",
    },
    withPreposition: {
      one: "manner wéi enger Sekonn",
      other: "manner wéi {{count}} Sekonnen",
    },
  },

  xSeconds: {
    standalone: {
      one: "eng Sekonn",
      other: "{{count}} Sekonnen",
    },
    withPreposition: {
      one: "enger Sekonn",
      other: "{{count}} Sekonnen",
    },
  },

  halfAMinute: {
    standalone: "eng hallef Minutt",
    withPreposition: "enger hallwer Minutt",
  },

  lessThanXMinutes: {
    standalone: {
      one: "manner wéi eng Minutt",
      other: "manner wéi {{count}} Minutten",
    },
    withPreposition: {
      one: "manner wéi enger Minutt",
      other: "manner wéi {{count}} Minutten",
    },
  },

  xMinutes: {
    standalone: {
      one: "eng Minutt",
      other: "{{count}} Minutten",
    },
    withPreposition: {
      one: "enger Minutt",
      other: "{{count}} Minutten",
    },
  },

  aboutXHours: {
    standalone: {
      one: "ongeféier eng Stonn",
      other: "ongeféier {{count}} Stonnen",
    },
    withPreposition: {
      one: "ongeféier enger Stonn",
      other: "ongeféier {{count}} Stonnen",
    },
  },

  xHours: {
    standalone: {
      one: "eng Stonn",
      other: "{{count}} Stonnen",
    },
    withPreposition: {
      one: "enger Stonn",
      other: "{{count}} Stonnen",
    },
  },

  xDays: {
    standalone: {
      one: "een Dag",
      other: "{{count}} Deeg",
    },
    withPreposition: {
      one: "engem Dag",
      other: "{{count}} Deeg",
    },
  },

  aboutXWeeks: {
    standalone: {
      one: "ongeféier eng Woch",
      other: "ongeféier {{count}} Wochen",
    },
    withPreposition: {
      one: "ongeféier enger Woche",
      other: "ongeféier {{count}} Wochen",
    },
  },

  xWeeks: {
    standalone: {
      one: "eng Woch",
      other: "{{count}} Wochen",
    },
    withPreposition: {
      one: "enger Woch",
      other: "{{count}} Wochen",
    },
  },

  aboutXMonths: {
    standalone: {
      one: "ongeféier ee Mount",
      other: "ongeféier {{count}} Méint",
    },
    withPreposition: {
      one: "ongeféier engem Mount",
      other: "ongeféier {{count}} Méint",
    },
  },

  xMonths: {
    standalone: {
      one: "ee Mount",
      other: "{{count}} Méint",
    },
    withPreposition: {
      one: "engem Mount",
      other: "{{count}} Méint",
    },
  },

  aboutXYears: {
    standalone: {
      one: "ongeféier ee Joer",
      other: "ongeféier {{count}} Joer",
    },
    withPreposition: {
      one: "ongeféier engem Joer",
      other: "ongeféier {{count}} Joer",
    },
  },

  xYears: {
    standalone: {
      one: "ee Joer",
      other: "{{count}} Joer",
    },
    withPreposition: {
      one: "engem Joer",
      other: "{{count}} Joer",
    },
  },

  overXYears: {
    standalone: {
      one: "méi wéi ee Joer",
      other: "méi wéi {{count}} Joer",
    },
    withPreposition: {
      one: "méi wéi engem Joer",
      other: "méi wéi {{count}} Joer",
    },
  },

  almostXYears: {
    standalone: {
      one: "bal ee Joer",
      other: "bal {{count}} Joer",
    },
    withPreposition: {
      one: "bal engem Joer",
      other: "bal {{count}} Joer",
    },
  },
};

const router_EXCEPTION_CONSONANTS = ["d", "h", "n", "t", "z"];
const router_VOWELS = ["a,", "e", "i", "o", "u"];
const router_DIGITS_SPOKEN_N_NEEDED = [0, 1, 2, 3, 8, 9];
const router_FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED = [40, 50, 60, 70];

// Eifeler Regel
function router_isFinalNNeeded(nextWords) {
  const firstLetter = nextWords.charAt(0).toLowerCase();
  if (
    router_VOWELS.indexOf(firstLetter) != -1 ||
    router_EXCEPTION_CONSONANTS.indexOf(firstLetter) != -1
  ) {
    return true;
  }

  // Numbers would need to converted into words for checking.
  // Therefore, I have listed the digits that require a preceeding n with a few exceptions.
  const firstWord = nextWords.split(" ")[0];
  const number = parseInt(firstWord);
  if (
    !isNaN(number) &&
    router_DIGITS_SPOKEN_N_NEEDED.indexOf(number % 10) != -1 &&
    router_FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED.indexOf(
      parseInt(firstWord.substring(0, 2)),
    ) == -1
  ) {
    return true;
  }

  // Omit other checks as they are not expected here.
  return false;
}

const router_lb_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_lb_lib_formatDistance_formatDistanceLocale[token];

  const usageGroup = options?.addSuffix
    ? tokenValue.withPreposition
    : tokenValue.standalone;

  if (typeof usageGroup === "string") {
    result = usageGroup;
  } else if (count === 1) {
    result = usageGroup.one;
  } else {
    result = usageGroup.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "a" + (router_isFinalNNeeded(result) ? "n" : "") + " " + result;
    } else {
      return "viru" + (router_isFinalNNeeded(result) ? "n" : "") + " " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/lb/_lib/formatLong.mjs


// DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008

const router_lb_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM y", // Méindeg, 7. Januar 2018
  long: "do MMMM y", // 7. Januar 2018
  medium: "do MMM y", // 7. Jan 2018
  short: "dd.MM.yy", // 07.01.18
};

const router_lb_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_lb_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'um' {{time}}",
  long: "{{date}} 'um' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_lb_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_lb_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_lb_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_lb_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/lb/_lib/formatRelative.mjs
const router_lb_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    const day = date.getDay();
    let result = "'läschte";
    if (day === 2 || day === 4) {
      // Eifeler Regel: Add an n before the consonant d; Here "Dënschdeg" "and Donneschde".
      result += "n";
    }
    result += "' eeee 'um' p";
    return result;
  },
  yesterday: "'gëschter um' p",
  today: "'haut um' p",
  tomorrow: "'moien um' p",
  nextWeek: "eeee 'um' p",
  other: "P",
};

const router_lb_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  const format = router_lb_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/lb/_lib/localize.mjs


const router_lb_lib_localize_eraValues = {
  narrow: ["v.Chr.", "n.Chr."],
  abbreviated: ["v.Chr.", "n.Chr."],
  wide: ["viru Christus", "no Christus"],
};

const router_lb_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"],
};

const router_lb_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mäe",
    "Abr",
    "Mee",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Okt",
    "Nov",
    "Dez",
  ],

  wide: [
    "Januar",
    "Februar",
    "Mäerz",
    "Abrëll",
    "Mee",
    "Juni",
    "Juli",
    "August",
    "September",
    "Oktober",
    "November",
    "Dezember",
  ],
};

const router_lb_lib_localize_dayValues = {
  narrow: ["S", "M", "D", "M", "D", "F", "S"],
  short: ["So", "Mé", "Dë", "Më", "Do", "Fr", "Sa"],
  abbreviated: ["So.", "Mé.", "Dë.", "Më.", "Do.", "Fr.", "Sa."],
  wide: [
    "Sonndeg",
    "Méindeg",
    "Dënschdeg",
    "Mëttwoch",
    "Donneschdeg",
    "Freideg",
    "Samschdeg",
  ],
};

const router_lb_lib_localize_dayPeriodValues = {
  narrow: {
    am: "mo.",
    pm: "nomë.",
    midnight: "Mëtternuecht",
    noon: "Mëtteg",
    morning: "Moien",
    afternoon: "Nomëtteg",
    evening: "Owend",
    night: "Nuecht",
  },
  abbreviated: {
    am: "moies",
    pm: "nomëttes",
    midnight: "Mëtternuecht",
    noon: "Mëtteg",
    morning: "Moien",
    afternoon: "Nomëtteg",
    evening: "Owend",
    night: "Nuecht",
  },
  wide: {
    am: "moies",
    pm: "nomëttes",
    midnight: "Mëtternuecht",
    noon: "Mëtteg",
    morning: "Moien",
    afternoon: "Nomëtteg",
    evening: "Owend",
    night: "Nuecht",
  },
};

const router_lb_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "mo.",
    pm: "nom.",
    midnight: "Mëtternuecht",
    noon: "mëttes",
    morning: "moies",
    afternoon: "nomëttes",
    evening: "owes",
    night: "nuets",
  },
  abbreviated: {
    am: "moies",
    pm: "nomëttes",
    midnight: "Mëtternuecht",
    noon: "mëttes",
    morning: "moies",
    afternoon: "nomëttes",
    evening: "owes",
    night: "nuets",
  },
  wide: {
    am: "moies",
    pm: "nomëttes",
    midnight: "Mëtternuecht",
    noon: "mëttes",
    morning: "moies",
    afternoon: "nomëttes",
    evening: "owes",
    night: "nuets",
  },
};

const router_lb_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_lb_lib_localize_localize = {
  ordinalNumber: router_lb_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_lb_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_lb_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_lb_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_lb_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_lb_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_lb_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/lb/_lib/match.mjs



const router_lb_lib_match_matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
const router_lb_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_lb_lib_match_matchEraPatterns = {
  narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
  abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
  wide: /^(viru Christus|virun eiser Zäitrechnung|no Christus|eiser Zäitrechnung)/i,
};
const router_lb_lib_match_parseEraPatterns = {
  any: [/^v/i, /^n/i],
};

const router_lb_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](\.)? Quartal/i,
};
const router_lb_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_lb_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mäe|abr|mee|jun|jul|aug|sep|okt|nov|dez)/i,
  wide: /^(januar|februar|mäerz|abrëll|mee|juni|juli|august|september|oktober|november|dezember)/i,
};
const router_lb_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mä/i,
    /^ab/i,
    /^me/i,
    /^jun/i,
    /^jul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_lb_lib_match_matchDayPatterns = {
  narrow: /^[smdf]/i,
  short: /^(so|mé|dë|më|do|fr|sa)/i,
  abbreviated: /^(son?|méi?|dën?|mët?|don?|fre?|sam?)\.?/i,
  wide: /^(sonndeg|méindeg|dënschdeg|mëttwoch|donneschdeg|freideg|samschdeg)/i,
};
const router_lb_lib_match_parseDayPatterns = {
  any: [/^so/i, /^mé/i, /^dë/i, /^më/i, /^do/i, /^f/i, /^sa/i],
};

const router_lb_lib_match_matchDayPeriodPatterns = {
  narrow: /^(mo\.?|nomë\.?|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i,
  abbreviated:
    /^(moi\.?|nomët\.?|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i,
  wide: /^(moies|nomëttes|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i,
};
const router_lb_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^m/i,
    pm: /^n/i,
    midnight: /^Mëtter/i,
    noon: /^mëttes/i,
    morning: /moies/i,
    afternoon: /nomëttes/i, // will never be matched. Afternoon is matched by `pm`
    evening: /owes/i,
    night: /nuets/i, // will never be matched. Night is matched by `pm`
  },
};

const router_lb_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_lb_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_lb_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_lb_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lb_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_lb_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lb_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_lb_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lb_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_lb_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lb_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_lb_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lb_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/lb.mjs






/**
 * @category Locales
 * @summary Luxembourgish locale.
 * @language Luxembourgish
 * @iso-639-2 ltz
 * @author Daniel Waxweiler [@dwaxweiler](https://github.com/dwaxweiler)
 */
const router_lb = {
  code: "lb",
  formatDistance: router_lb_lib_formatDistance_formatDistance,
  formatLong: router_lb_lib_formatLong_formatLong,
  formatRelative: router_lb_lib_formatRelative_formatRelative,
  localize: router_lb_lib_localize_localize,
  match: router_lb_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_lb = ((/* unused pure expression or super */ null && (router_lb)));

;// ./node_modules/date-fns/locale/lt/_lib/formatDistance.mjs
const router_formatDistance_translations = {
  xseconds_other: "sekundė_sekundžių_sekundes",
  xminutes_one: "minutė_minutės_minutę",
  xminutes_other: "minutės_minučių_minutes",
  xhours_one: "valanda_valandos_valandą",
  xhours_other: "valandos_valandų_valandas",
  xdays_one: "diena_dienos_dieną",
  xdays_other: "dienos_dienų_dienas",
  xweeks_one: "savaitė_savaitės_savaitę",
  xweeks_other: "savaitės_savaičių_savaites",
  xmonths_one: "mėnuo_mėnesio_mėnesį",
  xmonths_other: "mėnesiai_mėnesių_mėnesius",
  xyears_one: "metai_metų_metus",
  xyears_other: "metai_metų_metus",
  about: "apie",
  over: "daugiau nei",
  almost: "beveik",
  lessthan: "mažiau nei",
};

const router_translateSeconds = (_number, addSuffix, _key, isFuture) => {
  if (!addSuffix) {
    return "kelios sekundės";
  } else {
    return isFuture ? "kelių sekundžių" : "kelias sekundes";
  }
};

const router_translateSingular = (_number, addSuffix, key, isFuture) => {
  return !addSuffix ? router_formatDistance_forms(key)[0] : isFuture ? router_formatDistance_forms(key)[1] : router_formatDistance_forms(key)[2];
};

const router_translate = (number, addSuffix, key, isFuture) => {
  const result = number + " ";
  if (number === 1) {
    return result + router_translateSingular(number, addSuffix, key, isFuture);
  } else if (!addSuffix) {
    return result + (router_special(number) ? router_formatDistance_forms(key)[1] : router_formatDistance_forms(key)[0]);
  } else {
    if (isFuture) {
      return result + router_formatDistance_forms(key)[1];
    } else {
      return result + (router_special(number) ? router_formatDistance_forms(key)[1] : router_formatDistance_forms(key)[2]);
    }
  }
};

function router_special(number) {
  return number % 10 === 0 || (number > 10 && number < 20);
}

function router_formatDistance_forms(key) {
  return router_formatDistance_translations[key].split("_");
}

const router_lt_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: router_translateSeconds,
    other: router_translate,
  },

  xSeconds: {
    one: router_translateSeconds,
    other: router_translate,
  },

  halfAMinute: "pusė minutės",

  lessThanXMinutes: {
    one: router_translateSingular,
    other: router_translate,
  },

  xMinutes: {
    one: router_translateSingular,
    other: router_translate,
  },

  aboutXHours: {
    one: router_translateSingular,
    other: router_translate,
  },

  xHours: {
    one: router_translateSingular,
    other: router_translate,
  },

  xDays: {
    one: router_translateSingular,
    other: router_translate,
  },

  aboutXWeeks: {
    one: router_translateSingular,
    other: router_translate,
  },

  xWeeks: {
    one: router_translateSingular,
    other: router_translate,
  },

  aboutXMonths: {
    one: router_translateSingular,
    other: router_translate,
  },

  xMonths: {
    one: router_translateSingular,
    other: router_translate,
  },

  aboutXYears: {
    one: router_translateSingular,
    other: router_translate,
  },

  xYears: {
    one: router_translateSingular,
    other: router_translate,
  },

  overXYears: {
    one: router_translateSingular,
    other: router_translate,
  },

  almostXYears: {
    one: router_translateSingular,
    other: router_translate,
  },
};

const router_lt_lib_formatDistance_formatDistance = (token, count, options) => {
  const adverb = token.match(/about|over|almost|lessthan/i);
  const unit = adverb ? token.replace(adverb[0], "") : token;

  const isFuture = options?.comparison !== undefined && options.comparison > 0;

  let result;

  const tokenValue = router_lt_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one(
      count,
      options?.addSuffix === true,
      unit.toLowerCase() + "_one",
      isFuture,
    );
  } else {
    result = tokenValue.other(
      count,
      options?.addSuffix === true,
      unit.toLowerCase() + "_other",
      isFuture,
    );
  }

  if (adverb) {
    const key = adverb[0].toLowerCase();
    result = router_formatDistance_translations[key] + " " + result;
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "po " + result;
    } else {
      return "prieš " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/lt/_lib/formatLong.mjs


const router_lt_lib_formatLong_dateFormats = {
  full: "y 'm'. MMMM d 'd'., EEEE",
  long: "y 'm'. MMMM d 'd'.",
  medium: "y-MM-dd",
  short: "y-MM-dd",
};

const router_lt_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_lt_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_lt_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_lt_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_lt_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_lt_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/lt/_lib/formatRelative.mjs
const router_lt_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'Praėjusį' eeee p",
  yesterday: "'Vakar' p",
  today: "'Šiandien' p",
  tomorrow: "'Rytoj' p",
  nextWeek: "eeee p",
  other: "P",
};

const router_lt_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_lt_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/lt/_lib/localize.mjs


const router_lt_lib_localize_eraValues = {
  narrow: ["pr. Kr.", "po Kr."],
  abbreviated: ["pr. Kr.", "po Kr."],
  wide: ["prieš Kristų", "po Kristaus"],
};

const router_lt_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["I ketv.", "II ketv.", "III ketv.", "IV ketv."],
  wide: ["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"],
};

const router_localize_formattingQuarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["I k.", "II k.", "III k.", "IV k."],
  wide: ["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"],
};

const router_lt_lib_localize_monthValues = {
  narrow: ["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"],
  abbreviated: [
    "saus.",
    "vas.",
    "kov.",
    "bal.",
    "geg.",
    "birž.",
    "liep.",
    "rugp.",
    "rugs.",
    "spal.",
    "lapkr.",
    "gruod.",
  ],

  wide: [
    "sausis",
    "vasaris",
    "kovas",
    "balandis",
    "gegužė",
    "birželis",
    "liepa",
    "rugpjūtis",
    "rugsėjis",
    "spalis",
    "lapkritis",
    "gruodis",
  ],
};

const router_lt_lib_localize_formattingMonthValues = {
  narrow: ["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"],
  abbreviated: [
    "saus.",
    "vas.",
    "kov.",
    "bal.",
    "geg.",
    "birž.",
    "liep.",
    "rugp.",
    "rugs.",
    "spal.",
    "lapkr.",
    "gruod.",
  ],

  wide: [
    "sausio",
    "vasario",
    "kovo",
    "balandžio",
    "gegužės",
    "birželio",
    "liepos",
    "rugpjūčio",
    "rugsėjo",
    "spalio",
    "lapkričio",
    "gruodžio",
  ],
};

const router_lt_lib_localize_dayValues = {
  narrow: ["S", "P", "A", "T", "K", "P", "Š"],
  short: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "Št"],
  abbreviated: ["sk", "pr", "an", "tr", "kt", "pn", "št"],
  wide: [
    "sekmadienis",
    "pirmadienis",
    "antradienis",
    "trečiadienis",
    "ketvirtadienis",
    "penktadienis",
    "šeštadienis",
  ],
};

const router_localize_formattingDayValues = {
  narrow: ["S", "P", "A", "T", "K", "P", "Š"],
  short: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "Št"],
  abbreviated: ["sk", "pr", "an", "tr", "kt", "pn", "št"],
  wide: [
    "sekmadienį",
    "pirmadienį",
    "antradienį",
    "trečiadienį",
    "ketvirtadienį",
    "penktadienį",
    "šeštadienį",
  ],
};

const router_lt_lib_localize_dayPeriodValues = {
  narrow: {
    am: "pr. p.",
    pm: "pop.",
    midnight: "vidurnaktis",
    noon: "vidurdienis",
    morning: "rytas",
    afternoon: "diena",
    evening: "vakaras",
    night: "naktis",
  },
  abbreviated: {
    am: "priešpiet",
    pm: "popiet",
    midnight: "vidurnaktis",
    noon: "vidurdienis",
    morning: "rytas",
    afternoon: "diena",
    evening: "vakaras",
    night: "naktis",
  },
  wide: {
    am: "priešpiet",
    pm: "popiet",
    midnight: "vidurnaktis",
    noon: "vidurdienis",
    morning: "rytas",
    afternoon: "diena",
    evening: "vakaras",
    night: "naktis",
  },
};

const router_lt_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "pr. p.",
    pm: "pop.",
    midnight: "vidurnaktis",
    noon: "perpiet",
    morning: "rytas",
    afternoon: "popietė",
    evening: "vakaras",
    night: "naktis",
  },
  abbreviated: {
    am: "priešpiet",
    pm: "popiet",
    midnight: "vidurnaktis",
    noon: "perpiet",
    morning: "rytas",
    afternoon: "popietė",
    evening: "vakaras",
    night: "naktis",
  },
  wide: {
    am: "priešpiet",
    pm: "popiet",
    midnight: "vidurnaktis",
    noon: "perpiet",
    morning: "rytas",
    afternoon: "popietė",
    evening: "vakaras",
    night: "naktis",
  },
};

const router_lt_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "-oji";
};

const router_lt_lib_localize_localize = {
  ordinalNumber: router_lt_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_lt_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_lt_lib_localize_quarterValues,
    defaultWidth: "wide",
    formattingValues: router_localize_formattingQuarterValues,
    defaultFormattingWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_lt_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_lt_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_lt_lib_localize_dayValues,
    defaultWidth: "wide",
    formattingValues: router_localize_formattingDayValues,
    defaultFormattingWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_lt_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_lt_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/lt/_lib/match.mjs



const router_lt_lib_match_matchOrdinalNumberPattern = /^(\d+)(-oji)?/i;
const router_lt_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_lt_lib_match_matchEraPatterns = {
  narrow: /^p(r|o)\.?\s?(kr\.?|me)/i,
  abbreviated: /^(pr\.\s?(kr\.|m\.\s?e\.)|po\s?kr\.|mūsų eroje)/i,
  wide: /^(prieš Kristų|prieš mūsų erą|po Kristaus|mūsų eroje)/i,
};
const router_lt_lib_match_parseEraPatterns = {
  wide: [/prieš/i, /(po|mūsų)/i],
  any: [/^pr/i, /^(po|m)/i],
};

const router_lt_lib_match_matchQuarterPatterns = {
  narrow: /^([1234])/i,
  abbreviated: /^(I|II|III|IV)\s?ketv?\.?/i,
  wide: /^(I|II|III|IV)\s?ketvirtis/i,
};
const router_lt_lib_match_parseQuarterPatterns = {
  narrow: [/1/i, /2/i, /3/i, /4/i],
  any: [/I$/i, /II$/i, /III/i, /IV/i],
};

const router_lt_lib_match_matchMonthPatterns = {
  narrow: /^[svkbglr]/i,
  abbreviated:
    /^(saus\.|vas\.|kov\.|bal\.|geg\.|birž\.|liep\.|rugp\.|rugs\.|spal\.|lapkr\.|gruod\.)/i,
  wide: /^(sausi(s|o)|vasari(s|o)|kov(a|o)s|balandž?i(s|o)|gegužės?|birželi(s|o)|liep(a|os)|rugpjū(t|č)i(s|o)|rugsėj(is|o)|spali(s|o)|lapkri(t|č)i(s|o)|gruodž?i(s|o))/i,
};
const router_lt_lib_match_parseMonthPatterns = {
  narrow: [
    /^s/i,
    /^v/i,
    /^k/i,
    /^b/i,
    /^g/i,
    /^b/i,
    /^l/i,
    /^r/i,
    /^r/i,
    /^s/i,
    /^l/i,
    /^g/i,
  ],

  any: [
    /^saus/i,
    /^vas/i,
    /^kov/i,
    /^bal/i,
    /^geg/i,
    /^birž/i,
    /^liep/i,
    /^rugp/i,
    /^rugs/i,
    /^spal/i,
    /^lapkr/i,
    /^gruod/i,
  ],
};

const router_lt_lib_match_matchDayPatterns = {
  narrow: /^[spatkš]/i,
  short: /^(sk|pr|an|tr|kt|pn|št)/i,
  abbreviated: /^(sk|pr|an|tr|kt|pn|št)/i,
  wide: /^(sekmadien(is|į)|pirmadien(is|į)|antradien(is|į)|trečiadien(is|į)|ketvirtadien(is|į)|penktadien(is|į)|šeštadien(is|į))/i,
};
const router_lt_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^p/i, /^a/i, /^t/i, /^k/i, /^p/i, /^š/i],
  wide: [/^se/i, /^pi/i, /^an/i, /^tr/i, /^ke/i, /^pe/i, /^še/i],
  any: [/^sk/i, /^pr/i, /^an/i, /^tr/i, /^kt/i, /^pn/i, /^št/i],
};

const router_lt_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(pr.\s?p.|pop.|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietė)|vakaras|naktis)/i,
  any: /^(priešpiet|popiet$|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietė)|vakaras|naktis)/i,
};
const router_lt_lib_match_parseDayPeriodPatterns = {
  narrow: {
    am: /^pr/i,
    pm: /^pop./i,
    midnight: /^vidurnaktis/i,
    noon: /^(vidurdienis|perp)/i,
    morning: /rytas/i,
    afternoon: /(die|popietė)/i,
    evening: /vakaras/i,
    night: /naktis/i,
  },
  any: {
    am: /^pr/i,
    pm: /^popiet$/i,
    midnight: /^vidurnaktis/i,
    noon: /^(vidurdienis|perp)/i,
    morning: /rytas/i,
    afternoon: /(die|popietė)/i,
    evening: /vakaras/i,
    night: /naktis/i,
  },
};

const router_lt_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_lt_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_lt_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_lt_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lt_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_lt_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lt_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_lt_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lt_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_lt_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lt_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_lt_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_lt_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/lt.mjs






/**
 * @category Locales
 * @summary Lithuanian locale.
 * @language Lithuanian
 * @iso-639-2 lit
 * @author Pavlo Shpak [@pshpak](https://github.com/pshpak)
 * @author Eduardo Pardo [@eduardopsll](https://github.com/eduardopsll)
 */
const router_lt = {
  code: "lt",
  formatDistance: router_lt_lib_formatDistance_formatDistance,
  formatLong: router_lt_lib_formatLong_formatLong,
  formatRelative: router_lt_lib_formatRelative_formatRelative,
  localize: router_lt_lib_localize_localize,
  match: router_lt_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_lt = ((/* unused pure expression or super */ null && (router_lt)));

;// ./node_modules/date-fns/locale/lv/_lib/formatDistance.mjs
function router_lib_formatDistance_buildLocalizeTokenFn(schema) {
  return (count, options) => {
    if (count === 1) {
      if (options?.addSuffix) {
        return schema.one[0].replace("{{time}}", schema.one[2]);
      } else {
        return schema.one[0].replace("{{time}}", schema.one[1]);
      }
    } else {
      const rem = count % 10 === 1 && count % 100 !== 11;
      if (options?.addSuffix) {
        return schema.other[0]
          .replace("{{time}}", rem ? schema.other[3] : schema.other[4])
          .replace("{{count}}", String(count));
      } else {
        return schema.other[0]
          .replace("{{time}}", rem ? schema.other[1] : schema.other[2])
          .replace("{{count}}", String(count));
      }
    }
  };
}

const router_lv_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["mazāk par {{time}}", "sekundi", "sekundi"],
    other: [
      "mazāk nekā {{count}} {{time}}",
      "sekunde",
      "sekundes",
      "sekundes",
      "sekundēm",
    ],
  }),

  xSeconds: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["1 {{time}}", "sekunde", "sekundes"],
    other: [
      "{{count}} {{time}}",
      "sekunde",
      "sekundes",
      "sekundes",
      "sekundēm",
    ],
  }),

  halfAMinute: (_count, options) => {
    if (options?.addSuffix) {
      return "pusminūtes";
    } else {
      return "pusminūte";
    }
  },

  lessThanXMinutes: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["mazāk par {{time}}", "minūti", "minūti"],
    other: [
      "mazāk nekā {{count}} {{time}}",
      "minūte",
      "minūtes",
      "minūtes",
      "minūtēm",
    ],
  }),

  xMinutes: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["1 {{time}}", "minūte", "minūtes"],
    other: ["{{count}} {{time}}", "minūte", "minūtes", "minūtes", "minūtēm"],
  }),

  aboutXHours: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["apmēram 1 {{time}}", "stunda", "stundas"],
    other: [
      "apmēram {{count}} {{time}}",
      "stunda",
      "stundas",
      "stundas",
      "stundām",
    ],
  }),

  xHours: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["1 {{time}}", "stunda", "stundas"],
    other: ["{{count}} {{time}}", "stunda", "stundas", "stundas", "stundām"],
  }),

  xDays: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["1 {{time}}", "diena", "dienas"],
    other: ["{{count}} {{time}}", "diena", "dienas", "dienas", "dienām"],
  }),

  aboutXWeeks: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["apmēram 1 {{time}}", "nedēļa", "nedēļas"],
    other: [
      "apmēram {{count}} {{time}}",
      "nedēļa",
      "nedēļu",
      "nedēļas",
      "nedēļām",
    ],
  }),

  xWeeks: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["1 {{time}}", "nedēļa", "nedēļas"],
    other: [
      "{{count}} {{time}}", // TODO
      "nedēļa",
      "nedēļu",
      "nedēļas",
      "nedēļām",
    ],
  }),

  aboutXMonths: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["apmēram 1 {{time}}", "mēnesis", "mēneša"],
    other: [
      "apmēram {{count}} {{time}}",
      "mēnesis",
      "mēneši",
      "mēneša",
      "mēnešiem",
    ],
  }),

  xMonths: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["1 {{time}}", "mēnesis", "mēneša"],
    other: ["{{count}} {{time}}", "mēnesis", "mēneši", "mēneša", "mēnešiem"],
  }),

  aboutXYears: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["apmēram 1 {{time}}", "gads", "gada"],
    other: ["apmēram {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"],
  }),

  xYears: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["1 {{time}}", "gads", "gada"],
    other: ["{{count}} {{time}}", "gads", "gadi", "gada", "gadiem"],
  }),

  overXYears: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["ilgāk par 1 {{time}}", "gadu", "gadu"],
    other: ["vairāk nekā {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"],
  }),

  almostXYears: router_lib_formatDistance_buildLocalizeTokenFn({
    one: ["gandrīz 1 {{time}}", "gads", "gada"],
    other: ["vairāk nekā {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"],
  }),
};

const router_lv_lib_formatDistance_formatDistance = (token, count, options) => {
  const result = router_lv_lib_formatDistance_formatDistanceLocale[token](count, options);

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "pēc " + result;
    } else {
      return "pirms " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/lv/_lib/formatLong.mjs


const router_lv_lib_formatLong_dateFormats = {
  full: "EEEE, y. 'gada' d. MMMM",
  long: "y. 'gada' d. MMMM",
  medium: "dd.MM.y.",
  short: "dd.MM.y.",
};

const router_lv_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_lv_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'plkst.' {{time}}",
  long: "{{date}} 'plkst.' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_lv_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_lv_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_lv_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_lv_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/lv/_lib/formatRelative.mjs


const router_lib_formatRelative_weekdays = [
  "svētdienā",
  "pirmdienā",
  "otrdienā",
  "trešdienā",
  "ceturtdienā",
  "piektdienā",
  "sestdienā",
];

const router_lv_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date, baseDate, options) => {
    if (router_isSameWeek(date, baseDate, options)) {
      return "eeee 'plkst.' p";
    }

    const weekday = router_lib_formatRelative_weekdays[date.getDay()];
    return "'Pagājušā " + weekday + " plkst.' p";
  },
  yesterday: "'Vakar plkst.' p",
  today: "'Šodien plkst.' p",
  tomorrow: "'Rīt plkst.' p",
  nextWeek: (date, baseDate, options) => {
    if (router_isSameWeek(date, baseDate, options)) {
      return "eeee 'plkst.' p";
    }

    const weekday = router_lib_formatRelative_weekdays[date.getDay()];
    return "'Nākamajā " + weekday + " plkst.' p";
  },
  other: "P",
};

const router_lv_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_lv_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/lv/_lib/localize.mjs


const router_lv_lib_localize_eraValues = {
  narrow: ["p.m.ē", "m.ē"],
  abbreviated: ["p. m. ē.", "m. ē."],
  wide: ["pirms mūsu ēras", "mūsu ērā"],
};

const router_lv_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1. cet.", "2. cet.", "3. cet.", "4. cet."],
  wide: [
    "pirmais ceturksnis",
    "otrais ceturksnis",
    "trešais ceturksnis",
    "ceturtais ceturksnis",
  ],
};

const router_lib_localize_formattingQuarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1. cet.", "2. cet.", "3. cet.", "4. cet."],
  wide: [
    "pirmajā ceturksnī",
    "otrajā ceturksnī",
    "trešajā ceturksnī",
    "ceturtajā ceturksnī",
  ],
};

const router_lv_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "janv.",
    "febr.",
    "marts",
    "apr.",
    "maijs",
    "jūn.",
    "jūl.",
    "aug.",
    "sept.",
    "okt.",
    "nov.",
    "dec.",
  ],

  wide: [
    "janvāris",
    "februāris",
    "marts",
    "aprīlis",
    "maijs",
    "jūnijs",
    "jūlijs",
    "augusts",
    "septembris",
    "oktobris",
    "novembris",
    "decembris",
  ],
};

const router_lv_lib_localize_formattingMonthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "janv.",
    "febr.",
    "martā",
    "apr.",
    "maijs",
    "jūn.",
    "jūl.",
    "aug.",
    "sept.",
    "okt.",
    "nov.",
    "dec.",
  ],

  wide: [
    "janvārī",
    "februārī",
    "martā",
    "aprīlī",
    "maijā",
    "jūnijā",
    "jūlijā",
    "augustā",
    "septembrī",
    "oktobrī",
    "novembrī",
    "decembrī",
  ],
};

const router_lv_lib_localize_dayValues = {
  narrow: ["S", "P", "O", "T", "C", "P", "S"],
  short: ["Sv", "P", "O", "T", "C", "Pk", "S"],
  abbreviated: [
    "svētd.",
    "pirmd.",
    "otrd.",
    "trešd.",
    "ceturtd.",
    "piektd.",
    "sestd.",
  ],

  wide: [
    "svētdiena",
    "pirmdiena",
    "otrdiena",
    "trešdiena",
    "ceturtdiena",
    "piektdiena",
    "sestdiena",
  ],
};

const router_lib_localize_formattingDayValues = {
  narrow: ["S", "P", "O", "T", "C", "P", "S"],
  short: ["Sv", "P", "O", "T", "C", "Pk", "S"],
  abbreviated: [
    "svētd.",
    "pirmd.",
    "otrd.",
    "trešd.",
    "ceturtd.",
    "piektd.",
    "sestd.",
  ],

  wide: [
    "svētdienā",
    "pirmdienā",
    "otrdienā",
    "trešdienā",
    "ceturtdienā",
    "piektdienā",
    "sestdienā",
  ],
};

const router_lv_lib_localize_dayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "pusn.",
    noon: "pusd.",
    morning: "rīts",
    afternoon: "diena",
    evening: "vakars",
    night: "nakts",
  },
  abbreviated: {
    am: "am",
    pm: "pm",
    midnight: "pusn.",
    noon: "pusd.",
    morning: "rīts",
    afternoon: "pēcpusd.",
    evening: "vakars",
    night: "nakts",
  },
  wide: {
    am: "am",
    pm: "pm",
    midnight: "pusnakts",
    noon: "pusdienlaiks",
    morning: "rīts",
    afternoon: "pēcpusdiena",
    evening: "vakars",
    night: "nakts",
  },
};

const router_lv_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "pusn.",
    noon: "pusd.",
    morning: "rītā",
    afternoon: "dienā",
    evening: "vakarā",
    night: "naktī",
  },
  abbreviated: {
    am: "am",
    pm: "pm",
    midnight: "pusn.",
    noon: "pusd.",
    morning: "rītā",
    afternoon: "pēcpusd.",
    evening: "vakarā",
    night: "naktī",
  },
  wide: {
    am: "am",
    pm: "pm",
    midnight: "pusnaktī",
    noon: "pusdienlaikā",
    morning: "rītā",
    afternoon: "pēcpusdienā",
    evening: "vakarā",
    night: "naktī",
  },
};

const router_lv_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_lv_lib_localize_localize = {
  ordinalNumber: router_lv_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_lv_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_lv_lib_localize_quarterValues,
    defaultWidth: "wide",
    formattingValues: router_lib_localize_formattingQuarterValues,
    defaultFormattingWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_lv_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_lv_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_lv_lib_localize_dayValues,
    defaultWidth: "wide",
    formattingValues: router_lib_localize_formattingDayValues,
    defaultFormattingWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_lv_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_lv_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/lv/_lib/match.mjs



const router_lv_lib_match_matchOrdinalNumberPattern = /^(\d+)\./i;
const router_lv_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_lv_lib_match_matchEraPatterns = {
  narrow: /^(p\.m\.ē|m\.ē)/i,
  abbreviated: /^(p\. m\. ē\.|m\. ē\.)/i,
  wide: /^(pirms mūsu ēras|mūsu ērā)/i,
};
const router_lv_lib_match_parseEraPatterns = {
  any: [/^p/i, /^m/i],
};

const router_lv_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](\. cet\.)/i,
  wide: /^(pirma(is|jā)|otra(is|jā)|treša(is|jā)|ceturta(is|jā)) ceturksn(is|ī)/i,
};
const router_lv_lib_match_parseQuarterPatterns = {
  narrow: [/^1/i, /^2/i, /^3/i, /^4/i],
  abbreviated: [/^1/i, /^2/i, /^3/i, /^4/i],
  wide: [/^p/i, /^o/i, /^t/i, /^c/i],
};

const router_lv_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated:
    /^(janv\.|febr\.|marts|apr\.|maijs|jūn\.|jūl\.|aug\.|sept\.|okt\.|nov\.|dec\.)/i,
  wide: /^(janvār(is|ī)|februār(is|ī)|mart[sā]|aprīl(is|ī)|maij[sā]|jūnij[sā]|jūlij[sā]|august[sā]|septembr(is|ī)|oktobr(is|ī)|novembr(is|ī)|decembr(is|ī))/i,
};
const router_lv_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^mai/i,
    /^jūn/i,
    /^jūl/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_lv_lib_match_matchDayPatterns = {
  narrow: /^[spotc]/i,
  short: /^(sv|pi|o|t|c|pk|s)/i,
  abbreviated: /^(svētd\.|pirmd\.|otrd.\|trešd\.|ceturtd\.|piektd\.|sestd\.)/i,
  wide: /^(svētdien(a|ā)|pirmdien(a|ā)|otrdien(a|ā)|trešdien(a|ā)|ceturtdien(a|ā)|piektdien(a|ā)|sestdien(a|ā))/i,
};
const router_lv_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^p/i, /^o/i, /^t/i, /^c/i, /^p/i, /^s/i],
  any: [/^sv/i, /^pi/i, /^o/i, /^t/i, /^c/i, /^p/i, /^se/i],
};

const router_lv_lib_match_matchDayPeriodPatterns = {
  narrow: /^(am|pm|pusn\.|pusd\.|rīt(s|ā)|dien(a|ā)|vakar(s|ā)|nakt(s|ī))/,
  abbreviated: /^(am|pm|pusn\.|pusd\.|rīt(s|ā)|pēcpusd\.|vakar(s|ā)|nakt(s|ī))/,
  wide: /^(am|pm|pusnakt(s|ī)|pusdienlaik(s|ā)|rīt(s|ā)|pēcpusdien(a|ā)|vakar(s|ā)|nakt(s|ī))/i,
};
const router_lv_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^am/i,
    pm: /^pm/i,
    midnight: /^pusn/i,
    noon: /^pusd/i,
    morning: /^r/i,
    afternoon: /^(d|pēc)/i,
    evening: /^v/i,
    night: /^n/i,
  },
};

const router_lv_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_lv_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_lv_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_lv_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lv_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_lv_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lv_lib_match_parseQuarterPatterns,
    defaultParseWidth: "wide",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_lv_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lv_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_lv_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lv_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_lv_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_lv_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/lv.mjs






/**
 * @category Locales
 * @summary Latvian locale (Latvia).
 * @language Latvian
 * @iso-639-2 lav
 * @author Rūdolfs Puķītis [@prudolfs](https://github.com/prudolfs)
 */
const router_lv = {
  code: "lv",
  formatDistance: router_lv_lib_formatDistance_formatDistance,
  formatLong: router_lv_lib_formatLong_formatLong,
  formatRelative: router_lv_lib_formatRelative_formatRelative,
  localize: router_lv_lib_localize_localize,
  match: router_lv_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_lv = ((/* unused pure expression or super */ null && (router_lv)));

;// ./node_modules/date-fns/locale/mk/_lib/formatDistance.mjs
const router_mk_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "помалку од секунда",
    other: "помалку од {{count}} секунди",
  },

  xSeconds: {
    one: "1 секунда",
    other: "{{count}} секунди",
  },

  halfAMinute: "половина минута",

  lessThanXMinutes: {
    one: "помалку од минута",
    other: "помалку од {{count}} минути",
  },

  xMinutes: {
    one: "1 минута",
    other: "{{count}} минути",
  },

  aboutXHours: {
    one: "околу 1 час",
    other: "околу {{count}} часа",
  },

  xHours: {
    one: "1 час",
    other: "{{count}} часа",
  },

  xDays: {
    one: "1 ден",
    other: "{{count}} дена",
  },

  aboutXWeeks: {
    one: "околу 1 недела",
    other: "околу {{count}} месеци",
  },

  xWeeks: {
    one: "1 недела",
    other: "{{count}} недели",
  },

  aboutXMonths: {
    one: "околу 1 месец",
    other: "околу {{count}} недели",
  },

  xMonths: {
    one: "1 месец",
    other: "{{count}} месеци",
  },

  aboutXYears: {
    one: "околу 1 година",
    other: "околу {{count}} години",
  },

  xYears: {
    one: "1 година",
    other: "{{count}} години",
  },

  overXYears: {
    one: "повеќе од 1 година",
    other: "повеќе од {{count}} години",
  },

  almostXYears: {
    one: "безмалку 1 година",
    other: "безмалку {{count}} години",
  },
};

const router_mk_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_mk_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "за " + result;
    } else {
      return "пред " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/mk/_lib/formatLong.mjs


const router_mk_lib_formatLong_dateFormats = {
  full: "EEEE, dd MMMM yyyy",
  long: "dd MMMM yyyy",
  medium: "dd MMM yyyy",
  short: "dd/MM/yyyy",
};

const router_mk_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "H:mm",
};

const router_mk_lib_formatLong_dateTimeFormats = {
  any: "{{date}} {{time}}",
};

const router_mk_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_mk_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_mk_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_mk_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/mk/_lib/formatRelative.mjs


const router_mk_lib_formatRelative_weekdays = [
  "недела",
  "понеделник",
  "вторник",
  "среда",
  "четврток",
  "петок",
  "сабота",
];

function router_mk_lib_formatRelative_lastWeek(day) {
  const weekday = router_mk_lib_formatRelative_weekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 6:
      return "'минатата " + weekday + " во' p";
    case 1:
    case 2:
    case 4:
    case 5:
      return "'минатиот " + weekday + " во' p";
  }
}

function router_mk_lib_formatRelative_thisWeek(day) {
  const weekday = router_mk_lib_formatRelative_weekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 6:
      return "'ова " + weekday + " вo' p";
    case 1:
    case 2:
    case 4:
    case 5:
      return "'овој " + weekday + " вo' p";
  }
}

function router_mk_lib_formatRelative_nextWeek(day) {
  const weekday = router_mk_lib_formatRelative_weekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 6:
      return "'следната " + weekday + " вo' p";
    case 1:
    case 2:
    case 4:
    case 5:
      return "'следниот " + weekday + " вo' p";
  }
}

const router_mk_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_mk_lib_formatRelative_thisWeek(day);
    } else {
      return router_mk_lib_formatRelative_lastWeek(day);
    }
  },
  yesterday: "'вчера во' p",
  today: "'денес во' p",
  tomorrow: "'утре во' p",
  nextWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_mk_lib_formatRelative_thisWeek(day);
    } else {
      return router_mk_lib_formatRelative_nextWeek(day);
    }
  },
  other: "P",
};

const router_mk_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_mk_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/mk/_lib/localize.mjs


const router_mk_lib_localize_eraValues = {
  narrow: ["пр.н.е.", "н.е."],
  abbreviated: ["пред н. е.", "н. е."],
  wide: ["пред нашата ера", "нашата ера"],
};

const router_mk_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-ви кв.", "2-ри кв.", "3-ти кв.", "4-ти кв."],
  wide: ["1-ви квартал", "2-ри квартал", "3-ти квартал", "4-ти квартал"],
};

const router_mk_lib_localize_monthValues = {
  abbreviated: [
    "јан",
    "фев",
    "мар",
    "апр",
    "мај",
    "јун",
    "јул",
    "авг",
    "септ",
    "окт",
    "ноем",
    "дек",
  ],

  wide: [
    "јануари",
    "февруари",
    "март",
    "април",
    "мај",
    "јуни",
    "јули",
    "август",
    "септември",
    "октомври",
    "ноември",
    "декември",
  ],
};

const router_mk_lib_localize_dayValues = {
  narrow: ["Н", "П", "В", "С", "Ч", "П", "С"],
  short: ["не", "по", "вт", "ср", "че", "пе", "са"],
  abbreviated: ["нед", "пон", "вто", "сре", "чет", "пет", "саб"],
  wide: [
    "недела",
    "понеделник",
    "вторник",
    "среда",
    "четврток",
    "петок",
    "сабота",
  ],
};

const router_mk_lib_localize_dayPeriodValues = {
  wide: {
    am: "претпладне",
    pm: "попладне",
    midnight: "полноќ",
    noon: "напладне",
    morning: "наутро",
    afternoon: "попладне",
    evening: "навечер",
    night: "ноќе",
  },
};

const router_mk_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  const rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "-ви";
      case 2:
        return number + "-ри";
      case 7:
      case 8:
        return number + "-ми";
    }
  }
  return number + "-ти";
};

const router_mk_lib_localize_localize = {
  ordinalNumber: router_mk_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_mk_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_mk_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_mk_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_mk_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_mk_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/mk/_lib/match.mjs



const router_mk_lib_match_matchOrdinalNumberPattern = /^(\d+)(-?[врмт][и])?/i;
const router_mk_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_mk_lib_match_matchEraPatterns = {
  narrow: /^((пр)?н\.?\s?е\.?)/i,
  abbreviated: /^((пр)?н\.?\s?е\.?)/i,
  wide: /^(пред нашата ера|нашата ера)/i,
};
const router_mk_lib_match_parseEraPatterns = {
  any: [/^п/i, /^н/i],
};

const router_mk_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](-?[врт]?и?)? кв.?/i,
  wide: /^[1234](-?[врт]?и?)? квартал/i,
};
const router_mk_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_mk_lib_match_matchDayPatterns = {
  narrow: /^[нпвсч]/i,
  short: /^(не|по|вт|ср|че|пе|са)/i,
  abbreviated: /^(нед|пон|вто|сре|чет|пет|саб)/i,
  wide: /^(недела|понеделник|вторник|среда|четврток|петок|сабота)/i,
};

const router_mk_lib_match_parseDayPatterns = {
  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],
  any: [/^н[ед]/i, /^п[он]/i, /^вт/i, /^ср/i, /^ч[ет]/i, /^п[ет]/i, /^с[аб]/i],
};

const router_mk_lib_match_matchMonthPatterns = {
  abbreviated: /^(јан|фев|мар|апр|мај|јун|јул|авг|сеп|окт|ноем|дек)/i,
  wide: /^(јануари|февруари|март|април|мај|јуни|јули|август|септември|октомври|ноември|декември)/i,
};
const router_mk_lib_match_parseMonthPatterns = {
  any: [
    /^ја/i,
    /^Ф/i,
    /^мар/i,
    /^ап/i,
    /^мај/i,
    /^јун/i,
    /^јул/i,
    /^ав/i,
    /^се/i,
    /^окт/i,
    /^но/i,
    /^де/i,
  ],
};

const router_mk_lib_match_matchDayPeriodPatterns = {
  any: /^(претп|попл|полноќ|утро|пладне|вечер|ноќ)/i,
};
const router_mk_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /претпладне/i,
    pm: /попладне/i,
    midnight: /полноќ/i,
    noon: /напладне/i,
    morning: /наутро/i,
    afternoon: /попладне/i,
    evening: /навечер/i,
    night: /ноќе/i,
  },
};

const router_mk_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_mk_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_mk_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_mk_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mk_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_mk_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mk_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_mk_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mk_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_mk_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mk_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_mk_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_mk_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/mk.mjs






/**
 * @category Locales
 * @summary Macedonian locale.
 * @language Macedonian
 * @iso-639-2 mkd
 * @author Petar Vlahu [@vlahupetar](https://github.com/vlahupetar)
 * @author Altrim Beqiri [@altrim](https://github.com/altrim)
 */
const router_mk = {
  code: "mk",
  formatDistance: router_mk_lib_formatDistance_formatDistance,
  formatLong: router_mk_lib_formatLong_formatLong,
  formatRelative: router_mk_lib_formatRelative_formatRelative,
  localize: router_mk_lib_localize_localize,
  match: router_mk_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_mk = ((/* unused pure expression or super */ null && (router_mk)));

;// ./node_modules/date-fns/locale/mn/_lib/formatDistance.mjs
const router_mn_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "секунд хүрэхгүй",
    other: "{{count}} секунд хүрэхгүй",
  },

  xSeconds: {
    one: "1 секунд",
    other: "{{count}} секунд",
  },

  halfAMinute: "хагас минут",

  lessThanXMinutes: {
    one: "минут хүрэхгүй",
    other: "{{count}} минут хүрэхгүй",
  },

  xMinutes: {
    one: "1 минут",
    other: "{{count}} минут",
  },

  aboutXHours: {
    one: "ойролцоогоор 1 цаг",
    other: "ойролцоогоор {{count}} цаг",
  },

  xHours: {
    one: "1 цаг",
    other: "{{count}} цаг",
  },

  xDays: {
    one: "1 өдөр",
    other: "{{count}} өдөр",
  },

  aboutXWeeks: {
    one: "ойролцоогоор 1 долоо хоног",
    other: "ойролцоогоор {{count}} долоо хоног",
  },

  xWeeks: {
    one: "1 долоо хоног",
    other: "{{count}} долоо хоног",
  },

  aboutXMonths: {
    one: "ойролцоогоор 1 сар",
    other: "ойролцоогоор {{count}} сар",
  },

  xMonths: {
    one: "1 сар",
    other: "{{count}} сар",
  },

  aboutXYears: {
    one: "ойролцоогоор 1 жил",
    other: "ойролцоогоор {{count}} жил",
  },

  xYears: {
    one: "1 жил",
    other: "{{count}} жил",
  },

  overXYears: {
    one: "1 жил гаран",
    other: "{{count}} жил гаран",
  },

  almostXYears: {
    one: "бараг 1 жил",
    other: "бараг {{count}} жил",
  },
};

const router_mn_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_mn_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    /**
     * Append genitive case
     */
    const words = result.split(" ");
    const lastword = words.pop();
    result = words.join(" ");
    switch (lastword) {
      case "секунд":
        result += " секундийн";
        break;
      case "минут":
        result += " минутын";
        break;
      case "цаг":
        result += " цагийн";
        break;
      case "өдөр":
        result += " өдрийн";
        break;
      case "сар":
        result += " сарын";
        break;
      case "жил":
        result += " жилийн";
        break;
      case "хоног":
        result += " хоногийн";
        break;
      case "гаран":
        result += " гараны";
        break;
      case "хүрэхгүй":
        result += " хүрэхгүй хугацааны";
        break;
      default:
        result += lastword + "-н";
    }

    if (options.comparison && options.comparison > 0) {
      return result + " дараа";
    } else {
      return result + " өмнө";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/mn/_lib/formatLong.mjs


const router_mn_lib_formatLong_dateFormats = {
  full: "y 'оны' MMMM'ын' d, EEEE 'гараг'",
  long: "y 'оны' MMMM'ын' d",
  medium: "y 'оны' MMM'ын' d",
  short: "y.MM.dd",
};

const router_mn_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_mn_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_mn_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_mn_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_mn_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_mn_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/mn/_lib/formatRelative.mjs
const router_mn_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'өнгөрсөн' eeee 'гарагийн' p 'цагт'",
  yesterday: "'өчигдөр' p 'цагт'",
  today: "'өнөөдөр' p 'цагт'",
  tomorrow: "'маргааш' p 'цагт'",
  nextWeek: "'ирэх' eeee 'гарагийн' p 'цагт'",
  other: "P",
};

const router_mn_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_mn_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/mn/_lib/localize.mjs


const router_mn_lib_localize_eraValues = {
  narrow: ["НТӨ", "НТ"],
  abbreviated: ["НТӨ", "НТ"],
  wide: ["нийтийн тооллын өмнөх", "нийтийн тооллын"],
};

const router_mn_lib_localize_quarterValues = {
  narrow: ["I", "II", "III", "IV"],
  abbreviated: ["I улирал", "II улирал", "III улирал", "IV улирал"],
  wide: ["1-р улирал", "2-р улирал", "3-р улирал", "4-р улирал"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_mn_lib_localize_monthValues = {
  narrow: [
    "I",
    "II",
    "III",
    "IV",
    "V",
    "VI",
    "VII",
    "VIII",
    "IX",
    "X",
    "XI",
    "XII",
  ],

  abbreviated: [
    "1-р сар",
    "2-р сар",
    "3-р сар",
    "4-р сар",
    "5-р сар",
    "6-р сар",
    "7-р сар",
    "8-р сар",
    "9-р сар",
    "10-р сар",
    "11-р сар",
    "12-р сар",
  ],

  wide: [
    "Нэгдүгээр сар",
    "Хоёрдугаар сар",
    "Гуравдугаар сар",
    "Дөрөвдүгээр сар",
    "Тавдугаар сар",
    "Зургаадугаар сар",
    "Долоодугаар сар",
    "Наймдугаар сар",
    "Есдүгээр сар",
    "Аравдугаар сар",
    "Арваннэгдүгээр сар",
    "Арван хоёрдугаар сар",
  ],
};

const router_mn_lib_localize_formattingMonthValues = {
  narrow: [
    "I",
    "II",
    "III",
    "IV",
    "V",
    "VI",
    "VII",
    "VIII",
    "IX",
    "X",
    "XI",
    "XII",
  ],

  abbreviated: [
    "1-р сар",
    "2-р сар",
    "3-р сар",
    "4-р сар",
    "5-р сар",
    "6-р сар",
    "7-р сар",
    "8-р сар",
    "9-р сар",
    "10-р сар",
    "11-р сар",
    "12-р сар",
  ],

  wide: [
    "нэгдүгээр сар",
    "хоёрдугаар сар",
    "гуравдугаар сар",
    "дөрөвдүгээр сар",
    "тавдугаар сар",
    "зургаадугаар сар",
    "долоодугаар сар",
    "наймдугаар сар",
    "есдүгээр сар",
    "аравдугаар сар",
    "арваннэгдүгээр сар",
    "арван хоёрдугаар сар",
  ],
};

const router_mn_lib_localize_dayValues = {
  narrow: ["Н", "Д", "М", "Л", "П", "Б", "Б"],
  short: ["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"],
  abbreviated: ["Ням", "Дав", "Мяг", "Лха", "Пүр", "Баа", "Бям"],
  wide: ["Ням", "Даваа", "Мягмар", "Лхагва", "Пүрэв", "Баасан", "Бямба"],
};

const router_mn_lib_localize_formattingDayValues = {
  narrow: ["Н", "Д", "М", "Л", "П", "Б", "Б"],
  short: ["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"],
  abbreviated: ["Ням", "Дав", "Мяг", "Лха", "Пүр", "Баа", "Бям"],
  wide: ["ням", "даваа", "мягмар", "лхагва", "пүрэв", "баасан", "бямба"],
};

const router_mn_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ү.ө.",
    pm: "ү.х.",
    midnight: "шөнө дунд",
    noon: "үд дунд",
    morning: "өглөө",
    afternoon: "өдөр",
    evening: "орой",
    night: "шөнө",
  },
  abbreviated: {
    am: "ү.ө.",
    pm: "ү.х.",
    midnight: "шөнө дунд",
    noon: "үд дунд",
    morning: "өглөө",
    afternoon: "өдөр",
    evening: "орой",
    night: "шөнө",
  },
  wide: {
    am: "ү.ө.",
    pm: "ү.х.",
    midnight: "шөнө дунд",
    noon: "үд дунд",
    morning: "өглөө",
    afternoon: "өдөр",
    evening: "орой",
    night: "шөнө",
  },
};

const router_mn_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_mn_lib_localize_localize = {
  ordinalNumber: router_mn_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_mn_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_mn_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_mn_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_mn_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_mn_lib_localize_dayValues,
    defaultWidth: "wide",
    formattingValues: router_mn_lib_localize_formattingDayValues,
    defaultFormattingWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_mn_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/mn/_lib/match.mjs



const router_mn_lib_match_matchOrdinalNumberPattern = /\d+/i;
const router_mn_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_mn_lib_match_matchEraPatterns = {
  narrow: /^(нтө|нт)/i,
  abbreviated: /^(нтө|нт)/i,
  wide: /^(нийтийн тооллын өмнө|нийтийн тооллын)/i,
};
const router_mn_lib_match_parseEraPatterns = {
  any: [/^(нтө|нийтийн тооллын өмнө)/i, /^(нт|нийтийн тооллын)/i],
};

const router_mn_lib_match_matchQuarterPatterns = {
  narrow: /^(iv|iii|ii|i)/i,
  abbreviated: /^(iv|iii|ii|i) улирал/i,
  wide: /^[1-4]-р улирал/i,
};
const router_mn_lib_match_parseQuarterPatterns = {
  any: [/^(i(\s|$)|1)/i, /^(ii(\s|$)|2)/i, /^(iii(\s|$)|3)/i, /^(iv(\s|$)|4)/i],
};

const router_mn_lib_match_matchMonthPatterns = {
  narrow: /^(xii|xi|x|ix|viii|vii|vi|v|iv|iii|ii|i)/i,
  abbreviated:
    /^(1-р сар|2-р сар|3-р сар|4-р сар|5-р сар|6-р сар|7-р сар|8-р сар|9-р сар|10-р сар|11-р сар|12-р сар)/i,
  wide: /^(нэгдүгээр сар|хоёрдугаар сар|гуравдугаар сар|дөрөвдүгээр сар|тавдугаар сар|зургаадугаар сар|долоодугаар сар|наймдугаар сар|есдүгээр сар|аравдугаар сар|арван нэгдүгээр сар|арван хоёрдугаар сар)/i,
};
const router_mn_lib_match_parseMonthPatterns = {
  narrow: [
    /^i$/i,
    /^ii$/i,
    /^iii$/i,
    /^iv$/i,
    /^v$/i,
    /^vi$/i,
    /^vii$/i,
    /^viii$/i,
    /^ix$/i,
    /^x$/i,
    /^xi$/i,
    /^xii$/i,
  ],

  any: [
    /^(1|нэгдүгээр)/i,
    /^(2|хоёрдугаар)/i,
    /^(3|гуравдугаар)/i,
    /^(4|дөрөвдүгээр)/i,
    /^(5|тавдугаар)/i,
    /^(6|зургаадугаар)/i,
    /^(7|долоодугаар)/i,
    /^(8|наймдугаар)/i,
    /^(9|есдүгээр)/i,
    /^(10|аравдугаар)/i,
    /^(11|арван нэгдүгээр)/i,
    /^(12|арван хоёрдугаар)/i,
  ],
};

const router_mn_lib_match_matchDayPatterns = {
  narrow: /^[ндмлпбб]/i,
  short: /^(ня|да|мя|лх|пү|ба|бя)/i,
  abbreviated: /^(ням|дав|мяг|лха|пүр|баа|бям)/i,
  wide: /^(ням|даваа|мягмар|лхагва|пүрэв|баасан|бямба)/i,
};
const router_mn_lib_match_parseDayPatterns = {
  narrow: [/^н/i, /^д/i, /^м/i, /^л/i, /^п/i, /^б/i, /^б/i],
  any: [/^ня/i, /^да/i, /^мя/i, /^лх/i, /^пү/i, /^ба/i, /^бя/i],
};

const router_mn_lib_match_matchDayPeriodPatterns = {
  narrow: /^(ү\.ө\.|ү\.х\.|шөнө дунд|үд дунд|өглөө|өдөр|орой|шөнө)/i,
  any: /^(ү\.ө\.|ү\.х\.|шөнө дунд|үд дунд|өглөө|өдөр|орой|шөнө)/i,
};
const router_mn_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ү\.ө\./i,
    pm: /^ү\.х\./i,
    midnight: /^шөнө дунд/i,
    noon: /^үд дунд/i,
    morning: /өглөө/i,
    afternoon: /өдөр/i,
    evening: /орой/i,
    night: /шөнө/i,
  },
};

const router_mn_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_mn_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_mn_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_mn_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mn_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_mn_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mn_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_mn_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mn_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_mn_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mn_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_mn_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_mn_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/mn.mjs






/**
 * @category Locales
 * @summary Mongolian locale.
 * @language Mongolian
 * @iso-639-2 mon
 * @author Bilguun Ochirbat [@bilguun0203](https://github.com/bilguun0203)
 */
const router_mn = {
  code: "mn",
  formatDistance: router_mn_lib_formatDistance_formatDistance,
  formatLong: router_mn_lib_formatLong_formatLong,
  formatRelative: router_mn_lib_formatRelative_formatRelative,
  localize: router_mn_lib_localize_localize,
  match: router_mn_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_mn = ((/* unused pure expression or super */ null && (router_mn)));

;// ./node_modules/date-fns/locale/ms/_lib/formatDistance.mjs
const router_ms_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "kurang dari 1 saat",
    other: "kurang dari {{count}} saat",
  },

  xSeconds: {
    one: "1 saat",
    other: "{{count}} saat",
  },

  halfAMinute: "setengah minit",

  lessThanXMinutes: {
    one: "kurang dari 1 minit",
    other: "kurang dari {{count}} minit",
  },

  xMinutes: {
    one: "1 minit",
    other: "{{count}} minit",
  },

  aboutXHours: {
    one: "sekitar 1 jam",
    other: "sekitar {{count}} jam",
  },

  xHours: {
    one: "1 jam",
    other: "{{count}} jam",
  },

  xDays: {
    one: "1 hari",
    other: "{{count}} hari",
  },

  aboutXWeeks: {
    one: "sekitar 1 minggu",
    other: "sekitar {{count}} minggu",
  },

  xWeeks: {
    one: "1 minggu",
    other: "{{count}} minggu",
  },

  aboutXMonths: {
    one: "sekitar 1 bulan",
    other: "sekitar {{count}} bulan",
  },

  xMonths: {
    one: "1 bulan",
    other: "{{count}} bulan",
  },

  aboutXYears: {
    one: "sekitar 1 tahun",
    other: "sekitar {{count}} tahun",
  },

  xYears: {
    one: "1 tahun",
    other: "{{count}} tahun",
  },

  overXYears: {
    one: "lebih dari 1 tahun",
    other: "lebih dari {{count}} tahun",
  },

  almostXYears: {
    one: "hampir 1 tahun",
    other: "hampir {{count}} tahun",
  },
};

const router_ms_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ms_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "dalam masa " + result;
    } else {
      return result + " yang lalu";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ms/_lib/formatLong.mjs


const router_ms_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "d/M/yyyy",
};

const router_ms_lib_formatLong_timeFormats = {
  full: "HH.mm.ss",
  long: "HH.mm.ss",
  medium: "HH.mm",
  short: "HH.mm",
};

const router_ms_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'pukul' {{time}}",
  long: "{{date}} 'pukul' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ms_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ms_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ms_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ms_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ms/_lib/formatRelative.mjs
const router_ms_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'lepas pada jam' p",
  yesterday: "'Semalam pada jam' p",
  today: "'Hari ini pada jam' p",
  tomorrow: "'Esok pada jam' p",
  nextWeek: "eeee 'pada jam' p",
  other: "P",
};

const router_ms_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ms_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ms/_lib/localize.mjs


// Most data for localization are taken from this page
// https://www.unicode.org/cldr/charts/32/summary/ms.html
const router_ms_lib_localize_eraValues = {
  narrow: ["SM", "M"],
  abbreviated: ["SM", "M"],
  wide: ["Sebelum Masihi", "Masihi"],
};

const router_ms_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["S1", "S2", "S3", "S4"],
  wide: ["Suku pertama", "Suku kedua", "Suku ketiga", "Suku keempat"],
};

// Note: in Malay, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_ms_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mac",
    "Apr",
    "Mei",
    "Jun",
    "Jul",
    "Ogo",
    "Sep",
    "Okt",
    "Nov",
    "Dis",
  ],

  wide: [
    "Januari",
    "Februari",
    "Mac",
    "April",
    "Mei",
    "Jun",
    "Julai",
    "Ogos",
    "September",
    "Oktober",
    "November",
    "Disember",
  ],
};

const router_ms_lib_localize_dayValues = {
  narrow: ["A", "I", "S", "R", "K", "J", "S"],
  short: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"],
  abbreviated: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"],
  wide: ["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"],
};

const router_ms_lib_localize_dayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "tgh malam",
    noon: "tgh hari",
    morning: "pagi",
    afternoon: "tengah hari",
    evening: "petang",
    night: "malam",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "tengah hari",
    evening: "petang",
    night: "malam",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "tengah hari",
    evening: "petang",
    night: "malam",
  },
};

const router_ms_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "tengah hari",
    evening: "petang",
    night: "malam",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "tengah hari",
    evening: "petang",
    night: "malam",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "tengah malam",
    noon: "tengah hari",
    morning: "pagi",
    afternoon: "tengah hari",
    evening: "petang",
    night: "malam",
  },
};

const router_ms_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  // Can't use "pertama", "kedua" because can't be parsed
  return "ke-" + Number(dirtyNumber);
};

const router_ms_lib_localize_localize = {
  ordinalNumber: router_ms_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ms_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ms_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ms_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ms_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ms_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ms_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ms/_lib/match.mjs



const router_ms_lib_match_matchOrdinalNumberPattern = /^ke-(\d+)?/i;
const router_ms_lib_match_parseOrdinalNumberPattern = /petama|\d+/i;

const router_ms_lib_match_matchEraPatterns = {
  narrow: /^(sm|m)/i,
  abbreviated: /^(s\.?\s?m\.?|m\.?)/i,
  wide: /^(sebelum masihi|masihi)/i,
};
const router_ms_lib_match_parseEraPatterns = {
  any: [/^s/i, /^(m)/i],
};

const router_ms_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^S[1234]/i,
  wide: /Suku (pertama|kedua|ketiga|keempat)/i,
};
const router_ms_lib_match_parseQuarterPatterns = {
  any: [/pertama|1/i, /kedua|2/i, /ketiga|3/i, /keempat|4/i],
};

const router_ms_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mac|apr|mei|jun|jul|ogo|sep|okt|nov|dis)/i,
  wide: /^(januari|februari|mac|april|mei|jun|julai|ogos|september|oktober|november|disember)/i,
};
const router_ms_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^o/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^ma/i,
    /^ap/i,
    /^me/i,
    /^jun/i,
    /^jul/i,
    /^og/i,
    /^s/i,
    /^ok/i,
    /^n/i,
    /^d/i,
  ],
};

const router_ms_lib_match_matchDayPatterns = {
  narrow: /^[aisrkj]/i,
  short: /^(ahd|isn|sel|rab|kha|jum|sab)/i,
  abbreviated: /^(ahd|isn|sel|rab|kha|jum|sab)/i,
  wide: /^(ahad|isnin|selasa|rabu|khamis|jumaat|sabtu)/i,
};
const router_ms_lib_match_parseDayPatterns = {
  narrow: [/^a/i, /^i/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],
  any: [/^a/i, /^i/i, /^se/i, /^r/i, /^k/i, /^j/i, /^sa/i],
};

const router_ms_lib_match_matchDayPeriodPatterns = {
  narrow: /^(am|pm|tengah malam|tengah hari|pagi|petang|malam)/i,
  any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|pagi|petang|malam)/i,
};
const router_ms_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^pm/i,
    midnight: /^tengah m/i,
    noon: /^tengah h/i,
    morning: /pa/i,
    afternoon: /tengah h/i,
    evening: /pe/i,
    night: /m/i,
  },
};

const router_ms_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ms_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ms_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ms_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ms_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ms_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ms_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ms_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ms_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ms_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ms_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ms_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ms_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ms.mjs






/**
 * @category Locales
 * @summary Malay locale.
 * @language Malay
 * @iso-639-2 msa
 * @author Ruban Selvarajah [@Zyten](https://github.com/Zyten)
 */
const router_ms = {
  code: "ms",
  formatDistance: router_ms_lib_formatDistance_formatDistance,
  formatLong: router_ms_lib_formatLong_formatLong,
  formatRelative: router_ms_lib_formatRelative_formatRelative,
  localize: router_ms_lib_localize_localize,
  match: router_ms_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ms = ((/* unused pure expression or super */ null && (router_ms)));

;// ./node_modules/date-fns/locale/mt/_lib/formatDistance.mjs
const router_mt_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "inqas minn sekonda",
    other: "inqas minn {{count}} sekondi",
  },

  xSeconds: {
    one: "sekonda",
    other: "{{count}} sekondi",
  },

  halfAMinute: "nofs minuta",

  lessThanXMinutes: {
    one: "inqas minn minuta",
    other: "inqas minn {{count}} minuti",
  },

  xMinutes: {
    one: "minuta",
    other: "{{count}} minuti",
  },

  aboutXHours: {
    one: "madwar siegħa",
    other: "madwar {{count}} siegħat",
  },

  xHours: {
    one: "siegħa",
    other: "{{count}} siegħat",
  },

  xDays: {
    one: "ġurnata",
    other: "{{count}} ġranet",
  },

  aboutXWeeks: {
    one: "madwar ġimgħa",
    other: "madwar {{count}} ġimgħat",
  },

  xWeeks: {
    one: "ġimgħa",
    other: "{{count}} ġimgħat",
  },

  aboutXMonths: {
    one: "madwar xahar",
    other: "madwar {{count}} xhur",
  },

  xMonths: {
    one: "xahar",
    other: "{{count}} xhur",
  },

  aboutXYears: {
    one: "madwar sena",
    two: "madwar sentejn",
    other: "madwar {{count}} snin",
  },

  xYears: {
    one: "sena",
    two: "sentejn",
    other: "{{count}} snin",
  },

  overXYears: {
    one: "aktar minn sena",
    two: "aktar minn sentejn",
    other: "aktar minn {{count}} snin",
  },

  almostXYears: {
    one: "kważi sena",
    two: "kważi sentejn",
    other: "kważi {{count}} snin",
  },
};

const router_mt_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_mt_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 2 && tokenValue.two) {
    result = tokenValue.two;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "f'" + result;
    } else {
      return result + " ilu";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/mt/_lib/formatLong.mjs


const router_mt_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "dd/MM/yyyy",
};

const router_mt_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_mt_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_mt_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_mt_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_mt_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_mt_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/mt/_lib/formatRelative.mjs
const router_mt_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'li għadda' 'fil-'p",
  yesterday: "'Il-bieraħ fil-'p",
  today: "'Illum fil-'p",
  tomorrow: "'Għada fil-'p",
  nextWeek: "eeee 'fil-'p",
  other: "P",
};

const router_mt_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_mt_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/mt/_lib/localize.mjs


const router_mt_lib_localize_eraValues = {
  narrow: ["Q", "W"],
  abbreviated: ["QK", "WK"],
  wide: ["qabel Kristu", "wara Kristu"],
};

const router_mt_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: ["1. kwart", "2. kwart", "3. kwart", "4. kwart"],
};

const router_mt_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "Ġ", "L", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Fra",
    "Mar",
    "Apr",
    "Mej",
    "Ġun",
    "Lul",
    "Aww",
    "Set",
    "Ott",
    "Nov",
    "Diċ",
  ],

  wide: [
    "Jannar",
    "Frar",
    "Marzu",
    "April",
    "Mejju",
    "Ġunju",
    "Lulju",
    "Awwissu",
    "Settembru",
    "Ottubru",
    "Novembru",
    "Diċembru",
  ],
};

const router_mt_lib_localize_dayValues = {
  narrow: ["Ħ", "T", "T", "E", "Ħ", "Ġ", "S"],
  short: ["Ħa", "Tn", "Tl", "Er", "Ħa", "Ġi", "Si"],
  abbreviated: ["Ħad", "Tne", "Tli", "Erb", "Ħam", "Ġim", "Sib"],
  wide: [
    "Il-Ħadd",
    "It-Tnejn",
    "It-Tlieta",
    "L-Erbgħa",
    "Il-Ħamis",
    "Il-Ġimgħa",
    "Is-Sibt",
  ],
};

const router_mt_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "nofsillejl",
    noon: "nofsinhar",
    morning: "għodwa",
    afternoon: "wara nofsinhar",
    evening: "filgħaxija",
    night: "lejl",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "nofsillejl",
    noon: "nofsinhar",
    morning: "għodwa",
    afternoon: "wara nofsinhar",
    evening: "filgħaxija",
    night: "lejl",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "nofsillejl",
    noon: "nofsinhar",
    morning: "għodwa",
    afternoon: "wara nofsinhar",
    evening: "filgħaxija",
    night: "lejl",
  },
};

const router_mt_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "f'nofsillejl",
    noon: "f'nofsinhar",
    morning: "filgħodu",
    afternoon: "wara nofsinhar",
    evening: "filgħaxija",
    night: "billejl",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "f'nofsillejl",
    noon: "f'nofsinhar",
    morning: "filgħodu",
    afternoon: "wara nofsinhar",
    evening: "filgħaxija",
    night: "billejl",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "f'nofsillejl",
    noon: "f'nofsinhar",
    morning: "filgħodu",
    afternoon: "wara nofsinhar",
    evening: "filgħaxija",
    night: "billejl",
  },
};

const router_mt_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "º";
};

const router_mt_lib_localize_localize = {
  ordinalNumber: router_mt_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_mt_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_mt_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_mt_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_mt_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_mt_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_mt_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/mt/_lib/match.mjs



const router_mt_lib_match_matchOrdinalNumberPattern = /^(\d+)(º)?/i;
const router_mt_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_mt_lib_match_matchEraPatterns = {
  narrow: /^(q|w)/i,
  abbreviated: /^(q\.?\s?k\.?|b\.?\s?c\.?\s?e\.?|w\.?\s?k\.?)/i,
  wide: /^(qabel kristu|before common era|wara kristu|common era)/i,
};
const router_mt_lib_match_parseEraPatterns = {
  any: [/^(q|b)/i, /^(w|c)/i],
};

const router_mt_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^k[1234]/i,
  wide: /^[1234](\.)? kwart/i,
};
const router_mt_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_mt_lib_match_matchMonthPatterns = {
  narrow: /^[jfmaglsond]/i,
  abbreviated: /^(jan|fra|mar|apr|mej|ġun|lul|aww|set|ott|nov|diċ)/i,
  wide: /^(jannar|frar|marzu|april|mejju|ġunju|lulju|awwissu|settembru|ottubru|novembru|diċembru)/i,
};
const router_mt_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^ġ/i,
    /^l/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^mej/i,
    /^ġ/i,
    /^l/i,
    /^aw/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_mt_lib_match_matchDayPatterns = {
  narrow: /^[ħteġs]/i,
  short: /^(ħa|tn|tl|er|ħa|ġi|si)/i,
  abbreviated: /^(ħad|tne|tli|erb|ħam|ġim|sib)/i,
  wide: /^(il-ħadd|it-tnejn|it-tlieta|l-erbgħa|il-ħamis|il-ġimgħa|is-sibt)/i,
};
const router_mt_lib_match_parseDayPatterns = {
  narrow: [/^ħ/i, /^t/i, /^t/i, /^e/i, /^ħ/i, /^ġ/i, /^s/i],
  any: [
    /^(il-)?ħad/i,
    /^(it-)?tn/i,
    /^(it-)?tl/i,
    /^(l-)?er/i,
    /^(il-)?ham/i,
    /^(il-)?ġi/i,
    /^(is-)?si/i,
  ],
};

const router_mt_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(a|p|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i,
  any: /^([ap]\.?\s?m\.?|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i,
};
const router_mt_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^f'nofsillejl/i,
    noon: /^f'nofsinhar/i,
    morning: /għodwa/i,
    afternoon: /wara(\s.*)nofsinhar/i,
    evening: /filgħaxija/i,
    night: /lejl/i,
  },
};

const router_mt_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_mt_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_mt_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_mt_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mt_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_mt_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mt_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_mt_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mt_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_mt_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_mt_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_mt_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_mt_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/mt.mjs






/**
 * @category Locales
 * @summary Maltese locale.
 * @language Maltese
 * @iso-639-2 mlt
 * @author Andras Matzon [@amatzon](@link https://github.com/amatzon)
 * @author Bryan Borg [@bryanMt](@link https://github.com/bryanMt)
 */
const router_mt = {
  code: "mt",
  formatDistance: router_mt_lib_formatDistance_formatDistance,
  formatLong: router_mt_lib_formatLong_formatLong,
  formatRelative: router_mt_lib_formatRelative_formatRelative,
  localize: router_mt_lib_localize_localize,
  match: router_mt_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_mt = ((/* unused pure expression or super */ null && (router_mt)));

;// ./node_modules/date-fns/locale/nb/_lib/formatDistance.mjs
const router_nb_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "mindre enn ett sekund",
    other: "mindre enn {{count}} sekunder",
  },

  xSeconds: {
    one: "ett sekund",
    other: "{{count}} sekunder",
  },

  halfAMinute: "et halvt minutt",

  lessThanXMinutes: {
    one: "mindre enn ett minutt",
    other: "mindre enn {{count}} minutter",
  },

  xMinutes: {
    one: "ett minutt",
    other: "{{count}} minutter",
  },

  aboutXHours: {
    one: "omtrent en time",
    other: "omtrent {{count}} timer",
  },

  xHours: {
    one: "en time",
    other: "{{count}} timer",
  },

  xDays: {
    one: "en dag",
    other: "{{count}} dager",
  },

  aboutXWeeks: {
    one: "omtrent en uke",
    other: "omtrent {{count}} uker",
  },

  xWeeks: {
    one: "en uke",
    other: "{{count}} uker",
  },

  aboutXMonths: {
    one: "omtrent en måned",
    other: "omtrent {{count}} måneder",
  },

  xMonths: {
    one: "en måned",
    other: "{{count}} måneder",
  },

  aboutXYears: {
    one: "omtrent ett år",
    other: "omtrent {{count}} år",
  },

  xYears: {
    one: "ett år",
    other: "{{count}} år",
  },

  overXYears: {
    one: "over ett år",
    other: "over {{count}} år",
  },

  almostXYears: {
    one: "nesten ett år",
    other: "nesten {{count}} år",
  },
};

const router_nb_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_nb_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "om " + result;
    } else {
      return result + " siden";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/nb/_lib/formatLong.mjs


const router_nb_lib_formatLong_dateFormats = {
  full: "EEEE d. MMMM y",
  long: "d. MMMM y",
  medium: "d. MMM y",
  short: "dd.MM.y",
};

const router_nb_lib_formatLong_timeFormats = {
  full: "'kl'. HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_nb_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'kl.' {{time}}",
  long: "{{date}} 'kl.' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_nb_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_nb_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_nb_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_nb_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/nb/_lib/formatRelative.mjs
const router_nb_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'forrige' eeee 'kl.' p",
  yesterday: "'i går kl.' p",
  today: "'i dag kl.' p",
  tomorrow: "'i morgen kl.' p",
  nextWeek: "EEEE 'kl.' p",
  other: "P",
};

const router_nb_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_nb_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/nb/_lib/localize.mjs


const router_nb_lib_localize_eraValues = {
  narrow: ["f.Kr.", "e.Kr."],
  abbreviated: ["f.Kr.", "e.Kr."],
  wide: ["før Kristus", "etter Kristus"],
};

const router_nb_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
};

const router_nb_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "jan.",
    "feb.",
    "mars",
    "apr.",
    "mai",
    "juni",
    "juli",
    "aug.",
    "sep.",
    "okt.",
    "nov.",
    "des.",
  ],

  wide: [
    "januar",
    "februar",
    "mars",
    "april",
    "mai",
    "juni",
    "juli",
    "august",
    "september",
    "oktober",
    "november",
    "desember",
  ],
};

const router_nb_lib_localize_dayValues = {
  narrow: ["S", "M", "T", "O", "T", "F", "L"],
  short: ["sø", "ma", "ti", "on", "to", "fr", "lø"],
  abbreviated: ["søn", "man", "tir", "ons", "tor", "fre", "lør"],
  wide: [
    "søndag",
    "mandag",
    "tirsdag",
    "onsdag",
    "torsdag",
    "fredag",
    "lørdag",
  ],
};

const router_nb_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morg.",
    afternoon: "på etterm.",
    evening: "på kvelden",
    night: "på natten",
  },
  abbreviated: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morg.",
    afternoon: "på etterm.",
    evening: "på kvelden",
    night: "på natten",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morgenen",
    afternoon: "på ettermiddagen",
    evening: "på kvelden",
    night: "på natten",
  },
};

const router_nb_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_nb_lib_localize_localize = {
  ordinalNumber: router_nb_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_nb_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_nb_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_nb_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_nb_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_nb_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/nb/_lib/match.mjs



const router_nb_lib_match_matchOrdinalNumberPattern = /^(\d+)\.?/i;
const router_nb_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_nb_lib_match_matchEraPatterns = {
  narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
  abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
  wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i,
};
const router_nb_lib_match_parseEraPatterns = {
  any: [/^f/i, /^e/i],
};

const router_nb_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](\.)? kvartal/i,
};
const router_nb_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_nb_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i,
  wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i,
};
const router_nb_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^mai/i,
    /^jun/i,
    /^jul/i,
    /^aug/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_nb_lib_match_matchDayPatterns = {
  narrow: /^[smtofl]/i,
  short: /^(sø|ma|ti|on|to|fr|lø)/i,
  abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i,
  wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i,
};
const router_nb_lib_match_parseDayPatterns = {
  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],
};

const router_nb_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i,
  any: /^([ap]\.?\s?m\.?|midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten))/i,
};
const router_nb_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a(\.?\s?m\.?)?$/i,
    pm: /^p(\.?\s?m\.?)?$/i,
    midnight: /^midn/i,
    noon: /^midd/i,
    morning: /morgen/i,
    afternoon: /ettermiddag/i,
    evening: /kveld/i,
    night: /natt/i,
  },
};

const router_nb_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_nb_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_nb_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_nb_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nb_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_nb_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nb_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_nb_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nb_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_nb_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nb_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_nb_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_nb_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/nb.mjs






/**
 * @category Locales
 * @summary Norwegian Bokmål locale.
 * @language Norwegian Bokmål
 * @iso-639-2 nob
 * @author Hans-Kristian Koren [@Hanse](https://github.com/Hanse)
 * @author Mikolaj Grzyb [@mikolajgrzyb](https://github.com/mikolajgrzyb)
 * @author Dag Stuan [@dagstuan](https://github.com/dagstuan)
 */
const router_nb = {
  code: "nb",
  formatDistance: router_nb_lib_formatDistance_formatDistance,
  formatLong: router_nb_lib_formatLong_formatLong,
  formatRelative: router_nb_lib_formatRelative_formatRelative,
  localize: router_nb_lib_localize_localize,
  match: router_nb_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_nb = ((/* unused pure expression or super */ null && (router_nb)));

;// ./node_modules/date-fns/locale/nl/_lib/formatDistance.mjs
const router_nl_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "minder dan een seconde",
    other: "minder dan {{count}} seconden",
  },

  xSeconds: {
    one: "1 seconde",
    other: "{{count}} seconden",
  },

  halfAMinute: "een halve minuut",

  lessThanXMinutes: {
    one: "minder dan een minuut",
    other: "minder dan {{count}} minuten",
  },

  xMinutes: {
    one: "een minuut",
    other: "{{count}} minuten",
  },

  aboutXHours: {
    one: "ongeveer 1 uur",
    other: "ongeveer {{count}} uur",
  },

  xHours: {
    one: "1 uur",
    other: "{{count}} uur",
  },

  xDays: {
    one: "1 dag",
    other: "{{count}} dagen",
  },

  aboutXWeeks: {
    one: "ongeveer 1 week",
    other: "ongeveer {{count}} weken",
  },

  xWeeks: {
    one: "1 week",
    other: "{{count}} weken",
  },

  aboutXMonths: {
    one: "ongeveer 1 maand",
    other: "ongeveer {{count}} maanden",
  },

  xMonths: {
    one: "1 maand",
    other: "{{count}} maanden",
  },

  aboutXYears: {
    one: "ongeveer 1 jaar",
    other: "ongeveer {{count}} jaar",
  },

  xYears: {
    one: "1 jaar",
    other: "{{count}} jaar",
  },

  overXYears: {
    one: "meer dan 1 jaar",
    other: "meer dan {{count}} jaar",
  },

  almostXYears: {
    one: "bijna 1 jaar",
    other: "bijna {{count}} jaar",
  },
};

const router_nl_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_nl_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "over " + result;
    } else {
      return result + " geleden";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/nl/_lib/formatLong.mjs


const router_nl_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd-MM-y",
};

const router_nl_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_nl_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'om' {{time}}",
  long: "{{date}} 'om' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_nl_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_nl_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_nl_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_nl_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/nl/_lib/formatRelative.mjs
const router_nl_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'afgelopen' eeee 'om' p",
  yesterday: "'gisteren om' p",
  today: "'vandaag om' p",
  tomorrow: "'morgen om' p",
  nextWeek: "eeee 'om' p",
  other: "P",
};

const router_nl_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_nl_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/nl/_lib/localize.mjs


const router_nl_lib_localize_eraValues = {
  narrow: ["v.C.", "n.C."],
  abbreviated: ["v.Chr.", "n.Chr."],
  wide: ["voor Christus", "na Christus"],
};

const router_nl_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: ["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"],
};

const router_nl_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "jan.",
    "feb.",
    "mrt.",
    "apr.",
    "mei",
    "jun.",
    "jul.",
    "aug.",
    "sep.",
    "okt.",
    "nov.",
    "dec.",
  ],

  wide: [
    "januari",
    "februari",
    "maart",
    "april",
    "mei",
    "juni",
    "juli",
    "augustus",
    "september",
    "oktober",
    "november",
    "december",
  ],
};

const router_nl_lib_localize_dayValues = {
  narrow: ["Z", "M", "D", "W", "D", "V", "Z"],
  short: ["zo", "ma", "di", "wo", "do", "vr", "za"],
  abbreviated: ["zon", "maa", "din", "woe", "don", "vri", "zat"],
  wide: [
    "zondag",
    "maandag",
    "dinsdag",
    "woensdag",
    "donderdag",
    "vrijdag",
    "zaterdag",
  ],
};

const router_nl_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "het middaguur",
    morning: "'s ochtends",
    afternoon: "'s middags",
    evening: "'s avonds",
    night: "'s nachts",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "het middaguur",
    morning: "'s ochtends",
    afternoon: "'s middags",
    evening: "'s avonds",
    night: "'s nachts",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "het middaguur",
    morning: "'s ochtends",
    afternoon: "'s middags",
    evening: "'s avonds",
    night: "'s nachts",
  },
};

const router_nl_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "e";
};

const router_nl_lib_localize_localize = {
  ordinalNumber: router_nl_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_nl_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_nl_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_nl_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_nl_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_nl_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/nl/_lib/match.mjs



const router_nl_lib_match_matchOrdinalNumberPattern = /^(\d+)e?/i;
const router_nl_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_nl_lib_match_matchEraPatterns = {
  narrow: /^([vn]\.? ?C\.?)/,
  abbreviated: /^([vn]\. ?Chr\.?)/,
  wide: /^((voor|na) Christus)/,
};
const router_nl_lib_match_parseEraPatterns = {
  any: [/^v/, /^n/],
};

const router_nl_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^K[1234]/i,
  wide: /^[1234]e kwartaal/i,
};
const router_nl_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_nl_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
  wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i,
};
const router_nl_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^jan/i,
    /^feb/i,
    /^m(r|a)/i,
    /^apr/i,
    /^mei/i,
    /^jun/i,
    /^jul/i,
    /^aug/i,
    /^sep/i,
    /^okt/i,
    /^nov/i,
    /^dec/i,
  ],
};

const router_nl_lib_match_matchDayPatterns = {
  narrow: /^[zmdwv]/i,
  short: /^(zo|ma|di|wo|do|vr|za)/i,
  abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,
  wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i,
};
const router_nl_lib_match_parseDayPatterns = {
  narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],
  any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i],
};

const router_nl_lib_match_matchDayPeriodPatterns = {
  any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i,
};
const router_nl_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^am/i,
    pm: /^pm/i,
    midnight: /^middernacht/i,
    noon: /^het middaguur/i,
    morning: /ochtend/i,
    afternoon: /middag/i,
    evening: /avond/i,
    night: /nacht/i,
  },
};

const router_nl_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_nl_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_nl_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_nl_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nl_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_nl_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nl_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_nl_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nl_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_nl_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nl_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_nl_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_nl_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/nl.mjs






/**
 * @category Locales
 * @summary Dutch locale.
 * @language Dutch
 * @iso-639-2 nld
 * @author Jorik Tangelder [@jtangelder](https://github.com/jtangelder)
 * @author Ruben Stolk [@rubenstolk](https://github.com/rubenstolk)
 * @author Lode Vanhove [@bitcrumb](https://github.com/bitcrumb)
 * @author Edo Rivai [@edorivai](https://github.com/edorivai)
 * @author Niels Keurentjes [@curry684](https://github.com/curry684)
 * @author Stefan Vermaas [@stefanvermaas](https://github.com/stefanvermaas)
 */
const router_nl = {
  code: "nl",
  formatDistance: router_nl_lib_formatDistance_formatDistance,
  formatLong: router_nl_lib_formatLong_formatLong,
  formatRelative: router_nl_lib_formatRelative_formatRelative,
  localize: router_nl_lib_localize_localize,
  match: router_nl_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_nl = ((/* unused pure expression or super */ null && (router_nl)));

;// ./node_modules/date-fns/locale/nl-BE/_lib/formatDistance.mjs
const router_nl_BE_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "minder dan een seconde",
    other: "minder dan {{count}} seconden",
  },

  xSeconds: {
    one: "1 seconde",
    other: "{{count}} seconden",
  },

  halfAMinute: "een halve minuut",

  lessThanXMinutes: {
    one: "minder dan een minuut",
    other: "minder dan {{count}} minuten",
  },

  xMinutes: {
    one: "een minuut",
    other: "{{count}} minuten",
  },

  aboutXHours: {
    one: "ongeveer 1 uur",
    other: "ongeveer {{count}} uur",
  },

  xHours: {
    one: "1 uur",
    other: "{{count}} uur",
  },

  xDays: {
    one: "1 dag",
    other: "{{count}} dagen",
  },

  aboutXWeeks: {
    one: "ongeveer 1 week",
    other: "ongeveer {{count}} weken",
  },

  xWeeks: {
    one: "1 week",
    other: "{{count}} weken",
  },

  aboutXMonths: {
    one: "ongeveer 1 maand",
    other: "ongeveer {{count}} maanden",
  },

  xMonths: {
    one: "1 maand",
    other: "{{count}} maanden",
  },

  aboutXYears: {
    one: "ongeveer 1 jaar",
    other: "ongeveer {{count}} jaar",
  },

  xYears: {
    one: "1 jaar",
    other: "{{count}} jaar",
  },

  overXYears: {
    one: "meer dan 1 jaar",
    other: "meer dan {{count}} jaar",
  },

  almostXYears: {
    one: "bijna 1 jaar",
    other: "bijna {{count}} jaar",
  },
};

const router_nl_BE_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_nl_BE_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "over " + result;
    } else {
      return result + " geleden";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/nl-BE/_lib/formatLong.mjs


const router_nl_BE_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd.MM.y",
};

const router_nl_BE_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_nl_BE_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'om' {{time}}",
  long: "{{date}} 'om' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_nl_BE_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_nl_BE_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_nl_BE_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_nl_BE_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/nl-BE/_lib/formatRelative.mjs
const router_nl_BE_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'vorige' eeee 'om' p",
  yesterday: "'gisteren om' p",
  today: "'vandaag om' p",
  tomorrow: "'morgen om' p",
  nextWeek: "eeee 'om' p",
  other: "P",
};

const router_nl_BE_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_nl_BE_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/nl-BE/_lib/localize.mjs


const router_nl_BE_lib_localize_eraValues = {
  narrow: ["v.C.", "n.C."],
  abbreviated: ["v.Chr.", "n.Chr."],
  wide: ["voor Christus", "na Christus"],
};

const router_nl_BE_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["K1", "K2", "K3", "K4"],
  wide: ["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"],
};

const router_nl_BE_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "jan.",
    "feb.",
    "mrt.",
    "apr.",
    "mei",
    "jun.",
    "jul.",
    "aug.",
    "sep.",
    "okt.",
    "nov.",
    "dec.",
  ],

  wide: [
    "januari",
    "februari",
    "maart",
    "april",
    "mei",
    "juni",
    "juli",
    "augustus",
    "september",
    "oktober",
    "november",
    "december",
  ],
};

const router_nl_BE_lib_localize_dayValues = {
  narrow: ["Z", "M", "D", "W", "D", "V", "Z"],
  short: ["zo", "ma", "di", "wo", "do", "vr", "za"],
  abbreviated: ["zon", "maa", "din", "woe", "don", "vri", "zat"],
  wide: [
    "zondag",
    "maandag",
    "dinsdag",
    "woensdag",
    "donderdag",
    "vrijdag",
    "zaterdag",
  ],
};

const router_nl_BE_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "het middag",
    morning: "'s ochtends",
    afternoon: "'s namiddags",
    evening: "'s avonds",
    night: "'s nachts",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "het middag",
    morning: "'s ochtends",
    afternoon: "'s namiddags",
    evening: "'s avonds",
    night: "'s nachts",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "middernacht",
    noon: "het middag",
    morning: "'s ochtends",
    afternoon: "'s namiddags",
    evening: "'s avonds",
    night: "'s nachts",
  },
};

const router_nl_BE_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "e";
};

const router_nl_BE_lib_localize_localize = {
  ordinalNumber: router_nl_BE_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_nl_BE_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_nl_BE_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_nl_BE_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_nl_BE_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_nl_BE_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/nl-BE/_lib/match.mjs



const router_nl_BE_lib_match_matchOrdinalNumberPattern = /^(\d+)e?/i;
const router_nl_BE_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_nl_BE_lib_match_matchEraPatterns = {
  narrow: /^([vn]\.? ?C\.?)/,
  abbreviated: /^([vn]\. ?Chr\.?)/,
  wide: /^((voor|na) Christus)/,
};
const router_nl_BE_lib_match_parseEraPatterns = {
  any: [/^v/, /^n/],
};

const router_nl_BE_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^K[1234]/i,
  wide: /^[1234]e kwartaal/i,
};
const router_nl_BE_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_nl_BE_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
  wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i,
};
const router_nl_BE_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^jan/i,
    /^feb/i,
    /^m(r|a)/i,
    /^apr/i,
    /^mei/i,
    /^jun/i,
    /^jul/i,
    /^aug/i,
    /^sep/i,
    /^okt/i,
    /^nov/i,
    /^dec/i,
  ],
};

const router_nl_BE_lib_match_matchDayPatterns = {
  narrow: /^[zmdwv]/i,
  short: /^(zo|ma|di|wo|do|vr|za)/i,
  abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,
  wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i,
};
const router_nl_BE_lib_match_parseDayPatterns = {
  narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],
  any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i],
};

const router_nl_BE_lib_match_matchDayPeriodPatterns = {
  any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i,
};
const router_nl_BE_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^am/i,
    pm: /^pm/i,
    midnight: /^middernacht/i,
    noon: /^het middaguur/i,
    morning: /ochtend/i,
    afternoon: /middag/i,
    evening: /avond/i,
    night: /nacht/i,
  },
};

const router_nl_BE_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_nl_BE_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_nl_BE_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_nl_BE_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nl_BE_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_nl_BE_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nl_BE_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_nl_BE_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nl_BE_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_nl_BE_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nl_BE_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_nl_BE_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_nl_BE_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/nl-BE.mjs






/**
 * @category Locales
 * @summary Dutch locale.
 * @language Dutch
 * @iso-639-2 nld
 * @author Jorik Tangelder [@jtangelder](https://github.com/jtangelder)
 * @author Ruben Stolk [@rubenstolk](https://github.com/rubenstolk)
 * @author Lode Vanhove [@bitcrumb](https://github.com/bitcrumb)
 * @author Alex Hoeing [@dcbn](https://github.com/dcbn)
 */
const router_nlBE = {
  code: "nl-BE",
  formatDistance: router_nl_BE_lib_formatDistance_formatDistance,
  formatLong: router_nl_BE_lib_formatLong_formatLong,
  formatRelative: router_nl_BE_lib_formatRelative_formatRelative,
  localize: router_nl_BE_lib_localize_localize,
  match: router_nl_BE_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_nl_BE = ((/* unused pure expression or super */ null && (router_nlBE)));

;// ./node_modules/date-fns/locale/nn/_lib/formatDistance.mjs
const router_nn_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "mindre enn eitt sekund",
    other: "mindre enn {{count}} sekund",
  },

  xSeconds: {
    one: "eitt sekund",
    other: "{{count}} sekund",
  },

  halfAMinute: "eit halvt minutt",

  lessThanXMinutes: {
    one: "mindre enn eitt minutt",
    other: "mindre enn {{count}} minutt",
  },

  xMinutes: {
    one: "eitt minutt",
    other: "{{count}} minutt",
  },

  aboutXHours: {
    one: "omtrent ein time",
    other: "omtrent {{count}} timar",
  },

  xHours: {
    one: "ein time",
    other: "{{count}} timar",
  },

  xDays: {
    one: "ein dag",
    other: "{{count}} dagar",
  },

  aboutXWeeks: {
    one: "omtrent ei veke",
    other: "omtrent {{count}} veker",
  },

  xWeeks: {
    one: "ei veke",
    other: "{{count}} veker",
  },

  aboutXMonths: {
    one: "omtrent ein månad",
    other: "omtrent {{count}} månader",
  },

  xMonths: {
    one: "ein månad",
    other: "{{count}} månader",
  },

  aboutXYears: {
    one: "omtrent eitt år",
    other: "omtrent {{count}} år",
  },

  xYears: {
    one: "eitt år",
    other: "{{count}} år",
  },

  overXYears: {
    one: "over eitt år",
    other: "over {{count}} år",
  },

  almostXYears: {
    one: "nesten eitt år",
    other: "nesten {{count}} år",
  },
};

const router_wordMapping = [
  "null",
  "ein",
  "to",
  "tre",
  "fire",
  "fem",
  "seks",
  "sju",
  "åtte",
  "ni",
  "ti",
  "elleve",
  "tolv",
];

const router_nn_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_nn_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace(
      "{{count}}",
      count < 13 ? router_wordMapping[count] : String(count),
    );
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "om " + result;
    } else {
      return result + " sidan";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/nn/_lib/formatLong.mjs


const router_nn_lib_formatLong_dateFormats = {
  full: "EEEE d. MMMM y",
  long: "d. MMMM y",
  medium: "d. MMM y",
  short: "dd.MM.y",
};

const router_nn_lib_formatLong_timeFormats = {
  full: "'kl'. HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_nn_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'kl.' {{time}}",
  long: "{{date}} 'kl.' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_nn_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_nn_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_nn_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_nn_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/nn/_lib/formatRelative.mjs
const router_nn_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'førre' eeee 'kl.' p",
  yesterday: "'i går kl.' p",
  today: "'i dag kl.' p",
  tomorrow: "'i morgon kl.' p",
  nextWeek: "EEEE 'kl.' p",
  other: "P",
};

const router_nn_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_nn_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/nn/_lib/localize.mjs


const router_nn_lib_localize_eraValues = {
  narrow: ["f.Kr.", "e.Kr."],
  abbreviated: ["f.Kr.", "e.Kr."],
  wide: ["før Kristus", "etter Kristus"],
};

const router_nn_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
};

const router_nn_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "jan.",
    "feb.",
    "mars",
    "apr.",
    "mai",
    "juni",
    "juli",
    "aug.",
    "sep.",
    "okt.",
    "nov.",
    "des.",
  ],

  wide: [
    "januar",
    "februar",
    "mars",
    "april",
    "mai",
    "juni",
    "juli",
    "august",
    "september",
    "oktober",
    "november",
    "desember",
  ],
};

const router_nn_lib_localize_dayValues = {
  narrow: ["S", "M", "T", "O", "T", "F", "L"],
  short: ["su", "må", "ty", "on", "to", "fr", "lau"],
  abbreviated: ["sun", "mån", "tys", "ons", "tor", "fre", "laur"],
  wide: [
    "sundag",
    "måndag",
    "tysdag",
    "onsdag",
    "torsdag",
    "fredag",
    "laurdag",
  ],
};

const router_nn_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morg.",
    afternoon: "på etterm.",
    evening: "på kvelden",
    night: "på natta",
  },
  abbreviated: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morg.",
    afternoon: "på etterm.",
    evening: "på kvelden",
    night: "på natta",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morgonen",
    afternoon: "på ettermiddagen",
    evening: "på kvelden",
    night: "på natta",
  },
};

const router_nn_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_nn_lib_localize_localize = {
  ordinalNumber: router_nn_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_nn_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_nn_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_nn_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_nn_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_nn_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/nn/_lib/match.mjs



const router_nn_lib_match_matchOrdinalNumberPattern = /^(\d+)\.?/i;
const router_nn_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_nn_lib_match_matchEraPatterns = {
  narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
  abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
  wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i,
};
const router_nn_lib_match_parseEraPatterns = {
  any: [/^f/i, /^e/i],
};

const router_nn_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](\.)? kvartal/i,
};
const router_nn_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_nn_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i,
  wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i,
};
const router_nn_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^mai/i,
    /^jun/i,
    /^jul/i,
    /^aug/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_nn_lib_match_matchDayPatterns = {
  narrow: /^[smtofl]/i,
  short: /^(su|må|ty|on|to|fr|la)/i,
  abbreviated: /^(sun|mån|tys|ons|tor|fre|laur)/i,
  wide: /^(sundag|måndag|tysdag|onsdag|torsdag|fredag|laurdag)/i,
};
const router_nn_lib_match_parseDayPatterns = {
  any: [/^s/i, /^m/i, /^ty/i, /^o/i, /^to/i, /^f/i, /^l/i],
};

const router_nn_lib_match_matchDayPeriodPatterns = {
  narrow: /^(midnatt|middag|(på) (morgonen|ettermiddagen|kvelden|natta)|[ap])/i,
  any: /^([ap]\.?\s?m\.?|midnatt|middag|(på) (morgonen|ettermiddagen|kvelden|natta))/i,
};
const router_nn_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a(\.?\s?m\.?)?$/i,
    pm: /^p(\.?\s?m\.?)?$/i,
    midnight: /^midn/i,
    noon: /^midd/i,
    morning: /morgon/i,
    afternoon: /ettermiddag/i,
    evening: /kveld/i,
    night: /natt/i,
  },
};

const router_nn_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_nn_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_nn_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_nn_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nn_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_nn_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nn_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_nn_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nn_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_nn_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_nn_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_nn_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_nn_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/nn.mjs






/**
 * @category Locales
 * @summary Norwegian Nynorsk locale.
 * @language Norwegian Nynorsk
 * @iso-639-2 nno
 * @author Mats Byrkjeland [@draperunner](https://github.com/draperunner)
 */
const router_nn = {
  code: "nn",
  formatDistance: router_nn_lib_formatDistance_formatDistance,
  formatLong: router_nn_lib_formatLong_formatLong,
  formatRelative: router_nn_lib_formatRelative_formatRelative,
  localize: router_nn_lib_localize_localize,
  match: router_nn_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_nn = ((/* unused pure expression or super */ null && (router_nn)));

;// ./node_modules/date-fns/locale/oc/_lib/formatDistance.mjs
const router_oc_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "mens d’una segonda",
    other: "mens de {{count}} segondas",
  },

  xSeconds: {
    one: "1 segonda",
    other: "{{count}} segondas",
  },

  halfAMinute: "30 segondas",

  lessThanXMinutes: {
    one: "mens d’una minuta",
    other: "mens de {{count}} minutas",
  },

  xMinutes: {
    one: "1 minuta",
    other: "{{count}} minutas",
  },

  aboutXHours: {
    one: "environ 1 ora",
    other: "environ {{count}} oras",
  },

  xHours: {
    one: "1 ora",
    other: "{{count}} oras",
  },

  xDays: {
    one: "1 jorn",
    other: "{{count}} jorns",
  },

  aboutXWeeks: {
    one: "environ 1 setmana",
    other: "environ {{count}} setmanas",
  },

  xWeeks: {
    one: "1 setmana",
    other: "{{count}} setmanas",
  },

  aboutXMonths: {
    one: "environ 1 mes",
    other: "environ {{count}} meses",
  },

  xMonths: {
    one: "1 mes",
    other: "{{count}} meses",
  },

  aboutXYears: {
    one: "environ 1 an",
    other: "environ {{count}} ans",
  },

  xYears: {
    one: "1 an",
    other: "{{count}} ans",
  },

  overXYears: {
    one: "mai d’un an",
    other: "mai de {{count}} ans",
  },

  almostXYears: {
    one: "gaireben un an",
    other: "gaireben {{count}} ans",
  },
};

const router_oc_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_oc_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "d’aquí " + result;
    } else {
      return "fa " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/oc/_lib/formatLong.mjs


const router_oc_lib_formatLong_dateFormats = {
  full: "EEEE d 'de' MMMM y",
  long: "d 'de' MMMM y",
  medium: "d MMM y",
  short: "dd/MM/y",
};

const router_oc_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_oc_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'a' {{time}}",
  long: "{{date}} 'a' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_oc_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_oc_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_oc_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_oc_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/oc/_lib/formatRelative.mjs
const router_oc_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'passat a' p",
  yesterday: "'ièr a' p",
  today: "'uèi a' p",
  tomorrow: "'deman a' p",
  nextWeek: "eeee 'a' p",
  other: "P",
};

const router_oc_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_oc_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/oc/_lib/localize.mjs


const router_oc_lib_localize_eraValues = {
  narrow: ["ab. J.C.", "apr. J.C."],
  abbreviated: ["ab. J.C.", "apr. J.C."],
  wide: ["abans Jèsus-Crist", "après Jèsus-Crist"],
};

const router_oc_lib_localize_quarterValues = {
  narrow: ["T1", "T2", "T3", "T4"],
  abbreviated: ["1èr trim.", "2nd trim.", "3en trim.", "4en trim."],
  wide: ["1èr trimèstre", "2nd trimèstre", "3en trimèstre", "4en trimèstre"],
};

const router_oc_lib_localize_monthValues = {
  narrow: [
    "GN",
    "FB",
    "MÇ",
    "AB",
    "MA",
    "JN",
    "JL",
    "AG",
    "ST",
    "OC",
    "NV",
    "DC",
  ],

  abbreviated: [
    "gen.",
    "febr.",
    "març",
    "abr.",
    "mai",
    "junh",
    "jul.",
    "ag.",
    "set.",
    "oct.",
    "nov.",
    "dec.",
  ],

  wide: [
    "genièr",
    "febrièr",
    "març",
    "abril",
    "mai",
    "junh",
    "julhet",
    "agost",
    "setembre",
    "octòbre",
    "novembre",
    "decembre",
  ],
};

const router_oc_lib_localize_dayValues = {
  narrow: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."],
  short: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."],
  abbreviated: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."],
  wide: [
    "dimenge",
    "diluns",
    "dimars",
    "dimècres",
    "dijòus",
    "divendres",
    "dissabte",
  ],
};

const router_oc_lib_localize_dayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "mièjanuèch",
    noon: "miègjorn",
    morning: "matin",
    afternoon: "aprèp-miègjorn",
    evening: "vèspre",
    night: "nuèch",
  },
  abbreviated: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "mièjanuèch",
    noon: "miègjorn",
    morning: "matin",
    afternoon: "aprèp-miègjorn",
    evening: "vèspre",
    night: "nuèch",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "mièjanuèch",
    noon: "miègjorn",
    morning: "matin",
    afternoon: "aprèp-miègjorn",
    evening: "vèspre",
    night: "nuèch",
  },
};

const router_oc_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "mièjanuèch",
    noon: "miègjorn",
    morning: "del matin",
    afternoon: "de l’aprèp-miègjorn",
    evening: "del ser",
    night: "de la nuèch",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "mièjanuèch",
    noon: "miègjorn",
    morning: "del matin",
    afternoon: "de l’aprèp-miègjorn",
    evening: "del ser",
    night: "de la nuèch",
  },
  wide: {
    am: "ante meridiem",
    pm: "post meridiem",
    midnight: "mièjanuèch",
    noon: "miègjorn",
    morning: "del matin",
    afternoon: "de l’aprèp-miègjorn",
    evening: "del ser",
    night: "de la nuèch",
  },
};

const router_oc_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = options?.unit;
  let ordinal;

  switch (number) {
    case 1:
      ordinal = "èr";
      break;
    case 2:
      ordinal = "nd";
      break;
    default:
      ordinal = "en";
  }

  // feminine for year, week, hour, minute, second
  if (
    unit === "year" ||
    unit === "week" ||
    unit === "hour" ||
    unit === "minute" ||
    unit === "second"
  ) {
    ordinal += "a";
  }

  return number + ordinal;
};

const router_oc_lib_localize_localize = {
  ordinalNumber: router_oc_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_oc_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_oc_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_oc_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_oc_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_oc_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_oc_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/oc/_lib/match.mjs



const router_oc_lib_match_matchOrdinalNumberPattern = /^(\d+)(èr|nd|en)?[a]?/i;
const router_oc_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_oc_lib_match_matchEraPatterns = {
  narrow: /^(ab\.J\.C|apr\.J\.C|apr\.J\.-C)/i,
  abbreviated: /^(ab\.J\.-C|ab\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,
  wide: /^(abans Jèsus-Crist|après Jèsus-Crist)/i,
};
const router_oc_lib_match_parseEraPatterns = {
  any: [/^ab/i, /^ap/i],
};

const router_oc_lib_match_matchQuarterPatterns = {
  narrow: /^T[1234]/i,
  abbreviated: /^[1234](èr|nd|en)? trim\.?/i,
  wide: /^[1234](èr|nd|en)? trimèstre/i,
};
const router_oc_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_oc_lib_match_matchMonthPatterns = {
  narrow: /^(GN|FB|MÇ|AB|MA|JN|JL|AG|ST|OC|NV|DC)/i,
  abbreviated: /^(gen|febr|març|abr|mai|junh|jul|ag|set|oct|nov|dec)\.?/i,
  wide: /^(genièr|febrièr|març|abril|mai|junh|julhet|agost|setembre|octòbre|novembre|decembre)/i,
};
const router_oc_lib_match_parseMonthPatterns = {
  any: [
    /^g/i,
    /^f/i,
    /^ma[r?]|MÇ/i,
    /^ab/i,
    /^ma[i?]/i,
    /^ju[n?]|JN/i,
    /^ju[l?]|JL/i,
    /^ag/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_oc_lib_match_matchDayPatterns = {
  narrow: /^d[glmcjvs]\.?/i,
  short: /^d[glmcjvs]\.?/i,
  abbreviated: /^d[glmcjvs]\.?/i,
  wide: /^(dimenge|diluns|dimars|dimècres|dijòus|divendres|dissabte)/i,
};
const router_oc_lib_match_parseDayPatterns = {
  narrow: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],
  short: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],
  abbreviated: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],

  any: [
    /^dg|dime/i,
    /^dl|dil/i,
    /^dm|dima/i,
    /^dc|dimè/i,
    /^dj|dij/i,
    /^dv|div/i,
    /^ds|dis/i,
  ],
};

const router_oc_lib_match_matchDayPeriodPatterns = {
  any: /(^(a\.?m|p\.?m))|(ante meridiem|post meridiem)|((del |de la |de l’)(matin|aprèp-miègjorn|vèspre|ser|nuèch))/i,
};
const router_oc_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /(^a)|ante meridiem/i,
    pm: /(^p)|post meridiem/i,
    midnight: /^mièj/i,
    noon: /^mièg/i,
    morning: /matin/i,
    afternoon: /aprèp-miègjorn/i,
    evening: /vèspre|ser/i,
    night: /nuèch/i,
  },
};

const router_oc_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_oc_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_oc_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_oc_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_oc_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_oc_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_oc_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_oc_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_oc_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_oc_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_oc_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_oc_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_oc_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/oc.mjs






/**
 * @category Locales
 * @summary Occitan locale.
 * @language Occitan
 * @iso-639-2 oci
 * @author Quentin PAGÈS
 */
const router_oc = {
  code: "oc",
  formatDistance: router_oc_lib_formatDistance_formatDistance,
  formatLong: router_oc_lib_formatLong_formatLong,
  formatRelative: router_oc_lib_formatRelative_formatRelative,
  localize: router_oc_lib_localize_localize,
  match: router_oc_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_oc = ((/* unused pure expression or super */ null && (router_oc)));

;// ./node_modules/date-fns/locale/pl/_lib/formatDistance.mjs
const router_pl_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      regular: "mniej niż sekunda",
      past: "mniej niż sekundę",
      future: "mniej niż sekundę",
    },
    twoFour: "mniej niż {{count}} sekundy",
    other: "mniej niż {{count}} sekund",
  },

  xSeconds: {
    one: {
      regular: "sekunda",
      past: "sekundę",
      future: "sekundę",
    },
    twoFour: "{{count}} sekundy",
    other: "{{count}} sekund",
  },

  halfAMinute: {
    one: "pół minuty",
    twoFour: "pół minuty",
    other: "pół minuty",
  },

  lessThanXMinutes: {
    one: {
      regular: "mniej niż minuta",
      past: "mniej niż minutę",
      future: "mniej niż minutę",
    },
    twoFour: "mniej niż {{count}} minuty",
    other: "mniej niż {{count}} minut",
  },

  xMinutes: {
    one: {
      regular: "minuta",
      past: "minutę",
      future: "minutę",
    },
    twoFour: "{{count}} minuty",
    other: "{{count}} minut",
  },

  aboutXHours: {
    one: {
      regular: "około godziny",
      past: "około godziny",
      future: "około godzinę",
    },
    twoFour: "około {{count}} godziny",
    other: "około {{count}} godzin",
  },

  xHours: {
    one: {
      regular: "godzina",
      past: "godzinę",
      future: "godzinę",
    },
    twoFour: "{{count}} godziny",
    other: "{{count}} godzin",
  },

  xDays: {
    one: {
      regular: "dzień",
      past: "dzień",
      future: "1 dzień",
    },
    twoFour: "{{count}} dni",
    other: "{{count}} dni",
  },

  aboutXWeeks: {
    one: "około tygodnia",
    twoFour: "około {{count}} tygodni",
    other: "około {{count}} tygodni",
  },

  xWeeks: {
    one: "tydzień",
    twoFour: "{{count}} tygodnie",
    other: "{{count}} tygodni",
  },

  aboutXMonths: {
    one: "około miesiąc",
    twoFour: "około {{count}} miesiące",
    other: "około {{count}} miesięcy",
  },

  xMonths: {
    one: "miesiąc",
    twoFour: "{{count}} miesiące",
    other: "{{count}} miesięcy",
  },

  aboutXYears: {
    one: "około rok",
    twoFour: "około {{count}} lata",
    other: "około {{count}} lat",
  },

  xYears: {
    one: "rok",
    twoFour: "{{count}} lata",
    other: "{{count}} lat",
  },

  overXYears: {
    one: "ponad rok",
    twoFour: "ponad {{count}} lata",
    other: "ponad {{count}} lat",
  },

  almostXYears: {
    one: "prawie rok",
    twoFour: "prawie {{count}} lata",
    other: "prawie {{count}} lat",
  },
};

function router_declensionGroup(scheme, count) {
  if (count === 1) {
    return scheme.one;
  }

  const rem100 = count % 100;

  // ends with 11-20
  if (rem100 <= 20 && rem100 > 10) {
    return scheme.other;
  }

  const rem10 = rem100 % 10;

  // ends with 2, 3, 4
  if (rem10 >= 2 && rem10 <= 4) {
    return scheme.twoFour;
  }

  return scheme.other;
}

function router_pl_lib_formatDistance_declension(scheme, count, time) {
  const group = router_declensionGroup(scheme, count);
  const finalText = typeof group === "string" ? group : group[time];
  return finalText.replace("{{count}}", String(count));
}

const router_pl_lib_formatDistance_formatDistance = (token, count, options) => {
  const scheme = router_pl_lib_formatDistance_formatDistanceLocale[token];
  if (!options?.addSuffix) {
    return router_pl_lib_formatDistance_declension(scheme, count, "regular");
  }

  if (options.comparison && options.comparison > 0) {
    return "za " + router_pl_lib_formatDistance_declension(scheme, count, "future");
  } else {
    return router_pl_lib_formatDistance_declension(scheme, count, "past") + " temu";
  }
};

;// ./node_modules/date-fns/locale/pl/_lib/formatLong.mjs


const router_pl_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM y",
  long: "do MMMM y",
  medium: "do MMM y",
  short: "dd.MM.y",
};

const router_pl_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_pl_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_pl_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_pl_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_pl_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_pl_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/pl/_lib/formatRelative.mjs


const router_adjectivesLastWeek = {
  masculine: "ostatni",
  feminine: "ostatnia",
};

const router_adjectivesThisWeek = {
  masculine: "ten",
  feminine: "ta",
};

const router_adjectivesNextWeek = {
  masculine: "następny",
  feminine: "następna",
};

const router_dayGrammaticalGender = {
  0: "feminine",
  1: "masculine",
  2: "masculine",
  3: "feminine",
  4: "masculine",
  5: "masculine",
  6: "feminine",
};

function router_dayAndTimeWithAdjective(token, date, baseDate, options) {
  let adjectives;
  if (router_isSameWeek(date, baseDate, options)) {
    adjectives = router_adjectivesThisWeek;
  } else if (token === "lastWeek") {
    adjectives = router_adjectivesLastWeek;
  } else if (token === "nextWeek") {
    adjectives = router_adjectivesNextWeek;
  } else {
    throw new Error(`Cannot determine adjectives for token ${token}`);
  }

  const day = date.getDay();
  const grammaticalGender = router_dayGrammaticalGender[day];

  const adjective = adjectives[grammaticalGender];

  return `'${adjective}' eeee 'o' p`;
}

const router_pl_lib_formatRelative_formatRelativeLocale = {
  lastWeek: router_dayAndTimeWithAdjective,
  yesterday: "'wczoraj o' p",
  today: "'dzisiaj o' p",
  tomorrow: "'jutro o' p",
  nextWeek: router_dayAndTimeWithAdjective,
  other: "P",
};

const router_pl_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_pl_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(token, date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/pl/_lib/localize.mjs


const router_pl_lib_localize_eraValues = {
  narrow: ["p.n.e.", "n.e."],
  abbreviated: ["p.n.e.", "n.e."],
  wide: ["przed naszą erą", "naszej ery"],
};

const router_pl_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["I kw.", "II kw.", "III kw.", "IV kw."],
  wide: ["I kwartał", "II kwartał", "III kwartał", "IV kwartał"],
};

const router_pl_lib_localize_monthValues = {
  narrow: ["S", "L", "M", "K", "M", "C", "L", "S", "W", "P", "L", "G"],
  abbreviated: [
    "sty",
    "lut",
    "mar",
    "kwi",
    "maj",
    "cze",
    "lip",
    "sie",
    "wrz",
    "paź",
    "lis",
    "gru",
  ],

  wide: [
    "styczeń",
    "luty",
    "marzec",
    "kwiecień",
    "maj",
    "czerwiec",
    "lipiec",
    "sierpień",
    "wrzesień",
    "październik",
    "listopad",
    "grudzień",
  ],
};
const router_monthFormattingValues = {
  narrow: ["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"],
  abbreviated: [
    "sty",
    "lut",
    "mar",
    "kwi",
    "maj",
    "cze",
    "lip",
    "sie",
    "wrz",
    "paź",
    "lis",
    "gru",
  ],

  wide: [
    "stycznia",
    "lutego",
    "marca",
    "kwietnia",
    "maja",
    "czerwca",
    "lipca",
    "sierpnia",
    "września",
    "października",
    "listopada",
    "grudnia",
  ],
};

const router_pl_lib_localize_dayValues = {
  narrow: ["N", "P", "W", "Ś", "C", "P", "S"],
  short: ["nie", "pon", "wto", "śro", "czw", "pią", "sob"],
  abbreviated: ["niedz.", "pon.", "wt.", "śr.", "czw.", "pt.", "sob."],
  wide: [
    "niedziela",
    "poniedziałek",
    "wtorek",
    "środa",
    "czwartek",
    "piątek",
    "sobota",
  ],
};
const router_dayFormattingValues = {
  narrow: ["n", "p", "w", "ś", "c", "p", "s"],
  short: ["nie", "pon", "wto", "śro", "czw", "pią", "sob"],
  abbreviated: ["niedz.", "pon.", "wt.", "śr.", "czw.", "pt.", "sob."],
  wide: [
    "niedziela",
    "poniedziałek",
    "wtorek",
    "środa",
    "czwartek",
    "piątek",
    "sobota",
  ],
};

const router_pl_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "półn.",
    noon: "poł",
    morning: "rano",
    afternoon: "popoł.",
    evening: "wiecz.",
    night: "noc",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "północ",
    noon: "południe",
    morning: "rano",
    afternoon: "popołudnie",
    evening: "wieczór",
    night: "noc",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "północ",
    noon: "południe",
    morning: "rano",
    afternoon: "popołudnie",
    evening: "wieczór",
    night: "noc",
  },
};

const router_dayPeriodFormattingValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "o półn.",
    noon: "w poł.",
    morning: "rano",
    afternoon: "po poł.",
    evening: "wiecz.",
    night: "w nocy",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "o północy",
    noon: "w południe",
    morning: "rano",
    afternoon: "po południu",
    evening: "wieczorem",
    night: "w nocy",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "o północy",
    noon: "w południe",
    morning: "rano",
    afternoon: "po południu",
    evening: "wieczorem",
    night: "w nocy",
  },
};

const router_pl_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_pl_lib_localize_localize = {
  ordinalNumber: router_pl_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_pl_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_pl_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_pl_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_monthFormattingValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_pl_lib_localize_dayValues,
    defaultWidth: "wide",
    formattingValues: router_dayFormattingValues,
    defaultFormattingWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_pl_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_dayPeriodFormattingValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/pl/_lib/match.mjs



const router_pl_lib_match_matchOrdinalNumberPattern = /^(\d+)?/i;
const router_pl_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_pl_lib_match_matchEraPatterns = {
  narrow: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i,
  abbreviated: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i,
  wide: /^(przed\s*nasz(ą|a)\s*er(ą|a)|naszej\s*ery)/i,
};
const router_pl_lib_match_parseEraPatterns = {
  any: [/^p/i, /^n/i],
};

const router_pl_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^(I|II|III|IV)\s*kw\.?/i,
  wide: /^(I|II|III|IV)\s*kwarta(ł|l)/i,
};
const router_pl_lib_match_parseQuarterPatterns = {
  narrow: [/1/i, /2/i, /3/i, /4/i],
  any: [/^I kw/i, /^II kw/i, /^III kw/i, /^IV kw/i],
};

const router_pl_lib_match_matchMonthPatterns = {
  narrow: /^[slmkcwpg]/i,
  abbreviated: /^(sty|lut|mar|kwi|maj|cze|lip|sie|wrz|pa(ź|z)|lis|gru)/i,
  wide: /^(stycznia|stycze(ń|n)|lutego|luty|marca|marzec|kwietnia|kwiecie(ń|n)|maja|maj|czerwca|czerwiec|lipca|lipiec|sierpnia|sierpie(ń|n)|wrze(ś|s)nia|wrzesie(ń|n)|pa(ź|z)dziernika|pa(ź|z)dziernik|listopada|listopad|grudnia|grudzie(ń|n))/i,
};
const router_pl_lib_match_parseMonthPatterns = {
  narrow: [
    /^s/i,
    /^l/i,
    /^m/i,
    /^k/i,
    /^m/i,
    /^c/i,
    /^l/i,
    /^s/i,
    /^w/i,
    /^p/i,
    /^l/i,
    /^g/i,
  ],

  any: [
    /^st/i,
    /^lu/i,
    /^mar/i,
    /^k/i,
    /^maj/i,
    /^c/i,
    /^lip/i,
    /^si/i,
    /^w/i,
    /^p/i,
    /^lis/i,
    /^g/i,
  ],
};

const router_pl_lib_match_matchDayPatterns = {
  narrow: /^[npwścs]/i,
  short: /^(nie|pon|wto|(ś|s)ro|czw|pi(ą|a)|sob)/i,
  abbreviated: /^(niedz|pon|wt|(ś|s)r|czw|pt|sob)\.?/i,
  wide: /^(niedziela|poniedzia(ł|l)ek|wtorek|(ś|s)roda|czwartek|pi(ą|a)tek|sobota)/i,
};
const router_pl_lib_match_parseDayPatterns = {
  narrow: [/^n/i, /^p/i, /^w/i, /^ś/i, /^c/i, /^p/i, /^s/i],
  abbreviated: [/^n/i, /^po/i, /^w/i, /^(ś|s)r/i, /^c/i, /^pt/i, /^so/i],

  any: [/^n/i, /^po/i, /^w/i, /^(ś|s)r/i, /^c/i, /^pi/i, /^so/i],
};

const router_pl_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(^a$|^p$|pó(ł|l)n\.?|o\s*pó(ł|l)n\.?|po(ł|l)\.?|w\s*po(ł|l)\.?|po\s*po(ł|l)\.?|rano|wiecz\.?|noc|w\s*nocy)/i,
  any: /^(am|pm|pó(ł|l)noc|o\s*pó(ł|l)nocy|po(ł|l)udnie|w\s*po(ł|l)udnie|popo(ł|l)udnie|po\s*po(ł|l)udniu|rano|wieczór|wieczorem|noc|w\s*nocy)/i,
};
const router_pl_lib_match_parseDayPeriodPatterns = {
  narrow: {
    am: /^a$/i,
    pm: /^p$/i,
    midnight: /pó(ł|l)n/i,
    noon: /po(ł|l)/i,
    morning: /rano/i,
    afternoon: /po\s*po(ł|l)/i,
    evening: /wiecz/i,
    night: /noc/i,
  },
  any: {
    am: /^am/i,
    pm: /^pm/i,
    midnight: /pó(ł|l)n/i,
    noon: /po(ł|l)/i,
    morning: /rano/i,
    afternoon: /po\s*po(ł|l)/i,
    evening: /wiecz/i,
    night: /noc/i,
  },
};

const router_pl_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_pl_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_pl_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_pl_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pl_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_pl_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pl_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_pl_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pl_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_pl_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pl_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_pl_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_pl_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/pl.mjs






/**
 * @category Locales
 * @summary Polish locale.
 * @language Polish
 * @iso-639-2 pol
 * @author Mateusz Derks [@ertrzyiks](https://github.com/ertrzyiks)
 * @author Just RAG [@justrag](https://github.com/justrag)
 * @author Mikolaj Grzyb [@mikolajgrzyb](https://github.com/mikolajgrzyb)
 * @author Mateusz Tokarski [@mutisz](https://github.com/mutisz)
 */
const router_pl = {
  code: "pl",
  formatDistance: router_pl_lib_formatDistance_formatDistance,
  formatLong: router_pl_lib_formatLong_formatLong,
  formatRelative: router_pl_lib_formatRelative_formatRelative,
  localize: router_pl_lib_localize_localize,
  match: router_pl_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_pl = ((/* unused pure expression or super */ null && (router_pl)));

;// ./node_modules/date-fns/locale/pt/_lib/formatDistance.mjs
const router_pt_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "menos de um segundo",
    other: "menos de {{count}} segundos",
  },

  xSeconds: {
    one: "1 segundo",
    other: "{{count}} segundos",
  },

  halfAMinute: "meio minuto",

  lessThanXMinutes: {
    one: "menos de um minuto",
    other: "menos de {{count}} minutos",
  },

  xMinutes: {
    one: "1 minuto",
    other: "{{count}} minutos",
  },

  aboutXHours: {
    one: "aproximadamente 1 hora",
    other: "aproximadamente {{count}} horas",
  },

  xHours: {
    one: "1 hora",
    other: "{{count}} horas",
  },

  xDays: {
    one: "1 dia",
    other: "{{count}} dias",
  },

  aboutXWeeks: {
    one: "aproximadamente 1 semana",
    other: "aproximadamente {{count}} semanas",
  },

  xWeeks: {
    one: "1 semana",
    other: "{{count}} semanas",
  },

  aboutXMonths: {
    one: "aproximadamente 1 mês",
    other: "aproximadamente {{count}} meses",
  },

  xMonths: {
    one: "1 mês",
    other: "{{count}} meses",
  },

  aboutXYears: {
    one: "aproximadamente 1 ano",
    other: "aproximadamente {{count}} anos",
  },

  xYears: {
    one: "1 ano",
    other: "{{count}} anos",
  },

  overXYears: {
    one: "mais de 1 ano",
    other: "mais de {{count}} anos",
  },

  almostXYears: {
    one: "quase 1 ano",
    other: "quase {{count}} anos",
  },
};

const router_pt_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_pt_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "daqui a " + result;
    } else {
      return "há " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/pt/_lib/formatLong.mjs


const router_pt_lib_formatLong_dateFormats = {
  full: "EEEE, d 'de' MMMM 'de' y",
  long: "d 'de' MMMM 'de' y",
  medium: "d 'de' MMM 'de' y",
  short: "dd/MM/y",
};

const router_pt_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_pt_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'às' {{time}}",
  long: "{{date}} 'às' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_pt_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_pt_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_pt_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_pt_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/pt/_lib/formatRelative.mjs
const router_pt_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    const weekday = date.getDay();
    const last = weekday === 0 || weekday === 6 ? "último" : "última";
    return "'" + last + "' eeee 'às' p";
  },
  yesterday: "'ontem às' p",
  today: "'hoje às' p",
  tomorrow: "'amanhã às' p",
  nextWeek: "eeee 'às' p",
  other: "P",
};

const router_pt_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  const format = router_pt_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/pt/_lib/localize.mjs


const router_pt_lib_localize_eraValues = {
  narrow: ["aC", "dC"],
  abbreviated: ["a.C.", "d.C."],
  wide: ["antes de Cristo", "depois de Cristo"],
};

const router_pt_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["T1", "T2", "T3", "T4"],
  wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"],
};

const router_pt_lib_localize_monthValues = {
  narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
  abbreviated: [
    "jan",
    "fev",
    "mar",
    "abr",
    "mai",
    "jun",
    "jul",
    "ago",
    "set",
    "out",
    "nov",
    "dez",
  ],

  wide: [
    "janeiro",
    "fevereiro",
    "março",
    "abril",
    "maio",
    "junho",
    "julho",
    "agosto",
    "setembro",
    "outubro",
    "novembro",
    "dezembro",
  ],
};

const router_pt_lib_localize_dayValues = {
  narrow: ["d", "s", "t", "q", "q", "s", "s"],
  short: ["dom", "seg", "ter", "qua", "qui", "sex", "sáb"],
  abbreviated: ["dom", "seg", "ter", "qua", "qui", "sex", "sáb"],
  wide: [
    "domingo",
    "segunda-feira",
    "terça-feira",
    "quarta-feira",
    "quinta-feira",
    "sexta-feira",
    "sábado",
  ],
};

const router_pt_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "manhã",
    afternoon: "tarde",
    evening: "noite",
    night: "madrugada",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "manhã",
    afternoon: "tarde",
    evening: "noite",
    night: "madrugada",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "manhã",
    afternoon: "tarde",
    evening: "noite",
    night: "madrugada",
  },
};

const router_pt_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "da manhã",
    afternoon: "da tarde",
    evening: "da noite",
    night: "da madrugada",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "da manhã",
    afternoon: "da tarde",
    evening: "da noite",
    night: "da madrugada",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "da manhã",
    afternoon: "da tarde",
    evening: "da noite",
    night: "da madrugada",
  },
};

const router_pt_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "º";
};

const router_pt_lib_localize_localize = {
  ordinalNumber: router_pt_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_pt_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_pt_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_pt_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_pt_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_pt_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_pt_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/pt/_lib/match.mjs



const router_pt_lib_match_matchOrdinalNumberPattern = /^(\d+)(º|ª)?/i;
const router_pt_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_pt_lib_match_matchEraPatterns = {
  narrow: /^(ac|dc|a|d)/i,
  abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
  wide: /^(antes de cristo|antes da era comum|depois de cristo|era comum)/i,
};
const router_pt_lib_match_parseEraPatterns = {
  any: [/^ac/i, /^dc/i],
  wide: [
    /^(antes de cristo|antes da era comum)/i,
    /^(depois de cristo|era comum)/i,
  ],
};

const router_pt_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^T[1234]/i,
  wide: /^[1234](º|ª)? trimestre/i,
};
const router_pt_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_pt_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,
  wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,
};
const router_pt_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ab/i,
    /^mai/i,
    /^jun/i,
    /^jul/i,
    /^ag/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_pt_lib_match_matchDayPatterns = {
  narrow: /^[dstq]/i,
  short: /^(dom|seg|ter|qua|qui|sex|s[áa]b)/i,
  abbreviated: /^(dom|seg|ter|qua|qui|sex|s[áa]b)/i,
  wide: /^(domingo|segunda-?\s?feira|terça-?\s?feira|quarta-?\s?feira|quinta-?\s?feira|sexta-?\s?feira|s[áa]bado)/i,
};
const router_pt_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^s/i, /^t/i, /^q/i, /^q/i, /^s/i, /^s/i],
  any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[áa]/i],
};

const router_pt_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(a|p|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i,
  any: /^([ap]\.?\s?m\.?|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i,
};
const router_pt_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^meia/i,
    noon: /^meio/i,
    morning: /manh[ãa]/i,
    afternoon: /tarde/i,
    evening: /noite/i,
    night: /madrugada/i,
  },
};

const router_pt_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_pt_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_pt_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_pt_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pt_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_pt_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pt_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_pt_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pt_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_pt_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pt_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_pt_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_pt_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/pt.mjs






/**
 * @category Locales
 * @summary Portuguese locale.
 * @language Portuguese
 * @iso-639-2 por
 * @author Dário Freire [@dfreire](https://github.com/dfreire)
 * @author Adrián de la Rosa [@adrm](https://github.com/adrm)
 */
const router_pt = {
  code: "pt",
  formatDistance: router_pt_lib_formatDistance_formatDistance,
  formatLong: router_pt_lib_formatLong_formatLong,
  formatRelative: router_pt_lib_formatRelative_formatRelative,
  localize: router_pt_lib_localize_localize,
  match: router_pt_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_pt = ((/* unused pure expression or super */ null && (router_pt)));

;// ./node_modules/date-fns/locale/pt-BR/_lib/formatDistance.mjs
const router_pt_BR_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "menos de um segundo",
    other: "menos de {{count}} segundos",
  },

  xSeconds: {
    one: "1 segundo",
    other: "{{count}} segundos",
  },

  halfAMinute: "meio minuto",

  lessThanXMinutes: {
    one: "menos de um minuto",
    other: "menos de {{count}} minutos",
  },

  xMinutes: {
    one: "1 minuto",
    other: "{{count}} minutos",
  },

  aboutXHours: {
    one: "cerca de 1 hora",
    other: "cerca de {{count}} horas",
  },

  xHours: {
    one: "1 hora",
    other: "{{count}} horas",
  },

  xDays: {
    one: "1 dia",
    other: "{{count}} dias",
  },

  aboutXWeeks: {
    one: "cerca de 1 semana",
    other: "cerca de {{count}} semanas",
  },

  xWeeks: {
    one: "1 semana",
    other: "{{count}} semanas",
  },

  aboutXMonths: {
    one: "cerca de 1 mês",
    other: "cerca de {{count}} meses",
  },

  xMonths: {
    one: "1 mês",
    other: "{{count}} meses",
  },

  aboutXYears: {
    one: "cerca de 1 ano",
    other: "cerca de {{count}} anos",
  },

  xYears: {
    one: "1 ano",
    other: "{{count}} anos",
  },

  overXYears: {
    one: "mais de 1 ano",
    other: "mais de {{count}} anos",
  },

  almostXYears: {
    one: "quase 1 ano",
    other: "quase {{count}} anos",
  },
};

const router_pt_BR_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_pt_BR_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "em " + result;
    } else {
      return "há " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/pt-BR/_lib/formatLong.mjs


const router_pt_BR_lib_formatLong_dateFormats = {
  full: "EEEE, d 'de' MMMM 'de' y",
  long: "d 'de' MMMM 'de' y",
  medium: "d MMM y",
  short: "dd/MM/yyyy",
};

const router_pt_BR_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_pt_BR_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'às' {{time}}",
  long: "{{date}} 'às' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_pt_BR_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_pt_BR_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_pt_BR_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_pt_BR_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/pt-BR/_lib/formatRelative.mjs
const router_pt_BR_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    const weekday = date.getDay();
    const last = weekday === 0 || weekday === 6 ? "último" : "última";
    return "'" + last + "' eeee 'às' p";
  },
  yesterday: "'ontem às' p",
  today: "'hoje às' p",
  tomorrow: "'amanhã às' p",
  nextWeek: "eeee 'às' p",
  other: "P",
};

const router_pt_BR_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  const format = router_pt_BR_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/pt-BR/_lib/localize.mjs


const router_pt_BR_lib_localize_eraValues = {
  narrow: ["AC", "DC"],
  abbreviated: ["AC", "DC"],
  wide: ["antes de cristo", "depois de cristo"],
};

const router_pt_BR_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["T1", "T2", "T3", "T4"],
  wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"],
};

const router_pt_BR_lib_localize_monthValues = {
  narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
  abbreviated: [
    "jan",
    "fev",
    "mar",
    "abr",
    "mai",
    "jun",
    "jul",
    "ago",
    "set",
    "out",
    "nov",
    "dez",
  ],

  wide: [
    "janeiro",
    "fevereiro",
    "março",
    "abril",
    "maio",
    "junho",
    "julho",
    "agosto",
    "setembro",
    "outubro",
    "novembro",
    "dezembro",
  ],
};

const router_pt_BR_lib_localize_dayValues = {
  narrow: ["D", "S", "T", "Q", "Q", "S", "S"],
  short: ["dom", "seg", "ter", "qua", "qui", "sex", "sab"],
  abbreviated: [
    "domingo",
    "segunda",
    "terça",
    "quarta",
    "quinta",
    "sexta",
    "sábado",
  ],

  wide: [
    "domingo",
    "segunda-feira",
    "terça-feira",
    "quarta-feira",
    "quinta-feira",
    "sexta-feira",
    "sábado",
  ],
};

const router_pt_BR_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mn",
    noon: "md",
    morning: "manhã",
    afternoon: "tarde",
    evening: "tarde",
    night: "noite",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "manhã",
    afternoon: "tarde",
    evening: "tarde",
    night: "noite",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "manhã",
    afternoon: "tarde",
    evening: "tarde",
    night: "noite",
  },
};

const router_pt_BR_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mn",
    noon: "md",
    morning: "da manhã",
    afternoon: "da tarde",
    evening: "da tarde",
    night: "da noite",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "da manhã",
    afternoon: "da tarde",
    evening: "da tarde",
    night: "da noite",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "meia-noite",
    noon: "meio-dia",
    morning: "da manhã",
    afternoon: "da tarde",
    evening: "da tarde",
    night: "da noite",
  },
};

const router_pt_BR_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);

  if (options?.unit === "week") {
    return number + "ª";
  }
  return number + "º";
};

const router_pt_BR_lib_localize_localize = {
  ordinalNumber: router_pt_BR_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_pt_BR_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_pt_BR_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_pt_BR_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_pt_BR_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_pt_BR_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_pt_BR_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/pt-BR/_lib/match.mjs



const router_pt_BR_lib_match_matchOrdinalNumberPattern = /^(\d+)[ºªo]?/i;
const router_pt_BR_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_pt_BR_lib_match_matchEraPatterns = {
  narrow: /^(ac|dc|a|d)/i,
  abbreviated: /^(a\.?\s?c\.?|d\.?\s?c\.?)/i,
  wide: /^(antes de cristo|depois de cristo)/i,
};
const router_pt_BR_lib_match_parseEraPatterns = {
  any: [/^ac/i, /^dc/i],
  wide: [/^antes de cristo/i, /^depois de cristo/i],
};

const router_pt_BR_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^T[1234]/i,
  wide: /^[1234](º)? trimestre/i,
};
const router_pt_BR_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_pt_BR_lib_match_matchMonthPatterns = {
  narrow: /^[jfmajsond]/i,
  abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,
  wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,
};
const router_pt_BR_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^fev/i,
    /^mar/i,
    /^abr/i,
    /^mai/i,
    /^jun/i,
    /^jul/i,
    /^ago/i,
    /^set/i,
    /^out/i,
    /^nov/i,
    /^dez/i,
  ],
};

const router_pt_BR_lib_match_matchDayPatterns = {
  narrow: /^(dom|[23456]ª?|s[aá]b)/i,
  short: /^(dom|[23456]ª?|s[aá]b)/i,
  abbreviated: /^(dom|seg|ter|qua|qui|sex|s[aá]b)/i,
  wide: /^(domingo|(segunda|ter[cç]a|quarta|quinta|sexta)([- ]feira)?|s[aá]bado)/i,
};
const router_pt_BR_lib_match_parseDayPatterns = {
  short: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i],
  narrow: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i],
  any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[aá]b/i],
};

const router_pt_BR_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mn|md|(da) (manhã|tarde|noite))/i,
  any: /^([ap]\.?\s?m\.?|meia[-\s]noite|meio[-\s]dia|(da) (manhã|tarde|noite))/i,
};
const router_pt_BR_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mn|^meia[-\s]noite/i,
    noon: /^md|^meio[-\s]dia/i,
    morning: /manhã/i,
    afternoon: /tarde/i,
    evening: /tarde/i,
    night: /noite/i,
  },
};

const router_pt_BR_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_pt_BR_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_pt_BR_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_pt_BR_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pt_BR_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_pt_BR_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pt_BR_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_pt_BR_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pt_BR_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_pt_BR_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_pt_BR_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_pt_BR_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_pt_BR_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/pt-BR.mjs






/**
 * @category Locales
 * @summary Portuguese locale (Brazil).
 * @language Portuguese
 * @iso-639-2 por
 * @author Lucas Duailibe [@duailibe](https://github.com/duailibe)
 * @author Yago Carballo [@yagocarballo](https://github.com/YagoCarballo)
 */
const router_ptBR = {
  code: "pt-BR",
  formatDistance: router_pt_BR_lib_formatDistance_formatDistance,
  formatLong: router_pt_BR_lib_formatLong_formatLong,
  formatRelative: router_pt_BR_lib_formatRelative_formatRelative,
  localize: router_pt_BR_lib_localize_localize,
  match: router_pt_BR_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_pt_BR = ((/* unused pure expression or super */ null && (router_ptBR)));

;// ./node_modules/date-fns/locale/ro/_lib/formatDistance.mjs
const router_ro_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "mai puțin de o secundă",
    other: "mai puțin de {{count}} secunde",
  },

  xSeconds: {
    one: "1 secundă",
    other: "{{count}} secunde",
  },

  halfAMinute: "jumătate de minut",

  lessThanXMinutes: {
    one: "mai puțin de un minut",
    other: "mai puțin de {{count}} minute",
  },

  xMinutes: {
    one: "1 minut",
    other: "{{count}} minute",
  },

  aboutXHours: {
    one: "circa 1 oră",
    other: "circa {{count}} ore",
  },

  xHours: {
    one: "1 oră",
    other: "{{count}} ore",
  },

  xDays: {
    one: "1 zi",
    other: "{{count}} zile",
  },

  aboutXWeeks: {
    one: "circa o săptămână",
    other: "circa {{count}} săptămâni",
  },

  xWeeks: {
    one: "1 săptămână",
    other: "{{count}} săptămâni",
  },

  aboutXMonths: {
    one: "circa 1 lună",
    other: "circa {{count}} luni",
  },

  xMonths: {
    one: "1 lună",
    other: "{{count}} luni",
  },

  aboutXYears: {
    one: "circa 1 an",
    other: "circa {{count}} ani",
  },

  xYears: {
    one: "1 an",
    other: "{{count}} ani",
  },

  overXYears: {
    one: "peste 1 an",
    other: "peste {{count}} ani",
  },

  almostXYears: {
    one: "aproape 1 an",
    other: "aproape {{count}} ani",
  },
};

const router_ro_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ro_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "în " + result;
    } else {
      return result + " în urmă";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ro/_lib/formatLong.mjs


const router_ro_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM yyyy",
  long: "d MMMM yyyy",
  medium: "d MMM yyyy",
  short: "dd.MM.yyyy",
};

const router_ro_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_ro_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'la' {{time}}",
  long: "{{date}} 'la' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ro_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ro_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ro_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ro_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ro/_lib/formatRelative.mjs
const router_ro_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'trecută la' p",
  yesterday: "'ieri la' p",
  today: "'astăzi la' p",
  tomorrow: "'mâine la' p",
  nextWeek: "eeee 'viitoare la' p",
  other: "P",
};

const router_ro_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ro_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ro/_lib/localize.mjs


const router_ro_lib_localize_eraValues = {
  narrow: ["Î", "D"],
  abbreviated: ["Î.d.C.", "D.C."],
  wide: ["Înainte de Cristos", "După Cristos"],
};

const router_ro_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["T1", "T2", "T3", "T4"],
  wide: [
    "primul trimestru",
    "al doilea trimestru",
    "al treilea trimestru",
    "al patrulea trimestru",
  ],
};

const router_ro_lib_localize_monthValues = {
  narrow: ["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"],
  abbreviated: [
    "ian",
    "feb",
    "mar",
    "apr",
    "mai",
    "iun",
    "iul",
    "aug",
    "sep",
    "oct",
    "noi",
    "dec",
  ],

  wide: [
    "ianuarie",
    "februarie",
    "martie",
    "aprilie",
    "mai",
    "iunie",
    "iulie",
    "august",
    "septembrie",
    "octombrie",
    "noiembrie",
    "decembrie",
  ],
};

const router_ro_lib_localize_dayValues = {
  narrow: ["d", "l", "m", "m", "j", "v", "s"],
  short: ["du", "lu", "ma", "mi", "jo", "vi", "sâ"],
  abbreviated: ["dum", "lun", "mar", "mie", "joi", "vin", "sâm"],
  wide: ["duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă"],
};

const router_ro_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mn",
    noon: "ami",
    morning: "dim",
    afternoon: "da",
    evening: "s",
    night: "n",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "miezul nopții",
    noon: "amiază",
    morning: "dimineață",
    afternoon: "după-amiază",
    evening: "seară",
    night: "noapte",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "miezul nopții",
    noon: "amiază",
    morning: "dimineață",
    afternoon: "după-amiază",
    evening: "seară",
    night: "noapte",
  },
};

const router_ro_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mn",
    noon: "amiază",
    morning: "dimineață",
    afternoon: "după-amiază",
    evening: "seară",
    night: "noapte",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "miezul nopții",
    noon: "amiază",
    morning: "dimineață",
    afternoon: "după-amiază",
    evening: "seară",
    night: "noapte",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "miezul nopții",
    noon: "amiază",
    morning: "dimineață",
    afternoon: "după-amiază",
    evening: "seară",
    night: "noapte",
  },
};

const router_ro_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_ro_lib_localize_localize = {
  ordinalNumber: router_ro_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ro_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ro_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ro_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ro_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ro_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ro_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ro/_lib/match.mjs



const router_ro_lib_match_matchOrdinalNumberPattern = /^(\d+)?/i;
const router_ro_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ro_lib_match_matchEraPatterns = {
  narrow: /^(Î|D)/i,
  abbreviated:
    /^(Î\.?\s?d\.?\s?C\.?|Î\.?\s?e\.?\s?n\.?|D\.?\s?C\.?|e\.?\s?n\.?)/i,
  wide: /^(Înainte de Cristos|Înaintea erei noastre|După Cristos|Era noastră)/i,
};
const router_ro_lib_match_parseEraPatterns = {
  any: [/^ÎC/i, /^DC/i],
  wide: [
    /^(Înainte de Cristos|Înaintea erei noastre)/i,
    /^(După Cristos|Era noastră)/i,
  ],
};

const router_ro_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^T[1234]/i,
  wide: /^trimestrul [1234]/i,
};
const router_ro_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ro_lib_match_matchMonthPatterns = {
  narrow: /^[ifmaasond]/i,
  abbreviated: /^(ian|feb|mar|apr|mai|iun|iul|aug|sep|oct|noi|dec)/i,
  wide: /^(ianuarie|februarie|martie|aprilie|mai|iunie|iulie|august|septembrie|octombrie|noiembrie|decembrie)/i,
};
const router_ro_lib_match_parseMonthPatterns = {
  narrow: [
    /^i/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^i/i,
    /^i/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ia/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^mai/i,
    /^iun/i,
    /^iul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_ro_lib_match_matchDayPatterns = {
  narrow: /^[dlmjvs]/i,
  short: /^(d|l|ma|mi|j|v|s)/i,
  abbreviated: /^(dum|lun|mar|mie|jo|vi|sâ)/i,
  wide: /^(duminica|luni|marţi|miercuri|joi|vineri|sâmbătă)/i,
};
const router_ro_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
  any: [/^d/i, /^l/i, /^ma/i, /^mi/i, /^j/i, /^v/i, /^s/i],
};

const router_ro_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|mn|a|(dimineaţa|după-amiaza|seara|noaptea))/i,
  any: /^([ap]\.?\s?m\.?|miezul nopții|amiaza|(dimineaţa|după-amiaza|seara|noaptea))/i,
};
const router_ro_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mn/i,
    noon: /amiaza/i,
    morning: /dimineaţa/i,
    afternoon: /după-amiaza/i,
    evening: /seara/i,
    night: /noaptea/i,
  },
};

const router_ro_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ro_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ro_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ro_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ro_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ro_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ro_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ro_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ro_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ro_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ro_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ro_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ro_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ro.mjs






/**
 * @category Locales
 * @summary Romanian locale.
 * @language Romanian
 * @iso-639-2 ron
 * @author Sergiu Munteanu [@jsergiu](https://github.com/jsergiu)
 * @author Adrian Ocneanu [@aocneanu](https://github.com/aocneanu)
 * @author Mihai Ocneanu [@gandesc](https://github.com/gandesc)
 */
const router_ro = {
  code: "ro",
  formatDistance: router_ro_lib_formatDistance_formatDistance,
  formatLong: router_ro_lib_formatLong_formatLong,
  formatRelative: router_ro_lib_formatRelative_formatRelative,
  localize: router_ro_lib_localize_localize,
  match: router_ro_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ro = ((/* unused pure expression or super */ null && (router_ro)));

;// ./node_modules/date-fns/locale/ru/_lib/formatDistance.mjs
function router_ru_lib_formatDistance_declension(scheme, count) {
  // scheme for count=1 exists
  if (scheme.one !== undefined && count === 1) {
    return scheme.one;
  }

  const rem10 = count % 10;
  const rem100 = count % 100;

  // 1, 21, 31, ...
  if (rem10 === 1 && rem100 !== 11) {
    return scheme.singularNominative.replace("{{count}}", String(count));

    // 2, 3, 4, 22, 23, 24, 32 ...
  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
    return scheme.singularGenitive.replace("{{count}}", String(count));

    // 5, 6, 7, 8, 9, 10, 11, ...
  } else {
    return scheme.pluralGenitive.replace("{{count}}", String(count));
  }
}

function router_ru_lib_formatDistance_buildLocalizeTokenFn(scheme) {
  return (count, options) => {
    if (options?.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        if (scheme.future) {
          return router_ru_lib_formatDistance_declension(scheme.future, count);
        } else {
          return "через " + router_ru_lib_formatDistance_declension(scheme.regular, count);
        }
      } else {
        if (scheme.past) {
          return router_ru_lib_formatDistance_declension(scheme.past, count);
        } else {
          return router_ru_lib_formatDistance_declension(scheme.regular, count) + " назад";
        }
      }
    } else {
      return router_ru_lib_formatDistance_declension(scheme.regular, count);
    }
  };
}

const router_ru_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      one: "меньше секунды",
      singularNominative: "меньше {{count}} секунды",
      singularGenitive: "меньше {{count}} секунд",
      pluralGenitive: "меньше {{count}} секунд",
    },
    future: {
      one: "меньше, чем через секунду",
      singularNominative: "меньше, чем через {{count}} секунду",
      singularGenitive: "меньше, чем через {{count}} секунды",
      pluralGenitive: "меньше, чем через {{count}} секунд",
    },
  }),

  xSeconds: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} секунда",
      singularGenitive: "{{count}} секунды",
      pluralGenitive: "{{count}} секунд",
    },
    past: {
      singularNominative: "{{count}} секунду назад",
      singularGenitive: "{{count}} секунды назад",
      pluralGenitive: "{{count}} секунд назад",
    },
    future: {
      singularNominative: "через {{count}} секунду",
      singularGenitive: "через {{count}} секунды",
      pluralGenitive: "через {{count}} секунд",
    },
  }),

  halfAMinute: (_count, options) => {
    if (options?.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        return "через полминуты";
      } else {
        return "полминуты назад";
      }
    }

    return "полминуты";
  },

  lessThanXMinutes: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      one: "меньше минуты",
      singularNominative: "меньше {{count}} минуты",
      singularGenitive: "меньше {{count}} минут",
      pluralGenitive: "меньше {{count}} минут",
    },
    future: {
      one: "меньше, чем через минуту",
      singularNominative: "меньше, чем через {{count}} минуту",
      singularGenitive: "меньше, чем через {{count}} минуты",
      pluralGenitive: "меньше, чем через {{count}} минут",
    },
  }),

  xMinutes: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} минута",
      singularGenitive: "{{count}} минуты",
      pluralGenitive: "{{count}} минут",
    },
    past: {
      singularNominative: "{{count}} минуту назад",
      singularGenitive: "{{count}} минуты назад",
      pluralGenitive: "{{count}} минут назад",
    },
    future: {
      singularNominative: "через {{count}} минуту",
      singularGenitive: "через {{count}} минуты",
      pluralGenitive: "через {{count}} минут",
    },
  }),

  aboutXHours: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "около {{count}} часа",
      singularGenitive: "около {{count}} часов",
      pluralGenitive: "около {{count}} часов",
    },
    future: {
      singularNominative: "приблизительно через {{count}} час",
      singularGenitive: "приблизительно через {{count}} часа",
      pluralGenitive: "приблизительно через {{count}} часов",
    },
  }),

  xHours: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} час",
      singularGenitive: "{{count}} часа",
      pluralGenitive: "{{count}} часов",
    },
  }),

  xDays: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} день",
      singularGenitive: "{{count}} дня",
      pluralGenitive: "{{count}} дней",
    },
  }),

  aboutXWeeks: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "около {{count}} недели",
      singularGenitive: "около {{count}} недель",
      pluralGenitive: "около {{count}} недель",
    },
    future: {
      singularNominative: "приблизительно через {{count}} неделю",
      singularGenitive: "приблизительно через {{count}} недели",
      pluralGenitive: "приблизительно через {{count}} недель",
    },
  }),

  xWeeks: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} неделя",
      singularGenitive: "{{count}} недели",
      pluralGenitive: "{{count}} недель",
    },
  }),

  aboutXMonths: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "около {{count}} месяца",
      singularGenitive: "около {{count}} месяцев",
      pluralGenitive: "около {{count}} месяцев",
    },
    future: {
      singularNominative: "приблизительно через {{count}} месяц",
      singularGenitive: "приблизительно через {{count}} месяца",
      pluralGenitive: "приблизительно через {{count}} месяцев",
    },
  }),

  xMonths: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} месяц",
      singularGenitive: "{{count}} месяца",
      pluralGenitive: "{{count}} месяцев",
    },
  }),

  aboutXYears: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "около {{count}} года",
      singularGenitive: "около {{count}} лет",
      pluralGenitive: "около {{count}} лет",
    },
    future: {
      singularNominative: "приблизительно через {{count}} год",
      singularGenitive: "приблизительно через {{count}} года",
      pluralGenitive: "приблизительно через {{count}} лет",
    },
  }),

  xYears: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} год",
      singularGenitive: "{{count}} года",
      pluralGenitive: "{{count}} лет",
    },
  }),

  overXYears: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "больше {{count}} года",
      singularGenitive: "больше {{count}} лет",
      pluralGenitive: "больше {{count}} лет",
    },
    future: {
      singularNominative: "больше, чем через {{count}} год",
      singularGenitive: "больше, чем через {{count}} года",
      pluralGenitive: "больше, чем через {{count}} лет",
    },
  }),

  almostXYears: router_ru_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "почти {{count}} год",
      singularGenitive: "почти {{count}} года",
      pluralGenitive: "почти {{count}} лет",
    },
    future: {
      singularNominative: "почти через {{count}} год",
      singularGenitive: "почти через {{count}} года",
      pluralGenitive: "почти через {{count}} лет",
    },
  }),
};

const router_ru_lib_formatDistance_formatDistance = (token, count, options) => {
  return router_ru_lib_formatDistance_formatDistanceLocale[token](count, options);
};

;// ./node_modules/date-fns/locale/ru/_lib/formatLong.mjs


const router_ru_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM y 'г.'",
  long: "d MMMM y 'г.'",
  medium: "d MMM y 'г.'",
  short: "dd.MM.y",
};

const router_ru_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_ru_lib_formatLong_dateTimeFormats = {
  any: "{{date}}, {{time}}",
};

const router_ru_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ru_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ru_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ru_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ru/_lib/formatRelative.mjs


const router_ru_lib_formatRelative_accusativeWeekdays = [
  "воскресенье",
  "понедельник",
  "вторник",
  "среду",
  "четверг",
  "пятницу",
  "субботу",
];

function router_ru_lib_formatRelative_lastWeek(day) {
  const weekday = router_ru_lib_formatRelative_accusativeWeekdays[day];

  switch (day) {
    case 0:
      return "'в прошлое " + weekday + " в' p";
    case 1:
    case 2:
    case 4:
      return "'в прошлый " + weekday + " в' p";
    case 3:
    case 5:
    case 6:
      return "'в прошлую " + weekday + " в' p";
  }
}

function router_ru_lib_formatRelative_thisWeek(day) {
  const weekday = router_ru_lib_formatRelative_accusativeWeekdays[day];

  if (day === 2 /* Tue */) {
    return "'во " + weekday + " в' p";
  } else {
    return "'в " + weekday + " в' p";
  }
}

function router_ru_lib_formatRelative_nextWeek(day) {
  const weekday = router_ru_lib_formatRelative_accusativeWeekdays[day];

  switch (day) {
    case 0:
      return "'в следующее " + weekday + " в' p";
    case 1:
    case 2:
    case 4:
      return "'в следующий " + weekday + " в' p";
    case 3:
    case 5:
    case 6:
      return "'в следующую " + weekday + " в' p";
  }
}

const router_ru_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_ru_lib_formatRelative_thisWeek(day);
    } else {
      return router_ru_lib_formatRelative_lastWeek(day);
    }
  },
  yesterday: "'вчера в' p",
  today: "'сегодня в' p",
  tomorrow: "'завтра в' p",
  nextWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_ru_lib_formatRelative_thisWeek(day);
    } else {
      return router_ru_lib_formatRelative_nextWeek(day);
    }
  },
  other: "P",
};

const router_ru_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_ru_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/ru/_lib/localize.mjs


const router_ru_lib_localize_eraValues = {
  narrow: ["до н.э.", "н.э."],
  abbreviated: ["до н. э.", "н. э."],
  wide: ["до нашей эры", "нашей эры"],
};

const router_ru_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-й кв.", "2-й кв.", "3-й кв.", "4-й кв."],
  wide: ["1-й квартал", "2-й квартал", "3-й квартал", "4-й квартал"],
};

const router_ru_lib_localize_monthValues = {
  narrow: ["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"],
  abbreviated: [
    "янв.",
    "фев.",
    "март",
    "апр.",
    "май",
    "июнь",
    "июль",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек.",
  ],

  wide: [
    "январь",
    "февраль",
    "март",
    "апрель",
    "май",
    "июнь",
    "июль",
    "август",
    "сентябрь",
    "октябрь",
    "ноябрь",
    "декабрь",
  ],
};

const router_ru_lib_localize_formattingMonthValues = {
  narrow: ["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"],
  abbreviated: [
    "янв.",
    "фев.",
    "мар.",
    "апр.",
    "мая",
    "июн.",
    "июл.",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек.",
  ],

  wide: [
    "января",
    "февраля",
    "марта",
    "апреля",
    "мая",
    "июня",
    "июля",
    "августа",
    "сентября",
    "октября",
    "ноября",
    "декабря",
  ],
};

const router_ru_lib_localize_dayValues = {
  narrow: ["В", "П", "В", "С", "Ч", "П", "С"],
  short: ["вс", "пн", "вт", "ср", "чт", "пт", "сб"],
  abbreviated: ["вск", "пнд", "втр", "срд", "чтв", "птн", "суб"],
  wide: [
    "воскресенье",
    "понедельник",
    "вторник",
    "среда",
    "четверг",
    "пятница",
    "суббота",
  ],
};

const router_ru_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ДП",
    pm: "ПП",
    midnight: "полн.",
    noon: "полд.",
    morning: "утро",
    afternoon: "день",
    evening: "веч.",
    night: "ночь",
  },
  abbreviated: {
    am: "ДП",
    pm: "ПП",
    midnight: "полн.",
    noon: "полд.",
    morning: "утро",
    afternoon: "день",
    evening: "веч.",
    night: "ночь",
  },
  wide: {
    am: "ДП",
    pm: "ПП",
    midnight: "полночь",
    noon: "полдень",
    morning: "утро",
    afternoon: "день",
    evening: "вечер",
    night: "ночь",
  },
};

const router_ru_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ДП",
    pm: "ПП",
    midnight: "полн.",
    noon: "полд.",
    morning: "утра",
    afternoon: "дня",
    evening: "веч.",
    night: "ночи",
  },
  abbreviated: {
    am: "ДП",
    pm: "ПП",
    midnight: "полн.",
    noon: "полд.",
    morning: "утра",
    afternoon: "дня",
    evening: "веч.",
    night: "ночи",
  },
  wide: {
    am: "ДП",
    pm: "ПП",
    midnight: "полночь",
    noon: "полдень",
    morning: "утра",
    afternoon: "дня",
    evening: "вечера",
    night: "ночи",
  },
};

const router_ru_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = options?.unit;

  let suffix;
  if (unit === "date") {
    suffix = "-е";
  } else if (unit === "week" || unit === "minute" || unit === "second") {
    suffix = "-я";
  } else {
    suffix = "-й";
  }

  return number + suffix;
};

const router_ru_lib_localize_localize = {
  ordinalNumber: router_ru_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ru_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ru_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ru_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_ru_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ru_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ru_lib_localize_dayPeriodValues,
    defaultWidth: "any",
    formattingValues: router_ru_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ru/_lib/match.mjs



const router_ru_lib_match_matchOrdinalNumberPattern = /^(\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i;
const router_ru_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ru_lib_match_matchEraPatterns = {
  narrow: /^((до )?н\.?\s?э\.?)/i,
  abbreviated: /^((до )?н\.?\s?э\.?)/i,
  wide: /^(до нашей эры|нашей эры|наша эра)/i,
};
const router_ru_lib_match_parseEraPatterns = {
  any: [/^д/i, /^н/i],
};

const router_ru_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](-?[ыои]?й?)? кв.?/i,
  wide: /^[1234](-?[ыои]?й?)? квартал/i,
};

const router_ru_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ru_lib_match_matchMonthPatterns = {
  narrow: /^[яфмаисонд]/i,
  abbreviated:
    /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)\.?/i,
  wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i,
};

const router_ru_lib_match_parseMonthPatterns = {
  narrow: [
    /^я/i,
    /^ф/i,
    /^м/i,
    /^а/i,
    /^м/i,
    /^и/i,
    /^и/i,
    /^а/i,
    /^с/i,
    /^о/i,
    /^н/i,
    /^я/i,
  ],

  any: [
    /^я/i,
    /^ф/i,
    /^мар/i,
    /^ап/i,
    /^ма[йя]/i,
    /^июн/i,
    /^июл/i,
    /^ав/i,
    /^с/i,
    /^о/i,
    /^н/i,
    /^д/i,
  ],
};

const router_ru_lib_match_matchDayPatterns = {
  narrow: /^[впсч]/i,
  short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\.?/i,
  abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i,
  wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i,
};

const router_ru_lib_match_parseDayPatterns = {
  narrow: [/^в/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],
  any: [/^в[ос]/i, /^п[он]/i, /^в/i, /^ср/i, /^ч/i, /^п[ят]/i, /^с[уб]/i],
};

const router_ru_lib_match_matchDayPeriodPatterns = {
  narrow: /^([дп]п|полн\.?|полд\.?|утр[оа]|день|дня|веч\.?|ноч[ьи])/i,
  abbreviated: /^([дп]п|полн\.?|полд\.?|утр[оа]|день|дня|веч\.?|ноч[ьи])/i,
  wide: /^([дп]п|полночь|полдень|утр[оа]|день|дня|вечера?|ноч[ьи])/i,
};

const router_ru_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^дп/i,
    pm: /^пп/i,
    midnight: /^полн/i,
    noon: /^полд/i,
    morning: /^у/i,
    afternoon: /^д[ен]/i,
    evening: /^в/i,
    night: /^н/i,
  },
};

const router_ru_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ru_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ru_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ru_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ru_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ru_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ru_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ru_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ru_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ru_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ru_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ru_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ru_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ru.mjs






/**
 * @category Locales
 * @summary Russian locale.
 * @language Russian
 * @iso-639-2 rus
 * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)
 * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)
 */
const router_ru = {
  code: "ru",
  formatDistance: router_ru_lib_formatDistance_formatDistance,
  formatLong: router_ru_lib_formatLong_formatLong,
  formatRelative: router_ru_lib_formatRelative_formatRelative,
  localize: router_ru_lib_localize_localize,
  match: router_ru_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ru = ((/* unused pure expression or super */ null && (router_ru)));

;// ./node_modules/date-fns/locale/se/_lib/formatDistance.mjs
const router_se_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "unnit go ovtta sekundda",
    other: "unnit go {{count}} sekundda",
  },

  xSeconds: {
    one: "sekundda",
    other: "{{count}} sekundda",
  },

  halfAMinute: "bealle minuhta",

  lessThanXMinutes: {
    one: "unnit go bealle minuhta",
    other: "unnit go {{count}} minuhta",
  },

  xMinutes: {
    one: "minuhta",
    other: "{{count}} minuhta",
  },

  aboutXHours: {
    one: "sullii ovtta diimmu",
    other: "sullii {{count}} diimmu",
  },

  xHours: {
    one: "diimmu",
    other: "{{count}} diimmu",
  },

  xDays: {
    one: "beaivvi",
    other: "{{count}} beaivvi",
  },

  aboutXWeeks: {
    one: "sullii ovtta vahku",
    other: "sullii {{count}} vahku",
  },

  xWeeks: {
    one: "vahku",
    other: "{{count}} vahku",
  },

  aboutXMonths: {
    one: "sullii ovtta mánu",
    other: "sullii {{count}} mánu",
  },

  xMonths: {
    one: "mánu",
    other: "{{count}} mánu",
  },

  aboutXYears: {
    one: "sullii ovtta jagi",
    other: "sullii {{count}} jagi",
  },

  xYears: {
    one: "jagi",
    other: "{{count}} jagi",
  },

  overXYears: {
    one: "guhkit go jagi",
    other: "guhkit go {{count}} jagi",
  },

  almostXYears: {
    one: "measta jagi",
    other: "measta {{count}} jagi",
  },
};

const router_se_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_se_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "geahčen " + result;
    } else {
      return result + " áigi";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/se/_lib/formatLong.mjs


const router_se_lib_formatLong_dateFormats = {
  full: "EEEE MMMM d. 'b.' y",
  long: "MMMM d. 'b.' y",
  medium: "MMM d. 'b.' y",
  short: "dd.MM.y",
};

const router_se_lib_formatLong_timeFormats = {
  full: "'dii.' HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_se_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'dii.' {{time}}",
  long: "{{date}} 'dii.' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_se_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_se_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_se_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_se_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/se/_lib/formatRelative.mjs
const router_se_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'ovddit' eeee 'dii.' p",
  yesterday: "'ikte dii.' p",
  today: "'odne dii.' p",
  tomorrow: "'ihtin dii.' p",
  nextWeek: "EEEE 'dii.' p",
  other: "P",
};

const router_se_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_se_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/se/_lib/localize.mjs


const router_se_lib_localize_eraValues = {
  narrow: ["o.Kr.", "m.Kr."],
  abbreviated: ["o.Kr.", "m.Kr."],
  wide: ["ovdal Kristusa", "maŋŋel Kristusa"],
};

const router_se_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1. kvartála", "2. kvartála", "3. kvartála", "4. kvartála"],
};

const router_se_lib_localize_monthValues = {
  narrow: ["O", "G", "N", "C", "M", "G", "S", "B", "Č", "G", "S", "J"],
  abbreviated: [
    "ođđa",
    "guov",
    "njuk",
    "cuo",
    "mies",
    "geas",
    "suoi",
    "borg",
    "čakč",
    "golg",
    "skáb",
    "juov",
  ],

  wide: [
    "ođđajagemánnu",
    "guovvamánnu",
    "njukčamánnu",
    "cuoŋománnu",
    "miessemánnu",
    "geassemánnu",
    "suoidnemánnu",
    "borgemánnu",
    "čakčamánnu",
    "golggotmánnu",
    "skábmamánnu",
    "juovlamánnu",
  ],
};

const router_se_lib_localize_dayValues = {
  narrow: ["S", "V", "M", "G", "D", "B", "L"],
  short: ["sotn", "vuos", "maŋ", "gask", "duor", "bear", "láv"],
  abbreviated: ["sotn", "vuos", "maŋ", "gask", "duor", "bear", "láv"],
  wide: [
    "sotnabeaivi",
    "vuossárga",
    "maŋŋebárga",
    "gaskavahkku",
    "duorastat",
    "bearjadat",
    "lávvardat",
  ],
};

const router_se_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "gaskaidja",
    noon: "gaskabeaivi",
    morning: "iđđes",
    afternoon: "maŋŋel gaska.",
    evening: "eahkes",
    night: "ihkku",
  },
  abbreviated: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "gaskaidja",
    noon: "gaskabeaivvi",
    morning: "iđđes",
    afternoon: "maŋŋel gaskabea.",
    evening: "eahkes",
    night: "ihkku",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "gaskaidja",
    noon: "gaskabeavvi",
    morning: "iđđes",
    afternoon: "maŋŋel gaskabeaivvi",
    evening: "eahkes",
    night: "ihkku",
  },
};

const router_se_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_se_lib_localize_localize = {
  ordinalNumber: router_se_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_se_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_se_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_se_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_se_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_se_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/se/_lib/match.mjs



const router_se_lib_match_matchOrdinalNumberPattern = /^(\d+)\.?/i;
const router_se_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_se_lib_match_matchEraPatterns = {
  narrow: /^(o\.? ?Kr\.?|m\.? ?Kr\.?)/i,
  abbreviated: /^(o\.? ?Kr\.?|m\.? ?Kr\.?)/i,
  wide: /^(ovdal Kristusa|ovdal min áiggi|maŋŋel Kristusa|min áigi)/i,
};
const router_se_lib_match_parseEraPatterns = {
  any: [/^o/i, /^m/i],
};

const router_se_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](\.)? kvartála/i,
};
const router_se_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_se_lib_match_matchMonthPatterns = {
  narrow: /^[ogncmsbčj]/i,
  abbreviated:
    /^(ođđa|guov|njuk|cuo|mies|geas|suoi|borg|čakč|golg|skáb|juov)\.?/i,
  wide: /^(ođđajagemánnu|guovvamánnu|njukčamánnu|cuoŋománnu|miessemánnu|geassemánnu|suoidnemánnu|borgemánnu|čakčamánnu|golggotmánnu|skábmamánnu|juovlamánnu)/i,
};
const router_se_lib_match_parseMonthPatterns = {
  narrow: [
    /^o/i,
    /^g/i,
    /^n/i,
    /^c/i,
    /^m/i,
    /^g/i,
    /^s/i,
    /^b/i,
    /^č/i,
    /^g/i,
    /^s/i,
    /^j/i,
  ],

  any: [
    /^o/i,
    /^gu/i,
    /^n/i,
    /^c/i,
    /^m/i,
    /^ge/i,
    /^su/i,
    /^b/i,
    /^č/i,
    /^go/i,
    /^sk/i,
    /^j/i,
  ],
};

const router_se_lib_match_matchDayPatterns = {
  narrow: /^[svmgdbl]/i,
  short: /^(sotn|vuos|maŋ|gask|duor|bear|láv)/i,
  abbreviated: /^(sotn|vuos|maŋ|gask|duor|bear|láv)/i,
  wide: /^(sotnabeaivi|vuossárga|maŋŋebárga|gaskavahkku|duorastat|bearjadat|lávvardat)/i,
};
const router_se_lib_match_parseDayPatterns = {
  any: [/^s/i, /^v/i, /^m/i, /^g/i, /^d/i, /^b/i, /^l/i],
};

const router_se_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(gaskaidja|gaskabeaivvi|(på) (iđđes|maŋŋel gaskabeaivvi|eahkes|ihkku)|[ap])/i,
  any: /^([ap]\.?\s?m\.?|gaskaidja|gaskabeaivvi|(på) (iđđes|maŋŋel gaskabeaivvi|eahkes|ihkku))/i,
};
const router_se_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a(\.?\s?m\.?)?$/i,
    pm: /^p(\.?\s?m\.?)?$/i,
    midnight: /^gaskai/i,
    noon: /^gaskab/i,
    morning: /iđđes/i,
    afternoon: /maŋŋel gaskabeaivvi/i,
    evening: /eahkes/i,
    night: /ihkku/i,
  },
};

const router_se_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_se_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_se_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_se_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_se_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_se_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_se_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_se_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_se_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_se_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_se_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_se_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_se_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/se.mjs






/**
 * @category Locales
 * @summary Northern Sámi locale.
 * @language Northern Sámi
 * @iso-639-2 sme
 * @author Audun Rundberg [@audunru](https://github.com/audunru)
 */
const router_se = {
  code: "se",
  formatDistance: router_se_lib_formatDistance_formatDistance,
  formatLong: router_se_lib_formatLong_formatLong,
  formatRelative: router_se_lib_formatRelative_formatRelative,
  localize: router_se_lib_localize_localize,
  match: router_se_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_se = ((/* unused pure expression or super */ null && (router_se)));

;// ./node_modules/date-fns/locale/sk/_lib/formatDistance.mjs
function router_formatDistance_declensionGroup(scheme, count) {
  if (count === 1 && scheme.one) {
    return scheme.one;
  }

  if (count >= 2 && count <= 4 && scheme.twoFour) {
    return scheme.twoFour;
  }

  // if count === null || count === 0 || count >= 5
  return scheme.other;
}

function router_sk_lib_formatDistance_declension(scheme, count, time) {
  const group = router_formatDistance_declensionGroup(scheme, count);
  const finalText = group[time];
  return finalText.replace("{{count}}", String(count));
}

function router_extractPreposition(token) {
  const result = ["lessThan", "about", "over", "almost"].filter(
    function (preposition) {
      return !!token.match(new RegExp("^" + preposition));
    },
  );

  return result[0];
}

function router_prefixPreposition(preposition) {
  let translation = "";

  if (preposition === "almost") {
    translation = "takmer";
  }

  if (preposition === "about") {
    translation = "približne";
  }

  return translation.length > 0 ? translation + " " : "";
}

function router_suffixPreposition(preposition) {
  let translation = "";

  if (preposition === "lessThan") {
    translation = "menej než";
  }

  if (preposition === "over") {
    translation = "viac než";
  }

  return translation.length > 0 ? translation + " " : "";
}

function router_lowercaseFirstLetter(string) {
  return string.charAt(0).toLowerCase() + string.slice(1);
}

const router_sk_lib_formatDistance_formatDistanceLocale = {
  xSeconds: {
    one: {
      present: "sekunda",
      past: "sekundou",
      future: "sekundu",
    },
    twoFour: {
      present: "{{count}} sekundy",
      past: "{{count}} sekundami",
      future: "{{count}} sekundy",
    },
    other: {
      present: "{{count}} sekúnd",
      past: "{{count}} sekundami",
      future: "{{count}} sekúnd",
    },
  },

  halfAMinute: {
    other: {
      present: "pol minúty",
      past: "pol minútou",
      future: "pol minúty",
    },
  },

  xMinutes: {
    one: {
      present: "minúta",
      past: "minútou",
      future: "minútu",
    },
    twoFour: {
      present: "{{count}} minúty",
      past: "{{count}} minútami",
      future: "{{count}} minúty",
    },
    other: {
      present: "{{count}} minút",
      past: "{{count}} minútami",
      future: "{{count}} minút",
    },
  },

  xHours: {
    one: {
      present: "hodina",
      past: "hodinou",
      future: "hodinu",
    },
    twoFour: {
      present: "{{count}} hodiny",
      past: "{{count}} hodinami",
      future: "{{count}} hodiny",
    },
    other: {
      present: "{{count}} hodín",
      past: "{{count}} hodinami",
      future: "{{count}} hodín",
    },
  },

  xDays: {
    one: {
      present: "deň",
      past: "dňom",
      future: "deň",
    },
    twoFour: {
      present: "{{count}} dni",
      past: "{{count}} dňami",
      future: "{{count}} dni",
    },
    other: {
      present: "{{count}} dní",
      past: "{{count}} dňami",
      future: "{{count}} dní",
    },
  },

  xWeeks: {
    one: {
      present: "týždeň",
      past: "týždňom",
      future: "týždeň",
    },
    twoFour: {
      present: "{{count}} týždne",
      past: "{{count}} týždňami",
      future: "{{count}} týždne",
    },
    other: {
      present: "{{count}} týždňov",
      past: "{{count}} týždňami",
      future: "{{count}} týždňov",
    },
  },

  xMonths: {
    one: {
      present: "mesiac",
      past: "mesiacom",
      future: "mesiac",
    },
    twoFour: {
      present: "{{count}} mesiace",
      past: "{{count}} mesiacmi",
      future: "{{count}} mesiace",
    },
    other: {
      present: "{{count}} mesiacov",
      past: "{{count}} mesiacmi",
      future: "{{count}} mesiacov",
    },
  },

  xYears: {
    one: {
      present: "rok",
      past: "rokom",
      future: "rok",
    },
    twoFour: {
      present: "{{count}} roky",
      past: "{{count}} rokmi",
      future: "{{count}} roky",
    },
    other: {
      present: "{{count}} rokov",
      past: "{{count}} rokmi",
      future: "{{count}} rokov",
    },
  },
};

const router_sk_lib_formatDistance_formatDistance = (token, count, options) => {
  const preposition = router_extractPreposition(token) || "";
  const key = router_lowercaseFirstLetter(token.substring(preposition.length));
  const scheme = router_sk_lib_formatDistance_formatDistanceLocale[key];

  if (!options?.addSuffix) {
    return (
      router_prefixPreposition(preposition) +
      router_suffixPreposition(preposition) +
      router_sk_lib_formatDistance_declension(scheme, count, "present")
    );
  }

  if (options.comparison && options.comparison > 0) {
    return (
      router_prefixPreposition(preposition) +
      "o " +
      router_suffixPreposition(preposition) +
      router_sk_lib_formatDistance_declension(scheme, count, "future")
    );
  } else {
    return (
      router_prefixPreposition(preposition) +
      "pred " +
      router_suffixPreposition(preposition) +
      router_sk_lib_formatDistance_declension(scheme, count, "past")
    );
  }
};

;// ./node_modules/date-fns/locale/sk/_lib/formatLong.mjs


// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1986
const router_sk_lib_formatLong_dateFormats = {
  full: "EEEE d. MMMM y",
  long: "d. MMMM y",
  medium: "d. M. y",
  short: "d. M. y",
};

// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#2149
const router_sk_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1994
const router_sk_lib_formatLong_dateTimeFormats = {
  full: "{{date}}, {{time}}",
  long: "{{date}}, {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}} {{time}}",
};

const router_sk_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_sk_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_sk_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_sk_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/sk/_lib/formatRelative.mjs


// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1308
const router_sk_lib_formatRelative_accusativeWeekdays = [
  "nedeľu",
  "pondelok",
  "utorok",
  "stredu",
  "štvrtok",
  "piatok",
  "sobotu",
];

function router_sk_lib_formatRelative_lastWeek(day) {
  const weekday = router_sk_lib_formatRelative_accusativeWeekdays[day];

  switch (day) {
    case 0: /* Sun */
    case 3: /* Wed */
    case 6 /* Sat */:
      return "'minulú " + weekday + " o' p";
    default:
      return "'minulý' eeee 'o' p";
  }
}

function router_sk_lib_formatRelative_thisWeek(day) {
  const weekday = router_sk_lib_formatRelative_accusativeWeekdays[day];

  if (day === 4 /* Thu */) {
    return "'vo' eeee 'o' p";
  } else {
    return "'v " + weekday + " o' p";
  }
}

function router_sk_lib_formatRelative_nextWeek(day) {
  const weekday = router_sk_lib_formatRelative_accusativeWeekdays[day];

  switch (day) {
    case 0: /* Sun */
    case 4: /* Wed */
    case 6 /* Sat */:
      return "'budúcu " + weekday + " o' p";
    default:
      return "'budúci' eeee 'o' p";
  }
}

const router_sk_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_sk_lib_formatRelative_thisWeek(day);
    } else {
      return router_sk_lib_formatRelative_lastWeek(day);
    }
  },
  yesterday: "'včera o' p",
  today: "'dnes o' p",
  tomorrow: "'zajtra o' p",
  nextWeek: (date, baseDate, options) => {
    const day = date.getDay();
    if (router_isSameWeek(date, baseDate, options)) {
      return router_sk_lib_formatRelative_thisWeek(day);
    } else {
      return router_sk_lib_formatRelative_nextWeek(day);
    }
  },
  other: "P",
};

const router_sk_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_sk_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/sk/_lib/localize.mjs


// https://www.unicode.org/cldr/charts/32/summary/sk.html#1772
const router_sk_lib_localize_eraValues = {
  narrow: ["pred Kr.", "po Kr."],
  abbreviated: ["pred Kr.", "po Kr."],
  wide: ["pred Kristom", "po Kristovi"],
};

// https://www.unicode.org/cldr/charts/32/summary/sk.html#1780
const router_sk_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1. štvrťrok", "2. štvrťrok", "3. štvrťrok", "4. štvrťrok"],
};

// https://www.unicode.org/cldr/charts/32/summary/sk.html#1804
const router_sk_lib_localize_monthValues = {
  narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
  abbreviated: [
    "jan",
    "feb",
    "mar",
    "apr",
    "máj",
    "jún",
    "júl",
    "aug",
    "sep",
    "okt",
    "nov",
    "dec",
  ],

  wide: [
    "január",
    "február",
    "marec",
    "apríl",
    "máj",
    "jún",
    "júl",
    "august",
    "september",
    "október",
    "november",
    "december",
  ],
};
const router_sk_lib_localize_formattingMonthValues = {
  narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
  abbreviated: [
    "jan",
    "feb",
    "mar",
    "apr",
    "máj",
    "jún",
    "júl",
    "aug",
    "sep",
    "okt",
    "nov",
    "dec",
  ],

  wide: [
    "januára",
    "februára",
    "marca",
    "apríla",
    "mája",
    "júna",
    "júla",
    "augusta",
    "septembra",
    "októbra",
    "novembra",
    "decembra",
  ],
};

// https://www.unicode.org/cldr/charts/32/summary/sk.html#1876
const router_sk_lib_localize_dayValues = {
  narrow: ["n", "p", "u", "s", "š", "p", "s"],
  short: ["ne", "po", "ut", "st", "št", "pi", "so"],
  abbreviated: ["ne", "po", "ut", "st", "št", "pi", "so"],
  wide: [
    "nedeľa",
    "pondelok",
    "utorok",
    "streda",
    "štvrtok",
    "piatok",
    "sobota",
  ],
};

// https://www.unicode.org/cldr/charts/32/summary/sk.html#1932
const router_sk_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "poln.",
    noon: "pol.",
    morning: "ráno",
    afternoon: "pop.",
    evening: "več.",
    night: "noc",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "poln.",
    noon: "pol.",
    morning: "ráno",
    afternoon: "popol.",
    evening: "večer",
    night: "noc",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "polnoc",
    noon: "poludnie",
    morning: "ráno",
    afternoon: "popoludnie",
    evening: "večer",
    night: "noc",
  },
};

const router_sk_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "o poln.",
    noon: "nap.",
    morning: "ráno",
    afternoon: "pop.",
    evening: "več.",
    night: "v n.",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "o poln.",
    noon: "napol.",
    morning: "ráno",
    afternoon: "popol.",
    evening: "večer",
    night: "v noci",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "o polnoci",
    noon: "napoludnie",
    morning: "ráno",
    afternoon: "popoludní",
    evening: "večer",
    night: "v noci",
  },
};

const router_sk_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_sk_lib_localize_localize = {
  ordinalNumber: router_sk_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_sk_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_sk_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_sk_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_sk_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_sk_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_sk_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_sk_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/sk/_lib/match.mjs



const router_sk_lib_match_matchOrdinalNumberPattern = /^(\d+)\.?/i;
const router_sk_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_sk_lib_match_matchEraPatterns = {
  narrow: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
  abbreviated: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
  wide: /^(pred Kristom|pred na[šs][íi]m letopo[čc]tom|po Kristovi|n[áa][šs]ho letopo[čc]tu)/i,
};
const router_sk_lib_match_parseEraPatterns = {
  any: [/^pr/i, /^(po|n)/i],
};

const router_sk_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234]\. [šs]tvr[ťt]rok/i,
};
const router_sk_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_sk_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|m[áa]j|j[úu]n|j[úu]l|aug|sep|okt|nov|dec)/i,
  wide: /^(janu[áa]ra?|febru[áa]ra?|(marec|marca)|apr[íi]la?|m[áa]ja?|j[úu]na?|j[úu]la?|augusta?|(september|septembra)|(okt[óo]ber|okt[óo]bra)|(november|novembra)|(december|decembra))/i,
};
const router_sk_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^m[áa]j/i,
    /^j[úu]n/i,
    /^j[úu]l/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_sk_lib_match_matchDayPatterns = {
  narrow: /^[npusšp]/i,
  short: /^(ne|po|ut|st|št|pi|so)/i,
  abbreviated: /^(ne|po|ut|st|št|pi|so)/i,
  wide: /^(nede[ľl]a|pondelok|utorok|streda|[šs]tvrtok|piatok|sobota])/i,
};
const router_sk_lib_match_parseDayPatterns = {
  narrow: [/^n/i, /^p/i, /^u/i, /^s/i, /^š/i, /^p/i, /^s/i],
  any: [/^n/i, /^po/i, /^u/i, /^st/i, /^(št|stv)/i, /^pi/i, /^so/i],
};

const router_sk_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(am|pm|(o )?poln\.?|(nap\.?|pol\.?)|r[áa]no|pop\.?|ve[čc]\.?|(v n\.?|noc))/i,
  abbreviated:
    /^(am|pm|(o )?poln\.?|(napol\.?|pol\.?)|r[áa]no|pop\.?|ve[čc]er|(v )?noci?)/i,
  any: /^(am|pm|(o )?polnoci?|(na)?poludnie|r[áa]no|popoludn(ie|í|i)|ve[čc]er|(v )?noci?)/i,
};
const router_sk_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^am/i,
    pm: /^pm/i,
    midnight: /poln/i,
    noon: /^(nap|(na)?pol(\.|u))/i,
    morning: /^r[áa]no/i,
    afternoon: /^pop/i,
    evening: /^ve[čc]/i,
    night: /^(noc|v n\.)/i,
  },
};

const router_sk_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_sk_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_sk_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_sk_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sk_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_sk_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sk_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_sk_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sk_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_sk_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sk_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_sk_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_sk_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/sk.mjs






/**
 * @category Locales
 * @summary Slovak locale.
 * @language Slovak
 * @iso-639-2 slk
 * @author Marek Suscak [@mareksuscak](https://github.com/mareksuscak)
 */
const router_sk = {
  code: "sk",
  formatDistance: router_sk_lib_formatDistance_formatDistance,
  formatLong: router_sk_lib_formatLong_formatLong,
  formatRelative: router_sk_lib_formatRelative_formatRelative,
  localize: router_sk_lib_localize_localize,
  match: router_sk_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_sk = ((/* unused pure expression or super */ null && (router_sk)));

;// ./node_modules/date-fns/locale/sl/_lib/formatDistance.mjs
function router_isPluralType(val) {
  return val.one !== undefined;
}

const router_sl_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    present: {
      one: "manj kot {{count}} sekunda",
      two: "manj kot {{count}} sekundi",
      few: "manj kot {{count}} sekunde",
      other: "manj kot {{count}} sekund",
    },
    past: {
      one: "manj kot {{count}} sekundo",
      two: "manj kot {{count}} sekundama",
      few: "manj kot {{count}} sekundami",
      other: "manj kot {{count}} sekundami",
    },
    future: {
      one: "manj kot {{count}} sekundo",
      two: "manj kot {{count}} sekundi",
      few: "manj kot {{count}} sekunde",
      other: "manj kot {{count}} sekund",
    },
  },

  xSeconds: {
    present: {
      one: "{{count}} sekunda",
      two: "{{count}} sekundi",
      few: "{{count}} sekunde",
      other: "{{count}} sekund",
    },
    past: {
      one: "{{count}} sekundo",
      two: "{{count}} sekundama",
      few: "{{count}} sekundami",
      other: "{{count}} sekundami",
    },
    future: {
      one: "{{count}} sekundo",
      two: "{{count}} sekundi",
      few: "{{count}} sekunde",
      other: "{{count}} sekund",
    },
  },

  halfAMinute: "pol minute",

  lessThanXMinutes: {
    present: {
      one: "manj kot {{count}} minuta",
      two: "manj kot {{count}} minuti",
      few: "manj kot {{count}} minute",
      other: "manj kot {{count}} minut",
    },
    past: {
      one: "manj kot {{count}} minuto",
      two: "manj kot {{count}} minutama",
      few: "manj kot {{count}} minutami",
      other: "manj kot {{count}} minutami",
    },
    future: {
      one: "manj kot {{count}} minuto",
      two: "manj kot {{count}} minuti",
      few: "manj kot {{count}} minute",
      other: "manj kot {{count}} minut",
    },
  },

  xMinutes: {
    present: {
      one: "{{count}} minuta",
      two: "{{count}} minuti",
      few: "{{count}} minute",
      other: "{{count}} minut",
    },
    past: {
      one: "{{count}} minuto",
      two: "{{count}} minutama",
      few: "{{count}} minutami",
      other: "{{count}} minutami",
    },
    future: {
      one: "{{count}} minuto",
      two: "{{count}} minuti",
      few: "{{count}} minute",
      other: "{{count}} minut",
    },
  },

  aboutXHours: {
    present: {
      one: "približno {{count}} ura",
      two: "približno {{count}} uri",
      few: "približno {{count}} ure",
      other: "približno {{count}} ur",
    },
    past: {
      one: "približno {{count}} uro",
      two: "približno {{count}} urama",
      few: "približno {{count}} urami",
      other: "približno {{count}} urami",
    },
    future: {
      one: "približno {{count}} uro",
      two: "približno {{count}} uri",
      few: "približno {{count}} ure",
      other: "približno {{count}} ur",
    },
  },

  xHours: {
    present: {
      one: "{{count}} ura",
      two: "{{count}} uri",
      few: "{{count}} ure",
      other: "{{count}} ur",
    },
    past: {
      one: "{{count}} uro",
      two: "{{count}} urama",
      few: "{{count}} urami",
      other: "{{count}} urami",
    },
    future: {
      one: "{{count}} uro",
      two: "{{count}} uri",
      few: "{{count}} ure",
      other: "{{count}} ur",
    },
  },

  xDays: {
    present: {
      one: "{{count}} dan",
      two: "{{count}} dni",
      few: "{{count}} dni",
      other: "{{count}} dni",
    },
    past: {
      one: "{{count}} dnem",
      two: "{{count}} dnevoma",
      few: "{{count}} dnevi",
      other: "{{count}} dnevi",
    },
    future: {
      one: "{{count}} dan",
      two: "{{count}} dni",
      few: "{{count}} dni",
      other: "{{count}} dni",
    },
  },

  // no tenses for weeks?
  aboutXWeeks: {
    one: "približno {{count}} teden",
    two: "približno {{count}} tedna",
    few: "približno {{count}} tedne",
    other: "približno {{count}} tednov",
  },

  // no tenses for weeks?
  xWeeks: {
    one: "{{count}} teden",
    two: "{{count}} tedna",
    few: "{{count}} tedne",
    other: "{{count}} tednov",
  },

  aboutXMonths: {
    present: {
      one: "približno {{count}} mesec",
      two: "približno {{count}} meseca",
      few: "približno {{count}} mesece",
      other: "približno {{count}} mesecev",
    },
    past: {
      one: "približno {{count}} mesecem",
      two: "približno {{count}} mesecema",
      few: "približno {{count}} meseci",
      other: "približno {{count}} meseci",
    },
    future: {
      one: "približno {{count}} mesec",
      two: "približno {{count}} meseca",
      few: "približno {{count}} mesece",
      other: "približno {{count}} mesecev",
    },
  },

  xMonths: {
    present: {
      one: "{{count}} mesec",
      two: "{{count}} meseca",
      few: "{{count}} meseci",
      other: "{{count}} mesecev",
    },
    past: {
      one: "{{count}} mesecem",
      two: "{{count}} mesecema",
      few: "{{count}} meseci",
      other: "{{count}} meseci",
    },
    future: {
      one: "{{count}} mesec",
      two: "{{count}} meseca",
      few: "{{count}} mesece",
      other: "{{count}} mesecev",
    },
  },

  aboutXYears: {
    present: {
      one: "približno {{count}} leto",
      two: "približno {{count}} leti",
      few: "približno {{count}} leta",
      other: "približno {{count}} let",
    },
    past: {
      one: "približno {{count}} letom",
      two: "približno {{count}} letoma",
      few: "približno {{count}} leti",
      other: "približno {{count}} leti",
    },
    future: {
      one: "približno {{count}} leto",
      two: "približno {{count}} leti",
      few: "približno {{count}} leta",
      other: "približno {{count}} let",
    },
  },

  xYears: {
    present: {
      one: "{{count}} leto",
      two: "{{count}} leti",
      few: "{{count}} leta",
      other: "{{count}} let",
    },
    past: {
      one: "{{count}} letom",
      two: "{{count}} letoma",
      few: "{{count}} leti",
      other: "{{count}} leti",
    },
    future: {
      one: "{{count}} leto",
      two: "{{count}} leti",
      few: "{{count}} leta",
      other: "{{count}} let",
    },
  },

  overXYears: {
    present: {
      one: "več kot {{count}} leto",
      two: "več kot {{count}} leti",
      few: "več kot {{count}} leta",
      other: "več kot {{count}} let",
    },
    past: {
      one: "več kot {{count}} letom",
      two: "več kot {{count}} letoma",
      few: "več kot {{count}} leti",
      other: "več kot {{count}} leti",
    },
    future: {
      one: "več kot {{count}} leto",
      two: "več kot {{count}} leti",
      few: "več kot {{count}} leta",
      other: "več kot {{count}} let",
    },
  },

  almostXYears: {
    present: {
      one: "skoraj {{count}} leto",
      two: "skoraj {{count}} leti",
      few: "skoraj {{count}} leta",
      other: "skoraj {{count}} let",
    },
    past: {
      one: "skoraj {{count}} letom",
      two: "skoraj {{count}} letoma",
      few: "skoraj {{count}} leti",
      other: "skoraj {{count}} leti",
    },
    future: {
      one: "skoraj {{count}} leto",
      two: "skoraj {{count}} leti",
      few: "skoraj {{count}} leta",
      other: "skoraj {{count}} let",
    },
  },
};

function router_getFormFromCount(count) {
  switch (count % 100) {
    case 1:
      return "one";
    case 2:
      return "two";
    case 3:
    case 4:
      return "few";
    default:
      return "other";
  }
}

const router_sl_lib_formatDistance_formatDistance = (token, count, options) => {
  let result = "";
  let tense = "present";

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      tense = "future";
      result = "čez ";
    } else {
      tense = "past";
      result = "pred ";
    }
  }

  const tokenValue = router_sl_lib_formatDistance_formatDistanceLocale[token];

  if (typeof tokenValue === "string") {
    result += tokenValue;
  } else {
    const form = router_getFormFromCount(count);
    if (router_isPluralType(tokenValue)) {
      result += tokenValue[form].replace("{{count}}", String(count));
    } else {
      result += tokenValue[tense][form].replace("{{count}}", String(count));
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/sl/_lib/formatLong.mjs


const router_sl_lib_formatLong_dateFormats = {
  full: "EEEE, dd. MMMM y",
  long: "dd. MMMM y",
  medium: "d. MMM y",
  short: "d. MM. yy",
};

const router_sl_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_sl_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_sl_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_sl_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_sl_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_sl_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/sl/_lib/formatRelative.mjs
const router_sl_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    const day = date.getDay();

    switch (day) {
      case 0:
        return "'prejšnjo nedeljo ob' p";
      case 3:
        return "'prejšnjo sredo ob' p";
      case 6:
        return "'prejšnjo soboto ob' p";
      default:
        return "'prejšnji' EEEE 'ob' p";
    }
  },
  yesterday: "'včeraj ob' p",
  today: "'danes ob' p",
  tomorrow: "'jutri ob' p",
  nextWeek: (date) => {
    const day = date.getDay();

    switch (day) {
      case 0:
        return "'naslednjo nedeljo ob' p";
      case 3:
        return "'naslednjo sredo ob' p";
      case 6:
        return "'naslednjo soboto ob' p";
      default:
        return "'naslednji' EEEE 'ob' p";
    }
  },
  other: "P",
};

const router_sl_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  const format = router_sl_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/sl/_lib/localize.mjs


const router_sl_lib_localize_eraValues = {
  narrow: ["pr. n. št.", "po n. št."],
  abbreviated: ["pr. n. št.", "po n. št."],
  wide: ["pred našim štetjem", "po našem štetju"],
};

const router_sl_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1. čet.", "2. čet.", "3. čet.", "4. čet."],
  wide: ["1. četrtletje", "2. četrtletje", "3. četrtletje", "4. četrtletje"],
};

const router_sl_lib_localize_monthValues = {
  narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
  abbreviated: [
    "jan.",
    "feb.",
    "mar.",
    "apr.",
    "maj",
    "jun.",
    "jul.",
    "avg.",
    "sep.",
    "okt.",
    "nov.",
    "dec.",
  ],

  wide: [
    "januar",
    "februar",
    "marec",
    "april",
    "maj",
    "junij",
    "julij",
    "avgust",
    "september",
    "oktober",
    "november",
    "december",
  ],
};

const router_sl_lib_localize_dayValues = {
  narrow: ["n", "p", "t", "s", "č", "p", "s"],
  short: ["ned.", "pon.", "tor.", "sre.", "čet.", "pet.", "sob."],
  abbreviated: ["ned.", "pon.", "tor.", "sre.", "čet.", "pet.", "sob."],

  wide: [
    "nedelja",
    "ponedeljek",
    "torek",
    "sreda",
    "četrtek",
    "petek",
    "sobota",
  ],
};

const router_sl_lib_localize_dayPeriodValues = {
  narrow: {
    am: "d",
    pm: "p",
    midnight: "24.00",
    noon: "12.00",
    morning: "j",
    afternoon: "p",
    evening: "v",
    night: "n",
  },
  abbreviated: {
    am: "dop.",
    pm: "pop.",
    midnight: "poln.",
    noon: "pold.",
    morning: "jut.",
    afternoon: "pop.",
    evening: "več.",
    night: "noč",
  },
  wide: {
    am: "dop.",
    pm: "pop.",
    midnight: "polnoč",
    noon: "poldne",
    morning: "jutro",
    afternoon: "popoldne",
    evening: "večer",
    night: "noč",
  },
};

const router_sl_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "d",
    pm: "p",
    midnight: "24.00",
    noon: "12.00",
    morning: "zj",
    afternoon: "p",
    evening: "zv",
    night: "po",
  },
  abbreviated: {
    am: "dop.",
    pm: "pop.",
    midnight: "opoln.",
    noon: "opold.",
    morning: "zjut.",
    afternoon: "pop.",
    evening: "zveč.",
    night: "ponoči",
  },
  wide: {
    am: "dop.",
    pm: "pop.",
    midnight: "opolnoči",
    noon: "opoldne",
    morning: "zjutraj",
    afternoon: "popoldan",
    evening: "zvečer",
    night: "ponoči",
  },
};

const router_sl_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_sl_lib_localize_localize = {
  ordinalNumber: router_sl_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_sl_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_sl_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_sl_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_sl_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_sl_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_sl_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/sl/_lib/match.mjs



const router_sl_lib_match_matchOrdinalNumberPattern = /^(\d+)\./i;
const router_sl_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_sl_lib_match_matchEraPatterns = {
  abbreviated: /^(pr\. n\. št\.|po n\. št\.)/i,
  wide: /^(pred Kristusom|pred na[sš]im [sš]tetjem|po Kristusu|po na[sš]em [sš]tetju|na[sš]ega [sš]tetja)/i,
};
const router_sl_lib_match_parseEraPatterns = {
  any: [/^pr/i, /^(po|na[sš]em)/i],
};

const router_sl_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]\.\s?[čc]et\.?/i,
  wide: /^[1234]\. [čc]etrtletje/i,
};
const router_sl_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_sl_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated:
    /^(jan\.|feb\.|mar\.|apr\.|maj|jun\.|jul\.|avg\.|sep\.|okt\.|nov\.|dec\.)/i,
  wide: /^(januar|februar|marec|april|maj|junij|julij|avgust|september|oktober|november|december)/i,
};
const router_sl_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  abbreviated: [
    /^ja/i,
    /^fe/i,
    /^mar/i,
    /^ap/i,
    /^maj/i,
    /^jun/i,
    /^jul/i,
    /^av/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  wide: [
    /^ja/i,
    /^fe/i,
    /^mar/i,
    /^ap/i,
    /^maj/i,
    /^jun/i,
    /^jul/i,
    /^av/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_sl_lib_match_matchDayPatterns = {
  narrow: /^[nptsčc]/i,
  short: /^(ned\.|pon\.|tor\.|sre\.|[cč]et\.|pet\.|sob\.)/i,
  abbreviated: /^(ned\.|pon\.|tor\.|sre\.|[cč]et\.|pet\.|sob\.)/i,
  wide: /^(nedelja|ponedeljek|torek|sreda|[cč]etrtek|petek|sobota)/i,
};
const router_sl_lib_match_parseDayPatterns = {
  narrow: [/^n/i, /^p/i, /^t/i, /^s/i, /^[cč]/i, /^p/i, /^s/i],
  any: [/^n/i, /^po/i, /^t/i, /^sr/i, /^[cč]/i, /^pe/i, /^so/i],
};

const router_sl_lib_match_matchDayPeriodPatterns = {
  narrow: /^(d|po?|z?v|n|z?j|24\.00|12\.00)/i,
  any: /^(dop\.|pop\.|o?poln(\.|o[cč]i?)|o?pold(\.|ne)|z?ve[cč](\.|er)|(po)?no[cč]i?|popold(ne|an)|jut(\.|ro)|zjut(\.|raj))/i,
};
const router_sl_lib_match_parseDayPeriodPatterns = {
  narrow: {
    am: /^d/i,
    pm: /^p/i,
    midnight: /^24/i,
    noon: /^12/i,
    morning: /^(z?j)/i,
    afternoon: /^p/i,
    evening: /^(z?v)/i,
    night: /^(n|po)/i,
  },
  any: {
    am: /^dop\./i,
    pm: /^pop\./i,
    midnight: /^o?poln/i,
    noon: /^o?pold/i,
    morning: /j/i,
    afternoon: /^pop\./i,
    evening: /^z?ve/i,
    night: /(po)?no/i,
  },
};

const router_sl_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_sl_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_sl_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_sl_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sl_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_sl_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sl_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_sl_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sl_lib_match_parseMonthPatterns,
    defaultParseWidth: "wide",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_sl_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sl_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_sl_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_sl_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/sl.mjs






/**
 * @category Locales
 * @summary Slovenian locale.
 * @language Slovenian
 * @iso-639-2 slv
 * @author Adam Stradovnik [@Neoglyph](https://github.com/Neoglyph)
 * @author Mato Žgajner [@mzgajner](https://github.com/mzgajner)
 */
const router_sl = {
  code: "sl",
  formatDistance: router_sl_lib_formatDistance_formatDistance,
  formatLong: router_sl_lib_formatLong_formatLong,
  formatRelative: router_sl_lib_formatRelative_formatRelative,
  localize: router_sl_lib_localize_localize,
  match: router_sl_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_sl = ((/* unused pure expression or super */ null && (router_sl)));

;// ./node_modules/date-fns/locale/sq/_lib/formatDistance.mjs
const router_sq_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "më pak se një sekondë",
    other: "më pak se {{count}} sekonda",
  },

  xSeconds: {
    one: "1 sekondë",
    other: "{{count}} sekonda",
  },

  halfAMinute: "gjysëm minuti",

  lessThanXMinutes: {
    one: "më pak se një minute",
    other: "më pak se {{count}} minuta",
  },

  xMinutes: {
    one: "1 minutë",
    other: "{{count}} minuta",
  },

  aboutXHours: {
    one: "rreth 1 orë",
    other: "rreth {{count}} orë",
  },

  xHours: {
    one: "1 orë",
    other: "{{count}} orë",
  },

  xDays: {
    one: "1 ditë",
    other: "{{count}} ditë",
  },

  aboutXWeeks: {
    one: "rreth 1 javë",
    other: "rreth {{count}} javë",
  },

  xWeeks: {
    one: "1 javë",
    other: "{{count}} javë",
  },

  aboutXMonths: {
    one: "rreth 1 muaj",
    other: "rreth {{count}} muaj",
  },

  xMonths: {
    one: "1 muaj",
    other: "{{count}} muaj",
  },

  aboutXYears: {
    one: "rreth 1 vit",
    other: "rreth {{count}} vite",
  },

  xYears: {
    one: "1 vit",
    other: "{{count}} vite",
  },

  overXYears: {
    one: "mbi 1 vit",
    other: "mbi {{count}} vite",
  },

  almostXYears: {
    one: "pothuajse 1 vit",
    other: "pothuajse {{count}} vite",
  },
};

const router_sq_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_sq_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "në " + result;
    } else {
      return result + " më parë";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/sq/_lib/formatLong.mjs


const router_sq_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_sq_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_sq_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'në' {{time}}",
  long: "{{date}} 'në' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_sq_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_sq_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_sq_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_sq_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/sq/_lib/formatRelative.mjs
const router_sq_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'të' eeee 'e shkuar në' p",
  yesterday: "'dje në' p",
  today: "'sot në' p",
  tomorrow: "'nesër në' p",
  nextWeek: "eeee 'at' p",
  other: "P",
};

const router_sq_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_sq_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/sq/_lib/localize.mjs


const router_sq_lib_localize_eraValues = {
  narrow: ["P", "M"],
  abbreviated: ["PK", "MK"],
  wide: ["Para Krishtit", "Mbas Krishtit"],
};

const router_sq_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["4-mujori I", "4-mujori II", "4-mujori III", "4-mujori IV"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_sq_lib_localize_monthValues = {
  narrow: ["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"],
  abbreviated: [
    "Jan",
    "Shk",
    "Mar",
    "Pri",
    "Maj",
    "Qer",
    "Kor",
    "Gus",
    "Sht",
    "Tet",
    "Nën",
    "Dhj",
  ],

  wide: [
    "Janar",
    "Shkurt",
    "Mars",
    "Prill",
    "Maj",
    "Qershor",
    "Korrik",
    "Gusht",
    "Shtator",
    "Tetor",
    "Nëntor",
    "Dhjetor",
  ],
};

const router_sq_lib_localize_dayValues = {
  narrow: ["D", "H", "M", "M", "E", "P", "S"],
  short: ["Di", "Hë", "Ma", "Më", "En", "Pr", "Sh"],
  abbreviated: ["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Sht"],
  wide: ["Dielë", "Hënë", "Martë", "Mërkurë", "Enjte", "Premte", "Shtunë"],
};

const router_sq_lib_localize_dayPeriodValues = {
  narrow: {
    am: "p",
    pm: "m",
    midnight: "m",
    noon: "d",
    morning: "mëngjes",
    afternoon: "dite",
    evening: "mbrëmje",
    night: "natë",
  },
  abbreviated: {
    am: "PD",
    pm: "MD",
    midnight: "mesnëtë",
    noon: "drek",
    morning: "mëngjes",
    afternoon: "mbasdite",
    evening: "mbrëmje",
    night: "natë",
  },
  wide: {
    am: "p.d.",
    pm: "m.d.",
    midnight: "mesnëtë",
    noon: "drek",
    morning: "mëngjes",
    afternoon: "mbasdite",
    evening: "mbrëmje",
    night: "natë",
  },
};

const router_sq_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "p",
    pm: "m",
    midnight: "m",
    noon: "d",
    morning: "në mëngjes",
    afternoon: "në mbasdite",
    evening: "në mbrëmje",
    night: "në mesnatë",
  },
  abbreviated: {
    am: "PD",
    pm: "MD",
    midnight: "mesnatë",
    noon: "drek",
    morning: "në mëngjes",
    afternoon: "në mbasdite",
    evening: "në mbrëmje",
    night: "në mesnatë",
  },
  wide: {
    am: "p.d.",
    pm: "m.d.",
    midnight: "mesnatë",
    noon: "drek",
    morning: "në mëngjes",
    afternoon: "në mbasdite",
    evening: "në mbrëmje",
    night: "në mesnatë",
  },
};

const router_sq_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);

  if (options?.unit === "hour") return String(number);

  if (number === 1) return number + "-rë";
  if (number === 4) return number + "t";

  return number + "-të";
};

const router_sq_lib_localize_localize = {
  ordinalNumber: router_sq_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_sq_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_sq_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_sq_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_sq_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_sq_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_sq_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/sq/_lib/match.mjs



const router_sq_lib_match_matchOrdinalNumberPattern = /^(\d+)(-rë|-të|t|)?/i;
const router_sq_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_sq_lib_match_matchEraPatterns = {
  narrow: /^(p|m)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(para krishtit|mbas krishtit)/i,
};
const router_sq_lib_match_parseEraPatterns = {
  any: [/^b/i, /^(p|m)/i],
};

const router_sq_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234]-mujori (i{1,3}|iv)/i,
};
const router_sq_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_sq_lib_match_matchMonthPatterns = {
  narrow: /^[jsmpqkftnd]/i,
  abbreviated: /^(jan|shk|mar|pri|maj|qer|kor|gus|sht|tet|nën|dhj)/i,
  wide: /^(janar|shkurt|mars|prill|maj|qershor|korrik|gusht|shtator|tetor|nëntor|dhjetor)/i,
};
const router_sq_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^s/i,
    /^m/i,
    /^p/i,
    /^m/i,
    /^q/i,
    /^k/i,
    /^g/i,
    /^s/i,
    /^t/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^shk/i,
    /^mar/i,
    /^pri/i,
    /^maj/i,
    /^qer/i,
    /^kor/i,
    /^gu/i,
    /^sht/i,
    /^tet/i,
    /^n/i,
    /^d/i,
  ],
};

const router_sq_lib_match_matchDayPatterns = {
  narrow: /^[dhmeps]/i,
  short: /^(di|hë|ma|më|en|pr|sh)/i,
  abbreviated: /^(die|hën|mar|mër|enj|pre|sht)/i,
  wide: /^(dielë|hënë|martë|mërkurë|enjte|premte|shtunë)/i,
};
const router_sq_lib_match_parseDayPatterns = {
  narrow: [/^d/i, /^h/i, /^m/i, /^m/i, /^e/i, /^p/i, /^s/i],
  any: [/^d/i, /^h/i, /^ma/i, /^më/i, /^e/i, /^p/i, /^s/i],
};

const router_sq_lib_match_matchDayPeriodPatterns = {
  narrow: /^(p|m|me|në (mëngjes|mbasdite|mbrëmje|mesnatë))/i,
  any: /^([pm]\.?\s?d\.?|drek|në (mëngjes|mbasdite|mbrëmje|mesnatë))/i,
};
const router_sq_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^p/i,
    pm: /^m/i,
    midnight: /^me/i,
    noon: /^dr/i,
    morning: /mëngjes/i,
    afternoon: /mbasdite/i,
    evening: /mbrëmje/i,
    night: /natë/i,
  },
};

const router_sq_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_sq_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_sq_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_sq_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sq_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_sq_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sq_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_sq_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sq_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_sq_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sq_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_sq_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_sq_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/sq.mjs






/**
 * @category Locales
 * @summary Albanian locale.
 * @language Shqip
 * @iso-639-2 sqi
 * @author Ardit Dine [@arditdine](https://github.com/arditdine)
 */
const router_sq = {
  code: "sq",
  formatDistance: router_sq_lib_formatDistance_formatDistance,
  formatLong: router_sq_lib_formatLong_formatLong,
  formatRelative: router_sq_lib_formatRelative_formatRelative,
  localize: router_sq_lib_localize_localize,
  match: router_sq_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_sq = ((/* unused pure expression or super */ null && (router_sq)));

;// ./node_modules/date-fns/locale/sr/_lib/formatDistance.mjs
const router_sr_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      standalone: "мање од 1 секунде",
      withPrepositionAgo: "мање од 1 секунде",
      withPrepositionIn: "мање од 1 секунду",
    },
    dual: "мање од {{count}} секунде",
    other: "мање од {{count}} секунди",
  },

  xSeconds: {
    one: {
      standalone: "1 секунда",
      withPrepositionAgo: "1 секунде",
      withPrepositionIn: "1 секунду",
    },
    dual: "{{count}} секунде",
    other: "{{count}} секунди",
  },

  halfAMinute: "пола минуте",

  lessThanXMinutes: {
    one: {
      standalone: "мање од 1 минуте",
      withPrepositionAgo: "мање од 1 минуте",
      withPrepositionIn: "мање од 1 минуту",
    },
    dual: "мање од {{count}} минуте",
    other: "мање од {{count}} минута",
  },

  xMinutes: {
    one: {
      standalone: "1 минута",
      withPrepositionAgo: "1 минуте",
      withPrepositionIn: "1 минуту",
    },
    dual: "{{count}} минуте",
    other: "{{count}} минута",
  },

  aboutXHours: {
    one: {
      standalone: "око 1 сат",
      withPrepositionAgo: "око 1 сат",
      withPrepositionIn: "око 1 сат",
    },
    dual: "око {{count}} сата",
    other: "око {{count}} сати",
  },

  xHours: {
    one: {
      standalone: "1 сат",
      withPrepositionAgo: "1 сат",
      withPrepositionIn: "1 сат",
    },
    dual: "{{count}} сата",
    other: "{{count}} сати",
  },

  xDays: {
    one: {
      standalone: "1 дан",
      withPrepositionAgo: "1 дан",
      withPrepositionIn: "1 дан",
    },
    dual: "{{count}} дана",
    other: "{{count}} дана",
  },

  aboutXWeeks: {
    one: {
      standalone: "око 1 недељу",
      withPrepositionAgo: "око 1 недељу",
      withPrepositionIn: "око 1 недељу",
    },
    dual: "око {{count}} недеље",
    other: "око {{count}} недеље",
  },

  xWeeks: {
    one: {
      standalone: "1 недељу",
      withPrepositionAgo: "1 недељу",
      withPrepositionIn: "1 недељу",
    },
    dual: "{{count}} недеље",
    other: "{{count}} недеље",
  },

  aboutXMonths: {
    one: {
      standalone: "око 1 месец",
      withPrepositionAgo: "око 1 месец",
      withPrepositionIn: "око 1 месец",
    },
    dual: "око {{count}} месеца",
    other: "око {{count}} месеци",
  },

  xMonths: {
    one: {
      standalone: "1 месец",
      withPrepositionAgo: "1 месец",
      withPrepositionIn: "1 месец",
    },
    dual: "{{count}} месеца",
    other: "{{count}} месеци",
  },

  aboutXYears: {
    one: {
      standalone: "око 1 годину",
      withPrepositionAgo: "око 1 годину",
      withPrepositionIn: "око 1 годину",
    },
    dual: "око {{count}} године",
    other: "око {{count}} година",
  },

  xYears: {
    one: {
      standalone: "1 година",
      withPrepositionAgo: "1 године",
      withPrepositionIn: "1 годину",
    },
    dual: "{{count}} године",
    other: "{{count}} година",
  },

  overXYears: {
    one: {
      standalone: "преко 1 годину",
      withPrepositionAgo: "преко 1 годину",
      withPrepositionIn: "преко 1 годину",
    },
    dual: "преко {{count}} године",
    other: "преко {{count}} година",
  },

  almostXYears: {
    one: {
      standalone: "готово 1 годину",
      withPrepositionAgo: "готово 1 годину",
      withPrepositionIn: "готово 1 годину",
    },
    dual: "готово {{count}} године",
    other: "готово {{count}} година",
  },
};

const router_sr_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_sr_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    if (options?.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        result = tokenValue.one.withPrepositionIn;
      } else {
        result = tokenValue.one.withPrepositionAgo;
      }
    } else {
      result = tokenValue.one.standalone;
    }
  } else if (
    count % 10 > 1 &&
    count % 10 < 5 && // if last digit is between 2 and 4
    String(count).substr(-2, 1) !== "1" // unless the 2nd to last digit is "1"
  ) {
    result = tokenValue.dual.replace("{{count}}", String(count));
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "за " + result;
    } else {
      return "пре " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/sr/_lib/formatLong.mjs


const router_sr_lib_formatLong_dateFormats = {
  full: "EEEE, d. MMMM yyyy.",
  long: "d. MMMM yyyy.",
  medium: "d. MMM yy.",
  short: "dd. MM. yy.",
};

const router_sr_lib_formatLong_timeFormats = {
  full: "HH:mm:ss (zzzz)",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_sr_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'у' {{time}}",
  long: "{{date}} 'у' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_sr_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_sr_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_sr_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_sr_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/sr/_lib/formatRelative.mjs
const router_sr_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    const day = date.getDay();

    switch (day) {
      case 0:
        return "'прошле недеље у' p";
      case 3:
        return "'прошле среде у' p";
      case 6:
        return "'прошле суботе у' p";
      default:
        return "'прошли' EEEE 'у' p";
    }
  },
  yesterday: "'јуче у' p",
  today: "'данас у' p",
  tomorrow: "'сутра у' p",
  nextWeek: (date) => {
    const day = date.getDay();

    switch (day) {
      case 0:
        return "'следеће недеље у' p";
      case 3:
        return "'следећу среду у' p";
      case 6:
        return "'следећу суботу у' p";
      default:
        return "'следећи' EEEE 'у' p";
    }
  },
  other: "P",
};

const router_sr_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  const format = router_sr_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/sr/_lib/localize.mjs


const router_sr_lib_localize_eraValues = {
  narrow: ["пр.н.е.", "АД"],
  abbreviated: ["пр. Хр.", "по. Хр."],
  wide: ["Пре Христа", "После Христа"],
};

const router_sr_lib_localize_quarterValues = {
  narrow: ["1.", "2.", "3.", "4."],
  abbreviated: ["1. кв.", "2. кв.", "3. кв.", "4. кв."],
  wide: ["1. квартал", "2. квартал", "3. квартал", "4. квартал"],
};

const router_sr_lib_localize_monthValues = {
  narrow: [
    "1.",
    "2.",
    "3.",
    "4.",
    "5.",
    "6.",
    "7.",
    "8.",
    "9.",
    "10.",
    "11.",
    "12.",
  ],

  abbreviated: [
    "јан",
    "феб",
    "мар",
    "апр",
    "мај",
    "јун",
    "јул",
    "авг",
    "сеп",
    "окт",
    "нов",
    "дец",
  ],

  wide: [
    "јануар",
    "фебруар",
    "март",
    "април",
    "мај",
    "јун",
    "јул",
    "август",
    "септембар",
    "октобар",
    "новембар",
    "децембар",
  ],
};

const router_sr_lib_localize_formattingMonthValues = {
  narrow: [
    "1.",
    "2.",
    "3.",
    "4.",
    "5.",
    "6.",
    "7.",
    "8.",
    "9.",
    "10.",
    "11.",
    "12.",
  ],

  abbreviated: [
    "јан",
    "феб",
    "мар",
    "апр",
    "мај",
    "јун",
    "јул",
    "авг",
    "сеп",
    "окт",
    "нов",
    "дец",
  ],

  wide: [
    "јануар",
    "фебруар",
    "март",
    "април",
    "мај",
    "јун",
    "јул",
    "август",
    "септембар",
    "октобар",
    "новембар",
    "децембар",
  ],
};

const router_sr_lib_localize_dayValues = {
  narrow: ["Н", "П", "У", "С", "Ч", "П", "С"],
  short: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"],
  abbreviated: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"],
  wide: [
    "недеља",
    "понедељак",
    "уторак",
    "среда",
    "четвртак",
    "петак",
    "субота",
  ],
};

const router_sr_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "АМ",
    pm: "ПМ",
    midnight: "поноћ",
    noon: "подне",
    morning: "ујутру",
    afternoon: "поподне",
    evening: "увече",
    night: "ноћу",
  },
  abbreviated: {
    am: "АМ",
    pm: "ПМ",
    midnight: "поноћ",
    noon: "подне",
    morning: "ујутру",
    afternoon: "поподне",
    evening: "увече",
    night: "ноћу",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "поноћ",
    noon: "подне",
    morning: "ујутру",
    afternoon: "после подне",
    evening: "увече",
    night: "ноћу",
  },
};

const router_sr_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "поноћ",
    noon: "подне",
    morning: "ујутру",
    afternoon: "поподне",
    evening: "увече",
    night: "ноћу",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "поноћ",
    noon: "подне",
    morning: "ујутру",
    afternoon: "поподне",
    evening: "увече",
    night: "ноћу",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "поноћ",
    noon: "подне",
    morning: "ујутру",
    afternoon: "после подне",
    evening: "увече",
    night: "ноћу",
  },
};

const router_sr_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_sr_lib_localize_localize = {
  ordinalNumber: router_sr_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_sr_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_sr_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_sr_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_sr_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_sr_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_sr_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_sr_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/sr/_lib/match.mjs



const router_sr_lib_match_matchOrdinalNumberPattern = /^(\d+)\./i;
const router_sr_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_sr_lib_match_matchEraPatterns = {
  narrow: /^(пр\.н\.е\.|АД)/i,
  abbreviated: /^(пр\.\s?Хр\.|по\.\s?Хр\.)/i,
  wide: /^(Пре Христа|пре нове ере|После Христа|нова ера)/i,
};
const router_sr_lib_match_parseEraPatterns = {
  any: [/^пр/i, /^(по|нова)/i],
};

const router_sr_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]\.\s?кв\.?/i,
  wide: /^[1234]\. квартал/i,
};
const router_sr_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_sr_lib_match_matchMonthPatterns = {
  narrow: /^(10|11|12|[123456789])\./i,
  abbreviated: /^(јан|феб|мар|апр|мај|јун|јул|авг|сеп|окт|нов|дец)/i,
  wide: /^((јануар|јануара)|(фебруар|фебруара)|(март|марта)|(април|априла)|(мја|маја)|(јун|јуна)|(јул|јула)|(август|августа)|(септембар|септембра)|(октобар|октобра)|(новембар|новембра)|(децембар|децембра))/i,
};
const router_sr_lib_match_parseMonthPatterns = {
  narrow: [
    /^1/i,
    /^2/i,
    /^3/i,
    /^4/i,
    /^5/i,
    /^6/i,
    /^7/i,
    /^8/i,
    /^9/i,
    /^10/i,
    /^11/i,
    /^12/i,
  ],

  any: [
    /^ја/i,
    /^ф/i,
    /^мар/i,
    /^ап/i,
    /^мај/i,
    /^јун/i,
    /^јул/i,
    /^авг/i,
    /^с/i,
    /^о/i,
    /^н/i,
    /^д/i,
  ],
};

const router_sr_lib_match_matchDayPatterns = {
  narrow: /^[пусчн]/i,
  short: /^(нед|пон|уто|сре|чет|пет|суб)/i,
  abbreviated: /^(нед|пон|уто|сре|чет|пет|суб)/i,
  wide: /^(недеља|понедељак|уторак|среда|четвртак|петак|субота)/i,
};
const router_sr_lib_match_parseDayPatterns = {
  narrow: [/^п/i, /^у/i, /^с/i, /^ч/i, /^п/i, /^с/i, /^н/i],
  any: [/^нед/i, /^пон/i, /^уто/i, /^сре/i, /^чет/i, /^пет/i, /^суб/i],
};

const router_sr_lib_match_matchDayPeriodPatterns = {
  any: /^(ам|пм|поноћ|(по)?подне|увече|ноћу|после подне|ујутру)/i,
};
const router_sr_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^поно/i,
    noon: /^под/i,
    morning: /ујутру/i,
    afternoon: /(после\s|по)+подне/i,
    evening: /(увече)/i,
    night: /(ноћу)/i,
  },
};

const router_sr_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_sr_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_sr_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_sr_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sr_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_sr_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sr_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_sr_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sr_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_sr_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sr_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_sr_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_sr_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/sr.mjs






/**
 * @category Locales
 * @summary Serbian cyrillic locale.
 * @language Serbian
 * @iso-639-2 srp
 * @author Igor Radivojević [@rogyvoje](https://github.com/rogyvoje)
 */
const router_sr = {
  code: "sr",
  formatDistance: router_sr_lib_formatDistance_formatDistance,
  formatLong: router_sr_lib_formatLong_formatLong,
  formatRelative: router_sr_lib_formatRelative_formatRelative,
  localize: router_sr_lib_localize_localize,
  match: router_sr_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_sr = ((/* unused pure expression or super */ null && (router_sr)));

;// ./node_modules/date-fns/locale/sr-Latn/_lib/formatDistance.mjs
const router_sr_Latn_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      standalone: "manje od 1 sekunde",
      withPrepositionAgo: "manje od 1 sekunde",
      withPrepositionIn: "manje od 1 sekundu",
    },
    dual: "manje od {{count}} sekunde",
    other: "manje od {{count}} sekundi",
  },

  xSeconds: {
    one: {
      standalone: "1 sekunda",
      withPrepositionAgo: "1 sekunde",
      withPrepositionIn: "1 sekundu",
    },
    dual: "{{count}} sekunde",
    other: "{{count}} sekundi",
  },

  halfAMinute: "pola minute",

  lessThanXMinutes: {
    one: {
      standalone: "manje od 1 minute",
      withPrepositionAgo: "manje od 1 minute",
      withPrepositionIn: "manje od 1 minutu",
    },
    dual: "manje od {{count}} minute",
    other: "manje od {{count}} minuta",
  },

  xMinutes: {
    one: {
      standalone: "1 minuta",
      withPrepositionAgo: "1 minute",
      withPrepositionIn: "1 minutu",
    },
    dual: "{{count}} minute",
    other: "{{count}} minuta",
  },

  aboutXHours: {
    one: {
      standalone: "oko 1 sat",
      withPrepositionAgo: "oko 1 sat",
      withPrepositionIn: "oko 1 sat",
    },
    dual: "oko {{count}} sata",
    other: "oko {{count}} sati",
  },

  xHours: {
    one: {
      standalone: "1 sat",
      withPrepositionAgo: "1 sat",
      withPrepositionIn: "1 sat",
    },
    dual: "{{count}} sata",
    other: "{{count}} sati",
  },

  xDays: {
    one: {
      standalone: "1 dan",
      withPrepositionAgo: "1 dan",
      withPrepositionIn: "1 dan",
    },
    dual: "{{count}} dana",
    other: "{{count}} dana",
  },

  aboutXWeeks: {
    one: {
      standalone: "oko 1 nedelju",
      withPrepositionAgo: "oko 1 nedelju",
      withPrepositionIn: "oko 1 nedelju",
    },
    dual: "oko {{count}} nedelje",
    other: "oko {{count}} nedelje",
  },

  xWeeks: {
    one: {
      standalone: "1 nedelju",
      withPrepositionAgo: "1 nedelju",
      withPrepositionIn: "1 nedelju",
    },
    dual: "{{count}} nedelje",
    other: "{{count}} nedelje",
  },

  aboutXMonths: {
    one: {
      standalone: "oko 1 mesec",
      withPrepositionAgo: "oko 1 mesec",
      withPrepositionIn: "oko 1 mesec",
    },
    dual: "oko {{count}} meseca",
    other: "oko {{count}} meseci",
  },

  xMonths: {
    one: {
      standalone: "1 mesec",
      withPrepositionAgo: "1 mesec",
      withPrepositionIn: "1 mesec",
    },
    dual: "{{count}} meseca",
    other: "{{count}} meseci",
  },

  aboutXYears: {
    one: {
      standalone: "oko 1 godinu",
      withPrepositionAgo: "oko 1 godinu",
      withPrepositionIn: "oko 1 godinu",
    },
    dual: "oko {{count}} godine",
    other: "oko {{count}} godina",
  },

  xYears: {
    one: {
      standalone: "1 godina",
      withPrepositionAgo: "1 godine",
      withPrepositionIn: "1 godinu",
    },
    dual: "{{count}} godine",
    other: "{{count}} godina",
  },

  overXYears: {
    one: {
      standalone: "preko 1 godinu",
      withPrepositionAgo: "preko 1 godinu",
      withPrepositionIn: "preko 1 godinu",
    },
    dual: "preko {{count}} godine",
    other: "preko {{count}} godina",
  },

  almostXYears: {
    one: {
      standalone: "gotovo 1 godinu",
      withPrepositionAgo: "gotovo 1 godinu",
      withPrepositionIn: "gotovo 1 godinu",
    },
    dual: "gotovo {{count}} godine",
    other: "gotovo {{count}} godina",
  },
};

const router_sr_Latn_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_sr_Latn_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    if (options?.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        result = tokenValue.one.withPrepositionIn;
      } else {
        result = tokenValue.one.withPrepositionAgo;
      }
    } else {
      result = tokenValue.one.standalone;
    }
  } else if (
    count % 10 > 1 &&
    count % 10 < 5 && // if last digit is between 2 and 4
    String(count).substr(-2, 1) !== "1" // unless the 2nd to last digit is "1"
  ) {
    result = tokenValue.dual.replace("{{count}}", String(count));
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "za " + result;
    } else {
      return "pre " + result;
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/sr-Latn/_lib/formatLong.mjs


const router_sr_Latn_lib_formatLong_dateFormats = {
  full: "EEEE, d. MMMM yyyy.",
  long: "d. MMMM yyyy.",
  medium: "d. MMM yy.",
  short: "dd. MM. yy.",
};

const router_sr_Latn_lib_formatLong_timeFormats = {
  full: "HH:mm:ss (zzzz)",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_sr_Latn_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'u' {{time}}",
  long: "{{date}} 'u' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_sr_Latn_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_sr_Latn_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_sr_Latn_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_sr_Latn_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/sr-Latn/_lib/formatRelative.mjs
const router_sr_Latn_lib_formatRelative_formatRelativeLocale = {
  lastWeek: (date) => {
    switch (date.getDay()) {
      case 0:
        return "'prošle nedelje u' p";
      case 3:
        return "'prošle srede u' p";
      case 6:
        return "'prošle subote u' p";
      default:
        return "'prošli' EEEE 'u' p";
    }
  },
  yesterday: "'juče u' p",
  today: "'danas u' p",
  tomorrow: "'sutra u' p",
  nextWeek: (date) => {
    switch (date.getDay()) {
      case 0:
        return "'sledeće nedelje u' p";
      case 3:
        return "'sledeću sredu u' p";
      case 6:
        return "'sledeću subotu u' p";
      default:
        return "'sledeći' EEEE 'u' p";
    }
  },
  other: "P",
};

const router_sr_Latn_lib_formatRelative_formatRelative = (token, date, _baseDate, _options) => {
  const format = router_sr_Latn_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date);
  }

  return format;
};

;// ./node_modules/date-fns/locale/sr-Latn/_lib/localize.mjs


const router_sr_Latn_lib_localize_eraValues = {
  narrow: ["pr.n.e.", "AD"],
  abbreviated: ["pr. Hr.", "po. Hr."],
  wide: ["Pre Hrista", "Posle Hrista"],
};

const router_sr_Latn_lib_localize_quarterValues = {
  narrow: ["1.", "2.", "3.", "4."],
  abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."],
  wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
};

const router_sr_Latn_lib_localize_monthValues = {
  narrow: [
    "1.",
    "2.",
    "3.",
    "4.",
    "5.",
    "6.",
    "7.",
    "8.",
    "9.",
    "10.",
    "11.",
    "12.",
  ],

  abbreviated: [
    "jan",
    "feb",
    "mar",
    "apr",
    "maj",
    "jun",
    "jul",
    "avg",
    "sep",
    "okt",
    "nov",
    "dec",
  ],

  wide: [
    "januar",
    "februar",
    "mart",
    "april",
    "maj",
    "jun",
    "jul",
    "avgust",
    "septembar",
    "oktobar",
    "novembar",
    "decembar",
  ],
};

const router_sr_Latn_lib_localize_formattingMonthValues = {
  narrow: [
    "1.",
    "2.",
    "3.",
    "4.",
    "5.",
    "6.",
    "7.",
    "8.",
    "9.",
    "10.",
    "11.",
    "12.",
  ],

  abbreviated: [
    "jan",
    "feb",
    "mar",
    "apr",
    "maj",
    "jun",
    "jul",
    "avg",
    "sep",
    "okt",
    "nov",
    "dec",
  ],

  wide: [
    "januar",
    "februar",
    "mart",
    "april",
    "maj",
    "jun",
    "jul",
    "avgust",
    "septembar",
    "oktobar",
    "novembar",
    "decembar",
  ],
};

const router_sr_Latn_lib_localize_dayValues = {
  narrow: ["N", "P", "U", "S", "Č", "P", "S"],
  short: ["ned", "pon", "uto", "sre", "čet", "pet", "sub"],
  abbreviated: ["ned", "pon", "uto", "sre", "čet", "pet", "sub"],
  wide: [
    "nedelja",
    "ponedeljak",
    "utorak",
    "sreda",
    "četvrtak",
    "petak",
    "subota",
  ],
};

const router_sr_Latn_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "popodne",
    evening: "uveče",
    night: "noću",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "popodne",
    evening: "uveče",
    night: "noću",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "posle podne",
    evening: "uveče",
    night: "noću",
  },
};

const router_sr_Latn_lib_localize_dayPeriodValues = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "popodne",
    evening: "uveče",
    night: "noću",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "popodne",
    evening: "uveče",
    night: "noću",
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "ponoć",
    noon: "podne",
    morning: "ujutru",
    afternoon: "posle podne",
    evening: "uveče",
    night: "noću",
  },
};

const router_sr_Latn_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_sr_Latn_lib_localize_localize = {
  ordinalNumber: router_sr_Latn_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_sr_Latn_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_sr_Latn_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_sr_Latn_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_sr_Latn_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_sr_Latn_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_sr_Latn_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_sr_Latn_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/sr-Latn/_lib/match.mjs



const router_sr_Latn_lib_match_matchOrdinalNumberPattern = /^(\d+)\./i;
const router_sr_Latn_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_sr_Latn_lib_match_matchEraPatterns = {
  narrow: /^(pr\.n\.e\.|AD)/i,
  abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i,
  wide: /^(Pre Hrista|pre nove ere|Posle Hrista|nova era)/i,
};
const router_sr_Latn_lib_match_parseEraPatterns = {
  any: [/^pr/i, /^(po|nova)/i],
};

const router_sr_Latn_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]\.\s?kv\.?/i,
  wide: /^[1234]\. kvartal/i,
};
const router_sr_Latn_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_sr_Latn_lib_match_matchMonthPatterns = {
  narrow: /^(10|11|12|[123456789])\./i,
  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,
  wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(jun|juna)|(jul|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i,
};
const router_sr_Latn_lib_match_parseMonthPatterns = {
  narrow: [
    /^1/i,
    /^2/i,
    /^3/i,
    /^4/i,
    /^5/i,
    /^6/i,
    /^7/i,
    /^8/i,
    /^9/i,
    /^10/i,
    /^11/i,
    /^12/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^maj/i,
    /^jun/i,
    /^jul/i,
    /^avg/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_sr_Latn_lib_match_matchDayPatterns = {
  narrow: /^[npusčc]/i,
  short: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,
  abbreviated: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,
  wide: /^(nedelja|ponedeljak|utorak|sreda|(četvrtak|cetvrtak)|petak|subota)/i,
};
const router_sr_Latn_lib_match_parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
};

const router_sr_Latn_lib_match_matchDayPeriodPatterns = {
  any: /^(am|pm|ponoc|ponoć|(po)?podne|uvece|uveče|noću|posle podne|ujutru)/i,
};
const router_sr_Latn_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^pono/i,
    noon: /^pod/i,
    morning: /jutro/i,
    afternoon: /(posle\s|po)+podne/i,
    evening: /(uvece|uveče)/i,
    night: /(nocu|noću)/i,
  },
};

const router_sr_Latn_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_sr_Latn_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_sr_Latn_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_sr_Latn_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sr_Latn_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_sr_Latn_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sr_Latn_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_sr_Latn_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sr_Latn_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_sr_Latn_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sr_Latn_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_sr_Latn_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_sr_Latn_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/sr-Latn.mjs






/**
 * @category Locales
 * @summary Serbian latin locale.
 * @language Serbian
 * @iso-639-2 srp
 * @author Igor Radivojević [@rogyvoje](https://github.com/rogyvoje)
 */
const router_srLatn = {
  code: "sr-Latn",
  formatDistance: router_sr_Latn_lib_formatDistance_formatDistance,
  formatLong: router_sr_Latn_lib_formatLong_formatLong,
  formatRelative: router_sr_Latn_lib_formatRelative_formatRelative,
  localize: router_sr_Latn_lib_localize_localize,
  match: router_sr_Latn_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_sr_Latn = ((/* unused pure expression or super */ null && (router_srLatn)));

;// ./node_modules/date-fns/locale/sv/_lib/formatDistance.mjs
const router_sv_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "mindre än en sekund",
    other: "mindre än {{count}} sekunder",
  },

  xSeconds: {
    one: "en sekund",
    other: "{{count}} sekunder",
  },

  halfAMinute: "en halv minut",

  lessThanXMinutes: {
    one: "mindre än en minut",
    other: "mindre än {{count}} minuter",
  },

  xMinutes: {
    one: "en minut",
    other: "{{count}} minuter",
  },

  aboutXHours: {
    one: "ungefär en timme",
    other: "ungefär {{count}} timmar",
  },

  xHours: {
    one: "en timme",
    other: "{{count}} timmar",
  },

  xDays: {
    one: "en dag",
    other: "{{count}} dagar",
  },

  aboutXWeeks: {
    one: "ungefär en vecka",
    other: "ungefär {{count}} veckor",
  },

  xWeeks: {
    one: "en vecka",
    other: "{{count}} veckor",
  },

  aboutXMonths: {
    one: "ungefär en månad",
    other: "ungefär {{count}} månader",
  },

  xMonths: {
    one: "en månad",
    other: "{{count}} månader",
  },

  aboutXYears: {
    one: "ungefär ett år",
    other: "ungefär {{count}} år",
  },

  xYears: {
    one: "ett år",
    other: "{{count}} år",
  },

  overXYears: {
    one: "över ett år",
    other: "över {{count}} år",
  },

  almostXYears: {
    one: "nästan ett år",
    other: "nästan {{count}} år",
  },
};

const router_formatDistance_wordMapping = [
  "noll",
  "en",
  "två",
  "tre",
  "fyra",
  "fem",
  "sex",
  "sju",
  "åtta",
  "nio",
  "tio",
  "elva",
  "tolv",
];

const router_sv_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_sv_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace(
      "{{count}}",
      count < 13 ? router_formatDistance_wordMapping[count] : String(count),
    );
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "om " + result;
    } else {
      return result + " sedan";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/sv/_lib/formatLong.mjs


const router_sv_lib_formatLong_dateFormats = {
  full: "EEEE d MMMM y",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "y-MM-dd",
};

const router_sv_lib_formatLong_timeFormats = {
  full: "'kl'. HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_sv_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'kl.' {{time}}",
  long: "{{date}} 'kl.' {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_sv_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_sv_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_sv_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_sv_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/sv/_lib/formatRelative.mjs
const router_sv_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'i' EEEE's kl.' p",
  yesterday: "'igår kl.' p",
  today: "'idag kl.' p",
  tomorrow: "'imorgon kl.' p",
  nextWeek: "EEEE 'kl.' p",
  other: "P",
};

const router_sv_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_sv_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/sv/_lib/localize.mjs


const router_sv_lib_localize_eraValues = {
  narrow: ["f.Kr.", "e.Kr."],
  abbreviated: ["f.Kr.", "e.Kr."],
  wide: ["före Kristus", "efter Kristus"],
};

const router_sv_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"],
};

const router_sv_lib_localize_monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "jan.",
    "feb.",
    "mars",
    "apr.",
    "maj",
    "juni",
    "juli",
    "aug.",
    "sep.",
    "okt.",
    "nov.",
    "dec.",
  ],

  wide: [
    "januari",
    "februari",
    "mars",
    "april",
    "maj",
    "juni",
    "juli",
    "augusti",
    "september",
    "oktober",
    "november",
    "december",
  ],
};

const router_sv_lib_localize_dayValues = {
  narrow: ["S", "M", "T", "O", "T", "F", "L"],
  short: ["sö", "må", "ti", "on", "to", "fr", "lö"],
  abbreviated: ["sön", "mån", "tis", "ons", "tors", "fre", "lör"],
  wide: ["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"],
};

// https://www.unicode.org/cldr/charts/32/summary/sv.html#1888
const router_sv_lib_localize_dayPeriodValues = {
  narrow: {
    am: "fm",
    pm: "em",
    midnight: "midnatt",
    noon: "middag",
    morning: "morg.",
    afternoon: "efterm.",
    evening: "kväll",
    night: "natt",
  },
  abbreviated: {
    am: "f.m.",
    pm: "e.m.",
    midnight: "midnatt",
    noon: "middag",
    morning: "morgon",
    afternoon: "efterm.",
    evening: "kväll",
    night: "natt",
  },
  wide: {
    am: "förmiddag",
    pm: "eftermiddag",
    midnight: "midnatt",
    noon: "middag",
    morning: "morgon",
    afternoon: "eftermiddag",
    evening: "kväll",
    night: "natt",
  },
};

const router_sv_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "fm",
    pm: "em",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morg.",
    afternoon: "på efterm.",
    evening: "på kvällen",
    night: "på natten",
  },
  abbreviated: {
    am: "fm",
    pm: "em",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morg.",
    afternoon: "på efterm.",
    evening: "på kvällen",
    night: "på natten",
  },
  wide: {
    am: "fm",
    pm: "em",
    midnight: "midnatt",
    noon: "middag",
    morning: "på morgonen",
    afternoon: "på eftermiddagen",
    evening: "på kvällen",
    night: "på natten",
  },
};

const router_sv_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  const rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
      case 2:
        return number + ":a";
    }
  }
  return number + ":e";
};

const router_sv_lib_localize_localize = {
  ordinalNumber: router_sv_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_sv_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_sv_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_sv_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_sv_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_sv_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_sv_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/sv/_lib/match.mjs



const router_sv_lib_match_matchOrdinalNumberPattern = /^(\d+)(:a|:e)?/i;
const router_sv_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_sv_lib_match_matchEraPatterns = {
  narrow: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i,
  abbreviated: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i,
  wide: /^(före Kristus|före vår tid|efter Kristus|vår tid)/i,
};
const router_sv_lib_match_parseEraPatterns = {
  any: [/^f/i, /^[ev]/i],
};

const router_sv_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](:a|:e)? kvartalet/i,
};
const router_sv_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_sv_lib_match_matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated:
    /^(jan|feb|mar[s]?|apr|maj|jun[i]?|jul[i]?|aug|sep|okt|nov|dec)\.?/i,
  wide: /^(januari|februari|mars|april|maj|juni|juli|augusti|september|oktober|november|december)/i,
};
const router_sv_lib_match_parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^maj/i,
    /^jun/i,
    /^jul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_sv_lib_match_matchDayPatterns = {
  narrow: /^[smtofl]/i,
  short: /^(sö|må|ti|on|to|fr|lö)/i,
  abbreviated: /^(sön|mån|tis|ons|tors|fre|lör)/i,
  wide: /^(söndag|måndag|tisdag|onsdag|torsdag|fredag|lördag)/i,
};
const router_sv_lib_match_parseDayPatterns = {
  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],
};

const router_sv_lib_match_matchDayPeriodPatterns = {
  any: /^([fe]\.?\s?m\.?|midn(att)?|midd(ag)?|(på) (morgonen|eftermiddagen|kvällen|natten))/i,
};
const router_sv_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^f/i,
    pm: /^e/i,
    midnight: /^midn/i,
    noon: /^midd/i,
    morning: /morgon/i,
    afternoon: /eftermiddag/i,
    evening: /kväll/i,
    night: /natt/i,
  },
};

const router_sv_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_sv_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_sv_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_sv_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sv_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_sv_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sv_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_sv_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sv_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_sv_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_sv_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_sv_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_sv_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/sv.mjs






/**
 * @category Locales
 * @summary Swedish locale.
 * @language Swedish
 * @iso-639-2 swe
 * @author Johannes Ulén [@ejulen](https://github.com/ejulen)
 * @author Alexander Nanberg [@alexandernanberg](https://github.com/alexandernanberg)
 * @author Henrik Andersson [@limelights](https://github.com/limelights)
 */
const router_sv = {
  code: "sv",
  formatDistance: router_sv_lib_formatDistance_formatDistance,
  formatLong: router_sv_lib_formatLong_formatLong,
  formatRelative: router_sv_lib_formatRelative_formatRelative,
  localize: router_sv_lib_localize_localize,
  match: router_sv_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_sv = ((/* unused pure expression or super */ null && (router_sv)));

;// ./node_modules/date-fns/locale/ta/_lib/formatDistance.mjs
function router_formatDistance_isPluralType(val) {
  return val.one !== undefined;
}

const router_ta_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      default: "ஒரு வினாடிக்கு குறைவாக",
      in: "ஒரு வினாடிக்குள்",
      ago: "ஒரு வினாடிக்கு முன்பு",
    },
    other: {
      default: "{{count}} வினாடிகளுக்கு குறைவாக",
      in: "{{count}} வினாடிகளுக்குள்",
      ago: "{{count}} வினாடிகளுக்கு முன்பு",
    },
  },

  xSeconds: {
    one: {
      default: "1 வினாடி",
      in: "1 வினாடியில்",
      ago: "1 வினாடி முன்பு",
    },
    other: {
      default: "{{count}} விநாடிகள்",
      in: "{{count}} வினாடிகளில்",
      ago: "{{count}} விநாடிகளுக்கு முன்பு",
    },
  },

  halfAMinute: {
    default: "அரை நிமிடம்",
    in: "அரை நிமிடத்தில்",
    ago: "அரை நிமிடம் முன்பு",
  },

  lessThanXMinutes: {
    one: {
      default: "ஒரு நிமிடத்திற்கும் குறைவாக",
      in: "ஒரு நிமிடத்திற்குள்",
      ago: "ஒரு நிமிடத்திற்கு முன்பு",
    },
    other: {
      default: "{{count}} நிமிடங்களுக்கும் குறைவாக",
      in: "{{count}} நிமிடங்களுக்குள்",
      ago: "{{count}} நிமிடங்களுக்கு முன்பு",
    },
  },

  xMinutes: {
    one: {
      default: "1 நிமிடம்",
      in: "1 நிமிடத்தில்",
      ago: "1 நிமிடம் முன்பு",
    },
    other: {
      default: "{{count}} நிமிடங்கள்",
      in: "{{count}} நிமிடங்களில்",
      ago: "{{count}} நிமிடங்களுக்கு முன்பு",
    },
  },

  aboutXHours: {
    one: {
      default: "சுமார் 1 மணி நேரம்",
      in: "சுமார் 1 மணி நேரத்தில்",
      ago: "சுமார் 1 மணி நேரத்திற்கு முன்பு",
    },
    other: {
      default: "சுமார் {{count}} மணி நேரம்",
      in: "சுமார் {{count}} மணி நேரத்திற்கு முன்பு",
      ago: "சுமார் {{count}} மணி நேரத்தில்",
    },
  },

  xHours: {
    one: {
      default: "1 மணி நேரம்",
      in: "1 மணி நேரத்தில்",
      ago: "1 மணி நேரத்திற்கு முன்பு",
    },
    other: {
      default: "{{count}} மணி நேரம்",
      in: "{{count}} மணி நேரத்தில்",
      ago: "{{count}} மணி நேரத்திற்கு முன்பு",
    },
  },

  xDays: {
    one: {
      default: "1 நாள்",
      in: "1 நாளில்",
      ago: "1 நாள் முன்பு",
    },
    other: {
      default: "{{count}} நாட்கள்",
      in: "{{count}} நாட்களில்",
      ago: "{{count}} நாட்களுக்கு முன்பு",
    },
  },

  aboutXWeeks: {
    one: {
      default: "சுமார் 1 வாரம்",
      in: "சுமார் 1 வாரத்தில்",
      ago: "சுமார் 1 வாரம் முன்பு",
    },
    other: {
      default: "சுமார் {{count}} வாரங்கள்",
      in: "சுமார் {{count}} வாரங்களில்",
      ago: "சுமார் {{count}} வாரங்களுக்கு முன்பு",
    },
  },

  xWeeks: {
    one: {
      default: "1 வாரம்",
      in: "1 வாரத்தில்",
      ago: "1 வாரம் முன்பு",
    },
    other: {
      default: "{{count}} வாரங்கள்",
      in: "{{count}} வாரங்களில்",
      ago: "{{count}} வாரங்களுக்கு முன்பு",
    },
  },

  aboutXMonths: {
    one: {
      default: "சுமார் 1 மாதம்",
      in: "சுமார் 1 மாதத்தில்",
      ago: "சுமார் 1 மாதத்திற்கு முன்பு",
    },
    other: {
      default: "சுமார் {{count}} மாதங்கள்",
      in: "சுமார் {{count}} மாதங்களில்",
      ago: "சுமார் {{count}} மாதங்களுக்கு முன்பு",
    },
  },

  xMonths: {
    one: {
      default: "1 மாதம்",
      in: "1 மாதத்தில்",
      ago: "1 மாதம் முன்பு",
    },
    other: {
      default: "{{count}} மாதங்கள்",
      in: "{{count}} மாதங்களில்",
      ago: "{{count}} மாதங்களுக்கு முன்பு",
    },
  },

  aboutXYears: {
    one: {
      default: "சுமார் 1 வருடம்",
      in: "சுமார் 1 ஆண்டில்",
      ago: "சுமார் 1 வருடம் முன்பு",
    },
    other: {
      default: "சுமார் {{count}} ஆண்டுகள்",
      in: "சுமார் {{count}} ஆண்டுகளில்",
      ago: "சுமார் {{count}} ஆண்டுகளுக்கு முன்பு",
    },
  },

  xYears: {
    one: {
      default: "1 வருடம்",
      in: "1 ஆண்டில்",
      ago: "1 வருடம் முன்பு",
    },
    other: {
      default: "{{count}} ஆண்டுகள்",
      in: "{{count}} ஆண்டுகளில்",
      ago: "{{count}} ஆண்டுகளுக்கு முன்பு",
    },
  },

  overXYears: {
    one: {
      default: "1 வருடத்திற்கு மேல்",
      in: "1 வருடத்திற்கும் மேலாக",
      ago: "1 வருடம் முன்பு",
    },
    other: {
      default: "{{count}} ஆண்டுகளுக்கும் மேலாக",
      in: "{{count}} ஆண்டுகளில்",
      ago: "{{count}} ஆண்டுகளுக்கு முன்பு",
    },
  },

  almostXYears: {
    one: {
      default: "கிட்டத்தட்ட 1 வருடம்",
      in: "கிட்டத்தட்ட 1 ஆண்டில்",
      ago: "கிட்டத்தட்ட 1 வருடம் முன்பு",
    },
    other: {
      default: "கிட்டத்தட்ட {{count}} ஆண்டுகள்",
      in: "கிட்டத்தட்ட {{count}} ஆண்டுகளில்",
      ago: "கிட்டத்தட்ட {{count}} ஆண்டுகளுக்கு முன்பு",
    },
  },
};

const router_ta_lib_formatDistance_formatDistance = (token, count, options) => {
  const tense = options?.addSuffix
    ? options.comparison && options.comparison > 0
      ? "in"
      : "ago"
    : "default";

  const tokenValue = router_ta_lib_formatDistance_formatDistanceLocale[token];

  if (!router_formatDistance_isPluralType(tokenValue)) return tokenValue[tense];

  if (count === 1) {
    return tokenValue.one[tense];
  } else {
    return tokenValue.other[tense].replace("{{count}}", String(count));
  }
};

;// ./node_modules/date-fns/locale/ta/_lib/formatLong.mjs


// Ref: https://www.unicode.org/cldr/charts/32/summary/ta.html

// CLDR #1846 - #1849
const router_ta_lib_formatLong_dateFormats = {
  full: "EEEE, d MMMM, y",
  long: "d MMMM, y",
  medium: "d MMM, y",
  short: "d/M/yy",
};

// CLDR #1850 - #1853
const router_ta_lib_formatLong_timeFormats = {
  full: "a h:mm:ss zzzz",
  long: "a h:mm:ss z",
  medium: "a h:mm:ss",
  short: "a h:mm",
};

const router_ta_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ta_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ta_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ta_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ta_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ta/_lib/formatRelative.mjs
const router_ta_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'கடந்த' eeee p 'மணிக்கு'",
  yesterday: "'நேற்று ' p 'மணிக்கு'",
  today: "'இன்று ' p 'மணிக்கு'",
  tomorrow: "'நாளை ' p 'மணிக்கு'",
  nextWeek: "eeee p 'மணிக்கு'",
  other: "P",
};

const router_ta_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ta_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ta/_lib/localize.mjs


// Ref: https://www.unicode.org/cldr/charts/32/summary/ta.html

const router_ta_lib_localize_eraValues = {
  narrow: ["கி.மு.", "கி.பி."],
  abbreviated: ["கி.மு.", "கி.பி."], // CLDR #1624, #1626
  wide: ["கிறிஸ்துவுக்கு முன்", "அன்னோ டோமினி"], // CLDR #1620, #1622
};

const router_ta_lib_localize_quarterValues = {
  // CLDR #1644 - #1647
  narrow: ["1", "2", "3", "4"],
  // CLDR #1636 - #1639
  abbreviated: ["காலா.1", "காலா.2", "காலா.3", "காலா.4"],
  // CLDR #1628 - #1631
  wide: [
    "ஒன்றாம் காலாண்டு",
    "இரண்டாம் காலாண்டு",
    "மூன்றாம் காலாண்டு",
    "நான்காம் காலாண்டு",
  ],
};

const router_ta_lib_localize_monthValues = {
  // CLDR #700 - #711
  narrow: ["ஜ", "பி", "மா", "ஏ", "மே", "ஜூ", "ஜூ", "ஆ", "செ", "அ", "ந", "டி"],

  // CLDR #1676 - #1687
  abbreviated: [
    "ஜன.",
    "பிப்.",
    "மார்.",
    "ஏப்.",
    "மே",
    "ஜூன்",
    "ஜூலை",
    "ஆக.",
    "செப்.",
    "அக்.",
    "நவ.",
    "டிச.",
  ],

  // CLDR #1652 - #1663
  wide: [
    "ஜனவரி", // January
    "பிப்ரவரி", // February
    "மார்ச்", // March
    "ஏப்ரல்", // April
    "மே", // May
    "ஜூன்", // June
    "ஜூலை", // July
    "ஆகஸ்ட்", // August
    "செப்டம்பர்", // September
    "அக்டோபர்", // October
    "நவம்பர்", // November
    "டிசம்பர்", // December
  ],
};

const router_ta_lib_localize_dayValues = {
  // CLDR #1766 - #1772
  narrow: ["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"],
  // CLDR #1752 - #1758
  short: ["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"],
  // CLDR #1738 - #1744
  abbreviated: ["ஞாயி.", "திங்.", "செவ்.", "புத.", "வியா.", "வெள்.", "சனி"],

  // CLDR #1724 - #1730
  wide: [
    "ஞாயிறு", // Sunday
    "திங்கள்", // Monday
    "செவ்வாய்", // Tuesday
    "புதன்", // Wednesday
    "வியாழன்", // Thursday
    "வெள்ளி", // Friday
    "சனி", // Saturday
  ],
};

// CLDR #1780 - #1845
const router_ta_lib_localize_dayPeriodValues = {
  narrow: {
    am: "மு.ப",
    pm: "பி.ப",
    midnight: "நள்.",
    noon: "நண்.",
    morning: "கா.",
    afternoon: "மதி.",
    evening: "மா.",
    night: "இர.",
  },
  abbreviated: {
    am: "முற்பகல்",
    pm: "பிற்பகல்",
    midnight: "நள்ளிரவு",
    noon: "நண்பகல்",
    morning: "காலை",
    afternoon: "மதியம்",
    evening: "மாலை",
    night: "இரவு",
  },
  wide: {
    am: "முற்பகல்",
    pm: "பிற்பகல்",
    midnight: "நள்ளிரவு",
    noon: "நண்பகல்",
    morning: "காலை",
    afternoon: "மதியம்",
    evening: "மாலை",
    night: "இரவு",
  },
};

// CLDR #1780 - #1845
const router_ta_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "மு.ப",
    pm: "பி.ப",
    midnight: "நள்.",
    noon: "நண்.",
    morning: "கா.",
    afternoon: "மதி.",
    evening: "மா.",
    night: "இர.",
  },
  abbreviated: {
    am: "முற்பகல்",
    pm: "பிற்பகல்",
    midnight: "நள்ளிரவு",
    noon: "நண்பகல்",
    morning: "காலை",
    afternoon: "மதியம்",
    evening: "மாலை",
    night: "இரவு",
  },
  wide: {
    am: "முற்பகல்",
    pm: "பிற்பகல்",
    midnight: "நள்ளிரவு",
    noon: "நண்பகல்",
    morning: "காலை",
    afternoon: "மதியம்",
    evening: "மாலை",
    night: "இரவு",
  },
};

const router_ta_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_ta_lib_localize_localize = {
  ordinalNumber: router_ta_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ta_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ta_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ta_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ta_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ta_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ta_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ta/_lib/match.mjs



const router_ta_lib_match_matchOrdinalNumberPattern = /^(\d+)(வது)?/i;
const router_ta_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ta_lib_match_matchEraPatterns = {
  narrow: /^(கி.மு.|கி.பி.)/i,
  abbreviated: /^(கி\.?\s?மு\.?|கி\.?\s?பி\.?)/,
  wide: /^(கிறிஸ்துவுக்கு\sமுன்|அன்னோ\sடோமினி)/i,
};
const router_ta_lib_match_parseEraPatterns = {
  any: [/கி\.?\s?மு\.?/, /கி\.?\s?பி\.?/],
};

const router_ta_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^காலா.[1234]/i,
  wide: /^(ஒன்றாம்|இரண்டாம்|மூன்றாம்|நான்காம்) காலாண்டு/i,
};
const router_ta_lib_match_parseQuarterPatterns = {
  narrow: [/1/i, /2/i, /3/i, /4/i],
  any: [
    /(1|காலா.1|ஒன்றாம்)/i,
    /(2|காலா.2|இரண்டாம்)/i,
    /(3|காலா.3|மூன்றாம்)/i,
    /(4|காலா.4|நான்காம்)/i,
  ],
};

const router_ta_lib_match_matchMonthPatterns = {
  narrow: /^(ஜ|பி|மா|ஏ|மே|ஜூ|ஆ|செ|அ|ந|டி)$/i,
  abbreviated: /^(ஜன.|பிப்.|மார்.|ஏப்.|மே|ஜூன்|ஜூலை|ஆக.|செப்.|அக்.|நவ.|டிச.)/i,
  wide: /^(ஜனவரி|பிப்ரவரி|மார்ச்|ஏப்ரல்|மே|ஜூன்|ஜூலை|ஆகஸ்ட்|செப்டம்பர்|அக்டோபர்|நவம்பர்|டிசம்பர்)/i,
};
const router_ta_lib_match_parseMonthPatterns = {
  narrow: [
    /^ஜ$/i,
    /^பி/i,
    /^மா/i,
    /^ஏ/i,
    /^மே/i,
    /^ஜூ/i,
    /^ஜூ/i,
    /^ஆ/i,
    /^செ/i,
    /^அ/i,
    /^ந/i,
    /^டி/i,
  ],

  any: [
    /^ஜன/i,
    /^பி/i,
    /^மா/i,
    /^ஏ/i,
    /^மே/i,
    /^ஜூன்/i,
    /^ஜூலை/i,
    /^ஆ/i,
    /^செ/i,
    /^அ/i,
    /^ந/i,
    /^டி/i,
  ],
};

const router_ta_lib_match_matchDayPatterns = {
  narrow: /^(ஞா|தி|செ|பு|வி|வெ|ச)/i,
  short: /^(ஞா|தி|செ|பு|வி|வெ|ச)/i,
  abbreviated: /^(ஞாயி.|திங்.|செவ்.|புத.|வியா.|வெள்.|சனி)/i,
  wide: /^(ஞாயிறு|திங்கள்|செவ்வாய்|புதன்|வியாழன்|வெள்ளி|சனி)/i,
};
const router_ta_lib_match_parseDayPatterns = {
  narrow: [/^ஞா/i, /^தி/i, /^செ/i, /^பு/i, /^வி/i, /^வெ/i, /^ச/i],
  any: [/^ஞா/i, /^தி/i, /^செ/i, /^பு/i, /^வி/i, /^வெ/i, /^ச/i],
};

const router_ta_lib_match_matchDayPeriodPatterns = {
  narrow: /^(மு.ப|பி.ப|நள்|நண்|காலை|மதியம்|மாலை|இரவு)/i,
  any: /^(மு.ப|பி.ப|முற்பகல்|பிற்பகல்|நள்ளிரவு|நண்பகல்|காலை|மதியம்|மாலை|இரவு)/i,
};
const router_ta_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^மு/i,
    pm: /^பி/i,
    midnight: /^நள்/i,
    noon: /^நண்/i,
    morning: /காலை/i,
    afternoon: /மதியம்/i,
    evening: /மாலை/i,
    night: /இரவு/i,
  },
};

const router_ta_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ta_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ta_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ta_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ta_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ta_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ta_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ta_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ta_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ta_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ta_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ta_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ta_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ta.mjs






/**
 * @category Locales
 * @summary Tamil locale (India).
 * @language Tamil
 * @iso-639-2 tam
 * @author Sibiraj [@sibiraj-s](https://github.com/sibiraj-s)
 */
const router_ta = {
  code: "ta",
  formatDistance: router_ta_lib_formatDistance_formatDistance,
  formatLong: router_ta_lib_formatLong_formatLong,
  formatRelative: router_ta_lib_formatRelative_formatRelative,
  localize: router_ta_lib_localize_localize,
  match: router_ta_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ta = ((/* unused pure expression or super */ null && (router_ta)));

;// ./node_modules/date-fns/locale/te/_lib/formatDistance.mjs
// Source: https://www.unicode.org/cldr/charts/32/summary/te.html

const router_te_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    standalone: {
      one: "సెకను కన్నా తక్కువ",
      other: "{{count}} సెకన్ల కన్నా తక్కువ",
    },
    withPreposition: {
      one: "సెకను",
      other: "{{count}} సెకన్ల",
    },
  },

  xSeconds: {
    standalone: {
      one: "ఒక సెకను", // CLDR #1314
      other: "{{count}} సెకన్ల",
    },
    withPreposition: {
      one: "ఒక సెకను",
      other: "{{count}} సెకన్ల",
    },
  },

  halfAMinute: {
    standalone: "అర నిమిషం",
    withPreposition: "అర నిమిషం",
  },

  lessThanXMinutes: {
    standalone: {
      one: "ఒక నిమిషం కన్నా తక్కువ",
      other: "{{count}} నిమిషాల కన్నా తక్కువ",
    },
    withPreposition: {
      one: "ఒక నిమిషం",
      other: "{{count}} నిమిషాల",
    },
  },

  xMinutes: {
    standalone: {
      one: "ఒక నిమిషం", // CLDR #1311
      other: "{{count}} నిమిషాలు",
    },
    withPreposition: {
      one: "ఒక నిమిషం", // CLDR #1311
      other: "{{count}} నిమిషాల",
    },
  },

  aboutXHours: {
    standalone: {
      one: "సుమారు ఒక గంట",
      other: "సుమారు {{count}} గంటలు",
    },
    withPreposition: {
      one: "సుమారు ఒక గంట",
      other: "సుమారు {{count}} గంటల",
    },
  },

  xHours: {
    standalone: {
      one: "ఒక గంట", // CLDR #1308
      other: "{{count}} గంటలు",
    },
    withPreposition: {
      one: "ఒక గంట",
      other: "{{count}} గంటల",
    },
  },

  xDays: {
    standalone: {
      one: "ఒక రోజు", // CLDR #1292
      other: "{{count}} రోజులు",
    },
    withPreposition: {
      one: "ఒక రోజు",
      other: "{{count}} రోజుల",
    },
  },

  aboutXWeeks: {
    standalone: {
      one: "సుమారు ఒక వారం",
      other: "సుమారు {{count}} వారాలు",
    },
    withPreposition: {
      one: "సుమారు ఒక వారం",
      other: "సుమారు {{count}} వారాలల",
    },
  },

  xWeeks: {
    standalone: {
      one: "ఒక వారం",
      other: "{{count}} వారాలు",
    },
    withPreposition: {
      one: "ఒక వారం",
      other: "{{count}} వారాలల",
    },
  },

  aboutXMonths: {
    standalone: {
      one: "సుమారు ఒక నెల",
      other: "సుమారు {{count}} నెలలు",
    },
    withPreposition: {
      one: "సుమారు ఒక నెల",
      other: "సుమారు {{count}} నెలల",
    },
  },

  xMonths: {
    standalone: {
      one: "ఒక నెల", // CLDR #1281
      other: "{{count}} నెలలు",
    },
    withPreposition: {
      one: "ఒక నెల",
      other: "{{count}} నెలల",
    },
  },

  aboutXYears: {
    standalone: {
      one: "సుమారు ఒక సంవత్సరం",
      other: "సుమారు {{count}} సంవత్సరాలు",
    },
    withPreposition: {
      one: "సుమారు ఒక సంవత్సరం",
      other: "సుమారు {{count}} సంవత్సరాల",
    },
  },

  xYears: {
    standalone: {
      one: "ఒక సంవత్సరం", // CLDR #1275
      other: "{{count}} సంవత్సరాలు",
    },
    withPreposition: {
      one: "ఒక సంవత్సరం",
      other: "{{count}} సంవత్సరాల",
    },
  },

  overXYears: {
    standalone: {
      one: "ఒక సంవత్సరం పైగా",
      other: "{{count}} సంవత్సరాలకు పైగా",
    },
    withPreposition: {
      one: "ఒక సంవత్సరం",
      other: "{{count}} సంవత్సరాల",
    },
  },

  almostXYears: {
    standalone: {
      one: "దాదాపు ఒక సంవత్సరం",
      other: "దాదాపు {{count}} సంవత్సరాలు",
    },
    withPreposition: {
      one: "దాదాపు ఒక సంవత్సరం",
      other: "దాదాపు {{count}} సంవత్సరాల",
    },
  },
};

const router_te_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = options?.addSuffix
    ? router_te_lib_formatDistance_formatDistanceLocale[token].withPreposition
    : router_te_lib_formatDistance_formatDistanceLocale[token].standalone;

  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "లో";
    } else {
      return result + " క్రితం";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/te/_lib/formatLong.mjs


// Source: https://www.unicode.org/cldr/charts/32/summary/te.html

// CLDR #1807 - #1811
const router_te_lib_formatLong_dateFormats = {
  full: "d, MMMM y, EEEE",
  long: "d MMMM, y",
  medium: "d MMM, y",
  short: "dd-MM-yy",
};

// CLDR #1807 - #1811
const router_te_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

// CLDR #1815 - #1818
const router_te_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}'కి'",
  long: "{{date}} {{time}}'కి'",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_te_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_te_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_te_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_te_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/te/_lib/formatRelative.mjs
// Source: https://www.unicode.org/cldr/charts/32/summary/te.html

const router_te_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'గత' eeee p", // CLDR #1384
  yesterday: "'నిన్న' p", // CLDR #1393
  today: "'ఈ రోజు' p", // CLDR #1394
  tomorrow: "'రేపు' p", // CLDR #1395
  nextWeek: "'తదుపరి' eeee p", // CLDR #1386
  other: "P",
};

const router_te_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_te_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/te/_lib/localize.mjs


// Source: https://www.unicode.org/cldr/charts/32/summary/te.html
// Source: https://dsal.uchicago.edu/dictionaries/brown/

// CLDR #1605 - #1608
const router_te_lib_localize_eraValues = {
  narrow: ["క్రీ.పూ.", "క్రీ.శ."],
  abbreviated: ["క్రీ.పూ.", "క్రీ.శ."],
  wide: ["క్రీస్తు పూర్వం", "క్రీస్తుశకం"],
};

// CLDR #1613 - #1628
const router_te_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["త్రై1", "త్రై2", "త్రై3", "త్రై4"],
  wide: ["1వ త్రైమాసికం", "2వ త్రైమాసికం", "3వ త్రైమాసికం", "4వ త్రైమాసికం"],
};

// CLDR #1637 - #1708
const router_te_lib_localize_monthValues = {
  narrow: ["జ", "ఫి", "మా", "ఏ", "మే", "జూ", "జు", "ఆ", "సె", "అ", "న", "డి"],

  abbreviated: [
    "జన",
    "ఫిబ్ర",
    "మార్చి",
    "ఏప్రి",
    "మే",
    "జూన్",
    "జులై",
    "ఆగ",
    "సెప్టెం",
    "అక్టో",
    "నవం",
    "డిసెం",
  ],

  wide: [
    "జనవరి",
    "ఫిబ్రవరి",
    "మార్చి",
    "ఏప్రిల్",
    "మే",
    "జూన్",
    "జులై",
    "ఆగస్టు",
    "సెప్టెంబర్",
    "అక్టోబర్",
    "నవంబర్",
    "డిసెంబర్",
  ],
};

// CLDR #1709 - #1764
const router_te_lib_localize_dayValues = {
  narrow: ["ఆ", "సో", "మ", "బు", "గు", "శు", "శ"],
  short: ["ఆది", "సోమ", "మంగళ", "బుధ", "గురు", "శుక్ర", "శని"],
  abbreviated: ["ఆది", "సోమ", "మంగళ", "బుధ", "గురు", "శుక్ర", "శని"],
  wide: [
    "ఆదివారం",
    "సోమవారం",
    "మంగళవారం",
    "బుధవారం",
    "గురువారం",
    "శుక్రవారం",
    "శనివారం",
  ],
};

// CLDR #1767 - #1806
const router_te_lib_localize_dayPeriodValues = {
  narrow: {
    am: "పూర్వాహ్నం",
    pm: "అపరాహ్నం",
    midnight: "అర్ధరాత్రి",
    noon: "మిట్టమధ్యాహ్నం",
    morning: "ఉదయం",
    afternoon: "మధ్యాహ్నం",
    evening: "సాయంత్రం",
    night: "రాత్రి",
  },
  abbreviated: {
    am: "పూర్వాహ్నం",
    pm: "అపరాహ్నం",
    midnight: "అర్ధరాత్రి",
    noon: "మిట్టమధ్యాహ్నం",
    morning: "ఉదయం",
    afternoon: "మధ్యాహ్నం",
    evening: "సాయంత్రం",
    night: "రాత్రి",
  },
  wide: {
    am: "పూర్వాహ్నం",
    pm: "అపరాహ్నం",
    midnight: "అర్ధరాత్రి",
    noon: "మిట్టమధ్యాహ్నం",
    morning: "ఉదయం",
    afternoon: "మధ్యాహ్నం",
    evening: "సాయంత్రం",
    night: "రాత్రి",
  },
};

const router_te_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "పూర్వాహ్నం",
    pm: "అపరాహ్నం",
    midnight: "అర్ధరాత్రి",
    noon: "మిట్టమధ్యాహ్నం",
    morning: "ఉదయం",
    afternoon: "మధ్యాహ్నం",
    evening: "సాయంత్రం",
    night: "రాత్రి",
  },
  abbreviated: {
    am: "పూర్వాహ్నం",
    pm: "అపరాహ్నం",
    midnight: "అర్ధరాత్రి",
    noon: "మిట్టమధ్యాహ్నం",
    morning: "ఉదయం",
    afternoon: "మధ్యాహ్నం",
    evening: "సాయంత్రం",
    night: "రాత్రి",
  },
  wide: {
    am: "పూర్వాహ్నం",
    pm: "అపరాహ్నం",
    midnight: "అర్ధరాత్రి",
    noon: "మిట్టమధ్యాహ్నం",
    morning: "ఉదయం",
    afternoon: "మధ్యాహ్నం",
    evening: "సాయంత్రం",
    night: "రాత్రి",
  },
};

const router_te_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + "వ";
};

const router_te_lib_localize_localize = {
  ordinalNumber: router_te_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_te_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_te_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_te_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_te_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_te_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_te_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/te/_lib/match.mjs



const router_te_lib_match_matchOrdinalNumberPattern = /^(\d+)(వ)?/i;
const router_te_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_te_lib_match_matchEraPatterns = {
  narrow: /^(క్రీ\.పూ\.|క్రీ\.శ\.)/i,
  abbreviated:
    /^(క్రీ\.?\s?పూ\.?|ప్ర\.?\s?శ\.?\s?పూ\.?|క్రీ\.?\s?శ\.?|సా\.?\s?శ\.?)/i,
  wide: /^(క్రీస్తు పూర్వం|ప్రస్తుత శకానికి పూర్వం|క్రీస్తు శకం|ప్రస్తుత శకం)/i,
};
const router_te_lib_match_parseEraPatterns = {
  any: [/^(పూ|శ)/i, /^సా/i],
};

const router_te_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^త్రై[1234]/i,
  wide: /^[1234](వ)? త్రైమాసికం/i,
};
const router_te_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_te_lib_match_matchMonthPatterns = {
  narrow: /^(జూ|జు|జ|ఫి|మా|ఏ|మే|ఆ|సె|అ|న|డి)/i,
  abbreviated: /^(జన|ఫిబ్ర|మార్చి|ఏప్రి|మే|జూన్|జులై|ఆగ|సెప్|అక్టో|నవ|డిసె)/i,
  wide: /^(జనవరి|ఫిబ్రవరి|మార్చి|ఏప్రిల్|మే|జూన్|జులై|ఆగస్టు|సెప్టెంబర్|అక్టోబర్|నవంబర్|డిసెంబర్)/i,
};
const router_te_lib_match_parseMonthPatterns = {
  narrow: [
    /^జ/i,
    /^ఫి/i,
    /^మా/i,
    /^ఏ/i,
    /^మే/i,
    /^జూ/i,
    /^జు/i,
    /^ఆ/i,
    /^సె/i,
    /^అ/i,
    /^న/i,
    /^డి/i,
  ],

  any: [
    /^జన/i,
    /^ఫి/i,
    /^మా/i,
    /^ఏ/i,
    /^మే/i,
    /^జూన్/i,
    /^జులై/i,
    /^ఆగ/i,
    /^సె/i,
    /^అ/i,
    /^న/i,
    /^డి/i,
  ],
};

const router_te_lib_match_matchDayPatterns = {
  narrow: /^(ఆ|సో|మ|బు|గు|శు|శ)/i,
  short: /^(ఆది|సోమ|మం|బుధ|గురు|శుక్ర|శని)/i,
  abbreviated: /^(ఆది|సోమ|మం|బుధ|గురు|శుక్ర|శని)/i,
  wide: /^(ఆదివారం|సోమవారం|మంగళవారం|బుధవారం|గురువారం|శుక్రవారం|శనివారం)/i,
};
const router_te_lib_match_parseDayPatterns = {
  narrow: [/^ఆ/i, /^సో/i, /^మ/i, /^బు/i, /^గు/i, /^శు/i, /^శ/i],
  any: [/^ఆది/i, /^సోమ/i, /^మం/i, /^బుధ/i, /^గురు/i, /^శుక్ర/i, /^శని/i],
};

const router_te_lib_match_matchDayPeriodPatterns = {
  narrow:
    /^(పూర్వాహ్నం|అపరాహ్నం|అర్ధరాత్రి|మిట్టమధ్యాహ్నం|ఉదయం|మధ్యాహ్నం|సాయంత్రం|రాత్రి)/i,
  any: /^(పూర్వాహ్నం|అపరాహ్నం|అర్ధరాత్రి|మిట్టమధ్యాహ్నం|ఉదయం|మధ్యాహ్నం|సాయంత్రం|రాత్రి)/i,
};
const router_te_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^పూర్వాహ్నం/i,
    pm: /^అపరాహ్నం/i,
    midnight: /^అర్ధ/i,
    noon: /^మిట్ట/i,
    morning: /ఉదయం/i,
    afternoon: /మధ్యాహ్నం/i,
    evening: /సాయంత్రం/i,
    night: /రాత్రి/i,
  },
};

const router_te_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_te_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_te_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_te_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_te_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_te_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_te_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_te_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_te_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_te_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_te_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_te_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_te_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/te.mjs






/**
 * @category Locales
 * @summary Telugu locale
 * @language Telugu
 * @iso-639-2 tel
 * @author Kranthi Lakum [@kranthilakum](https://github.com/kranthilakum)
 */
const router_te = {
  code: "te",
  formatDistance: router_te_lib_formatDistance_formatDistance,
  formatLong: router_te_lib_formatLong_formatLong,
  formatRelative: router_te_lib_formatRelative_formatRelative,
  localize: router_te_lib_localize_localize,
  match: router_te_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_te = ((/* unused pure expression or super */ null && (router_te)));

;// ./node_modules/date-fns/locale/th/_lib/formatDistance.mjs
const router_th_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "น้อยกว่า 1 วินาที",
    other: "น้อยกว่า {{count}} วินาที",
  },

  xSeconds: {
    one: "1 วินาที",
    other: "{{count}} วินาที",
  },

  halfAMinute: "ครึ่งนาที",

  lessThanXMinutes: {
    one: "น้อยกว่า 1 นาที",
    other: "น้อยกว่า {{count}} นาที",
  },

  xMinutes: {
    one: "1 นาที",
    other: "{{count}} นาที",
  },

  aboutXHours: {
    one: "ประมาณ 1 ชั่วโมง",
    other: "ประมาณ {{count}} ชั่วโมง",
  },

  xHours: {
    one: "1 ชั่วโมง",
    other: "{{count}} ชั่วโมง",
  },

  xDays: {
    one: "1 วัน",
    other: "{{count}} วัน",
  },

  aboutXWeeks: {
    one: "ประมาณ 1 สัปดาห์",
    other: "ประมาณ {{count}} สัปดาห์",
  },

  xWeeks: {
    one: "1 สัปดาห์",
    other: "{{count}} สัปดาห์",
  },

  aboutXMonths: {
    one: "ประมาณ 1 เดือน",
    other: "ประมาณ {{count}} เดือน",
  },

  xMonths: {
    one: "1 เดือน",
    other: "{{count}} เดือน",
  },

  aboutXYears: {
    one: "ประมาณ 1 ปี",
    other: "ประมาณ {{count}} ปี",
  },

  xYears: {
    one: "1 ปี",
    other: "{{count}} ปี",
  },

  overXYears: {
    one: "มากกว่า 1 ปี",
    other: "มากกว่า {{count}} ปี",
  },

  almostXYears: {
    one: "เกือบ 1 ปี",
    other: "เกือบ {{count}} ปี",
  },
};

const router_th_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_th_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      if (token === "halfAMinute") {
        return "ใน" + result;
      } else {
        return "ใน " + result;
      }
    } else {
      return result + "ที่ผ่านมา";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/th/_lib/formatLong.mjs


const router_th_lib_formatLong_dateFormats = {
  full: "วันEEEEที่ do MMMM y",
  long: "do MMMM y",
  medium: "d MMM y",
  short: "dd/MM/yyyy",
};

const router_th_lib_formatLong_timeFormats = {
  full: "H:mm:ss น. zzzz",
  long: "H:mm:ss น. z",
  medium: "H:mm:ss น.",
  short: "H:mm น.",
};

const router_th_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'เวลา' {{time}}",
  long: "{{date}} 'เวลา' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_th_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_th_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_th_lib_formatLong_timeFormats,
    defaultWidth: "medium",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_th_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/th/_lib/formatRelative.mjs
const router_th_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee'ที่แล้วเวลา' p",
  yesterday: "'เมื่อวานนี้เวลา' p",
  today: "'วันนี้เวลา' p",
  tomorrow: "'พรุ่งนี้เวลา' p",
  nextWeek: "eeee 'เวลา' p",
  other: "P",
};

const router_th_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_th_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/th/_lib/localize.mjs


const router_th_lib_localize_eraValues = {
  narrow: ["B", "คศ"],
  abbreviated: ["BC", "ค.ศ."],
  wide: ["ปีก่อนคริสตกาล", "คริสต์ศักราช"],
};

const router_th_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["ไตรมาสแรก", "ไตรมาสที่สอง", "ไตรมาสที่สาม", "ไตรมาสที่สี่"],
};

const router_th_lib_localize_dayValues = {
  narrow: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."],
  short: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."],
  abbreviated: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."],
  wide: ["อาทิตย์", "จันทร์", "อังคาร", "พุธ", "พฤหัสบดี", "ศุกร์", "เสาร์"],
};

const router_th_lib_localize_monthValues = {
  narrow: [
    "ม.ค.",
    "ก.พ.",
    "มี.ค.",
    "เม.ย.",
    "พ.ค.",
    "มิ.ย.",
    "ก.ค.",
    "ส.ค.",
    "ก.ย.",
    "ต.ค.",
    "พ.ย.",
    "ธ.ค.",
  ],

  abbreviated: [
    "ม.ค.",
    "ก.พ.",
    "มี.ค.",
    "เม.ย.",
    "พ.ค.",
    "มิ.ย.",
    "ก.ค.",
    "ส.ค.",
    "ก.ย.",
    "ต.ค.",
    "พ.ย.",
    "ธ.ค.",
  ],

  wide: [
    "มกราคม",
    "กุมภาพันธ์",
    "มีนาคม",
    "เมษายน",
    "พฤษภาคม",
    "มิถุนายน",
    "กรกฎาคม",
    "สิงหาคม",
    "กันยายน",
    "ตุลาคม",
    "พฤศจิกายน",
    "ธันวาคม",
  ],
};

const router_th_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ก่อนเที่ยง",
    pm: "หลังเที่ยง",
    midnight: "เที่ยงคืน",
    noon: "เที่ยง",
    morning: "เช้า",
    afternoon: "บ่าย",
    evening: "เย็น",
    night: "กลางคืน",
  },
  abbreviated: {
    am: "ก่อนเที่ยง",
    pm: "หลังเที่ยง",
    midnight: "เที่ยงคืน",
    noon: "เที่ยง",
    morning: "เช้า",
    afternoon: "บ่าย",
    evening: "เย็น",
    night: "กลางคืน",
  },
  wide: {
    am: "ก่อนเที่ยง",
    pm: "หลังเที่ยง",
    midnight: "เที่ยงคืน",
    noon: "เที่ยง",
    morning: "เช้า",
    afternoon: "บ่าย",
    evening: "เย็น",
    night: "กลางคืน",
  },
};

const router_th_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ก่อนเที่ยง",
    pm: "หลังเที่ยง",
    midnight: "เที่ยงคืน",
    noon: "เที่ยง",
    morning: "ตอนเช้า",
    afternoon: "ตอนกลางวัน",
    evening: "ตอนเย็น",
    night: "ตอนกลางคืน",
  },
  abbreviated: {
    am: "ก่อนเที่ยง",
    pm: "หลังเที่ยง",
    midnight: "เที่ยงคืน",
    noon: "เที่ยง",
    morning: "ตอนเช้า",
    afternoon: "ตอนกลางวัน",
    evening: "ตอนเย็น",
    night: "ตอนกลางคืน",
  },
  wide: {
    am: "ก่อนเที่ยง",
    pm: "หลังเที่ยง",
    midnight: "เที่ยงคืน",
    noon: "เที่ยง",
    morning: "ตอนเช้า",
    afternoon: "ตอนกลางวัน",
    evening: "ตอนเย็น",
    night: "ตอนกลางคืน",
  },
};

const router_th_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_th_lib_localize_localize = {
  ordinalNumber: router_th_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_th_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_th_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_th_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_th_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_th_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_th_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/th/_lib/match.mjs



const router_th_lib_match_matchOrdinalNumberPattern = /^\d+/i;
const router_th_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_th_lib_match_matchEraPatterns = {
  narrow: /^([bB]|[aA]|คศ)/i,
  abbreviated:
    /^([bB]\.?\s?[cC]\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?|ค\.?ศ\.?)/i,
  wide: /^(ก่อนคริสตกาล|คริสต์ศักราช|คริสตกาล)/i,
};
const router_th_lib_match_parseEraPatterns = {
  any: [/^[bB]/i, /^(^[aA]|ค\.?ศ\.?|คริสตกาล|คริสต์ศักราช|)/i],
};

const router_th_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^ไตรมาส(ที่)? ?[1234]/i,
};
const router_th_lib_match_parseQuarterPatterns = {
  any: [/(1|แรก|หนึ่ง)/i, /(2|สอง)/i, /(3|สาม)/i, /(4|สี่)/i],
};

const router_th_lib_match_matchMonthPatterns = {
  narrow:
    /^(ม\.?ค\.?|ก\.?พ\.?|มี\.?ค\.?|เม\.?ย\.?|พ\.?ค\.?|มิ\.?ย\.?|ก\.?ค\.?|ส\.?ค\.?|ก\.?ย\.?|ต\.?ค\.?|พ\.?ย\.?|ธ\.?ค\.?)/i,
  abbreviated:
    /^(ม\.?ค\.?|ก\.?พ\.?|มี\.?ค\.?|เม\.?ย\.?|พ\.?ค\.?|มิ\.?ย\.?|ก\.?ค\.?|ส\.?ค\.?|ก\.?ย\.?|ต\.?ค\.?|พ\.?ย\.?|ธ\.?ค\.?')/i,
  wide: /^(มกราคม|กุมภาพันธ์|มีนาคม|เมษายน|พฤษภาคม|มิถุนายน|กรกฎาคม|สิงหาคม|กันยายน|ตุลาคม|พฤศจิกายน|ธันวาคม)/i,
};
const router_th_lib_match_parseMonthPatterns = {
  wide: [
    /^มก/i,
    /^กุม/i,
    /^มี/i,
    /^เม/i,
    /^พฤษ/i,
    /^มิ/i,
    /^กรก/i,
    /^ส/i,
    /^กัน/i,
    /^ต/i,
    /^พฤศ/i,
    /^ธ/i,
  ],

  any: [
    /^ม\.?ค\.?/i,
    /^ก\.?พ\.?/i,
    /^มี\.?ค\.?/i,
    /^เม\.?ย\.?/i,
    /^พ\.?ค\.?/i,
    /^มิ\.?ย\.?/i,
    /^ก\.?ค\.?/i,
    /^ส\.?ค\.?/i,
    /^ก\.?ย\.?/i,
    /^ต\.?ค\.?/i,
    /^พ\.?ย\.?/i,
    /^ธ\.?ค\.?/i,
  ],
};

const router_th_lib_match_matchDayPatterns = {
  narrow: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i,
  short: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i,
  abbreviated: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i,
  wide: /^(อาทิตย์|จันทร์|อังคาร|พุธ|พฤหัสบดี|ศุกร์|เสาร์)/i,
};
const router_th_lib_match_parseDayPatterns = {
  wide: [/^อา/i, /^จั/i, /^อั/i, /^พุธ/i, /^พฤ/i, /^ศ/i, /^เส/i],
  any: [/^อา/i, /^จ/i, /^อ/i, /^พ(?!ฤ)/i, /^พฤ/i, /^ศ/i, /^ส/i],
};

const router_th_lib_match_matchDayPeriodPatterns = {
  any: /^(ก่อนเที่ยง|หลังเที่ยง|เที่ยงคืน|เที่ยง|(ตอน.*?)?.*(เที่ยง|เช้า|บ่าย|เย็น|กลางคืน))/i,
};
const router_th_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ก่อนเที่ยง/i,
    pm: /^หลังเที่ยง/i,
    midnight: /^เที่ยงคืน/i,
    noon: /^เที่ยง/i,
    morning: /เช้า/i,
    afternoon: /บ่าย/i,
    evening: /เย็น/i,
    night: /กลางคืน/i,
  },
};

const router_th_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_th_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_th_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_th_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_th_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_th_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_th_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_th_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_th_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_th_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_th_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_th_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_th_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/th.mjs






/**
 * @category Locales
 * @summary Thai locale.
 * @language Thai
 * @iso-639-2 tha
 * @author Athiwat Hirunworawongkun [@athivvat](https://github.com/athivvat)
 * @author [@hawkup](https://github.com/hawkup)
 * @author  Jirawat I. [@nodtem66](https://github.com/nodtem66)
 */
const router_th = {
  code: "th",
  formatDistance: router_th_lib_formatDistance_formatDistance,
  formatLong: router_th_lib_formatLong_formatLong,
  formatRelative: router_th_lib_formatRelative_formatRelative,
  localize: router_th_lib_localize_localize,
  match: router_th_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_th = ((/* unused pure expression or super */ null && (router_th)));

;// ./node_modules/date-fns/locale/tr/_lib/formatDistance.mjs
const router_tr_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "bir saniyeden az",
    other: "{{count}} saniyeden az",
  },

  xSeconds: {
    one: "1 saniye",
    other: "{{count}} saniye",
  },

  halfAMinute: "yarım dakika",

  lessThanXMinutes: {
    one: "bir dakikadan az",
    other: "{{count}} dakikadan az",
  },

  xMinutes: {
    one: "1 dakika",
    other: "{{count}} dakika",
  },

  aboutXHours: {
    one: "yaklaşık 1 saat",
    other: "yaklaşık {{count}} saat",
  },

  xHours: {
    one: "1 saat",
    other: "{{count}} saat",
  },

  xDays: {
    one: "1 gün",
    other: "{{count}} gün",
  },

  aboutXWeeks: {
    one: "yaklaşık 1 hafta",
    other: "yaklaşık {{count}} hafta",
  },

  xWeeks: {
    one: "1 hafta",
    other: "{{count}} hafta",
  },

  aboutXMonths: {
    one: "yaklaşık 1 ay",
    other: "yaklaşık {{count}} ay",
  },

  xMonths: {
    one: "1 ay",
    other: "{{count}} ay",
  },

  aboutXYears: {
    one: "yaklaşık 1 yıl",
    other: "yaklaşık {{count}} yıl",
  },

  xYears: {
    one: "1 yıl",
    other: "{{count}} yıl",
  },

  overXYears: {
    one: "1 yıldan fazla",
    other: "{{count}} yıldan fazla",
  },

  almostXYears: {
    one: "neredeyse 1 yıl",
    other: "neredeyse {{count}} yıl",
  },
};

const router_tr_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_tr_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + " sonra";
    } else {
      return result + " önce";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/tr/_lib/formatLong.mjs


const router_tr_lib_formatLong_dateFormats = {
  full: "d MMMM y EEEE",
  long: "d MMMM y",
  medium: "d MMM y",
  short: "dd.MM.yyyy",
};

const router_tr_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_tr_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'saat' {{time}}",
  long: "{{date}} 'saat' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_tr_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_tr_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_tr_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_tr_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/tr/_lib/formatRelative.mjs
const router_tr_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'geçen hafta' eeee 'saat' p",
  yesterday: "'dün saat' p",
  today: "'bugün saat' p",
  tomorrow: "'yarın saat' p",
  nextWeek: "eeee 'saat' p",
  other: "P",
};

const router_tr_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_tr_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/tr/_lib/localize.mjs


const router_tr_lib_localize_eraValues = {
  narrow: ["MÖ", "MS"],
  abbreviated: ["MÖ", "MS"],
  wide: ["Milattan Önce", "Milattan Sonra"],
};

const router_tr_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1Ç", "2Ç", "3Ç", "4Ç"],
  wide: ["İlk çeyrek", "İkinci Çeyrek", "Üçüncü çeyrek", "Son çeyrek"],
};

const router_tr_lib_localize_monthValues = {
  narrow: ["O", "Ş", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"],
  abbreviated: [
    "Oca",
    "Şub",
    "Mar",
    "Nis",
    "May",
    "Haz",
    "Tem",
    "Ağu",
    "Eyl",
    "Eki",
    "Kas",
    "Ara",
  ],

  wide: [
    "Ocak",
    "Şubat",
    "Mart",
    "Nisan",
    "Mayıs",
    "Haziran",
    "Temmuz",
    "Ağustos",
    "Eylül",
    "Ekim",
    "Kasım",
    "Aralık",
  ],
};

const router_tr_lib_localize_dayValues = {
  narrow: ["P", "P", "S", "Ç", "P", "C", "C"],
  short: ["Pz", "Pt", "Sa", "Ça", "Pe", "Cu", "Ct"],
  abbreviated: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cts"],
  wide: [
    "Pazar",
    "Pazartesi",
    "Salı",
    "Çarşamba",
    "Perşembe",
    "Cuma",
    "Cumartesi",
  ],
};

const router_tr_lib_localize_dayPeriodValues = {
  narrow: {
    am: "öö",
    pm: "ös",
    midnight: "gy",
    noon: "ö",
    morning: "sa",
    afternoon: "ös",
    evening: "ak",
    night: "ge",
  },
  abbreviated: {
    am: "ÖÖ",
    pm: "ÖS",
    midnight: "gece yarısı",
    noon: "öğle",
    morning: "sabah",
    afternoon: "öğleden sonra",
    evening: "akşam",
    night: "gece",
  },
  wide: {
    am: "Ö.Ö.",
    pm: "Ö.S.",
    midnight: "gece yarısı",
    noon: "öğle",
    morning: "sabah",
    afternoon: "öğleden sonra",
    evening: "akşam",
    night: "gece",
  },
};

const router_tr_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "öö",
    pm: "ös",
    midnight: "gy",
    noon: "ö",
    morning: "sa",
    afternoon: "ös",
    evening: "ak",
    night: "ge",
  },
  abbreviated: {
    am: "ÖÖ",
    pm: "ÖS",
    midnight: "gece yarısı",
    noon: "öğlen",
    morning: "sabahleyin",
    afternoon: "öğleden sonra",
    evening: "akşamleyin",
    night: "geceleyin",
  },
  wide: {
    am: "ö.ö.",
    pm: "ö.s.",
    midnight: "gece yarısı",
    noon: "öğlen",
    morning: "sabahleyin",
    afternoon: "öğleden sonra",
    evening: "akşamleyin",
    night: "geceleyin",
  },
};

const router_tr_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  return number + ".";
};

const router_tr_lib_localize_localize = {
  ordinalNumber: router_tr_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_tr_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_tr_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => Number(quarter) - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_tr_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_tr_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_tr_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_tr_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/tr/_lib/match.mjs



const router_tr_lib_match_matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
const router_tr_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_tr_lib_match_matchEraPatterns = {
  narrow: /^(mö|ms)/i,
  abbreviated: /^(mö|ms)/i,
  wide: /^(milattan önce|milattan sonra)/i,
};
const router_tr_lib_match_parseEraPatterns = {
  any: [/(^mö|^milattan önce)/i, /(^ms|^milattan sonra)/i],
};

const router_tr_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]ç/i,
  wide: /^((i|İ)lk|(i|İ)kinci|üçüncü|son) çeyrek/i,
};
const router_tr_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
  abbreviated: [/1ç/i, /2ç/i, /3ç/i, /4ç/i],
  wide: [
    /^(i|İ)lk çeyrek/i,
    /(i|İ)kinci çeyrek/i,
    /üçüncü çeyrek/i,
    /son çeyrek/i,
  ],
};

const router_tr_lib_match_matchMonthPatterns = {
  narrow: /^[oşmnhtaek]/i,
  abbreviated: /^(oca|şub|mar|nis|may|haz|tem|ağu|eyl|eki|kas|ara)/i,
  wide: /^(ocak|şubat|mart|nisan|mayıs|haziran|temmuz|ağustos|eylül|ekim|kasım|aralık)/i,
};
const router_tr_lib_match_parseMonthPatterns = {
  narrow: [
    /^o/i,
    /^ş/i,
    /^m/i,
    /^n/i,
    /^m/i,
    /^h/i,
    /^t/i,
    /^a/i,
    /^e/i,
    /^e/i,
    /^k/i,
    /^a/i,
  ],

  any: [
    /^o/i,
    /^ş/i,
    /^mar/i,
    /^n/i,
    /^may/i,
    /^h/i,
    /^t/i,
    /^ağ/i,
    /^ey/i,
    /^ek/i,
    /^k/i,
    /^ar/i,
  ],
};

const router_tr_lib_match_matchDayPatterns = {
  narrow: /^[psçc]/i,
  short: /^(pz|pt|sa|ça|pe|cu|ct)/i,
  abbreviated: /^(paz|pzt|sal|çar|per|cum|cts)/i,
  wide: /^(pazar(?!tesi)|pazartesi|salı|çarşamba|perşembe|cuma(?!rtesi)|cumartesi)/i,
};
const router_tr_lib_match_parseDayPatterns = {
  narrow: [/^p/i, /^p/i, /^s/i, /^ç/i, /^p/i, /^c/i, /^c/i],
  any: [/^pz/i, /^pt/i, /^sa/i, /^ça/i, /^pe/i, /^cu/i, /^ct/i],
  wide: [
    /^pazar(?!tesi)/i,
    /^pazartesi/i,
    /^salı/i,
    /^çarşamba/i,
    /^perşembe/i,
    /^cuma(?!rtesi)/i,
    /^cumartesi/i,
  ],
};

const router_tr_lib_match_matchDayPeriodPatterns = {
  narrow: /^(öö|ös|gy|ö|sa|ös|ak|ge)/i,
  any: /^(ö\.?\s?[ös]\.?|öğleden sonra|gece yarısı|öğle|(sabah|öğ|akşam|gece)(leyin))/i,
};
const router_tr_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ö\.?ö\.?/i,
    pm: /^ö\.?s\.?/i,
    midnight: /^(gy|gece yarısı)/i,
    noon: /^öğ/i,
    morning: /^sa/i,
    afternoon: /^öğleden sonra/i,
    evening: /^ak/i,
    night: /^ge/i,
  },
};

const router_tr_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_tr_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_tr_lib_match_parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    },
  }),

  era: router_buildMatchFn({
    matchPatterns: router_tr_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_tr_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_tr_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_tr_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_tr_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_tr_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_tr_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_tr_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_tr_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_tr_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/tr.mjs






/**
 * @category Locales
 * @summary Turkish locale.
 * @language Turkish
 * @iso-639-2 tur
 * @author Alpcan Aydın [@alpcanaydin](https://github.com/alpcanaydin)
 * @author Berkay Sargın [@berkaey](https://github.com/berkaey)
 * @author Fatih Bulut [@bulutfatih](https://github.com/bulutfatih)
 * @author Ismail Demirbilek [@dbtek](https://github.com/dbtek)
 * @author İsmail Kayar [@ikayar](https://github.com/ikayar)
 *
 *
 */
const router_tr = {
  code: "tr",
  formatDistance: router_tr_lib_formatDistance_formatDistance,
  formatLong: router_tr_lib_formatLong_formatLong,
  formatRelative: router_tr_lib_formatRelative_formatRelative,
  localize: router_tr_lib_localize_localize,
  match: router_tr_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_tr = ((/* unused pure expression or super */ null && (router_tr)));

;// ./node_modules/date-fns/locale/ug/_lib/formatDistance.mjs
const router_ug_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "بىر سىكۇنت ئىچىدە",
    other: "سىكۇنت ئىچىدە {{count}}",
  },

  xSeconds: {
    one: "بىر سىكۇنت",
    other: "سىكۇنت {{count}}",
  },

  halfAMinute: "يىرىم مىنۇت",

  lessThanXMinutes: {
    one: "بىر مىنۇت ئىچىدە",
    other: "مىنۇت ئىچىدە {{count}}",
  },

  xMinutes: {
    one: "بىر مىنۇت",
    other: "مىنۇت {{count}}",
  },

  aboutXHours: {
    one: "تەخمىنەن بىر سائەت",
    other: "سائەت {{count}} تەخمىنەن",
  },

  xHours: {
    one: "بىر سائەت",
    other: "سائەت {{count}}",
  },

  xDays: {
    one: "بىر كۈن",
    other: "كۈن {{count}}",
  },

  aboutXWeeks: {
    one: "تەخمىنەن بىرھەپتە",
    other: "ھەپتە {{count}} تەخمىنەن",
  },

  xWeeks: {
    one: "بىرھەپتە",
    other: "ھەپتە {{count}}",
  },

  aboutXMonths: {
    one: "تەخمىنەن بىر ئاي",
    other: "ئاي {{count}} تەخمىنەن",
  },

  xMonths: {
    one: "بىر ئاي",
    other: "ئاي {{count}}",
  },

  aboutXYears: {
    one: "تەخمىنەن بىر يىل",
    other: "يىل {{count}} تەخمىنەن",
  },

  xYears: {
    one: "بىر يىل",
    other: "يىل {{count}}",
  },

  overXYears: {
    one: "بىر يىلدىن ئارتۇق",
    other: "يىلدىن ئارتۇق {{count}}",
  },

  almostXYears: {
    one: "ئاساسەن بىر يىل",
    other: "يىل {{count}} ئاساسەن",
  },
};

const router_ug_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_ug_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result;
    } else {
      return result + " بولدى";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/ug/_lib/formatLong.mjs


const router_ug_lib_formatLong_dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const router_ug_lib_formatLong_timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const router_ug_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'دە' {{time}}",
  long: "{{date}} 'دە' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_ug_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_ug_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_ug_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_ug_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/ug/_lib/formatRelative.mjs
const router_ug_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'ئ‍ۆتكەن' eeee 'دە' p",
  yesterday: "'تۈنۈگۈن دە' p",
  today: "'بۈگۈن دە' p",
  tomorrow: "'ئەتە دە' p",
  nextWeek: "eeee 'دە' p",
  other: "P",
};

const router_ug_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_ug_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/ug/_lib/localize.mjs


const router_ug_lib_localize_eraValues = {
  narrow: ["ب", "ك"],
  abbreviated: ["ب", "ك"],
  wide: ["مىيلادىدىن بۇرۇن", "مىيلادىدىن كىيىن"],
};

const router_ug_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1", "2", "3", "4"],
  wide: ["بىرىنجى چارەك", "ئىككىنجى چارەك", "ئۈچىنجى چارەك", "تۆتىنجى چارەك"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_ug_lib_localize_monthValues = {
  narrow: ["ي", "ف", "م", "ا", "م", "ى", "ى", "ا", "س", "ۆ", "ن", "د"],
  abbreviated: [
    "يانۋار",
    "فېۋىرال",
    "مارت",
    "ئاپرىل",
    "ماي",
    "ئىيۇن",
    "ئىيول",
    "ئاۋغۇست",
    "سىنتەبىر",
    "ئۆكتەبىر",
    "نويابىر",
    "دىكابىر",
  ],

  wide: [
    "يانۋار",
    "فېۋىرال",
    "مارت",
    "ئاپرىل",
    "ماي",
    "ئىيۇن",
    "ئىيول",
    "ئاۋغۇست",
    "سىنتەبىر",
    "ئۆكتەبىر",
    "نويابىر",
    "دىكابىر",
  ],
};

const router_ug_lib_localize_dayValues = {
  narrow: ["ي", "د", "س", "چ", "پ", "ج", "ش"],
  short: ["ي", "د", "س", "چ", "پ", "ج", "ش"],
  abbreviated: [
    "يەكشەنبە",
    "دۈشەنبە",
    "سەيشەنبە",
    "چارشەنبە",
    "پەيشەنبە",
    "جۈمە",
    "شەنبە",
  ],

  wide: [
    "يەكشەنبە",
    "دۈشەنبە",
    "سەيشەنبە",
    "چارشەنبە",
    "پەيشەنبە",
    "جۈمە",
    "شەنبە",
  ],
};

const router_ug_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ئە",
    pm: "چ",
    midnight: "ك",
    noon: "چ",
    morning: "ئەتىگەن",
    afternoon: "چۈشتىن كىيىن",
    evening: "ئاخشىم",
    night: "كىچە",
  },
  abbreviated: {
    am: "ئە",
    pm: "چ",
    midnight: "ك",
    noon: "چ",
    morning: "ئەتىگەن",
    afternoon: "چۈشتىن كىيىن",
    evening: "ئاخشىم",
    night: "كىچە",
  },
  wide: {
    am: "ئە",
    pm: "چ",
    midnight: "ك",
    noon: "چ",
    morning: "ئەتىگەن",
    afternoon: "چۈشتىن كىيىن",
    evening: "ئاخشىم",
    night: "كىچە",
  },
};

const router_ug_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ئە",
    pm: "چ",
    midnight: "ك",
    noon: "چ",
    morning: "ئەتىگەندە",
    afternoon: "چۈشتىن كىيىن",
    evening: "ئاخشامدا",
    night: "كىچىدە",
  },
  abbreviated: {
    am: "ئە",
    pm: "چ",
    midnight: "ك",
    noon: "چ",
    morning: "ئەتىگەندە",
    afternoon: "چۈشتىن كىيىن",
    evening: "ئاخشامدا",
    night: "كىچىدە",
  },
  wide: {
    am: "ئە",
    pm: "چ",
    midnight: "ك",
    noon: "چ",
    morning: "ئەتىگەندە",
    afternoon: "چۈشتىن كىيىن",
    evening: "ئاخشامدا",
    night: "كىچىدە",
  },
};

const router_ug_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_ug_lib_localize_localize = {
  ordinalNumber: router_ug_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_ug_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_ug_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_ug_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_ug_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_ug_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_ug_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/ug/_lib/match.mjs



const router_ug_lib_match_matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const router_ug_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_ug_lib_match_matchEraPatterns = {
  narrow: /^(ب|ك)/i,
  wide: /^(مىيلادىدىن بۇرۇن|مىيلادىدىن كىيىن)/i,
};
const router_ug_lib_match_parseEraPatterns = {
  any: [/^بۇرۇن/i, /^كىيىن/i],
};

const router_ug_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^چ[1234]/i,
  wide: /^چارەك [1234]/i,
};
const router_ug_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_ug_lib_match_matchMonthPatterns = {
  // eslint-disable-next-line no-misleading-character-class
  narrow: /^[يفمئامئ‍ئاسۆند]/i,
  abbreviated:
    /^(يانۋار|فېۋىرال|مارت|ئاپرىل|ماي|ئىيۇن|ئىيول|ئاۋغۇست|سىنتەبىر|ئۆكتەبىر|نويابىر|دىكابىر)/i,
  wide: /^(يانۋار|فېۋىرال|مارت|ئاپرىل|ماي|ئىيۇن|ئىيول|ئاۋغۇست|سىنتەبىر|ئۆكتەبىر|نويابىر|دىكابىر)/i,
};
const router_ug_lib_match_parseMonthPatterns = {
  narrow: [
    /^ي/i,
    /^ف/i,
    /^م/i,
    /^ا/i,
    /^م/i,
    /^ى‍/i,
    /^ى‍/i,
    /^ا‍/i,
    /^س/i,
    /^ۆ/i,
    /^ن/i,
    /^د/i,
  ],

  any: [
    /^يان/i,
    /^فېۋ/i,
    /^مار/i,
    /^ئاپ/i,
    /^ماي/i,
    /^ئىيۇن/i,
    /^ئىيول/i,
    /^ئاۋ/i,
    /^سىن/i,
    /^ئۆك/i,
    /^نوي/i,
    /^دىك/i,
  ],
};

const router_ug_lib_match_matchDayPatterns = {
  narrow: /^[دسچپجشي]/i,
  short: /^(يە|دۈ|سە|چا|پە|جۈ|شە)/i,
  abbreviated: /^(يە|دۈ|سە|چا|پە|جۈ|شە)/i,
  wide: /^(يەكشەنبە|دۈشەنبە|سەيشەنبە|چارشەنبە|پەيشەنبە|جۈمە|شەنبە)/i,
};
const router_ug_lib_match_parseDayPatterns = {
  narrow: [/^ي/i, /^د/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i],
  any: [/^ي/i, /^د/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i],
};

const router_ug_lib_match_matchDayPeriodPatterns = {
  narrow: /^(ئە|چ|ك|چ|(دە|ئەتىگەن) ( ئە‍|چۈشتىن كىيىن|ئاخشىم|كىچە))/i,
  any: /^(ئە|چ|ك|چ|(دە|ئەتىگەن) ( ئە‍|چۈشتىن كىيىن|ئاخشىم|كىچە))/i,
};
const router_ug_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^ئە/i,
    pm: /^چ/i,
    midnight: /^ك/i,
    noon: /^چ/i,
    morning: /ئەتىگەن/i,
    afternoon: /چۈشتىن كىيىن/i,
    evening: /ئاخشىم/i,
    night: /كىچە/i,
  },
};

const router_ug_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_ug_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_ug_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_ug_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ug_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_ug_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ug_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_ug_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ug_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_ug_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_ug_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_ug_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_ug_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/ug.mjs






/**
 * @category Locales
 * @summary Uighur locale
 * @language Uighur
 * @iso-639-2 uig
 * @author Abduwaly M. [@abduwaly](https://github.com/abduwaly)
 */
const router_ug = {
  code: "ug",
  formatDistance: router_ug_lib_formatDistance_formatDistance,
  formatLong: router_ug_lib_formatLong_formatLong,
  formatRelative: router_ug_lib_formatRelative_formatRelative,
  localize: router_ug_lib_localize_localize,
  match: router_ug_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_ug = ((/* unused pure expression or super */ null && (router_ug)));

;// ./node_modules/date-fns/locale/uk/_lib/formatDistance.mjs
function router_uk_lib_formatDistance_declension(scheme, count) {
  // scheme for count=1 exists
  if (scheme.one !== undefined && count === 1) {
    return scheme.one;
  }

  const rem10 = count % 10;
  const rem100 = count % 100;

  // 1, 21, 31, ...
  if (rem10 === 1 && rem100 !== 11) {
    return scheme.singularNominative.replace("{{count}}", String(count));

    // 2, 3, 4, 22, 23, 24, 32 ...
  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
    return scheme.singularGenitive.replace("{{count}}", String(count));

    // 5, 6, 7, 8, 9, 10, 11, ...
  } else {
    return scheme.pluralGenitive.replace("{{count}}", String(count));
  }
}

function router_uk_lib_formatDistance_buildLocalizeTokenFn(scheme) {
  return (count, options) => {
    if (options && options.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        if (scheme.future) {
          return router_uk_lib_formatDistance_declension(scheme.future, count);
        } else {
          return "за " + router_uk_lib_formatDistance_declension(scheme.regular, count);
        }
      } else {
        if (scheme.past) {
          return router_uk_lib_formatDistance_declension(scheme.past, count);
        } else {
          return router_uk_lib_formatDistance_declension(scheme.regular, count) + " тому";
        }
      }
    } else {
      return router_uk_lib_formatDistance_declension(scheme.regular, count);
    }
  };
}

const router_halfAtMinute = (_, options) => {
  if (options && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "за півхвилини";
    } else {
      return "півхвилини тому";
    }
  }

  return "півхвилини";
};

const router_uk_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      one: "менше секунди",
      singularNominative: "менше {{count}} секунди",
      singularGenitive: "менше {{count}} секунд",
      pluralGenitive: "менше {{count}} секунд",
    },
    future: {
      one: "менше, ніж за секунду",
      singularNominative: "менше, ніж за {{count}} секунду",
      singularGenitive: "менше, ніж за {{count}} секунди",
      pluralGenitive: "менше, ніж за {{count}} секунд",
    },
  }),

  xSeconds: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} секунда",
      singularGenitive: "{{count}} секунди",
      pluralGenitive: "{{count}} секунд",
    },
    past: {
      singularNominative: "{{count}} секунду тому",
      singularGenitive: "{{count}} секунди тому",
      pluralGenitive: "{{count}} секунд тому",
    },
    future: {
      singularNominative: "за {{count}} секунду",
      singularGenitive: "за {{count}} секунди",
      pluralGenitive: "за {{count}} секунд",
    },
  }),

  halfAMinute: router_halfAtMinute,

  lessThanXMinutes: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      one: "менше хвилини",
      singularNominative: "менше {{count}} хвилини",
      singularGenitive: "менше {{count}} хвилин",
      pluralGenitive: "менше {{count}} хвилин",
    },
    future: {
      one: "менше, ніж за хвилину",
      singularNominative: "менше, ніж за {{count}} хвилину",
      singularGenitive: "менше, ніж за {{count}} хвилини",
      pluralGenitive: "менше, ніж за {{count}} хвилин",
    },
  }),

  xMinutes: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} хвилина",
      singularGenitive: "{{count}} хвилини",
      pluralGenitive: "{{count}} хвилин",
    },
    past: {
      singularNominative: "{{count}} хвилину тому",
      singularGenitive: "{{count}} хвилини тому",
      pluralGenitive: "{{count}} хвилин тому",
    },
    future: {
      singularNominative: "за {{count}} хвилину",
      singularGenitive: "за {{count}} хвилини",
      pluralGenitive: "за {{count}} хвилин",
    },
  }),

  aboutXHours: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "близько {{count}} години",
      singularGenitive: "близько {{count}} годин",
      pluralGenitive: "близько {{count}} годин",
    },
    future: {
      singularNominative: "приблизно за {{count}} годину",
      singularGenitive: "приблизно за {{count}} години",
      pluralGenitive: "приблизно за {{count}} годин",
    },
  }),

  xHours: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} годину",
      singularGenitive: "{{count}} години",
      pluralGenitive: "{{count}} годин",
    },
  }),

  xDays: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} день",
      singularGenitive: "{{count}} днi",
      pluralGenitive: "{{count}} днів",
    },
  }),

  aboutXWeeks: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "близько {{count}} тижня",
      singularGenitive: "близько {{count}} тижнів",
      pluralGenitive: "близько {{count}} тижнів",
    },
    future: {
      singularNominative: "приблизно за {{count}} тиждень",
      singularGenitive: "приблизно за {{count}} тижні",
      pluralGenitive: "приблизно за {{count}} тижнів",
    },
  }),

  xWeeks: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} тиждень",
      singularGenitive: "{{count}} тижні",
      pluralGenitive: "{{count}} тижнів",
    },
  }),

  aboutXMonths: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "близько {{count}} місяця",
      singularGenitive: "близько {{count}} місяців",
      pluralGenitive: "близько {{count}} місяців",
    },
    future: {
      singularNominative: "приблизно за {{count}} місяць",
      singularGenitive: "приблизно за {{count}} місяці",
      pluralGenitive: "приблизно за {{count}} місяців",
    },
  }),

  xMonths: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} місяць",
      singularGenitive: "{{count}} місяці",
      pluralGenitive: "{{count}} місяців",
    },
  }),

  aboutXYears: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "близько {{count}} року",
      singularGenitive: "близько {{count}} років",
      pluralGenitive: "близько {{count}} років",
    },
    future: {
      singularNominative: "приблизно за {{count}} рік",
      singularGenitive: "приблизно за {{count}} роки",
      pluralGenitive: "приблизно за {{count}} років",
    },
  }),

  xYears: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "{{count}} рік",
      singularGenitive: "{{count}} роки",
      pluralGenitive: "{{count}} років",
    },
  }),

  overXYears: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "більше {{count}} року",
      singularGenitive: "більше {{count}} років",
      pluralGenitive: "більше {{count}} років",
    },
    future: {
      singularNominative: "більше, ніж за {{count}} рік",
      singularGenitive: "більше, ніж за {{count}} роки",
      pluralGenitive: "більше, ніж за {{count}} років",
    },
  }),

  almostXYears: router_uk_lib_formatDistance_buildLocalizeTokenFn({
    regular: {
      singularNominative: "майже {{count}} рік",
      singularGenitive: "майже {{count}} роки",
      pluralGenitive: "майже {{count}} років",
    },
    future: {
      singularNominative: "майже за {{count}} рік",
      singularGenitive: "майже за {{count}} роки",
      pluralGenitive: "майже за {{count}} років",
    },
  }),
};

const router_uk_lib_formatDistance_formatDistance = (token, count, options) => {
  options = options || {};

  return router_uk_lib_formatDistance_formatDistanceLocale[token](count, options);
};

;// ./node_modules/date-fns/locale/uk/_lib/formatLong.mjs


const router_uk_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM y 'р.'",
  long: "do MMMM y 'р.'",
  medium: "d MMM y 'р.'",
  short: "dd.MM.y",
};

const router_uk_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_uk_lib_formatLong_dateTimeFormats = {
  full: "{{date}} 'о' {{time}}",
  long: "{{date}} 'о' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const router_uk_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_uk_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_uk_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_uk_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/uk/_lib/formatRelative.mjs



const router_uk_lib_formatRelative_accusativeWeekdays = [
  "неділю",
  "понеділок",
  "вівторок",
  "середу",
  "четвер",
  "п’ятницю",
  "суботу",
];

function router_uk_lib_formatRelative_lastWeek(day) {
  const weekday = router_uk_lib_formatRelative_accusativeWeekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 5:
    case 6:
      return "'у минулу " + weekday + " о' p";
    case 1:
    case 2:
    case 4:
      return "'у минулий " + weekday + " о' p";
  }
}

function router_uk_lib_formatRelative_thisWeek(day) {
  const weekday = router_uk_lib_formatRelative_accusativeWeekdays[day];

  return "'у " + weekday + " о' p";
}

function router_uk_lib_formatRelative_nextWeek(day) {
  const weekday = router_uk_lib_formatRelative_accusativeWeekdays[day];

  switch (day) {
    case 0:
    case 3:
    case 5:
    case 6:
      return "'у наступну " + weekday + " о' p";
    case 1:
    case 2:
    case 4:
      return "'у наступний " + weekday + " о' p";
  }
}

const router_lib_formatRelative_lastWeekFormat = (dirtyDate, baseDate, options) => {
  const date = router_toDate(dirtyDate);
  const day = date.getDay();

  if (router_isSameWeek(date, baseDate, options)) {
    return router_uk_lib_formatRelative_thisWeek(day);
  } else {
    return router_uk_lib_formatRelative_lastWeek(day);
  }
};

const router_lib_formatRelative_nextWeekFormat = (dirtyDate, baseDate, options) => {
  const date = router_toDate(dirtyDate);
  const day = date.getDay();
  if (router_isSameWeek(date, baseDate, options)) {
    return router_uk_lib_formatRelative_thisWeek(day);
  } else {
    return router_uk_lib_formatRelative_nextWeek(day);
  }
};

const router_uk_lib_formatRelative_formatRelativeLocale = {
  lastWeek: router_lib_formatRelative_lastWeekFormat,
  yesterday: "'вчора о' p",
  today: "'сьогодні о' p",
  tomorrow: "'завтра о' p",
  nextWeek: router_lib_formatRelative_nextWeekFormat,
  other: "P",
};

const router_uk_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_uk_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/uk/_lib/localize.mjs


const router_uk_lib_localize_eraValues = {
  narrow: ["до н.е.", "н.е."],
  abbreviated: ["до н. е.", "н. е."],
  wide: ["до нашої ери", "нашої ери"],
};

const router_uk_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-й кв.", "2-й кв.", "3-й кв.", "4-й кв."],
  wide: ["1-й квартал", "2-й квартал", "3-й квартал", "4-й квартал"],
};

const router_uk_lib_localize_monthValues = {
  // ДСТУ 3582:2013
  narrow: ["С", "Л", "Б", "К", "Т", "Ч", "Л", "С", "В", "Ж", "Л", "Г"],
  abbreviated: [
    "січ.",
    "лют.",
    "берез.",
    "квіт.",
    "трав.",
    "черв.",
    "лип.",
    "серп.",
    "верес.",
    "жовт.",
    "листоп.",
    "груд.",
  ],

  wide: [
    "січень",
    "лютий",
    "березень",
    "квітень",
    "травень",
    "червень",
    "липень",
    "серпень",
    "вересень",
    "жовтень",
    "листопад",
    "грудень",
  ],
};

const router_uk_lib_localize_formattingMonthValues = {
  narrow: ["С", "Л", "Б", "К", "Т", "Ч", "Л", "С", "В", "Ж", "Л", "Г"],
  abbreviated: [
    "січ.",
    "лют.",
    "берез.",
    "квіт.",
    "трав.",
    "черв.",
    "лип.",
    "серп.",
    "верес.",
    "жовт.",
    "листоп.",
    "груд.",
  ],

  wide: [
    "січня",
    "лютого",
    "березня",
    "квітня",
    "травня",
    "червня",
    "липня",
    "серпня",
    "вересня",
    "жовтня",
    "листопада",
    "грудня",
  ],
};

const router_uk_lib_localize_dayValues = {
  narrow: ["Н", "П", "В", "С", "Ч", "П", "С"],
  short: ["нд", "пн", "вт", "ср", "чт", "пт", "сб"],
  abbreviated: ["нед", "пон", "вів", "сер", "чтв", "птн", "суб"],
  wide: [
    "неділя",
    "понеділок",
    "вівторок",
    "середа",
    "четвер",
    "п’ятниця",
    "субота",
  ],
};

const router_uk_lib_localize_dayPeriodValues = {
  narrow: {
    am: "ДП",
    pm: "ПП",
    midnight: "півн.",
    noon: "пол.",
    morning: "ранок",
    afternoon: "день",
    evening: "веч.",
    night: "ніч",
  },
  abbreviated: {
    am: "ДП",
    pm: "ПП",
    midnight: "півн.",
    noon: "пол.",
    morning: "ранок",
    afternoon: "день",
    evening: "веч.",
    night: "ніч",
  },
  wide: {
    am: "ДП",
    pm: "ПП",
    midnight: "північ",
    noon: "полудень",
    morning: "ранок",
    afternoon: "день",
    evening: "вечір",
    night: "ніч",
  },
};

const router_uk_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "ДП",
    pm: "ПП",
    midnight: "півн.",
    noon: "пол.",
    morning: "ранку",
    afternoon: "дня",
    evening: "веч.",
    night: "ночі",
  },
  abbreviated: {
    am: "ДП",
    pm: "ПП",
    midnight: "півн.",
    noon: "пол.",
    morning: "ранку",
    afternoon: "дня",
    evening: "веч.",
    night: "ночі",
  },
  wide: {
    am: "ДП",
    pm: "ПП",
    midnight: "північ",
    noon: "полудень",
    morning: "ранку",
    afternoon: "дня",
    evening: "веч.",
    night: "ночі",
  },
};

const router_uk_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const unit = String(options?.unit);
  const number = Number(dirtyNumber);
  let suffix;

  if (unit === "date") {
    if (number === 3 || number === 23) {
      suffix = "-є";
    } else {
      suffix = "-е";
    }
  } else if (unit === "minute" || unit === "second" || unit === "hour") {
    suffix = "-а";
  } else {
    suffix = "-й";
  }

  return number + suffix;
};

const router_uk_lib_localize_localize = {
  ordinalNumber: router_uk_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_uk_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_uk_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_uk_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_uk_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_uk_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_uk_lib_localize_dayPeriodValues,
    defaultWidth: "any",
    formattingValues: router_uk_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/uk/_lib/match.mjs



const router_uk_lib_match_matchOrdinalNumberPattern = /^(\d+)(-?(е|й|є|а|я))?/i;
const router_uk_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_uk_lib_match_matchEraPatterns = {
  narrow: /^((до )?н\.?\s?е\.?)/i,
  abbreviated: /^((до )?н\.?\s?е\.?)/i,
  wide: /^(до нашої ери|нашої ери|наша ера)/i,
};

const router_uk_lib_match_parseEraPatterns = {
  any: [/^д/i, /^н/i],
};

const router_uk_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234](-?[иі]?й?)? кв.?/i,
  wide: /^[1234](-?[иі]?й?)? квартал/i,
};

const router_uk_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_uk_lib_match_matchMonthPatterns = {
  narrow: /^[слбктчвжг]/i,
  abbreviated:
    /^(січ|лют|бер(ез)?|квіт|трав|черв|лип|серп|вер(ес)?|жовт|лис(топ)?|груд)\.?/i,
  wide: /^(січень|січня|лютий|лютого|березень|березня|квітень|квітня|травень|травня|червня|червень|липень|липня|серпень|серпня|вересень|вересня|жовтень|жовтня|листопад[а]?|грудень|грудня)/i,
};

const router_uk_lib_match_parseMonthPatterns = {
  narrow: [
    /^с/i,
    /^л/i,
    /^б/i,
    /^к/i,
    /^т/i,
    /^ч/i,
    /^л/i,
    /^с/i,
    /^в/i,
    /^ж/i,
    /^л/i,
    /^г/i,
  ],

  any: [
    /^сі/i,
    /^лю/i,
    /^б/i,
    /^к/i,
    /^т/i,
    /^ч/i,
    /^лип/i,
    /^се/i,
    /^в/i,
    /^ж/i,
    /^лис/i,
    /^г/i,
  ],
};

const router_uk_lib_match_matchDayPatterns = {
  narrow: /^[нпвсч]/i,
  short: /^(нд|пн|вт|ср|чт|пт|сб)\.?/i,
  abbreviated: /^(нед|пон|вів|сер|че?тв|птн?|суб)\.?/i,
  wide: /^(неділ[яі]|понеділ[ок][ка]|вівтор[ок][ка]|серед[аи]|четвер(га)?|п\W*?ятниц[яі]|субот[аи])/i,
};

const router_uk_lib_match_parseDayPatterns = {
  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],
  any: [/^н/i, /^п[он]/i, /^в/i, /^с[ер]/i, /^ч/i, /^п\W*?[ят]/i, /^с[уб]/i],
};

const router_uk_lib_match_matchDayPeriodPatterns = {
  narrow: /^([дп]п|півн\.?|пол\.?|ранок|ранку|день|дня|веч\.?|ніч|ночі)/i,
  abbreviated: /^([дп]п|півн\.?|пол\.?|ранок|ранку|день|дня|веч\.?|ніч|ночі)/i,
  wide: /^([дп]п|північ|полудень|ранок|ранку|день|дня|вечір|вечора|ніч|ночі)/i,
};

const router_uk_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^дп/i,
    pm: /^пп/i,
    midnight: /^півн/i,
    noon: /^пол/i,
    morning: /^р/i,
    afternoon: /^д[ен]/i,
    evening: /^в/i,
    night: /^н/i,
  },
};

const router_uk_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_uk_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_uk_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_uk_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uk_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_uk_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uk_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_uk_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uk_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_uk_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uk_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_uk_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uk_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/uk.mjs






/**
 * @category Locales
 * @summary Ukrainian locale.
 * @language Ukrainian
 * @iso-639-2 ukr
 * @author Andrii Korzh [@korzhyk](https://github.com/korzhyk)
 * @author Andriy Shcherbyak [@shcherbyakdev](https://github.com/shcherbyakdev)
 */
const router_uk = {
  code: "uk",
  formatDistance: router_uk_lib_formatDistance_formatDistance,
  formatLong: router_uk_lib_formatLong_formatLong,
  formatRelative: router_uk_lib_formatRelative_formatRelative,
  localize: router_uk_lib_localize_localize,
  match: router_uk_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_uk = ((/* unused pure expression or super */ null && (router_uk)));

;// ./node_modules/date-fns/locale/uz/_lib/formatDistance.mjs
const router_uz_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "sekunddan kam",
    other: "{{count}} sekunddan kam",
  },

  xSeconds: {
    one: "1 sekund",
    other: "{{count}} sekund",
  },

  halfAMinute: "yarim minut",

  lessThanXMinutes: {
    one: "bir minutdan kam",
    other: "{{count}} minutdan kam",
  },

  xMinutes: {
    one: "1 minut",
    other: "{{count}} minut",
  },

  aboutXHours: {
    one: "tahminan 1 soat",
    other: "tahminan {{count}} soat",
  },

  xHours: {
    one: "1 soat",
    other: "{{count}} soat",
  },

  xDays: {
    one: "1 kun",
    other: "{{count}} kun",
  },

  aboutXWeeks: {
    one: "tahminan 1 hafta",
    other: "tahminan {{count}} hafta",
  },

  xWeeks: {
    one: "1 hafta",
    other: "{{count}} hafta",
  },

  aboutXMonths: {
    one: "tahminan 1 oy",
    other: "tahminan {{count}} oy",
  },

  xMonths: {
    one: "1 oy",
    other: "{{count}} oy",
  },

  aboutXYears: {
    one: "tahminan 1 yil",
    other: "tahminan {{count}} yil",
  },

  xYears: {
    one: "1 yil",
    other: "{{count}} yil",
  },

  overXYears: {
    one: "1 yildan ko'p",
    other: "{{count}} yildan ko'p",
  },

  almostXYears: {
    one: "deyarli 1 yil",
    other: "deyarli {{count}} yil",
  },
};

const router_uz_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_uz_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + " dan keyin";
    } else {
      return result + " oldin";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/uz/_lib/formatLong.mjs


const router_uz_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM, y",
  long: "do MMMM, y",
  medium: "d MMM, y",
  short: "dd/MM/yyyy",
};

const router_uz_lib_formatLong_timeFormats = {
  full: "h:mm:ss zzzz",
  long: "h:mm:ss z",
  medium: "h:mm:ss",
  short: "h:mm",
};

const router_uz_lib_formatLong_dateTimeFormats = {
  any: "{{date}}, {{time}}",
};

const router_uz_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_uz_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_uz_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_uz_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/uz/_lib/formatRelative.mjs
const router_uz_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'oldingi' eeee p 'da'",
  yesterday: "'kecha' p 'da'",
  today: "'bugun' p 'da'",
  tomorrow: "'ertaga' p 'da'",
  nextWeek: "eeee p 'da'",
  other: "P",
};

const router_uz_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_uz_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/uz/_lib/localize.mjs


const router_uz_lib_localize_eraValues = {
  narrow: ["M.A", "M."],
  abbreviated: ["M.A", "M."],
  wide: ["Miloddan Avvalgi", "Milodiy"],
};

const router_uz_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["CH.1", "CH.2", "CH.3", "CH.4"],
  wide: ["1-chi chorak", "2-chi chorak", "3-chi chorak", "4-chi chorak"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_uz_lib_localize_monthValues = {
  narrow: ["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Yan",
    "Fev",
    "Mar",
    "Apr",
    "May",
    "Iyun",
    "Iyul",
    "Avg",
    "Sen",
    "Okt",
    "Noy",
    "Dek",
  ],

  wide: [
    "Yanvar",
    "Fevral",
    "Mart",
    "Aprel",
    "May",
    "Iyun",
    "Iyul",
    "Avgust",
    "Sentabr",
    "Oktabr",
    "Noyabr",
    "Dekabr",
  ],
};

const router_uz_lib_localize_dayValues = {
  narrow: ["Y", "D", "S", "CH", "P", "J", "SH"],
  short: ["Ya", "Du", "Se", "Cho", "Pa", "Ju", "Sha"],
  abbreviated: ["Yak", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"],
  wide: [
    "Yakshanba",
    "Dushanba",
    "Seshanba",
    "Chorshanba",
    "Payshanba",
    "Juma",
    "Shanba",
  ],
};

const router_uz_lib_localize_dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "y.t",
    noon: "p.",
    morning: "ertalab",
    afternoon: "tushdan keyin",
    evening: "kechqurun",
    night: "tun",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "yarim tun",
    noon: "peshin",
    morning: "ertalab",
    afternoon: "tushdan keyin",
    evening: "kechqurun",
    night: "tun",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "yarim tun",
    noon: "peshin",
    morning: "ertalab",
    afternoon: "tushdan keyin",
    evening: "kechqurun",
    night: "tun",
  },
};

const router_uz_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "y.t",
    noon: "p.",
    morning: "ertalab",
    afternoon: "tushdan keyin",
    evening: "kechqurun",
    night: "tun",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "yarim tun",
    noon: "peshin",
    morning: "ertalab",
    afternoon: "tushdan keyin",
    evening: "kechqurun",
    night: "tun",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "yarim tun",
    noon: "peshin",
    morning: "ertalab",
    afternoon: "tushdan keyin",
    evening: "kechqurun",
    night: "tun",
  },
};

const router_uz_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_uz_lib_localize_localize = {
  ordinalNumber: router_uz_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_uz_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_uz_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_uz_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_uz_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_uz_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_uz_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/uz/_lib/match.mjs



const router_uz_lib_match_matchOrdinalNumberPattern = /^(\d+)(chi)?/i;
const router_uz_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_uz_lib_match_matchEraPatterns = {
  narrow: /^(m\.a|m\.)/i,
  abbreviated: /^(m\.a\.?\s?m\.?)/i,
  wide: /^(miloddan avval|miloddan keyin)/i,
};
const router_uz_lib_match_parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i],
};

const router_uz_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](chi)? chorak/i,
};
const router_uz_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_uz_lib_match_matchMonthPatterns = {
  narrow: /^[yfmasond]/i,
  abbreviated: /^(yan|fev|mar|apr|may|iyun|iyul|avg|sen|okt|noy|dek)/i,
  wide: /^(yanvar|fevral|mart|aprel|may|iyun|iyul|avgust|sentabr|oktabr|noyabr|dekabr)/i,
};
const router_uz_lib_match_parseMonthPatterns = {
  narrow: [
    /^y/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^i/i,
    /^i/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ya/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^may/i,
    /^iyun/i,
    /^iyul/i,
    /^av/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const router_uz_lib_match_matchDayPatterns = {
  narrow: /^[ydschj]/i,
  short: /^(ya|du|se|cho|pa|ju|sha)/i,
  abbreviated: /^(yak|dush|sesh|chor|pay|jum|shan)/i,
  wide: /^(yakshanba|dushanba|seshanba|chorshanba|payshanba|juma|shanba)/i,
};
const router_uz_lib_match_parseDayPatterns = {
  narrow: [/^y/i, /^d/i, /^s/i, /^ch/i, /^p/i, /^j/i, /^sh/i],
  any: [/^ya/i, /^d/i, /^se/i, /^ch/i, /^p/i, /^j/i, /^sh/i],
};

const router_uz_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|y\.t|p| (ertalab|tushdan keyin|kechqurun|tun))/i,
  any: /^([ap]\.?\s?m\.?|yarim tun|peshin| (ertalab|tushdan keyin|kechqurun|tun))/i,
};
const router_uz_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^y\.t/i,
    noon: /^pe/i,
    morning: /ertalab/i,
    afternoon: /tushdan keyin/i,
    evening: /kechqurun/i,
    night: /tun/i,
  },
};

const router_uz_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_uz_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_uz_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_uz_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uz_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_uz_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uz_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_uz_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uz_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_uz_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uz_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_uz_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_uz_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/uz.mjs






/**
 * @category Locales
 * @summary Uzbek locale.
 * @language Uzbek
 * @iso-639-2 uzb
 * @author Mukhammadali [@mukhammadali](https://github.com/Mukhammadali)
 */
const router_uz = {
  code: "uz",
  formatDistance: router_uz_lib_formatDistance_formatDistance,
  formatLong: router_uz_lib_formatLong_formatLong,
  formatRelative: router_uz_lib_formatRelative_formatRelative,
  localize: router_uz_lib_localize_localize,
  match: router_uz_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_uz = ((/* unused pure expression or super */ null && (router_uz)));

;// ./node_modules/date-fns/locale/uz-Cyrl/_lib/formatDistance.mjs
const router_uz_Cyrl_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "1 сониядан кам",
    other: "{{count}} сониядан кам",
  },

  xSeconds: {
    one: "1 сония",
    other: "{{count}} сония",
  },

  halfAMinute: "ярим дақиқа",

  lessThanXMinutes: {
    one: "1 дақиқадан кам",
    other: "{{count}} дақиқадан кам",
  },

  xMinutes: {
    one: "1 дақиқа",
    other: "{{count}} дақиқа",
  },

  aboutXHours: {
    one: "тахминан 1 соат",
    other: "тахминан {{count}} соат",
  },

  xHours: {
    one: "1 соат",
    other: "{{count}} соат",
  },

  xDays: {
    one: "1 кун",
    other: "{{count}} кун",
  },

  aboutXWeeks: {
    one: "тахминан 1 хафта",
    other: "тахминан {{count}} хафта",
  },

  xWeeks: {
    one: "1 хафта",
    other: "{{count}} хафта",
  },

  aboutXMonths: {
    one: "тахминан 1 ой",
    other: "тахминан {{count}} ой",
  },

  xMonths: {
    one: "1 ой",
    other: "{{count}} ой",
  },

  aboutXYears: {
    one: "тахминан 1 йил",
    other: "тахминан {{count}} йил",
  },

  xYears: {
    one: "1 йил",
    other: "{{count}} йил",
  },

  overXYears: {
    one: "1 йилдан кўп",
    other: "{{count}} йилдан кўп",
  },

  almostXYears: {
    one: "деярли 1 йил",
    other: "деярли {{count}} йил",
  },
};

const router_uz_Cyrl_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_uz_Cyrl_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "дан кейин";
    } else {
      return result + " олдин";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/uz-Cyrl/_lib/formatLong.mjs


const router_uz_Cyrl_lib_formatLong_dateFormats = {
  full: "EEEE, do MMMM, y",
  long: "do MMMM, y",
  medium: "d MMM, y",
  short: "dd/MM/yyyy",
};

const router_uz_Cyrl_lib_formatLong_timeFormats = {
  full: "H:mm:ss zzzz",
  long: "H:mm:ss z",
  medium: "H:mm:ss",
  short: "H:mm",
};

const router_uz_Cyrl_lib_formatLong_dateTimeFormats = {
  any: "{{date}}, {{time}}",
};

const router_uz_Cyrl_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_uz_Cyrl_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_uz_Cyrl_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_uz_Cyrl_lib_formatLong_dateTimeFormats,
    defaultWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/uz-Cyrl/_lib/formatRelative.mjs
const router_uz_Cyrl_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'ўтган' eeee p 'да'",
  yesterday: "'кеча' p 'да'",
  today: "'бугун' p 'да'",
  tomorrow: "'эртага' p 'да'",
  nextWeek: "eeee p 'да'",
  other: "P",
};

const router_uz_Cyrl_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_uz_Cyrl_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/uz-Cyrl/_lib/localize.mjs


const router_uz_Cyrl_lib_localize_eraValues = {
  narrow: ["М.А", "М"],
  abbreviated: ["М.А", "М"],
  wide: ["Милоддан Аввалги", "Милодий"],
};

const router_uz_Cyrl_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["1-чор.", "2-чор.", "3-чор.", "4-чор."],
  wide: ["1-чорак", "2-чорак", "3-чорак", "4-чорак"],
};

const router_uz_Cyrl_lib_localize_monthValues = {
  narrow: ["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"],
  abbreviated: [
    "янв",
    "фев",
    "мар",
    "апр",
    "май",
    "июн",
    "июл",
    "авг",
    "сен",
    "окт",
    "ноя",
    "дек",
  ],

  wide: [
    "январ",
    "феврал",
    "март",
    "апрел",
    "май",
    "июн",
    "июл",
    "август",
    "сентабр",
    "октабр",
    "ноябр",
    "декабр",
  ],
};

const router_uz_Cyrl_lib_localize_dayValues = {
  narrow: ["Я", "Д", "С", "Ч", "П", "Ж", "Ш"],
  short: ["як", "ду", "се", "чо", "па", "жу", "ша"],
  abbreviated: ["якш", "душ", "сеш", "чор", "пай", "жум", "шан"],
  wide: [
    "якшанба",
    "душанба",
    "сешанба",
    "чоршанба",
    "пайшанба",
    "жума",
    "шанба",
  ],
};

const router_uz_Cyrl_lib_localize_dayPeriodValues = {
  any: {
    am: "П.О.",
    pm: "П.К.",
    midnight: "ярим тун",
    noon: "пешин",
    morning: "эрталаб",
    afternoon: "пешиндан кейин",
    evening: "кечаси",
    night: "тун",
  },
};

const router_uz_Cyrl_lib_localize_formattingDayPeriodValues = {
  any: {
    am: "П.О.",
    pm: "П.К.",
    midnight: "ярим тун",
    noon: "пешин",
    morning: "эрталаб",
    afternoon: "пешиндан кейин",
    evening: "кечаси",
    night: "тун",
  },
};

const router_uz_Cyrl_lib_localize_ordinalNumber = (dirtyNumber, _options) => {
  return String(dirtyNumber);
};

const router_uz_Cyrl_lib_localize_localize = {
  ordinalNumber: router_uz_Cyrl_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_uz_Cyrl_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_uz_Cyrl_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_uz_Cyrl_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_uz_Cyrl_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_uz_Cyrl_lib_localize_dayPeriodValues,
    defaultWidth: "any",
    formattingValues: router_uz_Cyrl_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/uz-Cyrl/_lib/match.mjs



const router_uz_Cyrl_lib_match_matchOrdinalNumberPattern = /^(\d+)(чи)?/i;
const router_uz_Cyrl_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_uz_Cyrl_lib_match_matchEraPatterns = {
  narrow: /^(м\.а|м\.)/i,
  abbreviated: /^(м\.а|м\.)/i,
  wide: /^(милоддан аввал|милоддан кейин)/i,
};
const router_uz_Cyrl_lib_match_parseEraPatterns = {
  any: [/^м/i, /^а/i],
};

const router_uz_Cyrl_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]-чор./i,
  wide: /^[1234]-чорак/i,
};
const router_uz_Cyrl_lib_match_parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const router_uz_Cyrl_lib_match_matchMonthPatterns = {
  narrow: /^[яфмамииасонд]/i,
  abbreviated: /^(янв|фев|мар|апр|май|июн|июл|авг|сен|окт|ноя|дек)/i,
  wide: /^(январ|феврал|март|апрел|май|июн|июл|август|сентабр|октабр|ноябр|декабр)/i,
};
const router_uz_Cyrl_lib_match_parseMonthPatterns = {
  narrow: [
    /^я/i,
    /^ф/i,
    /^м/i,
    /^а/i,
    /^м/i,
    /^и/i,
    /^и/i,
    /^а/i,
    /^с/i,
    /^о/i,
    /^н/i,
    /^д/i,
  ],

  any: [
    /^я/i,
    /^ф/i,
    /^мар/i,
    /^ап/i,
    /^май/i,
    /^июн/i,
    /^июл/i,
    /^ав/i,
    /^с/i,
    /^о/i,
    /^н/i,
    /^д/i,
  ],
};

const router_uz_Cyrl_lib_match_matchDayPatterns = {
  narrow: /^[ядсчпжш]/i,
  short: /^(як|ду|се|чо|па|жу|ша)/i,
  abbreviated: /^(якш|душ|сеш|чор|пай|жум|шан)/i,
  wide: /^(якшанба|душанба|сешанба|чоршанба|пайшанба|жума|шанба)/i,
};
const router_uz_Cyrl_lib_match_parseDayPatterns = {
  narrow: [/^я/i, /^д/i, /^с/i, /^ч/i, /^п/i, /^ж/i, /^ш/i],
  any: [/^як/i, /^ду/i, /^се/i, /^чор/i, /^пай/i, /^жу/i, /^шан/i],
};

const router_uz_Cyrl_lib_match_matchDayPeriodPatterns = {
  any: /^(п\.о\.|п\.к\.|ярим тун|пешиндан кейин|(эрталаб|пешиндан кейин|кечаси|тун))/i,
};
const router_uz_Cyrl_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^п\.о\./i,
    pm: /^п\.к\./i,
    midnight: /^ярим тун/i,
    noon: /^пешиндан кейин/i,
    morning: /эрталаб/i,
    afternoon: /пешиндан кейин/i,
    evening: /кечаси/i,
    night: /тун/i,
  },
};

const router_uz_Cyrl_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_uz_Cyrl_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_uz_Cyrl_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_uz_Cyrl_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uz_Cyrl_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_uz_Cyrl_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uz_Cyrl_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_uz_Cyrl_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uz_Cyrl_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_uz_Cyrl_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_uz_Cyrl_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_uz_Cyrl_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_uz_Cyrl_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/uz-Cyrl.mjs






/**
 * @category Locales
 * @summary Uzbek Cyrillic locale.
 * @language Uzbek
 * @iso-639-2 uzb
 * @author Kamronbek Shodmonov [@kamronbek28](https://github.com/kamronbek28)
 */
const router_uzCyrl = {
  code: "uz-Cyrl",
  formatDistance: router_uz_Cyrl_lib_formatDistance_formatDistance,
  formatLong: router_uz_Cyrl_lib_formatLong_formatLong,
  formatRelative: router_uz_Cyrl_lib_formatRelative_formatRelative,
  localize: router_uz_Cyrl_lib_localize_localize,
  match: router_uz_Cyrl_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_uz_Cyrl = ((/* unused pure expression or super */ null && (router_uzCyrl)));

;// ./node_modules/date-fns/locale/vi/_lib/formatDistance.mjs
const router_vi_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "dưới 1 giây",
    other: "dưới {{count}} giây",
  },

  xSeconds: {
    one: "1 giây",
    other: "{{count}} giây",
  },

  halfAMinute: "nửa phút",

  lessThanXMinutes: {
    one: "dưới 1 phút",
    other: "dưới {{count}} phút",
  },

  xMinutes: {
    one: "1 phút",
    other: "{{count}} phút",
  },

  aboutXHours: {
    one: "khoảng 1 giờ",
    other: "khoảng {{count}} giờ",
  },

  xHours: {
    one: "1 giờ",
    other: "{{count}} giờ",
  },

  xDays: {
    one: "1 ngày",
    other: "{{count}} ngày",
  },

  aboutXWeeks: {
    one: "khoảng 1 tuần",
    other: "khoảng {{count}} tuần",
  },

  xWeeks: {
    one: "1 tuần",
    other: "{{count}} tuần",
  },

  aboutXMonths: {
    one: "khoảng 1 tháng",
    other: "khoảng {{count}} tháng",
  },

  xMonths: {
    one: "1 tháng",
    other: "{{count}} tháng",
  },

  aboutXYears: {
    one: "khoảng 1 năm",
    other: "khoảng {{count}} năm",
  },

  xYears: {
    one: "1 năm",
    other: "{{count}} năm",
  },

  overXYears: {
    one: "hơn 1 năm",
    other: "hơn {{count}} năm",
  },

  almostXYears: {
    one: "gần 1 năm",
    other: "gần {{count}} năm",
  },
};

const router_vi_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_vi_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + " nữa";
    } else {
      return result + " trước";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/vi/_lib/formatLong.mjs


const router_vi_lib_formatLong_dateFormats = {
  // thứ Sáu, ngày 25 tháng 08 năm 2017
  full: "EEEE, 'ngày' d MMMM 'năm' y",
  // ngày 25 tháng 08 năm 2017
  long: "'ngày' d MMMM 'năm' y",
  // 25 thg 08 năm 2017
  medium: "d MMM 'năm' y",
  // 25/08/2017
  short: "dd/MM/y",
};

const router_vi_lib_formatLong_timeFormats = {
  full: "HH:mm:ss zzzz",
  long: "HH:mm:ss z",
  medium: "HH:mm:ss",
  short: "HH:mm",
};

const router_vi_lib_formatLong_dateTimeFormats = {
  // thứ Sáu, ngày 25 tháng 08 năm 2017 23:25:59
  full: "{{date}} {{time}}",
  // ngày 25 tháng 08 năm 2017 23:25
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_vi_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_vi_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_vi_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_vi_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/vi/_lib/formatRelative.mjs
const router_vi_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "eeee 'tuần trước vào lúc' p",
  yesterday: "'hôm qua vào lúc' p",
  today: "'hôm nay vào lúc' p",
  tomorrow: "'ngày mai vào lúc' p",
  nextWeek: "eeee 'tới vào lúc' p",
  other: "P",
};

const router_vi_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_vi_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/vi/_lib/localize.mjs


// Vietnamese locale reference: http://www.localeplanet.com/icu/vi-VN/index.html
// Capitalization reference: http://hcmup.edu.vn/index.php?option=com_content&view=article&id=4106%3Avit-hoa-trong-vn-bn-hanh-chinh&catid=2345%3Atham-kho&Itemid=4103&lang=vi&site=134

const router_vi_lib_localize_eraValues = {
  narrow: ["TCN", "SCN"],
  abbreviated: ["trước CN", "sau CN"],
  wide: ["trước Công Nguyên", "sau Công Nguyên"],
};

const router_vi_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["Quý 1", "Quý 2", "Quý 3", "Quý 4"],
};

const router_vi_lib_localize_formattingQuarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  // I notice many news outlet use this "quý II/2018"
  wide: ["quý I", "quý II", "quý III", "quý IV"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const router_vi_lib_localize_monthValues = {
  narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],

  abbreviated: [
    "Thg 1",
    "Thg 2",
    "Thg 3",
    "Thg 4",
    "Thg 5",
    "Thg 6",
    "Thg 7",
    "Thg 8",
    "Thg 9",
    "Thg 10",
    "Thg 11",
    "Thg 12",
  ],

  wide: [
    "Tháng Một",
    "Tháng Hai",
    "Tháng Ba",
    "Tháng Tư",
    "Tháng Năm",
    "Tháng Sáu",
    "Tháng Bảy",
    "Tháng Tám",
    "Tháng Chín",
    "Tháng Mười",
    "Tháng Mười Một",
    "Tháng Mười Hai",
  ],
};
// In Vietnamese date formatting, month number less than 10 expected to have leading zero
const router_vi_lib_localize_formattingMonthValues = {
  narrow: [
    "01",
    "02",
    "03",
    "04",
    "05",
    "06",
    "07",
    "08",
    "09",
    "10",
    "11",
    "12",
  ],

  abbreviated: [
    "thg 1",
    "thg 2",
    "thg 3",
    "thg 4",
    "thg 5",
    "thg 6",
    "thg 7",
    "thg 8",
    "thg 9",
    "thg 10",
    "thg 11",
    "thg 12",
  ],

  wide: [
    "tháng 01",
    "tháng 02",
    "tháng 03",
    "tháng 04",
    "tháng 05",
    "tháng 06",
    "tháng 07",
    "tháng 08",
    "tháng 09",
    "tháng 10",
    "tháng 11",
    "tháng 12",
  ],
};

const router_vi_lib_localize_dayValues = {
  narrow: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
  short: ["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"],
  abbreviated: ["CN", "Thứ 2", "Thứ 3", "Thứ 4", "Thứ 5", "Thứ 6", "Thứ 7"],

  wide: [
    "Chủ Nhật",
    "Thứ Hai",
    "Thứ Ba",
    "Thứ Tư",
    "Thứ Năm",
    "Thứ Sáu",
    "Thứ Bảy",
  ],
};

// Vietnamese are used to AM/PM borrowing from English, hence `narrow` and
// `abbreviated` are just like English but I'm leaving the `wide`
// format being localized with abbreviations found in some systems (SÁng / CHiều);
// however, personally, I don't think `Chiều` sounds appropriate for `PM`
const router_vi_lib_localize_dayPeriodValues = {
  // narrow date period is extremely rare in Vietnamese
  // I used abbreviated form for noon, morning and afternoon
  // which are regconizable by Vietnamese, others cannot be any shorter
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "nửa đêm",
    noon: "tr",
    morning: "sg",
    afternoon: "ch",
    evening: "tối",
    night: "đêm",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "nửa đêm",
    noon: "trưa",
    morning: "sáng",
    afternoon: "chiều",
    evening: "tối",
    night: "đêm",
  },
  wide: {
    am: "SA",
    pm: "CH",
    midnight: "nửa đêm",
    noon: "trưa",
    morning: "sáng",
    afternoon: "chiều",
    evening: "tối",
    night: "đêm",
  },
};

const router_vi_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "am",
    pm: "pm",
    midnight: "nửa đêm",
    noon: "tr",
    morning: "sg",
    afternoon: "ch",
    evening: "tối",
    night: "đêm",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "nửa đêm",
    noon: "trưa",
    morning: "sáng",
    afternoon: "chiều",
    evening: "tối",
    night: "đêm",
  },
  wide: {
    am: "SA",
    pm: "CH",
    midnight: "nửa đêm",
    noon: "giữa trưa",
    morning: "vào buổi sáng",
    afternoon: "vào buổi chiều",
    evening: "vào buổi tối",
    night: "vào ban đêm",
  },
};

const router_vi_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);
  const unit = options?.unit;

  if (unit === "quarter") {
    // many news outlets use "quý I"...
    switch (number) {
      case 1:
        return "I";
      case 2:
        return "II";
      case 3:
        return "III";
      case 4:
        return "IV";
    }
  } else if (unit === "day") {
    // day of week in Vietnamese has ordinal number meaning,
    // so we should use them, else it'll sound weird
    switch (number) {
      case 1:
        return "thứ 2"; // meaning 2nd day but it's the first day of the week :D
      case 2:
        return "thứ 3"; // meaning 3rd day
      case 3:
        return "thứ 4"; // meaning 4th day and so on
      case 4:
        return "thứ 5";
      case 5:
        return "thứ 6";
      case 6:
        return "thứ 7";
      case 7:
        return "chủ nhật"; // meaning Sunday, there's no 8th day :D
    }
  } else if (unit === "week") {
    if (number === 1) {
      return "thứ nhất";
    } else {
      return "thứ " + number;
    }
  } else if (unit === "dayOfYear") {
    if (number === 1) {
      return "đầu tiên";
    } else {
      return "thứ " + number;
    }
  }

  // there are no different forms of ordinal numbers in Vietnamese
  return String(number);
};

const router_vi_lib_localize_localize = {
  ordinalNumber: router_vi_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_vi_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_vi_lib_localize_quarterValues,
    defaultWidth: "wide",
    formattingValues: router_vi_lib_localize_formattingQuarterValues,
    defaultFormattingWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_vi_lib_localize_monthValues,
    defaultWidth: "wide",
    formattingValues: router_vi_lib_localize_formattingMonthValues,
    defaultFormattingWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_vi_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_vi_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_vi_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/vi/_lib/match.mjs



const router_vi_lib_match_matchOrdinalNumberPattern = /^(\d+)/i;
const router_vi_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_vi_lib_match_matchEraPatterns = {
  narrow: /^(tcn|scn)/i,
  abbreviated: /^(trước CN|sau CN)/i,
  wide: /^(trước Công Nguyên|sau Công Nguyên)/i,
};
const router_vi_lib_match_parseEraPatterns = {
  any: [/^t/i, /^s/i],
};

const router_vi_lib_match_matchQuarterPatterns = {
  narrow: /^([1234]|i{1,3}v?)/i,
  abbreviated: /^q([1234]|i{1,3}v?)/i,
  wide: /^quý ([1234]|i{1,3}v?)/i,
};
const router_vi_lib_match_parseQuarterPatterns = {
  any: [/(1|i)$/i, /(2|ii)$/i, /(3|iii)$/i, /(4|iv)$/i],
};

const router_vi_lib_match_matchMonthPatterns = {
  // month number may contain leading 0, 'thg' prefix may have space, underscore or empty before number
  // note the order of '1' since it is a sub-string of '10', so must be lower priority
  narrow: /^(0?[2-9]|10|11|12|0?1)/i,
  // note the order of 'thg 1' since it is sub-string of 'thg 10', so must be lower priority
  abbreviated: /^thg[ _]?(0?[1-9](?!\d)|10|11|12)/i,
  // note the order of 'Mười' since it is sub-string of Mười Một, so must be lower priority
  wide: /^tháng ?(Một|Hai|Ba|Tư|Năm|Sáu|Bảy|Tám|Chín|Mười|Mười ?Một|Mười ?Hai|0?[1-9](?!\d)|10|11|12)/i,
};
const router_vi_lib_match_parseMonthPatterns = {
  narrow: [
    /0?1$/i,
    /0?2/i,
    /3/,
    /4/,
    /5/,
    /6/,
    /7/,
    /8/,
    /9/,
    /10/,
    /11/,
    /12/,
  ],

  abbreviated: [
    /^thg[ _]?0?1(?!\d)/i,
    /^thg[ _]?0?2/i,
    /^thg[ _]?0?3/i,
    /^thg[ _]?0?4/i,
    /^thg[ _]?0?5/i,
    /^thg[ _]?0?6/i,
    /^thg[ _]?0?7/i,
    /^thg[ _]?0?8/i,
    /^thg[ _]?0?9/i,
    /^thg[ _]?10/i,
    /^thg[ _]?11/i,
    /^thg[ _]?12/i,
  ],

  wide: [
    /^tháng ?(Một|0?1(?!\d))/i,
    /^tháng ?(Hai|0?2)/i,
    /^tháng ?(Ba|0?3)/i,
    /^tháng ?(Tư|0?4)/i,
    /^tháng ?(Năm|0?5)/i,
    /^tháng ?(Sáu|0?6)/i,
    /^tháng ?(Bảy|0?7)/i,
    /^tháng ?(Tám|0?8)/i,
    /^tháng ?(Chín|0?9)/i,
    /^tháng ?(Mười|10)/i,
    /^tháng ?(Mười ?Một|11)/i,
    /^tháng ?(Mười ?Hai|12)/i,
  ],
};

const router_vi_lib_match_matchDayPatterns = {
  narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i,
  short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
  abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
  wide: /^(Chủ ?Nhật|Chúa ?Nhật|thứ ?Hai|thứ ?Ba|thứ ?Tư|thứ ?Năm|thứ ?Sáu|thứ ?Bảy)/i,
};
const router_vi_lib_match_parseDayPatterns = {
  narrow: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
  short: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
  abbreviated: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
  wide: [/(Chủ|Chúa) ?Nhật/i, /Hai/i, /Ba/i, /Tư/i, /Năm/i, /Sáu/i, /Bảy/i],
};

const router_vi_lib_match_matchDayPeriodPatterns = {
  narrow: /^(a|p|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,
  abbreviated: /^(am|pm|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,
  wide: /^(ch[^i]*|sa|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,
};
const router_vi_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^(a|sa)/i,
    pm: /^(p|ch[^i]*)/i,
    midnight: /nửa đêm/i,
    noon: /trưa/i,
    morning: /sáng/i,
    afternoon: /chiều/i,
    evening: /tối/i,
    night: /^đêm/i,
  },
};

const router_vi_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_vi_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_vi_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_vi_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_vi_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_vi_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_vi_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_vi_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_vi_lib_match_parseMonthPatterns,
    defaultParseWidth: "wide",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_vi_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_vi_lib_match_parseDayPatterns,
    defaultParseWidth: "wide",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_vi_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_vi_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/vi.mjs






/**
 * @category Locales
 * @summary Vietnamese locale (Vietnam).
 * @language Vietnamese
 * @iso-639-2 vie
 * @author Thanh Tran [@trongthanh](https://github.com/trongthanh)
 * @author Leroy Hopson [@lihop](https://github.com/lihop)
 */
const router_vi = {
  code: "vi",
  formatDistance: router_vi_lib_formatDistance_formatDistance,
  formatLong: router_vi_lib_formatLong_formatLong,
  formatRelative: router_vi_lib_formatRelative_formatRelative,
  localize: router_vi_lib_localize_localize,
  match: router_vi_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 1 /* First week of new year contains Jan 1st  */,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_locale_vi = ((/* unused pure expression or super */ null && (router_vi)));

;// ./node_modules/date-fns/locale/zh-CN/_lib/formatDistance.mjs
const router_zh_CN_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "不到 1 秒",
    other: "不到 {{count}} 秒",
  },

  xSeconds: {
    one: "1 秒",
    other: "{{count}} 秒",
  },

  halfAMinute: "半分钟",

  lessThanXMinutes: {
    one: "不到 1 分钟",
    other: "不到 {{count}} 分钟",
  },

  xMinutes: {
    one: "1 分钟",
    other: "{{count}} 分钟",
  },

  xHours: {
    one: "1 小时",
    other: "{{count}} 小时",
  },

  aboutXHours: {
    one: "大约 1 小时",
    other: "大约 {{count}} 小时",
  },

  xDays: {
    one: "1 天",
    other: "{{count}} 天",
  },

  aboutXWeeks: {
    one: "大约 1 个星期",
    other: "大约 {{count}} 个星期",
  },

  xWeeks: {
    one: "1 个星期",
    other: "{{count}} 个星期",
  },

  aboutXMonths: {
    one: "大约 1 个月",
    other: "大约 {{count}} 个月",
  },

  xMonths: {
    one: "1 个月",
    other: "{{count}} 个月",
  },

  aboutXYears: {
    one: "大约 1 年",
    other: "大约 {{count}} 年",
  },

  xYears: {
    one: "1 年",
    other: "{{count}} 年",
  },

  overXYears: {
    one: "超过 1 年",
    other: "超过 {{count}} 年",
  },

  almostXYears: {
    one: "将近 1 年",
    other: "将近 {{count}} 年",
  },
};

const router_zh_CN_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_zh_CN_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "内";
    } else {
      return result + "前";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/zh-CN/_lib/formatLong.mjs


const router_zh_CN_lib_formatLong_dateFormats = {
  full: "y'年'M'月'd'日' EEEE",
  long: "y'年'M'月'd'日'",
  medium: "yyyy-MM-dd",
  short: "yy-MM-dd",
};

const router_zh_CN_lib_formatLong_timeFormats = {
  full: "zzzz a h:mm:ss",
  long: "z a h:mm:ss",
  medium: "a h:mm:ss",
  short: "a h:mm",
};

const router_zh_CN_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_zh_CN_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_zh_CN_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_zh_CN_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_zh_CN_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/zh-CN/_lib/formatRelative.mjs


function router_checkWeek(date, baseDate, options) {
  const baseFormat = "eeee p";

  if (router_isSameWeek(date, baseDate, options)) {
    return baseFormat; // in same week
  } else if (date.getTime() > baseDate.getTime()) {
    return "'下个'" + baseFormat; // in next week
  }
  return "'上个'" + baseFormat; // in last week
}

const router_zh_CN_lib_formatRelative_formatRelativeLocale = {
  lastWeek: router_checkWeek, // days before yesterday, maybe in this week or last week
  yesterday: "'昨天' p",
  today: "'今天' p",
  tomorrow: "'明天' p",
  nextWeek: router_checkWeek, // days after tomorrow, maybe in this week or next week
  other: "PP p",
};

const router_zh_CN_lib_formatRelative_formatRelative = (token, date, baseDate, options) => {
  const format = router_zh_CN_lib_formatRelative_formatRelativeLocale[token];

  if (typeof format === "function") {
    return format(date, baseDate, options);
  }

  return format;
};

;// ./node_modules/date-fns/locale/zh-CN/_lib/localize.mjs


const router_zh_CN_lib_localize_eraValues = {
  narrow: ["前", "公元"],
  abbreviated: ["前", "公元"],
  wide: ["公元前", "公元"],
};

const router_zh_CN_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["第一季", "第二季", "第三季", "第四季"],
  wide: ["第一季度", "第二季度", "第三季度", "第四季度"],
};

const router_zh_CN_lib_localize_monthValues = {
  narrow: [
    "一",
    "二",
    "三",
    "四",
    "五",
    "六",
    "七",
    "八",
    "九",
    "十",
    "十一",
    "十二",
  ],

  abbreviated: [
    "1月",
    "2月",
    "3月",
    "4月",
    "5月",
    "6月",
    "7月",
    "8月",
    "9月",
    "10月",
    "11月",
    "12月",
  ],

  wide: [
    "一月",
    "二月",
    "三月",
    "四月",
    "五月",
    "六月",
    "七月",
    "八月",
    "九月",
    "十月",
    "十一月",
    "十二月",
  ],
};

const router_zh_CN_lib_localize_dayValues = {
  narrow: ["日", "一", "二", "三", "四", "五", "六"],
  short: ["日", "一", "二", "三", "四", "五", "六"],
  abbreviated: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],

  wide: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
};

const router_zh_CN_lib_localize_dayPeriodValues = {
  narrow: {
    am: "上",
    pm: "下",
    midnight: "凌晨",
    noon: "午",
    morning: "早",
    afternoon: "下午",
    evening: "晚",
    night: "夜",
  },
  abbreviated: {
    am: "上午",
    pm: "下午",
    midnight: "凌晨",
    noon: "中午",
    morning: "早晨",
    afternoon: "中午",
    evening: "晚上",
    night: "夜间",
  },
  wide: {
    am: "上午",
    pm: "下午",
    midnight: "凌晨",
    noon: "中午",
    morning: "早晨",
    afternoon: "中午",
    evening: "晚上",
    night: "夜间",
  },
};

const router_zh_CN_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "上",
    pm: "下",
    midnight: "凌晨",
    noon: "午",
    morning: "早",
    afternoon: "下午",
    evening: "晚",
    night: "夜",
  },
  abbreviated: {
    am: "上午",
    pm: "下午",
    midnight: "凌晨",
    noon: "中午",
    morning: "早晨",
    afternoon: "中午",
    evening: "晚上",
    night: "夜间",
  },
  wide: {
    am: "上午",
    pm: "下午",
    midnight: "凌晨",
    noon: "中午",
    morning: "早晨",
    afternoon: "中午",
    evening: "晚上",
    night: "夜间",
  },
};

const router_zh_CN_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);

  switch (options?.unit) {
    case "date":
      return number.toString() + "日";
    case "hour":
      return number.toString() + "时";
    case "minute":
      return number.toString() + "分";
    case "second":
      return number.toString() + "秒";
    default:
      return "第 " + number.toString();
  }
};

const router_zh_CN_lib_localize_localize = {
  ordinalNumber: router_zh_CN_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_zh_CN_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_zh_CN_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_zh_CN_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_zh_CN_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_zh_CN_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_zh_CN_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/zh-CN/_lib/match.mjs



const router_zh_CN_lib_match_matchOrdinalNumberPattern = /^(第\s*)?\d+(日|时|分|秒)?/i;
const router_zh_CN_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_zh_CN_lib_match_matchEraPatterns = {
  narrow: /^(前)/i,
  abbreviated: /^(前)/i,
  wide: /^(公元前|公元)/i,
};
const router_zh_CN_lib_match_parseEraPatterns = {
  any: [/^(前)/i, /^(公元)/i],
};

const router_zh_CN_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^第[一二三四]刻/i,
  wide: /^第[一二三四]刻钟/i,
};
const router_zh_CN_lib_match_parseQuarterPatterns = {
  any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i],
};

const router_zh_CN_lib_match_matchMonthPatterns = {
  narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,
  abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i,
  wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i,
};
const router_zh_CN_lib_match_parseMonthPatterns = {
  narrow: [
    /^一/i,
    /^二/i,
    /^三/i,
    /^四/i,
    /^五/i,
    /^六/i,
    /^七/i,
    /^八/i,
    /^九/i,
    /^十(?!(一|二))/i,
    /^十一/i,
    /^十二/i,
  ],

  any: [
    /^一|1/i,
    /^二|2/i,
    /^三|3/i,
    /^四|4/i,
    /^五|5/i,
    /^六|6/i,
    /^七|7/i,
    /^八|8/i,
    /^九|9/i,
    /^十(?!(一|二))|10/i,
    /^十一|11/i,
    /^十二|12/i,
  ],
};

const router_zh_CN_lib_match_matchDayPatterns = {
  narrow: /^[一二三四五六日]/i,
  short: /^[一二三四五六日]/i,
  abbreviated: /^周[一二三四五六日]/i,
  wide: /^星期[一二三四五六日]/i,
};
const router_zh_CN_lib_match_parseDayPatterns = {
  any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i],
};

const router_zh_CN_lib_match_matchDayPeriodPatterns = {
  any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨|)/i,
};
const router_zh_CN_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^上午?/i,
    pm: /^下午?/i,
    midnight: /^午夜/i,
    noon: /^[中正]午/i,
    morning: /^早上/i,
    afternoon: /^下午/i,
    evening: /^晚上?/i,
    night: /^凌晨/i,
  },
};

const router_zh_CN_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_zh_CN_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_zh_CN_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_zh_CN_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_CN_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_zh_CN_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_CN_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_zh_CN_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_CN_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_zh_CN_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_CN_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_zh_CN_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_zh_CN_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/zh-CN.mjs






/**
 * @category Locales
 * @summary Chinese Simplified locale.
 * @language Chinese Simplified
 * @iso-639-2 zho
 * @author Changyu Geng [@KingMario](https://github.com/KingMario)
 * @author Song Shuoyun [@fnlctrl](https://github.com/fnlctrl)
 * @author sabrinaM [@sabrinamiao](https://github.com/sabrinamiao)
 * @author Carney Wu [@cubicwork](https://github.com/cubicwork)
 * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)
 */
const router_zhCN = {
  code: "zh-CN",
  formatDistance: router_zh_CN_lib_formatDistance_formatDistance,
  formatLong: router_zh_CN_lib_formatLong_formatLong,
  formatRelative: router_zh_CN_lib_formatRelative_formatRelative,
  localize: router_zh_CN_lib_localize_localize,
  match: router_zh_CN_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_zh_CN = ((/* unused pure expression or super */ null && (router_zhCN)));

;// ./node_modules/date-fns/locale/zh-HK/_lib/formatDistance.mjs
const router_zh_HK_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "少於 1 秒",
    other: "少於 {{count}} 秒",
  },

  xSeconds: {
    one: "1 秒",
    other: "{{count}} 秒",
  },

  halfAMinute: "半分鐘",

  lessThanXMinutes: {
    one: "少於 1 分鐘",
    other: "少於 {{count}} 分鐘",
  },

  xMinutes: {
    one: "1 分鐘",
    other: "{{count}} 分鐘",
  },

  xHours: {
    one: "1 小時",
    other: "{{count}} 小時",
  },

  aboutXHours: {
    one: "大約 1 小時",
    other: "大約 {{count}} 小時",
  },

  xDays: {
    one: "1 天",
    other: "{{count}} 天",
  },

  aboutXWeeks: {
    one: "大約 1 個星期",
    other: "大約 {{count}} 個星期",
  },

  xWeeks: {
    one: "1 個星期",
    other: "{{count}} 個星期",
  },

  aboutXMonths: {
    one: "大約 1 個月",
    other: "大約 {{count}} 個月",
  },

  xMonths: {
    one: "1 個月",
    other: "{{count}} 個月",
  },

  aboutXYears: {
    one: "大約 1 年",
    other: "大約 {{count}} 年",
  },

  xYears: {
    one: "1 年",
    other: "{{count}} 年",
  },

  overXYears: {
    one: "超過 1 年",
    other: "超過 {{count}} 年",
  },

  almostXYears: {
    one: "將近 1 年",
    other: "將近 {{count}} 年",
  },
};

const router_zh_HK_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_zh_HK_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "內";
    } else {
      return result + "前";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/zh-HK/_lib/formatLong.mjs


const router_zh_HK_lib_formatLong_dateFormats = {
  full: "y'年'M'月'd'日' EEEE",
  long: "y'年'M'月'd'日'",
  medium: "yyyy-MM-dd",
  short: "yy-MM-dd",
};

const router_zh_HK_lib_formatLong_timeFormats = {
  full: "zzzz a h:mm:ss",
  long: "z a h:mm:ss",
  medium: "a h:mm:ss",
  short: "a h:mm",
};

const router_zh_HK_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_zh_HK_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_zh_HK_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_zh_HK_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_zh_HK_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/zh-HK/_lib/formatRelative.mjs
const router_zh_HK_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'上個'eeee p",
  yesterday: "'昨天' p",
  today: "'今天' p",
  tomorrow: "'明天' p",
  nextWeek: "'下個'eeee p",
  other: "P",
};

const router_zh_HK_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_zh_HK_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/zh-HK/_lib/localize.mjs


const router_zh_HK_lib_localize_eraValues = {
  narrow: ["前", "公元"],
  abbreviated: ["前", "公元"],
  wide: ["公元前", "公元"],
};

const router_zh_HK_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["第一季", "第二季", "第三季", "第四季"],
  wide: ["第一季度", "第二季度", "第三季度", "第四季度"],
};

const router_zh_HK_lib_localize_monthValues = {
  narrow: [
    "一",
    "二",
    "三",
    "四",
    "五",
    "六",
    "七",
    "八",
    "九",
    "十",
    "十一",
    "十二",
  ],

  abbreviated: [
    "1月",
    "2月",
    "3月",
    "4月",
    "5月",
    "6月",
    "7月",
    "8月",
    "9月",
    "10月",
    "11月",
    "12月",
  ],

  wide: [
    "一月",
    "二月",
    "三月",
    "四月",
    "五月",
    "六月",
    "七月",
    "八月",
    "九月",
    "十月",
    "十一月",
    "十二月",
  ],
};

const router_zh_HK_lib_localize_dayValues = {
  narrow: ["日", "一", "二", "三", "四", "五", "六"],
  short: ["日", "一", "二", "三", "四", "五", "六"],
  abbreviated: ["週日", "週一", "週二", "週三", "週四", "週五", "週六"],

  wide: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
};

const router_zh_HK_lib_localize_dayPeriodValues = {
  narrow: {
    am: "上",
    pm: "下",
    midnight: "午夜",
    noon: "晌",
    morning: "早",
    afternoon: "午",
    evening: "晚",
    night: "夜",
  },
  abbreviated: {
    am: "上午",
    pm: "下午",
    midnight: "午夜",
    noon: "中午",
    morning: "上午",
    afternoon: "下午",
    evening: "晚上",
    night: "夜晚",
  },
  wide: {
    am: "上午",
    pm: "下午",
    midnight: "午夜",
    noon: "中午",
    morning: "上午",
    afternoon: "下午",
    evening: "晚上",
    night: "夜晚",
  },
};

const router_zh_HK_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "上",
    pm: "下",
    midnight: "午夜",
    noon: "晌",
    morning: "早",
    afternoon: "午",
    evening: "晚",
    night: "夜",
  },
  abbreviated: {
    am: "上午",
    pm: "下午",
    midnight: "午夜",
    noon: "中午",
    morning: "上午",
    afternoon: "下午",
    evening: "晚上",
    night: "夜晚",
  },
  wide: {
    am: "上午",
    pm: "下午",
    midnight: "午夜",
    noon: "中午",
    morning: "上午",
    afternoon: "下午",
    evening: "晚上",
    night: "夜晚",
  },
};

const router_zh_HK_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);

  switch (options?.unit) {
    case "date":
      return number + "日";
    case "hour":
      return number + "時";
    case "minute":
      return number + "分";
    case "second":
      return number + "秒";
    default:
      return "第 " + number;
  }
};

const router_zh_HK_lib_localize_localize = {
  ordinalNumber: router_zh_HK_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_zh_HK_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_zh_HK_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_zh_HK_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_zh_HK_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_zh_HK_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_zh_HK_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/zh-HK/_lib/match.mjs



const router_zh_HK_lib_match_matchOrdinalNumberPattern = /^(第\s*)?\d+(日|時|分|秒)?/i;
const router_zh_HK_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_zh_HK_lib_match_matchEraPatterns = {
  narrow: /^(前)/i,
  abbreviated: /^(前)/i,
  wide: /^(公元前|公元)/i,
};
const router_zh_HK_lib_match_parseEraPatterns = {
  any: [/^(前)/i, /^(公元)/i],
};

const router_zh_HK_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^第[一二三四]季/i,
  wide: /^第[一二三四]季度/i,
};
const router_zh_HK_lib_match_parseQuarterPatterns = {
  any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i],
};

const router_zh_HK_lib_match_matchMonthPatterns = {
  narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,
  abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i,
  wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i,
};
const router_zh_HK_lib_match_parseMonthPatterns = {
  narrow: [
    /^一/i,
    /^二/i,
    /^三/i,
    /^四/i,
    /^五/i,
    /^六/i,
    /^七/i,
    /^八/i,
    /^九/i,
    /^十(?!(一|二))/i,
    /^十一/i,
    /^十二/i,
  ],

  any: [
    /^一|1/i,
    /^二|2/i,
    /^三|3/i,
    /^四|4/i,
    /^五|5/i,
    /^六|6/i,
    /^七|7/i,
    /^八|8/i,
    /^九|9/i,
    /^十(?!(一|二))|10/i,
    /^十一|11/i,
    /^十二|12/i,
  ],
};

const router_zh_HK_lib_match_matchDayPatterns = {
  narrow: /^[一二三四五六日]/i,
  short: /^[一二三四五六日]/i,
  abbreviated: /^週[一二三四五六日]/i,
  wide: /^星期[一二三四五六日]/i,
};
const router_zh_HK_lib_match_parseDayPatterns = {
  any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i],
};

const router_zh_HK_lib_match_matchDayPeriodPatterns = {
  any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨)/i,
};
const router_zh_HK_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^上午?/i,
    pm: /^下午?/i,
    midnight: /^午夜/i,
    noon: /^[中正]午/i,
    morning: /^早上/i,
    afternoon: /^下午/i,
    evening: /^晚上?/i,
    night: /^凌晨/i,
  },
};

const router_zh_HK_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_zh_HK_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_zh_HK_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_zh_HK_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_HK_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_zh_HK_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_HK_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_zh_HK_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_HK_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_zh_HK_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_HK_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_zh_HK_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_zh_HK_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/zh-HK.mjs






/**
 * @category Locales
 * @summary Chinese Traditional locale.
 * @language Chinese Traditional
 * @iso-639-2 zho
 * @author Gary Ip [@gaplo](https://github.com/gaplo)
 */
const router_zhHK = {
  code: "zh-HK",
  formatDistance: router_zh_HK_lib_formatDistance_formatDistance,
  formatLong: router_zh_HK_lib_formatLong_formatLong,
  formatRelative: router_zh_HK_lib_formatRelative_formatRelative,
  localize: router_zh_HK_lib_localize_localize,
  match: router_zh_HK_lib_match_match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_zh_HK = ((/* unused pure expression or super */ null && (router_zhHK)));

;// ./node_modules/date-fns/locale/zh-TW/_lib/formatDistance.mjs
const router_zh_TW_lib_formatDistance_formatDistanceLocale = {
  lessThanXSeconds: {
    one: "少於 1 秒",
    other: "少於 {{count}} 秒",
  },

  xSeconds: {
    one: "1 秒",
    other: "{{count}} 秒",
  },

  halfAMinute: "半分鐘",

  lessThanXMinutes: {
    one: "少於 1 分鐘",
    other: "少於 {{count}} 分鐘",
  },

  xMinutes: {
    one: "1 分鐘",
    other: "{{count}} 分鐘",
  },

  xHours: {
    one: "1 小時",
    other: "{{count}} 小時",
  },

  aboutXHours: {
    one: "大約 1 小時",
    other: "大約 {{count}} 小時",
  },

  xDays: {
    one: "1 天",
    other: "{{count}} 天",
  },

  aboutXWeeks: {
    one: "大約 1 個星期",
    other: "大約 {{count}} 個星期",
  },

  xWeeks: {
    one: "1 個星期",
    other: "{{count}} 個星期",
  },

  aboutXMonths: {
    one: "大約 1 個月",
    other: "大約 {{count}} 個月",
  },

  xMonths: {
    one: "1 個月",
    other: "{{count}} 個月",
  },

  aboutXYears: {
    one: "大約 1 年",
    other: "大約 {{count}} 年",
  },

  xYears: {
    one: "1 年",
    other: "{{count}} 年",
  },

  overXYears: {
    one: "超過 1 年",
    other: "超過 {{count}} 年",
  },

  almostXYears: {
    one: "將近 1 年",
    other: "將近 {{count}} 年",
  },
};

const router_zh_TW_lib_formatDistance_formatDistance = (token, count, options) => {
  let result;

  const tokenValue = router_zh_TW_lib_formatDistance_formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + "內";
    } else {
      return result + "前";
    }
  }

  return result;
};

;// ./node_modules/date-fns/locale/zh-TW/_lib/formatLong.mjs


const router_zh_TW_lib_formatLong_dateFormats = {
  full: "y'年'M'月'd'日' EEEE",
  long: "y'年'M'月'd'日'",
  medium: "yyyy-MM-dd",
  short: "yy-MM-dd",
};

const router_zh_TW_lib_formatLong_timeFormats = {
  full: "zzzz a h:mm:ss",
  long: "z a h:mm:ss",
  medium: "a h:mm:ss",
  short: "a h:mm",
};

const router_zh_TW_lib_formatLong_dateTimeFormats = {
  full: "{{date}} {{time}}",
  long: "{{date}} {{time}}",
  medium: "{{date}} {{time}}",
  short: "{{date}} {{time}}",
};

const router_zh_TW_lib_formatLong_formatLong = {
  date: router_buildFormatLongFn({
    formats: router_zh_TW_lib_formatLong_dateFormats,
    defaultWidth: "full",
  }),

  time: router_buildFormatLongFn({
    formats: router_zh_TW_lib_formatLong_timeFormats,
    defaultWidth: "full",
  }),

  dateTime: router_buildFormatLongFn({
    formats: router_zh_TW_lib_formatLong_dateTimeFormats,
    defaultWidth: "full",
  }),
};

;// ./node_modules/date-fns/locale/zh-TW/_lib/formatRelative.mjs
const router_zh_TW_lib_formatRelative_formatRelativeLocale = {
  lastWeek: "'上個'eeee p",
  yesterday: "'昨天' p",
  today: "'今天' p",
  tomorrow: "'明天' p",
  nextWeek: "'下個'eeee p",
  other: "P",
};

const router_zh_TW_lib_formatRelative_formatRelative = (token, _date, _baseDate, _options) =>
  router_zh_TW_lib_formatRelative_formatRelativeLocale[token];

;// ./node_modules/date-fns/locale/zh-TW/_lib/localize.mjs


const router_zh_TW_lib_localize_eraValues = {
  narrow: ["前", "公元"],
  abbreviated: ["前", "公元"],
  wide: ["公元前", "公元"],
};

const router_zh_TW_lib_localize_quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["第一刻", "第二刻", "第三刻", "第四刻"],
  wide: ["第一刻鐘", "第二刻鐘", "第三刻鐘", "第四刻鐘"],
};

const router_zh_TW_lib_localize_monthValues = {
  narrow: [
    "一",
    "二",
    "三",
    "四",
    "五",
    "六",
    "七",
    "八",
    "九",
    "十",
    "十一",
    "十二",
  ],

  abbreviated: [
    "1月",
    "2月",
    "3月",
    "4月",
    "5月",
    "6月",
    "7月",
    "8月",
    "9月",
    "10月",
    "11月",
    "12月",
  ],

  wide: [
    "一月",
    "二月",
    "三月",
    "四月",
    "五月",
    "六月",
    "七月",
    "八月",
    "九月",
    "十月",
    "十一月",
    "十二月",
  ],
};

const router_zh_TW_lib_localize_dayValues = {
  narrow: ["日", "一", "二", "三", "四", "五", "六"],
  short: ["日", "一", "二", "三", "四", "五", "六"],
  abbreviated: ["週日", "週一", "週二", "週三", "週四", "週五", "週六"],

  wide: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
};

const router_zh_TW_lib_localize_dayPeriodValues = {
  narrow: {
    am: "上",
    pm: "下",
    midnight: "凌晨",
    noon: "午",
    morning: "早",
    afternoon: "下午",
    evening: "晚",
    night: "夜",
  },
  abbreviated: {
    am: "上午",
    pm: "下午",
    midnight: "凌晨",
    noon: "中午",
    morning: "早晨",
    afternoon: "中午",
    evening: "晚上",
    night: "夜間",
  },
  wide: {
    am: "上午",
    pm: "下午",
    midnight: "凌晨",
    noon: "中午",
    morning: "早晨",
    afternoon: "中午",
    evening: "晚上",
    night: "夜間",
  },
};

const router_zh_TW_lib_localize_formattingDayPeriodValues = {
  narrow: {
    am: "上",
    pm: "下",
    midnight: "凌晨",
    noon: "午",
    morning: "早",
    afternoon: "下午",
    evening: "晚",
    night: "夜",
  },
  abbreviated: {
    am: "上午",
    pm: "下午",
    midnight: "凌晨",
    noon: "中午",
    morning: "早晨",
    afternoon: "中午",
    evening: "晚上",
    night: "夜間",
  },
  wide: {
    am: "上午",
    pm: "下午",
    midnight: "凌晨",
    noon: "中午",
    morning: "早晨",
    afternoon: "中午",
    evening: "晚上",
    night: "夜間",
  },
};

const router_zh_TW_lib_localize_ordinalNumber = (dirtyNumber, options) => {
  const number = Number(dirtyNumber);

  switch (options?.unit) {
    case "date":
      return number + "日";
    case "hour":
      return number + "時";
    case "minute":
      return number + "分";
    case "second":
      return number + "秒";
    default:
      return "第 " + number;
  }
};

const router_zh_TW_lib_localize_localize = {
  ordinalNumber: router_zh_TW_lib_localize_ordinalNumber,

  era: router_buildLocalizeFn({
    values: router_zh_TW_lib_localize_eraValues,
    defaultWidth: "wide",
  }),

  quarter: router_buildLocalizeFn({
    values: router_zh_TW_lib_localize_quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: router_buildLocalizeFn({
    values: router_zh_TW_lib_localize_monthValues,
    defaultWidth: "wide",
  }),

  day: router_buildLocalizeFn({
    values: router_zh_TW_lib_localize_dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: router_buildLocalizeFn({
    values: router_zh_TW_lib_localize_dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: router_zh_TW_lib_localize_formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
};

;// ./node_modules/date-fns/locale/zh-TW/_lib/match.mjs



const router_zh_TW_lib_match_matchOrdinalNumberPattern = /^(第\s*)?\d+(日|時|分|秒)?/i;
const router_zh_TW_lib_match_parseOrdinalNumberPattern = /\d+/i;

const router_zh_TW_lib_match_matchEraPatterns = {
  narrow: /^(前)/i,
  abbreviated: /^(前)/i,
  wide: /^(公元前|公元)/i,
};
const router_zh_TW_lib_match_parseEraPatterns = {
  any: [/^(前)/i, /^(公元)/i],
};

const router_zh_TW_lib_match_matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^第[一二三四]刻/i,
  wide: /^第[一二三四]刻鐘/i,
};
const router_zh_TW_lib_match_parseQuarterPatterns = {
  any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i],
};

const router_zh_TW_lib_match_matchMonthPatterns = {
  narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,
  abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i,
  wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i,
};
const router_zh_TW_lib_match_parseMonthPatterns = {
  narrow: [
    /^一/i,
    /^二/i,
    /^三/i,
    /^四/i,
    /^五/i,
    /^六/i,
    /^七/i,
    /^八/i,
    /^九/i,
    /^十(?!(一|二))/i,
    /^十一/i,
    /^十二/i,
  ],

  any: [
    /^一|1/i,
    /^二|2/i,
    /^三|3/i,
    /^四|4/i,
    /^五|5/i,
    /^六|6/i,
    /^七|7/i,
    /^八|8/i,
    /^九|9/i,
    /^十(?!(一|二))|10/i,
    /^十一|11/i,
    /^十二|12/i,
  ],
};

const router_zh_TW_lib_match_matchDayPatterns = {
  narrow: /^[一二三四五六日]/i,
  short: /^[一二三四五六日]/i,
  abbreviated: /^週[一二三四五六日]/i,
  wide: /^星期[一二三四五六日]/i,
};
const router_zh_TW_lib_match_parseDayPatterns = {
  any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i],
};

const router_zh_TW_lib_match_matchDayPeriodPatterns = {
  any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨)/i,
};
const router_zh_TW_lib_match_parseDayPeriodPatterns = {
  any: {
    am: /^上午?/i,
    pm: /^下午?/i,
    midnight: /^午夜/i,
    noon: /^[中正]午/i,
    morning: /^早上/i,
    afternoon: /^下午/i,
    evening: /^晚上?/i,
    night: /^凌晨/i,
  },
};

const router_zh_TW_lib_match_match = {
  ordinalNumber: router_buildMatchPatternFn({
    matchPattern: router_zh_TW_lib_match_matchOrdinalNumberPattern,
    parsePattern: router_zh_TW_lib_match_parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: router_buildMatchFn({
    matchPatterns: router_zh_TW_lib_match_matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_TW_lib_match_parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: router_buildMatchFn({
    matchPatterns: router_zh_TW_lib_match_matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_TW_lib_match_parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: router_buildMatchFn({
    matchPatterns: router_zh_TW_lib_match_matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_TW_lib_match_parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: router_buildMatchFn({
    matchPatterns: router_zh_TW_lib_match_matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: router_zh_TW_lib_match_parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: router_buildMatchFn({
    matchPatterns: router_zh_TW_lib_match_matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: router_zh_TW_lib_match_parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
};

;// ./node_modules/date-fns/locale/zh-TW.mjs






/**
 * @category Locales
 * @summary Chinese Traditional locale.
 * @language Chinese Traditional
 * @iso-639-2 zho
 * @author tonypai [@tpai](https://github.com/tpai)
 * @author Jack Hsu [@jackhsu978](https://github.com/jackhsu978)
 * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)
 */
const router_zhTW = {
  code: "zh-TW",
  formatDistance: router_zh_TW_lib_formatDistance_formatDistance,
  formatLong: router_zh_TW_lib_formatLong_formatLong,
  formatRelative: router_zh_TW_lib_formatRelative_formatRelative,
  localize: router_zh_TW_lib_localize_localize,
  match: router_zh_TW_lib_match_match,
  options: {
    weekStartsOn: 1 /* Monday */,
    firstWeekContainsDate: 4,
  },
};

// Fallback for modularized imports:
/* harmony default export */ const router_zh_TW = ((/* unused pure expression or super */ null && (router_zhTW)));

;// ./node_modules/date-fns/locale.mjs
// This file is generated automatically by `scripts/build/indices.ts`. Please, don't change it.
































































































;// ./src/app/util/util.js
/**
 * Copyright (C) 2016-2017 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




/**
 * NavLink
 */

function router_util_NavLink({
  to,
  children
}) {
  /* eslint-disable react/no-children-prop */
  return /*#__PURE__*/router_external_React_default().createElement(router_Route, {
    path: to,
    children: ({
      match
    }) => /*#__PURE__*/router_external_React_default().createElement("li", {
      className: `nav-item ${match ? 'active' : ''}`,
      role: "menuitem"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      className: "nav-link",
      to: to,
      replace: true,
      tabIndex: "0"
    }, children))
  });
  /* eslint-enable react/no-children-prop */
}
router_util_NavLink.propTypes = {
  to: (router_prop_types_default()).string,
  children: (router_prop_types_default()).node
};
function router_NavPill({
  to,
  children
}) {
  /* eslint-disable react/no-children-prop */
  return /*#__PURE__*/router_external_React_default().createElement(router_Route, {
    path: to,
    children: ({
      match
    }) => /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      className: `nav-link ${match ? 'active' : ''}`,
      to: to,
      replace: true,
      tabIndex: "0"
    }, children)
  });
  /* eslint-enable react/no-children-prop */
}
router_NavPill.propTypes = {
  to: (router_prop_types_default()).string,
  children: (router_prop_types_default()).node
};

/**
 * Dates
 */

 // we are ok with importing all languages
/**
 * Calls `date-fns/format` with a locale from `navigator.language`
 *
 * @param {Date | Number | String} date - a date to format
 * @param {String | undefined} formatStyle - a format string (eg 'DD.MM.YYY'), default is 'P'
 * @param {Locale} locale - date-fns locale object
 * @returns {String} formatted string
 */
function router_formatDateWithLocale(date, formatStyle) {
  return router_format(date, formatStyle || 'P', {
    locale: router_getDefaultLocale()
  });
}

/**
 * Gets locale from navigator.language setting
 * @returns {Locale} `date-fns` locale object
 */
function router_getDefaultLocale() {
  const lang = navigator.language.replace('-', '');
  return router_locale_namespaceObject[lang] || router_locale_namespaceObject[lang.substring(0, 2)] || router_enUS;
}
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var router_injectStylesIntoStyleTag = __webpack_require__(5072);
var router_injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(router_injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var router_styleDomAPI = __webpack_require__(7825);
var router_styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(router_styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var router_insertBySelector = __webpack_require__(7659);
var router_insertBySelector_default = /*#__PURE__*/__webpack_require__.n(router_insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var router_setAttributesWithoutAttributes = __webpack_require__(5056);
var router_setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(router_setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var router_insertStyleElement = __webpack_require__(540);
var router_insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(router_insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var router_styleTagTransform = __webpack_require__(1113);
var router_styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(router_styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./src/components/util/SecurityBG.css
var router_SecurityBG = __webpack_require__(3673);
;// ./src/components/util/SecurityBG.css

      
      
      
      
      
      
      
      
      

var router_options = {};

router_options.styleTagTransform = (router_styleTagTransform_default());
router_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_options.insert = router_insertBySelector_default().bind(null, "head");
router_options.domAPI = (router_styleDomAPI_default());
router_options.insertStyleElement = (router_insertStyleElement_default());

var router_update = router_injectStylesIntoStyleTag_default()(router_SecurityBG/* default */.A, router_options);




       /* harmony default export */ const router_util_SecurityBG = (router_SecurityBG/* default */.A && router_SecurityBG/* default */.A.locals ? router_SecurityBG/* default */.A.locals : undefined);

;// ./src/components/util/SecurityBG.js




class router_SecurityBG_SecurityBG extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      image: 'none',
      color: 'none'
    };
    props.port.on('update-security-background', () => this.setSecurityBG());
  }
  componentDidMount() {
    this.setSecurityBG();
  }
  async setSecurityBG() {
    const {
      image,
      color
    } = await router_getSecurityBackground(this.props.port);
    this.setState({
      image,
      color
    });
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: `securityBG ${this.props.className || ''}`,
      style: {
        backgroundImage: this.state.image,
        backgroundColor: this.state.color
      }
    }, this.props.children);
  }
}
router_SecurityBG_SecurityBG.propTypes = {
  className: (router_prop_types_default()).string,
  port: (router_prop_types_default()).object.isRequired,
  children: (router_prop_types_default()).node.isRequired
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/util/Terminate.scss
var router_Terminate = __webpack_require__(9950);
;// ./src/components/util/Terminate.scss

      
      
      
      
      
      
      
      
      

var router_Terminate_options = {};

router_Terminate_options.styleTagTransform = (router_styleTagTransform_default());
router_Terminate_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_Terminate_options.insert = router_insertBySelector_default().bind(null, "head");
router_Terminate_options.domAPI = (router_styleDomAPI_default());
router_Terminate_options.insertStyleElement = (router_insertStyleElement_default());

var router_Terminate_update = router_injectStylesIntoStyleTag_default()(router_Terminate/* default */.A, router_Terminate_options);




       /* harmony default export */ const router_util_Terminate = (router_Terminate/* default */.A && router_Terminate/* default */.A.locals ? router_Terminate/* default */.A.locals : undefined);

;// ./src/components/util/Terminate.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */



function router_Terminate_Terminate() {
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "terminate"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "backdrop"
  }), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "symbol"
  }, /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "icon icon-bolt"
  })));
}
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/dashboard/Dashboard.scss
var router_Dashboard = __webpack_require__(7784);
;// ./src/app/dashboard/Dashboard.scss

      
      
      
      
      
      
      
      
      

var router_Dashboard_options = {};

router_Dashboard_options.styleTagTransform = (router_styleTagTransform_default());
router_Dashboard_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_Dashboard_options.insert = router_insertBySelector_default().bind(null, "head");
router_Dashboard_options.domAPI = (router_styleDomAPI_default());
router_Dashboard_options.insertStyleElement = (router_insertStyleElement_default());

var router_Dashboard_update = router_injectStylesIntoStyleTag_default()(router_Dashboard/* default */.A, router_Dashboard_options);




       /* harmony default export */ const router_dashboard_Dashboard = (router_Dashboard/* default */.A && router_Dashboard/* default */.A.locals ? router_Dashboard/* default */.A.locals : undefined);

;// ./src/app/dashboard/Dashboard.js
/**
 * Copyright (C) 2017 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['dashboard_link_manage_keys', 'dashboard_link_encrypt_decrypt_files', 'dashboard_link_view_security_log', 'dashboard_link_manage_domains']);
function router_Dashboard_Dashboard() {
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "dashboard"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "row row-cols-1 row-cols-md-2 row-cols-xl-4 text-center"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "col mb-4"
  }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
    className: "card h-100",
    to: "/keyring/display",
    role: "button"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-body"
  }, /*#__PURE__*/router_external_React_default().createElement("img", {
    src: "../img/Mailvelope/keyring.svg",
    role: "presentation"
  })), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-footer"
  }, router_map.dashboard_link_manage_keys))), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "col mb-4"
  }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
    className: "card h-100",
    to: "/encrypt",
    role: "button"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-body"
  }, /*#__PURE__*/router_external_React_default().createElement("img", {
    src: "../img/Mailvelope/encryption.svg",
    role: "presentation"
  })), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-footer"
  }, router_map.dashboard_link_encrypt_decrypt_files))), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "col mb-4"
  }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
    className: "card h-100",
    to: "/settings/watchlist",
    role: "button"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-body"
  }, /*#__PURE__*/router_external_React_default().createElement("img", {
    src: "../img/Mailvelope/authorized.svg",
    role: "presentation"
  })), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-footer"
  }, router_map.dashboard_link_manage_domains))), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "col mb-4"
  }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
    className: "card h-100",
    to: "/settings/security-log",
    role: "button"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-body"
  }, /*#__PURE__*/router_external_React_default().createElement("img", {
    src: "../img/Mailvelope/clipboard.svg",
    role: "presentation"
  })), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-footer"
  }, router_map.dashboard_link_view_security_log)))));
}
;// ./src/app/keyring/KeyringOptions.js

const router_KeyringOptions = /*#__PURE__*/router_external_React_default().createContext({
  demail: false,
  gnupg: false
});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/util/Spinner.scss
var router_Spinner = __webpack_require__(4348);
;// ./src/components/util/Spinner.scss

      
      
      
      
      
      
      
      
      

var router_Spinner_options = {};

router_Spinner_options.styleTagTransform = (router_styleTagTransform_default());
router_Spinner_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_Spinner_options.insert = router_insertBySelector_default().bind(null, "head");
router_Spinner_options.domAPI = (router_styleDomAPI_default());
router_Spinner_options.insertStyleElement = (router_insertStyleElement_default());

var router_Spinner_update = router_injectStylesIntoStyleTag_default()(router_Spinner/* default */.A, router_Spinner_options);




       /* harmony default export */ const router_util_Spinner = (router_Spinner/* default */.A && router_Spinner/* default */.A.locals ? router_Spinner/* default */.A.locals : undefined);

;// ./src/components/util/Spinner.js



class router_Spinner_Spinner extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      hide: this.props.delay ? true : false
    };
    this.timer = 0;
  }
  componentDidMount() {
    if (this.props.delay) {
      // show spinner after delay
      this.timer = setTimeout(() => this.setState({
        hide: false
      }), this.props.delay);
    }
  }
  componentWillUnmount() {
    if (this.timer) {
      clearTimeout(this.timer);
    }
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: `m-spinner-${this.props.fullscreen ? 'fullscreen' : 'inline'} ${this.state.hide ? 'hide' : ''}`,
      style: this.props.style
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "symbol"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "bounce1"
    }), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "bounce2"
    })));
  }
}
router_Spinner_Spinner.propTypes = {
  style: (router_prop_types_default()).object,
  delay: (router_prop_types_default()).number,
  fullscreen: (router_prop_types_default()).bool
};
router_Spinner_Spinner.defaultProps = {
  delay: 400,
  fullscreen: false
};
;// ./src/components/util/Alert.js
/**
 * Copyright (C) 2017 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




/**
 * Alert
 */
function router_Alert({
  className,
  id,
  header,
  children: message,
  type
}) {
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    id: id,
    className: `alert alert-${type} fade show ${className || ''}`,
    role: "alert"
  }, header && /*#__PURE__*/router_external_React_default().createElement("strong", null, `${header} `), message);
}
router_Alert.propTypes = {
  className: (router_prop_types_default()).string,
  id: (router_prop_types_default()).string,
  header: (router_prop_types_default()).string,
  children: (router_prop_types_default()).node.isRequired,
  type: router_prop_types_default().oneOf(['success', 'info', 'warning', 'danger'])
};
router_Alert.defaultProps = {
  type: 'info'
};
;// ./src/app/keyring/components/KeyExport.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */







router_register(['keyring_public', 'keyring_private', 'key_export_dialog_question', 'keygrid_all_keys', 'key_export_filename', 'key_export_create_file', 'alert_header_warning', 'key_export_warning_private', 'key_export_dialog_copy_to_clipboard', 'dialog_popup_close']);
class router_KeyExport extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    const type = props.publicOnly ? 'pub' : props.type;
    this.state = {
      type,
      keys: [],
      armored: '',
      fileName: `${this.props.keyName.replace(/\s/g, '_')}_${type}.asc`
    };
    this.fileURL = '';
    this.handleClickExport = this.handleClickExport.bind(this);
    this.handleFileNameChange = this.handleFileNameChange.bind(this);
    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);
  }
  async componentDidMount() {
    const keys = await router_port.send('getArmoredKeys', {
      keyringId: this.props.keyringId,
      keyFprs: this.props.keyFprs,
      options: {
        pub: true,
        priv: !this.props.publicOnly,
        all: this.props.all
      }
    });
    this.setState(prevState => ({
      keys,
      armored: this.getArmoredExport(keys, prevState.type)
    }));
  }
  handleTypeChange(type) {
    this.setState({
      armored: ''
    }, () => {
      this.setState(prevState => ({
        type,
        armored: this.getArmoredExport(prevState.keys, type),
        fileName: `${this.props.keyName.replace(/\s/g, '_')}_${type}.asc`
      }));
    });
  }
  handleFileNameChange(event) {
    this.setState({
      fileName: event.target.value
    });
  }
  handleClickExport() {
    this.exportLink.click();
  }
  handleCopyToClipboard() {
    this.textarea.select();
    document.execCommand('copy');
  }
  componentWillUnmount() {
    window.URL.revokeObjectURL(this.fileURL);
  }
  getArmoredExport(keys, type) {
    return keys.reduce((acc, key) => {
      let result = acc;
      if (key.armoredPrivate && (type === 'priv' || type === 'all')) {
        result += `${key.armoredPrivate || ''}\n`;
      }
      if (type === 'pub' || type === 'all') {
        result += key.armoredPublic || '';
      }
      return result;
    }, '');
  }
  getFileSize(number) {
    if (number < 1024) {
      return `${number}bytes`;
    } else if (number >= 1024 && number < 1048576) {
      return `${(number / 1024).toFixed(1)}KB`;
    } else if (number >= 1048576) {
      return `${(number / 1048576).toFixed(1)}MB`;
    }
  }
  render() {
    // create file
    const file = new File([this.state.armored], this.state.fileName, {
      type: 'application/pgp-keys'
    });
    this.fileURL = window.URL.createObjectURL(file);
    return /*#__PURE__*/router_external_React_default().createElement("div", null, this.state.armored === '' ? /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0
    }) : /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, this.state.keys.some(key => key.armoredPrivate) && /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "mb-2"
    }, router_map.key_export_dialog_question), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-group btn-group-toggle d-flex mb-3",
      "data-toggle": "buttons"
    }, /*#__PURE__*/router_external_React_default().createElement("label", {
      className: `btn btn-${this.state.type === 'pub' ? 'primary' : 'secondary'} w-100`,
      onClick: () => this.handleTypeChange('pub')
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "radio",
      name: "public",
      defaultChecked: this.state.type === 'pub'
    }), router_map.keyring_public), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: `btn btn-${this.state.type === 'priv' ? 'primary' : 'secondary'} w-100`,
      onClick: () => this.handleTypeChange('priv')
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "radio",
      name: "private",
      defaultChecked: this.state.type === 'priv'
    }), router_map.keyring_private), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: `btn btn-${this.state.type === 'all' ? 'primary' : 'secondary'} w-100`,
      onClick: () => this.handleTypeChange('all')
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "radio",
      name: "all",
      defaultChecked: this.state.type === 'all'
    }), router_map.keygrid_all_keys))), this.state.type !== 'pub' && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      type: "warning",
      header: router_map.alert_header_warning
    }, router_map.key_export_warning_private), this.props.showArmored && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("textarea", {
      ref: node => this.textarea = node,
      style: {
        'resize': 'none',
        'backgroundColor': '#FFF'
      },
      id: "armoredKey",
      className: "form-control",
      rows: "13",
      value: this.state.armored,
      spellCheck: "false",
      autoComplete: "off",
      readOnly: true
    })), this.props.fileNameEditable && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-inline form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("label", {
      htmlFor: "fileName",
      className: "my-1"
    }, router_map.key_export_filename), /*#__PURE__*/router_external_React_default().createElement("input", {
      id: "fileName",
      type: "text",
      value: this.state.fileName,
      onChange: this.handleFileNameChange,
      className: "form-control flex-grow-1 mx-sm-2"
    }), /*#__PURE__*/router_external_React_default().createElement("small", {
      className: "text-muted"
    }, this.getFileSize(file.size))), /*#__PURE__*/router_external_React_default().createElement("a", {
      className: "d-none",
      download: this.state.fileName,
      href: this.fileURL,
      ref: node => this.exportLink = node
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar justify-content-between"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-secondary",
      onClick: this.props.onClose
    }, router_map.dialog_popup_close), this.state.type === 'pub' && this.props.showArmored && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-secondary",
      onClick: this.handleCopyToClipboard
    }, router_map.key_export_dialog_copy_to_clipboard), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-primary",
      disabled: !this.state.armored,
      onClick: this.handleClickExport
    }, router_map.key_export_create_file)));
  }
}
router_KeyExport.propTypes = {
  keyringId: (router_prop_types_default()).string,
  keyFprs: (router_prop_types_default()).array,
  all: (router_prop_types_default()).bool,
  keyName: (router_prop_types_default()).string.isRequired,
  type: (router_prop_types_default()).string,
  publicOnly: (router_prop_types_default()).bool,
  showArmored: (router_prop_types_default()).bool,
  fileNameEditable: (router_prop_types_default()).bool,
  onClose: (router_prop_types_default()).func
};
router_KeyExport.defaultProps = {
  all: false,
  type: 'pub',
  publicOnly: false,
  showArmored: true,
  fileNameEditable: false
};
;// ./node_modules/reactstrap/es/Portal.js





var router_Portal_propTypes = {
  children: (router_prop_types_default()).node.isRequired,
  node: (router_prop_types_default()).any
};

var router_Portal = /*#__PURE__*/function (_React$Component) {
  router_inheritsLoose(Portal, _React$Component);

  function Portal() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Portal.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.defaultNode) {
      document.body.removeChild(this.defaultNode);
    }

    this.defaultNode = null;
  };

  _proto.render = function render() {
    if (!router_utils_canUseDOM) {
      return null;
    }

    if (!this.props.node && !this.defaultNode) {
      this.defaultNode = document.createElement('div');
      document.body.appendChild(this.defaultNode);
    }

    return /*#__PURE__*/router_external_ReactDOM_default().createPortal(this.props.children, this.props.node || this.defaultNode);
  };

  return Portal;
}((router_external_React_default()).Component);

router_Portal.propTypes = router_Portal_propTypes;
/* harmony default export */ const router_es_Portal = (router_Portal);
;// ./node_modules/reactstrap/es/Fade.js



var router_Fade_excluded = ["tag", "baseClass", "baseClassActive", "className", "cssModule", "children", "innerRef"];

function router_Fade_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function router_Fade_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { router_Fade_ownKeys(Object(source), true).forEach(function (key) { (0,router_defineProperty/* default */.A)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { router_Fade_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }







var router_Fade_propTypes = router_Fade_objectSpread(router_Fade_objectSpread({}, router_react_transition_group.Transition.propTypes), {}, {
  children: router_prop_types_default().oneOfType([router_prop_types_default().arrayOf((router_prop_types_default()).node), (router_prop_types_default()).node]),
  tag: router_tagPropType,
  baseClass: (router_prop_types_default()).string,
  baseClassActive: (router_prop_types_default()).string,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  innerRef: router_prop_types_default().oneOfType([(router_prop_types_default()).object, (router_prop_types_default()).string, (router_prop_types_default()).func])
});

var router_Fade_defaultProps = router_Fade_objectSpread(router_Fade_objectSpread({}, router_react_transition_group.Transition.defaultProps), {}, {
  tag: 'div',
  baseClass: 'fade',
  baseClassActive: 'show',
  timeout: router_TransitionTimeouts.Fade,
  appear: true,
  enter: true,
  exit: true,
  in: true
});

function router_Fade(props) {
  var Tag = props.tag,
      baseClass = props.baseClass,
      baseClassActive = props.baseClassActive,
      className = props.className,
      cssModule = props.cssModule,
      children = props.children,
      innerRef = props.innerRef,
      otherProps = router_objectWithoutPropertiesLoose(props, router_Fade_excluded);

  var transitionProps = router_pick(otherProps, router_TransitionPropTypeKeys);
  var childProps = router_omit(otherProps, router_TransitionPropTypeKeys);
  return /*#__PURE__*/router_external_React_default().createElement(router_react_transition_group.Transition, transitionProps, function (status) {
    var isActive = status === 'entered';
    var classes = router_mapToCssModules(router_classnames_default()(className, baseClass, isActive && baseClassActive), cssModule);
    return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({
      className: classes
    }, childProps, {
      ref: innerRef
    }), children);
  });
}

router_Fade.propTypes = router_Fade_propTypes;
router_Fade.defaultProps = router_Fade_defaultProps;
/* harmony default export */ const router_es_Fade = (router_Fade);
;// ./node_modules/reactstrap/es/Modal.js





function router_Modal_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function router_Modal_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { router_Modal_ownKeys(Object(source), true).forEach(function (key) { (0,router_defineProperty/* default */.A)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { router_Modal_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }








function router_Modal_noop() {}

var router_FadePropTypes = router_prop_types_default().shape(router_es_Fade.propTypes);
var router_Modal_propTypes = {
  isOpen: (router_prop_types_default()).bool,
  autoFocus: (router_prop_types_default()).bool,
  centered: (router_prop_types_default()).bool,
  scrollable: (router_prop_types_default()).bool,
  size: (router_prop_types_default()).string,
  toggle: (router_prop_types_default()).func,
  keyboard: (router_prop_types_default()).bool,
  role: (router_prop_types_default()).string,
  labelledBy: (router_prop_types_default()).string,
  backdrop: router_prop_types_default().oneOfType([(router_prop_types_default()).bool, router_prop_types_default().oneOf(['static'])]),
  onEnter: (router_prop_types_default()).func,
  onExit: (router_prop_types_default()).func,
  onOpened: (router_prop_types_default()).func,
  onClosed: (router_prop_types_default()).func,
  children: (router_prop_types_default()).node,
  className: (router_prop_types_default()).string,
  wrapClassName: (router_prop_types_default()).string,
  modalClassName: (router_prop_types_default()).string,
  backdropClassName: (router_prop_types_default()).string,
  contentClassName: (router_prop_types_default()).string,
  external: (router_prop_types_default()).node,
  fade: (router_prop_types_default()).bool,
  cssModule: (router_prop_types_default()).object,
  zIndex: router_prop_types_default().oneOfType([(router_prop_types_default()).number, (router_prop_types_default()).string]),
  backdropTransition: router_FadePropTypes,
  modalTransition: router_FadePropTypes,
  innerRef: router_prop_types_default().oneOfType([(router_prop_types_default()).object, (router_prop_types_default()).string, (router_prop_types_default()).func]),
  unmountOnClose: (router_prop_types_default()).bool,
  returnFocusAfterClose: (router_prop_types_default()).bool,
  container: router_targetPropType,
  trapFocus: (router_prop_types_default()).bool
};
var router_propsToOmit = Object.keys(router_Modal_propTypes);
var router_Modal_defaultProps = {
  isOpen: false,
  autoFocus: true,
  centered: false,
  scrollable: false,
  role: 'dialog',
  backdrop: true,
  keyboard: true,
  zIndex: 1050,
  fade: true,
  onOpened: router_Modal_noop,
  onClosed: router_Modal_noop,
  modalTransition: {
    timeout: router_TransitionTimeouts.Modal
  },
  backdropTransition: {
    mountOnEnter: true,
    timeout: router_TransitionTimeouts.Fade // uses standard fade transition

  },
  unmountOnClose: true,
  returnFocusAfterClose: true,
  container: 'body',
  trapFocus: false
};

var router_Modal = /*#__PURE__*/function (_React$Component) {
  router_inheritsLoose(Modal, _React$Component);

  function Modal(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this._element = null;
    _this._originalBodyPadding = null;
    _this.getFocusableChildren = _this.getFocusableChildren.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.handleBackdropClick = _this.handleBackdropClick.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.handleEscape = _this.handleEscape.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.handleStaticBackdropAnimation = _this.handleStaticBackdropAnimation.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.handleTab = _this.handleTab.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.onOpened = _this.onOpened.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.onClosed = _this.onClosed.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.manageFocusAfterClose = _this.manageFocusAfterClose.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.clearBackdropAnimationTimeout = _this.clearBackdropAnimationTimeout.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.trapFocus = _this.trapFocus.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.state = {
      isOpen: false,
      showStaticBackdropAnimation: false
    };
    return _this;
  }

  var _proto = Modal.prototype;

  _proto.componentDidMount = function componentDidMount() {
    var _this$props = this.props,
        isOpen = _this$props.isOpen,
        autoFocus = _this$props.autoFocus,
        onEnter = _this$props.onEnter;

    if (isOpen) {
      this.init();
      this.setState({
        isOpen: true
      });

      if (autoFocus) {
        this.setFocus();
      }
    }

    if (onEnter) {
      onEnter();
    } // traps focus inside the Modal, even if the browser address bar is focused


    document.addEventListener('focus', this.trapFocus, true);
    this._isMounted = true;
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (this.props.isOpen && !prevProps.isOpen) {
      this.init();
      this.setState({
        isOpen: true
      }); // let render() renders Modal Dialog first

      return;
    } // now Modal Dialog is rendered and we can refer this._element and this._dialog


    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {
      this.setFocus();
    }

    if (this._element && prevProps.zIndex !== this.props.zIndex) {
      this._element.style.zIndex = this.props.zIndex;
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.clearBackdropAnimationTimeout();

    if (this.props.onExit) {
      this.props.onExit();
    }

    if (this._element) {
      this.destroy();

      if (this.props.isOpen || this.state.isOpen) {
        this.close();
      }
    }

    document.removeEventListener('focus', this.trapFocus, true);
    this._isMounted = false;
  };

  _proto.trapFocus = function trapFocus(ev) {
    if (!this.props.trapFocus) {
      return;
    }

    if (!this._element) //element is not attached
      return;
    if (this._dialog && this._dialog.parentNode === ev.target) // initial focus when the Modal is opened
      return;
    if (this.modalIndex < Modal.openCount - 1) // last opened modal
      return;
    var children = this.getFocusableChildren();

    for (var i = 0; i < children.length; i++) {
      // focus is already inside the Modal
      if (children[i] === ev.target) return;
    }

    if (children.length > 0) {
      // otherwise focus the first focusable element in the Modal
      ev.preventDefault();
      ev.stopPropagation();
      children[0].focus();
    }
  };

  _proto.onOpened = function onOpened(node, isAppearing) {
    this.props.onOpened();
    (this.props.modalTransition.onEntered || router_Modal_noop)(node, isAppearing);
  };

  _proto.onClosed = function onClosed(node) {
    var unmountOnClose = this.props.unmountOnClose; // so all methods get called before it is unmounted

    this.props.onClosed();
    (this.props.modalTransition.onExited || router_Modal_noop)(node);

    if (unmountOnClose) {
      this.destroy();
    }

    this.close();

    if (this._isMounted) {
      this.setState({
        isOpen: false
      });
    }
  };

  _proto.setFocus = function setFocus() {
    if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') {
      this._dialog.parentNode.focus();
    }
  };

  _proto.getFocusableChildren = function getFocusableChildren() {
    return this._element.querySelectorAll(router_focusableElements.join(', '));
  };

  _proto.getFocusedChild = function getFocusedChild() {
    var currentFocus;
    var focusableChildren = this.getFocusableChildren();

    try {
      currentFocus = document.activeElement;
    } catch (err) {
      currentFocus = focusableChildren[0];
    }

    return currentFocus;
  } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls
  ;

  _proto.handleBackdropClick = function handleBackdropClick(e) {
    if (e.target === this._mouseDownElement) {
      e.stopPropagation();
      var backdrop = this._dialog ? this._dialog.parentNode : null;

      if (backdrop && e.target === backdrop && this.props.backdrop === 'static') {
        this.handleStaticBackdropAnimation();
      }

      if (!this.props.isOpen || this.props.backdrop !== true) return;

      if (backdrop && e.target === backdrop && this.props.toggle) {
        this.props.toggle(e);
      }
    }
  };

  _proto.handleTab = function handleTab(e) {
    if (e.which !== 9) return;
    if (this.modalIndex < Modal.openCount - 1) return; // last opened modal

    var focusableChildren = this.getFocusableChildren();
    var totalFocusable = focusableChildren.length;
    if (totalFocusable === 0) return;
    var currentFocus = this.getFocusedChild();
    var focusedIndex = 0;

    for (var i = 0; i < totalFocusable; i += 1) {
      if (focusableChildren[i] === currentFocus) {
        focusedIndex = i;
        break;
      }
    }

    if (e.shiftKey && focusedIndex === 0) {
      e.preventDefault();
      focusableChildren[totalFocusable - 1].focus();
    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {
      e.preventDefault();
      focusableChildren[0].focus();
    }
  };

  _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {
    this._mouseDownElement = e.target;
  };

  _proto.handleEscape = function handleEscape(e) {
    if (this.props.isOpen && e.keyCode === router_keyCodes.esc && this.props.toggle) {
      if (this.props.keyboard) {
        e.preventDefault();
        e.stopPropagation();
        this.props.toggle(e);
      } else if (this.props.backdrop === 'static') {
        e.preventDefault();
        e.stopPropagation();
        this.handleStaticBackdropAnimation();
      }
    }
  };

  _proto.handleStaticBackdropAnimation = function handleStaticBackdropAnimation() {
    var _this2 = this;

    this.clearBackdropAnimationTimeout();
    this.setState({
      showStaticBackdropAnimation: true
    });
    this._backdropAnimationTimeout = setTimeout(function () {
      _this2.setState({
        showStaticBackdropAnimation: false
      });
    }, 100);
  };

  _proto.init = function init() {
    try {
      this._triggeringElement = document.activeElement;
    } catch (err) {
      this._triggeringElement = null;
    }

    if (!this._element) {
      this._element = document.createElement('div');

      this._element.setAttribute('tabindex', '-1');

      this._element.style.position = 'relative';
      this._element.style.zIndex = this.props.zIndex;
      this._mountContainer = router_getTarget(this.props.container);

      this._mountContainer.appendChild(this._element);
    }

    this._originalBodyPadding = router_getOriginalBodyPadding();
    router_conditionallyUpdateScrollbar();

    if (Modal.openCount === 0) {
      document.body.className = router_classnames_default()(document.body.className, router_mapToCssModules('modal-open', this.props.cssModule));
    }

    this.modalIndex = Modal.openCount;
    Modal.openCount += 1;
  };

  _proto.destroy = function destroy() {
    if (this._element) {
      this._mountContainer.removeChild(this._element);

      this._element = null;
    }

    this.manageFocusAfterClose();
  };

  _proto.manageFocusAfterClose = function manageFocusAfterClose() {
    if (this._triggeringElement) {
      var returnFocusAfterClose = this.props.returnFocusAfterClose;
      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();
      this._triggeringElement = null;
    }
  };

  _proto.close = function close() {
    if (Modal.openCount <= 1) {
      var modalOpenClassName = router_mapToCssModules('modal-open', this.props.cssModule); // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`

      var modalOpenClassNameRegex = new RegExp("(^| )" + modalOpenClassName + "( |$)");
      document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();
    }

    this.manageFocusAfterClose();
    Modal.openCount = Math.max(0, Modal.openCount - 1);
    router_setScrollbarWidth(this._originalBodyPadding);
  };

  _proto.renderModalDialog = function renderModalDialog() {
    var _classNames,
        _this3 = this;

    var attributes = router_omit(this.props, router_propsToOmit);
    var dialogBaseClass = 'modal-dialog';
    return /*#__PURE__*/router_external_React_default().createElement("div", router_extends({}, attributes, {
      className: router_mapToCssModules(router_classnames_default()(dialogBaseClass, this.props.className, (_classNames = {}, _classNames["modal-" + this.props.size] = this.props.size, _classNames[dialogBaseClass + "-centered"] = this.props.centered, _classNames[dialogBaseClass + "-scrollable"] = this.props.scrollable, _classNames)), this.props.cssModule),
      role: "document",
      ref: function ref(c) {
        _this3._dialog = c;
      }
    }), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: router_mapToCssModules(router_classnames_default()('modal-content', this.props.contentClassName), this.props.cssModule)
    }, this.props.children));
  };

  _proto.render = function render() {
    var unmountOnClose = this.props.unmountOnClose;

    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {
      var isModalHidden = !!this._element && !this.state.isOpen && !unmountOnClose;
      this._element.style.display = isModalHidden ? 'none' : 'block';
      var _this$props2 = this.props,
          wrapClassName = _this$props2.wrapClassName,
          modalClassName = _this$props2.modalClassName,
          backdropClassName = _this$props2.backdropClassName,
          cssModule = _this$props2.cssModule,
          isOpen = _this$props2.isOpen,
          backdrop = _this$props2.backdrop,
          role = _this$props2.role,
          labelledBy = _this$props2.labelledBy,
          external = _this$props2.external,
          innerRef = _this$props2.innerRef;
      var modalAttributes = {
        onClick: this.handleBackdropClick,
        onMouseDown: this.handleBackdropMouseDown,
        onKeyUp: this.handleEscape,
        onKeyDown: this.handleTab,
        style: {
          display: 'block'
        },
        'aria-labelledby': labelledBy,
        role: role,
        tabIndex: '-1'
      };
      var hasTransition = this.props.fade;

      var modalTransition = router_Modal_objectSpread(router_Modal_objectSpread(router_Modal_objectSpread({}, router_es_Fade.defaultProps), this.props.modalTransition), {}, {
        baseClass: hasTransition ? this.props.modalTransition.baseClass : '',
        timeout: hasTransition ? this.props.modalTransition.timeout : 0
      });

      var backdropTransition = router_Modal_objectSpread(router_Modal_objectSpread(router_Modal_objectSpread({}, router_es_Fade.defaultProps), this.props.backdropTransition), {}, {
        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',
        timeout: hasTransition ? this.props.backdropTransition.timeout : 0
      });

      var Backdrop = backdrop && (hasTransition ? /*#__PURE__*/router_external_React_default().createElement(router_es_Fade, router_extends({}, backdropTransition, {
        in: isOpen && !!backdrop,
        cssModule: cssModule,
        className: router_mapToCssModules(router_classnames_default()('modal-backdrop', backdropClassName), cssModule)
      })) : /*#__PURE__*/router_external_React_default().createElement("div", {
        className: router_mapToCssModules(router_classnames_default()('modal-backdrop', 'show', backdropClassName), cssModule)
      }));
      return /*#__PURE__*/router_external_React_default().createElement(router_es_Portal, {
        node: this._element
      }, /*#__PURE__*/router_external_React_default().createElement("div", {
        className: router_mapToCssModules(wrapClassName)
      }, /*#__PURE__*/router_external_React_default().createElement(router_es_Fade, router_extends({}, modalAttributes, modalTransition, {
        in: isOpen,
        onEntered: this.onOpened,
        onExited: this.onClosed,
        cssModule: cssModule,
        className: router_mapToCssModules(router_classnames_default()('modal', modalClassName, this.state.showStaticBackdropAnimation && 'modal-static'), cssModule),
        innerRef: innerRef
      }), external, this.renderModalDialog()), Backdrop));
    }

    return null;
  };

  _proto.clearBackdropAnimationTimeout = function clearBackdropAnimationTimeout() {
    if (this._backdropAnimationTimeout) {
      clearTimeout(this._backdropAnimationTimeout);
      this._backdropAnimationTimeout = undefined;
    }
  };

  return Modal;
}((router_external_React_default()).Component);

router_Modal.propTypes = router_Modal_propTypes;
router_Modal.defaultProps = router_Modal_defaultProps;
router_Modal.openCount = 0;
/* harmony default export */ const router_es_Modal = (router_Modal);
;// ./node_modules/reactstrap/es/ModalHeader.js


var router_ModalHeader_excluded = ["className", "cssModule", "children", "toggle", "tag", "wrapTag", "closeAriaLabel", "charCode", "close"];




var router_ModalHeader_propTypes = {
  tag: router_tagPropType,
  wrapTag: router_tagPropType,
  toggle: (router_prop_types_default()).func,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  children: (router_prop_types_default()).node,
  closeAriaLabel: (router_prop_types_default()).string,
  charCode: router_prop_types_default().oneOfType([(router_prop_types_default()).string, (router_prop_types_default()).number]),
  close: (router_prop_types_default()).object
};
var router_ModalHeader_defaultProps = {
  tag: 'h5',
  wrapTag: 'div',
  closeAriaLabel: 'Close',
  charCode: 215
};

var router_ModalHeader = function ModalHeader(props) {
  var closeButton;

  var className = props.className,
      cssModule = props.cssModule,
      children = props.children,
      toggle = props.toggle,
      Tag = props.tag,
      WrapTag = props.wrapTag,
      closeAriaLabel = props.closeAriaLabel,
      charCode = props.charCode,
      close = props.close,
      attributes = router_objectWithoutPropertiesLoose(props, router_ModalHeader_excluded);

  var classes = router_mapToCssModules(router_classnames_default()(className, 'modal-header'), cssModule);

  if (!close && toggle) {
    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;
    closeButton = /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: toggle,
      className: router_mapToCssModules('close', cssModule),
      "aria-label": closeAriaLabel
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      "aria-hidden": "true"
    }, closeIcon));
  }

  return /*#__PURE__*/router_external_React_default().createElement(WrapTag, router_extends({}, attributes, {
    className: classes
  }), /*#__PURE__*/router_external_React_default().createElement(Tag, {
    className: router_mapToCssModules('modal-title', cssModule)
  }, children), close || closeButton);
};

router_ModalHeader.propTypes = router_ModalHeader_propTypes;
router_ModalHeader.defaultProps = router_ModalHeader_defaultProps;
/* harmony default export */ const router_es_ModalHeader = (router_ModalHeader);
;// ./node_modules/reactstrap/es/ModalBody.js


var router_ModalBody_excluded = ["className", "cssModule", "tag"];




var router_ModalBody_propTypes = {
  tag: router_tagPropType,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object
};
var router_ModalBody_defaultProps = {
  tag: 'div'
};

var router_ModalBody = function ModalBody(props) {
  var className = props.className,
      cssModule = props.cssModule,
      Tag = props.tag,
      attributes = router_objectWithoutPropertiesLoose(props, router_ModalBody_excluded);

  var classes = router_mapToCssModules(router_classnames_default()(className, 'modal-body'), cssModule);
  return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, attributes, {
    className: classes
  }));
};

router_ModalBody.propTypes = router_ModalBody_propTypes;
router_ModalBody.defaultProps = router_ModalBody_defaultProps;
/* harmony default export */ const router_es_ModalBody = (router_ModalBody);
;// ./node_modules/reactstrap/es/ModalFooter.js


var router_ModalFooter_excluded = ["className", "cssModule", "tag"];




var router_ModalFooter_propTypes = {
  tag: router_tagPropType,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object
};
var router_ModalFooter_defaultProps = {
  tag: 'div'
};

var router_ModalFooter = function ModalFooter(props) {
  var className = props.className,
      cssModule = props.cssModule,
      Tag = props.tag,
      attributes = router_objectWithoutPropertiesLoose(props, router_ModalFooter_excluded);

  var classes = router_mapToCssModules(router_classnames_default()(className, 'modal-footer'), cssModule);
  return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, attributes, {
    className: classes
  }));
};

router_ModalFooter.propTypes = router_ModalFooter_propTypes;
router_ModalFooter.defaultProps = router_ModalFooter_defaultProps;
/* harmony default export */ const router_es_ModalFooter = (router_ModalFooter);
;// ./node_modules/reactstrap/es/Button.js




var router_Button_excluded = ["active", "aria-label", "block", "className", "close", "cssModule", "color", "outline", "size", "tag", "innerRef"];




var router_Button_propTypes = {
  active: (router_prop_types_default()).bool,
  'aria-label': (router_prop_types_default()).string,
  block: (router_prop_types_default()).bool,
  color: (router_prop_types_default()).string,
  disabled: (router_prop_types_default()).bool,
  outline: (router_prop_types_default()).bool,
  tag: router_tagPropType,
  innerRef: router_prop_types_default().oneOfType([(router_prop_types_default()).object, (router_prop_types_default()).func, (router_prop_types_default()).string]),
  onClick: (router_prop_types_default()).func,
  size: (router_prop_types_default()).string,
  children: (router_prop_types_default()).node,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  close: (router_prop_types_default()).bool
};
var router_Button_defaultProps = {
  color: 'secondary',
  tag: 'button'
};

var router_Button = /*#__PURE__*/function (_React$Component) {
  router_inheritsLoose(Button, _React$Component);

  function Button(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.onClick = _this.onClick.bind((0,router_assertThisInitialized/* default */.A)(_this));
    return _this;
  }

  var _proto = Button.prototype;

  _proto.onClick = function onClick(e) {
    if (this.props.disabled) {
      e.preventDefault();
      return;
    }

    if (this.props.onClick) {
      return this.props.onClick(e);
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        active = _this$props.active,
        ariaLabel = _this$props['aria-label'],
        block = _this$props.block,
        className = _this$props.className,
        close = _this$props.close,
        cssModule = _this$props.cssModule,
        color = _this$props.color,
        outline = _this$props.outline,
        size = _this$props.size,
        Tag = _this$props.tag,
        innerRef = _this$props.innerRef,
        attributes = router_objectWithoutPropertiesLoose(_this$props, router_Button_excluded);

    if (close && typeof attributes.children === 'undefined') {
      attributes.children = /*#__PURE__*/router_external_React_default().createElement("span", {
        "aria-hidden": true
      }, "\xD7");
    }

    var btnOutlineColor = "btn" + (outline ? '-outline' : '') + "-" + color;
    var classes = router_mapToCssModules(router_classnames_default()(className, {
      close: close
    }, close || 'btn', close || btnOutlineColor, size ? "btn-" + size : false, block ? 'btn-block' : false, {
      active: active,
      disabled: this.props.disabled
    }), cssModule);

    if (attributes.href && Tag === 'button') {
      Tag = 'a';
    }

    var defaultAriaLabel = close ? 'Close' : null;
    return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({
      type: Tag === 'button' && attributes.onClick ? 'button' : undefined
    }, attributes, {
      className: classes,
      ref: innerRef,
      onClick: this.onClick,
      "aria-label": ariaLabel || defaultAriaLabel
    }));
  };

  return Button;
}((router_external_React_default()).Component);

router_Button.propTypes = router_Button_propTypes;
router_Button.defaultProps = router_Button_defaultProps;
/* harmony default export */ const router_es_Button = (router_Button);
;// ./src/components/util/Modal.js
/**
 * Copyright (C) 2016 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['form_ok', 'form_cancel']);
function router_Modal_Modal(props) {
  return /*#__PURE__*/router_external_React_default().createElement(router_es_Modal, {
    toggle: typeof props.toggle === 'function' ? props.toggle : undefined,
    isOpen: props.isOpen,
    onOpened: props.onShow,
    onClosed: props.onHide,
    fade: props.animate,
    className: props.className,
    size: props.size === 'small' ? 'sm' : props.size === 'large' ? 'lg' : 'md',
    keyboard: props.keyboard
  }, !props.hideHeader && (props.header || /*#__PURE__*/router_external_React_default().createElement(router_es_ModalHeader, {
    toggle: typeof props.toggle === 'function' ? props.toggle : undefined,
    className: props.headerClass
  }, props.title)), /*#__PURE__*/router_external_React_default().createElement(router_es_ModalBody, null, props.children), !props.hideFooter && (props.footer || /*#__PURE__*/router_external_React_default().createElement(router_es_ModalFooter, null, props.toggle && /*#__PURE__*/router_external_React_default().createElement(router_es_Button, {
    color: "secondary",
    onClick: props.toggle
  }, router_map.form_cancel), /*#__PURE__*/router_external_React_default().createElement(router_es_Button, {
    color: "primary",
    onClick: props.onOk
  }, router_map.form_ok))));
}
router_Modal_Modal.propTypes = {
  className: (router_prop_types_default()).string,
  size: router_prop_types_default().oneOf(['small', 'medium', 'large']),
  title: router_prop_types_default().oneOfType([(router_prop_types_default()).string, (router_prop_types_default()).element]),
  header: (router_prop_types_default()).element,
  headerClass: (router_prop_types_default()).string,
  footer: (router_prop_types_default()).element,
  children: (router_prop_types_default()).node,
  onHide: (router_prop_types_default()).func,
  onShow: (router_prop_types_default()).func,
  onOk: (router_prop_types_default()).func,
  toggle: (router_prop_types_default()).func,
  hideHeader: (router_prop_types_default()).bool,
  hideFooter: (router_prop_types_default()).bool,
  keyboard: (router_prop_types_default()).bool,
  animate: (router_prop_types_default()).bool,
  isOpen: (router_prop_types_default()).bool
};
router_Modal_Modal.defaultProps = {
  size: 'medium',
  keyboard: true,
  animate: true,
  headerClass: '',
  isOpen: false
};
;// ./src/components/util/SimpleDialog.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['dialog_no_btn', 'dialog_yes_btn']);
function router_SimpleDialog(props) {
  return /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
    isOpen: props.isOpen,
    toggle: props.toggle,
    size: props.size,
    title: props.title,
    hideFooter: true,
    onHide: props.onHide
  }, /*#__PURE__*/router_external_React_default().createElement("div", null, props.message && /*#__PURE__*/router_external_React_default().createElement("p", null, props.message), props.children, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "row btn-bar"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "col-6"
  }, /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    className: "btn btn-secondary btn-block",
    onClick: props.onCancel
  }, router_map.dialog_no_btn)), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "col-6"
  }, /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    onClick: props.onOk,
    className: "btn btn-primary btn-block"
  }, router_map.dialog_yes_btn)))));
}
router_SimpleDialog.propTypes = {
  children: (router_prop_types_default()).node,
  isOpen: (router_prop_types_default()).bool,
  message: (router_prop_types_default()).string,
  onCancel: (router_prop_types_default()).func,
  onHide: (router_prop_types_default()).func,
  onOk: (router_prop_types_default()).func,
  title: (router_prop_types_default()).string,
  toggle: (router_prop_types_default()).func,
  size: router_prop_types_default().oneOf(['small', 'medium', 'large'])
};
router_SimpleDialog.defaultProps = {
  size: 'small'
};
// EXTERNAL MODULE: ./node_modules/@hypnosphi/create-react-context/lib/index.js
var router_lib = __webpack_require__(2248);
var router_lib_default = /*#__PURE__*/__webpack_require__.n(router_lib);
;// ./node_modules/reactstrap/node_modules/react-popper/lib/esm/Manager.js





var router_ManagerReferenceNodeContext = router_lib_default()();
var router_ManagerReferenceNodeSetterContext = router_lib_default()();

var router_Manager =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(Manager, _React$Component);

  function Manager() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "referenceNode", void 0);

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "setReferenceNode", function (newReferenceNode) {
      if (newReferenceNode && _this.referenceNode !== newReferenceNode) {
        _this.referenceNode = newReferenceNode;

        _this.forceUpdate();
      }
    });

    return _this;
  }

  var _proto = Manager.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.referenceNode = null;
  };

  _proto.render = function render() {
    return router_external_React_.createElement(router_ManagerReferenceNodeContext.Provider, {
      value: this.referenceNode
    }, router_external_React_.createElement(router_ManagerReferenceNodeSetterContext.Provider, {
      value: this.setReferenceNode
    }, this.props.children));
  };

  return Manager;
}(router_external_React_.Component);


;// ./node_modules/reactstrap/es/DropdownContext.js

/**
 * DropdownContext
 * {
 *  toggle: PropTypes.func.isRequired,
 *  isOpen: PropTypes.bool.isRequired,
 *  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']).isRequired,
 *  inNavbar: PropTypes.bool.isRequired,
 *  disabled: PropTypes.bool
 * }
 */

var router_DropdownContext = /*#__PURE__*/router_external_React_default().createContext({});
;// ./node_modules/reactstrap/es/Dropdown.js




var router_Dropdown_excluded = ["className", "cssModule", "direction", "isOpen", "group", "size", "nav", "setActiveFromChild", "active", "addonType", "tag", "menuRole"];

/* eslint react/no-find-dom-node: 0 */
// https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-find-dom-node.md






var router_Dropdown_propTypes = {
  a11y: (router_prop_types_default()).bool,
  disabled: (router_prop_types_default()).bool,
  direction: router_prop_types_default().oneOf(['up', 'down', 'left', 'right']),
  group: (router_prop_types_default()).bool,
  isOpen: (router_prop_types_default()).bool,
  nav: (router_prop_types_default()).bool,
  active: (router_prop_types_default()).bool,
  addonType: router_prop_types_default().oneOfType([(router_prop_types_default()).bool, router_prop_types_default().oneOf(['prepend', 'append'])]),
  size: (router_prop_types_default()).string,
  tag: router_tagPropType,
  toggle: (router_prop_types_default()).func,
  children: (router_prop_types_default()).node,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  inNavbar: (router_prop_types_default()).bool,
  setActiveFromChild: (router_prop_types_default()).bool,
  menuRole: router_prop_types_default().oneOf(['listbox', 'menu'])
};
var router_Dropdown_defaultProps = {
  a11y: true,
  isOpen: false,
  direction: 'down',
  nav: false,
  active: false,
  addonType: false,
  inNavbar: false,
  setActiveFromChild: false
};
var router_preventDefaultKeys = [router_keyCodes.space, router_keyCodes.enter, router_keyCodes.up, router_keyCodes.down, router_keyCodes.end, router_keyCodes.home];

var router_Dropdown = /*#__PURE__*/function (_React$Component) {
  router_inheritsLoose(Dropdown, _React$Component);

  function Dropdown(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.addEvents = _this.addEvents.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.handleDocumentClick = _this.handleDocumentClick.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.handleKeyDown = _this.handleKeyDown.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.removeEvents = _this.removeEvents.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.toggle = _this.toggle.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.handleMenuRef = _this.handleMenuRef.bind((0,router_assertThisInitialized/* default */.A)(_this));
    _this.containerRef = /*#__PURE__*/router_external_React_default().createRef();
    _this.menuRef = /*#__PURE__*/router_external_React_default().createRef();
    return _this;
  }

  var _proto = Dropdown.prototype;

  _proto.handleMenuRef = function handleMenuRef(menuRef) {
    this.menuRef.current = menuRef;
  };

  _proto.getContextValue = function getContextValue() {
    return {
      toggle: this.toggle,
      isOpen: this.props.isOpen,
      direction: this.props.direction === 'down' && this.props.dropup ? 'up' : this.props.direction,
      inNavbar: this.props.inNavbar,
      disabled: this.props.disabled,
      // Callback that should be called by DropdownMenu to provide a ref to
      // a HTML tag that's used for the DropdownMenu
      onMenuRef: this.handleMenuRef,
      menuRole: this.props.menuRole
    };
  };

  _proto.componentDidMount = function componentDidMount() {
    this.handleProps();
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.isOpen !== prevProps.isOpen) {
      this.handleProps();
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.removeEvents();
  };

  _proto.getContainer = function getContainer() {
    return this.containerRef.current;
  };

  _proto.getMenu = function getMenu() {
    return this.menuRef.current;
  };

  _proto.getMenuCtrl = function getMenuCtrl() {
    if (this._$menuCtrl) return this._$menuCtrl;
    this._$menuCtrl = this.getContainer().querySelector('[aria-expanded]');
    return this._$menuCtrl;
  };

  _proto.getItemType = function getItemType() {
    if (this.context.menuRole === 'listbox') {
      return 'option';
    }

    return 'menuitem';
  };

  _proto.getMenuItems = function getMenuItems() {
    // In a real menu with a child DropdownMenu, `this.getMenu()` should never
    // be null, but it is sometimes null in tests. To mitigate that, we just
    // use `this.getContainer()` as the fallback `menuContainer`.
    var menuContainer = this.getMenu() || this.getContainer();
    return [].slice.call(menuContainer.querySelectorAll("[role=\"" + this.getItemType() + "\"]"));
  };

  _proto.addEvents = function addEvents() {
    var _this2 = this;

    ['click', 'touchstart', 'keyup'].forEach(function (event) {
      return document.addEventListener(event, _this2.handleDocumentClick, true);
    });
  };

  _proto.removeEvents = function removeEvents() {
    var _this3 = this;

    ['click', 'touchstart', 'keyup'].forEach(function (event) {
      return document.removeEventListener(event, _this3.handleDocumentClick, true);
    });
  };

  _proto.handleDocumentClick = function handleDocumentClick(e) {
    if (e && (e.which === 3 || e.type === 'keyup' && e.which !== router_keyCodes.tab)) return;
    var container = this.getContainer();
    var menu = this.getMenu();
    var clickIsInContainer = container.contains(e.target) && container !== e.target;
    var clickIsInMenu = menu && menu.contains(e.target) && menu !== e.target;

    if ((clickIsInContainer || clickIsInMenu) && (e.type !== 'keyup' || e.which === router_keyCodes.tab)) {
      return;
    }

    this.toggle(e);
  };

  _proto.handleKeyDown = function handleKeyDown(e) {
    var _this4 = this;

    var isTargetMenuItem = e.target.getAttribute('role') === 'menuitem' || e.target.getAttribute('role') === 'option';
    var isTargetMenuCtrl = this.getMenuCtrl() === e.target;
    var isTab = router_keyCodes.tab === e.which;

    if (/input|textarea/i.test(e.target.tagName) || isTab && !this.props.a11y || isTab && !(isTargetMenuItem || isTargetMenuCtrl)) {
      return;
    }

    if (router_preventDefaultKeys.indexOf(e.which) !== -1 || e.which >= 48 && e.which <= 90) {
      e.preventDefault();
    }

    if (this.props.disabled) return;

    if (isTargetMenuCtrl) {
      if ([router_keyCodes.space, router_keyCodes.enter, router_keyCodes.up, router_keyCodes.down].indexOf(e.which) > -1) {
        // Open the menu (if not open) and focus the first menu item
        if (!this.props.isOpen) {
          this.toggle(e);
        }

        setTimeout(function () {
          return _this4.getMenuItems()[0].focus();
        });
      } else if (this.props.isOpen && isTab) {
        // Focus the first menu item if tabbing from an open menu. We need this
        // for cases where the DropdownMenu sets a custom container, which may
        // not be the natural next item to tab to from the DropdownToggle.
        e.preventDefault();
        this.getMenuItems()[0].focus();
      } else if (this.props.isOpen && e.which === router_keyCodes.esc) {
        this.toggle(e);
      }
    }

    if (this.props.isOpen && isTargetMenuItem) {
      if ([router_keyCodes.tab, router_keyCodes.esc].indexOf(e.which) > -1) {
        this.toggle(e);
        this.getMenuCtrl().focus();
      } else if ([router_keyCodes.space, router_keyCodes.enter].indexOf(e.which) > -1) {
        e.target.click();
        this.getMenuCtrl().focus();
      } else if ([router_keyCodes.down, router_keyCodes.up].indexOf(e.which) > -1 || [router_keyCodes.n, router_keyCodes.p].indexOf(e.which) > -1 && e.ctrlKey) {
        var $menuitems = this.getMenuItems();
        var index = $menuitems.indexOf(e.target);

        if (router_keyCodes.up === e.which || router_keyCodes.p === e.which && e.ctrlKey) {
          index = index !== 0 ? index - 1 : $menuitems.length - 1;
        } else if (router_keyCodes.down === e.which || router_keyCodes.n === e.which && e.ctrlKey) {
          index = index === $menuitems.length - 1 ? 0 : index + 1;
        }

        $menuitems[index].focus();
      } else if (router_keyCodes.end === e.which) {
        var _$menuitems = this.getMenuItems();

        _$menuitems[_$menuitems.length - 1].focus();
      } else if (router_keyCodes.home === e.which) {
        var _$menuitems2 = this.getMenuItems();

        _$menuitems2[0].focus();
      } else if (e.which >= 48 && e.which <= 90) {
        var _$menuitems3 = this.getMenuItems();

        var charPressed = String.fromCharCode(e.which).toLowerCase();

        for (var i = 0; i < _$menuitems3.length; i += 1) {
          var firstLetter = _$menuitems3[i].textContent && _$menuitems3[i].textContent[0].toLowerCase();

          if (firstLetter === charPressed) {
            _$menuitems3[i].focus();

            break;
          }
        }
      }
    }
  };

  _proto.handleProps = function handleProps() {
    if (this.props.isOpen) {
      this.addEvents();
    } else {
      this.removeEvents();
    }
  };

  _proto.toggle = function toggle(e) {
    if (this.props.disabled) {
      return e && e.preventDefault();
    }

    return this.props.toggle(e);
  };

  _proto.render = function render() {
    var _classNames, _ref;

    var _omit = router_omit(this.props, ['toggle', 'disabled', 'inNavbar', 'a11y']),
        className = _omit.className,
        cssModule = _omit.cssModule,
        direction = _omit.direction,
        isOpen = _omit.isOpen,
        group = _omit.group,
        size = _omit.size,
        nav = _omit.nav,
        setActiveFromChild = _omit.setActiveFromChild,
        active = _omit.active,
        addonType = _omit.addonType,
        tag = _omit.tag,
        menuRole = _omit.menuRole,
        attrs = router_objectWithoutPropertiesLoose(_omit, router_Dropdown_excluded);

    var Tag = tag || (nav ? 'li' : 'div');
    var subItemIsActive = false;

    if (setActiveFromChild) {
      router_external_React_default().Children.map(this.props.children[1].props.children, function (dropdownItem) {
        if (dropdownItem && dropdownItem.props.active) subItemIsActive = true;
      });
    }

    var classes = router_mapToCssModules(router_classnames_default()(className, direction !== 'down' && "drop" + direction, nav && active ? 'active' : false, setActiveFromChild && subItemIsActive ? 'active' : false, (_classNames = {}, _classNames["input-group-" + addonType] = addonType, _classNames['btn-group'] = group, _classNames["btn-group-" + size] = !!size, _classNames.dropdown = !group && !addonType, _classNames.show = isOpen, _classNames['nav-item'] = nav, _classNames)), cssModule);
    return /*#__PURE__*/router_external_React_default().createElement(router_DropdownContext.Provider, {
      value: this.getContextValue()
    }, /*#__PURE__*/router_external_React_default().createElement(router_Manager, null, /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, attrs, (_ref = {}, _ref[typeof Tag === 'string' ? 'ref' : 'innerRef'] = this.containerRef, _ref), {
      onKeyDown: this.handleKeyDown,
      className: classes
    }))));
  };

  return Dropdown;
}((router_external_React_default()).Component);

router_Dropdown.propTypes = router_Dropdown_propTypes;
router_Dropdown.defaultProps = router_Dropdown_defaultProps;
/* harmony default export */ const router_es_Dropdown = (router_Dropdown);
// EXTERNAL MODULE: ./node_modules/warning/warning.js
var router_warning = __webpack_require__(9771);
var router_warning_default = /*#__PURE__*/__webpack_require__.n(router_warning);
;// ./node_modules/reactstrap/node_modules/react-popper/lib/esm/utils.js
/**
 * Takes an argument and if it's an array, returns the first item in the array,
 * otherwise returns the argument. Used for Preact compatibility.
 */
var router_unwrapArray = function unwrapArray(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
/**
 * Takes a maybe-undefined function and arbitrary args and invokes the function
 * only if it is defined.
 */

var router_safeInvoke = function safeInvoke(fn) {
  if (typeof fn === "function") {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return fn.apply(void 0, args);
  }
};
/**
 * Does a shallow equality check of two objects by comparing the reference
 * equality of each value.
 */

var router_shallowEqual = function shallowEqual(objA, objB) {
  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);

  if (bKeys.length !== aKeys.length) {
    return false;
  }

  for (var i = 0; i < bKeys.length; i++) {
    var key = aKeys[i];

    if (objA[key] !== objB[key]) {
      return false;
    }
  }

  return true;
};
/**
 * Sets a ref using either a ref callback or a ref object
 */

var router_setRef = function setRef(ref, node) {
  // if its a function call it
  if (typeof ref === "function") {
    return router_safeInvoke(ref, node);
  } // otherwise we should treat it as a ref object
  else if (ref != null) {
      ref.current = node;
    }
};
;// ./node_modules/reactstrap/node_modules/react-popper/lib/esm/Reference.js









var router_InnerReference =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(InnerReference, _React$Component);

  function InnerReference() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "refHandler", function (node) {
      router_setRef(_this.props.innerRef, node);
      router_safeInvoke(_this.props.setReferenceNode, node);
    });

    return _this;
  }

  var _proto = InnerReference.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    router_setRef(this.props.innerRef, null);
  };

  _proto.render = function render() {
    router_warning_default()(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
    return router_unwrapArray(this.props.children)({
      ref: this.refHandler
    });
  };

  return InnerReference;
}(router_external_React_.Component);

function router_Reference(props) {
  return router_external_React_.createElement(router_ManagerReferenceNodeSetterContext.Consumer, null, function (setReferenceNode) {
    return router_external_React_.createElement(router_InnerReference, router_extends({
      setReferenceNode: setReferenceNode
    }, props));
  });
}
;// ./node_modules/reactstrap/es/DropdownToggle.js




var router_DropdownToggle_excluded = ["className", "color", "cssModule", "caret", "split", "nav", "tag", "innerRef"];







var router_DropdownToggle_propTypes = {
  caret: (router_prop_types_default()).bool,
  color: (router_prop_types_default()).string,
  children: (router_prop_types_default()).node,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  disabled: (router_prop_types_default()).bool,
  onClick: (router_prop_types_default()).func,
  'aria-haspopup': (router_prop_types_default()).bool,
  split: (router_prop_types_default()).bool,
  tag: router_tagPropType,
  nav: (router_prop_types_default()).bool
};
var router_DropdownToggle_defaultProps = {
  color: 'secondary',
  'aria-haspopup': true
};

var router_DropdownToggle = /*#__PURE__*/function (_React$Component) {
  router_inheritsLoose(DropdownToggle, _React$Component);

  function DropdownToggle(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.onClick = _this.onClick.bind((0,router_assertThisInitialized/* default */.A)(_this));
    return _this;
  }

  var _proto = DropdownToggle.prototype;

  _proto.onClick = function onClick(e) {
    if (this.props.disabled || this.context.disabled) {
      e.preventDefault();
      return;
    }

    if (this.props.nav && !this.props.tag) {
      e.preventDefault();
    }

    if (this.props.onClick) {
      this.props.onClick(e);
    }

    this.context.toggle(e);
  };

  _proto.getRole = function getRole() {
    return this.context.menuRole || this.props['aria-haspopup'];
  };

  _proto.render = function render() {
    var _this2 = this;

    var _this$props = this.props,
        className = _this$props.className,
        color = _this$props.color,
        cssModule = _this$props.cssModule,
        caret = _this$props.caret,
        split = _this$props.split,
        nav = _this$props.nav,
        tag = _this$props.tag,
        innerRef = _this$props.innerRef,
        props = router_objectWithoutPropertiesLoose(_this$props, router_DropdownToggle_excluded);

    var ariaLabel = props['aria-label'] || 'Toggle Dropdown';
    var classes = router_mapToCssModules(router_classnames_default()(className, {
      'dropdown-toggle': caret || split,
      'dropdown-toggle-split': split,
      'nav-link': nav
    }), cssModule);
    var children = typeof props.children !== 'undefined' ? props.children : /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "sr-only"
    }, ariaLabel);
    var Tag;

    if (nav && !tag) {
      Tag = 'a';
      props.href = '#';
    } else if (!tag) {
      Tag = router_es_Button;
      props.color = color;
      props.cssModule = cssModule;
    } else {
      Tag = tag;
    }

    if (this.context.inNavbar) {
      return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, props, {
        className: classes,
        onClick: this.onClick,
        "aria-expanded": this.context.isOpen,
        "aria-haspopup": this.getRole(),
        children: children
      }));
    }

    return /*#__PURE__*/router_external_React_default().createElement(router_Reference, {
      innerRef: innerRef
    }, function (_ref) {
      var _ref2;

      var ref = _ref.ref;
      return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, props, (_ref2 = {}, _ref2[typeof Tag === 'string' ? 'ref' : 'innerRef'] = ref, _ref2), {
        className: classes,
        onClick: _this2.onClick,
        "aria-expanded": _this2.context.isOpen,
        "aria-haspopup": _this2.getRole(),
        children: children
      }));
    });
  };

  return DropdownToggle;
}((router_external_React_default()).Component);

router_DropdownToggle.propTypes = router_DropdownToggle_propTypes;
router_DropdownToggle.defaultProps = router_DropdownToggle_defaultProps;
router_DropdownToggle.contextType = router_DropdownContext;
/* harmony default export */ const router_es_DropdownToggle = (router_DropdownToggle);
// EXTERNAL MODULE: ./node_modules/deep-equal/index.js
var router_deep_equal = __webpack_require__(4982);
var router_deep_equal_default = /*#__PURE__*/__webpack_require__.n(router_deep_equal);
;// ./node_modules/popper.js/dist/esm/popper.js
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var router_isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var router_timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (router_isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }
  return 0;
}();

function router_microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function router_taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, router_timeoutDuration);
    }
  };
}

var router_supportsMicroTasks = router_isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var router_debounce = router_supportsMicroTasks ? router_microtaskDebounce : router_taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function router_popper_isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function router_getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function router_getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function router_getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = router_getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return router_getScrollParent(router_getParentNode(element));
}

/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */
function router_getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var router_isIE11 = router_isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var router_isIE10 = router_isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function router_isIE(version) {
  if (version === 11) {
    return router_isIE11;
  }
  if (version === 10) {
    return router_isIE10;
  }
  return router_isIE11 || router_isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function router_getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = router_isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && router_getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return router_getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function router_isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || router_getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function router_getRoot(node) {
  if (node.parentNode !== null) {
    return router_getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function router_findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (router_isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return router_getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = router_getRoot(element1);
  if (element1root.host) {
    return router_findCommonOffsetParent(element1root.host, element2);
  } else {
    return router_findCommonOffsetParent(element1, router_getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function router_getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function router_includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = router_getScroll(element, 'top');
  var scrollLeft = router_getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function router_getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function router_getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], router_isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function router_getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = router_isIE(10) && getComputedStyle(html);

  return {
    height: router_getSize('Height', body, html, computedStyle),
    width: router_getSize('Width', body, html, computedStyle)
  };
}

var router_classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var router_createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var router_popper_defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var router_popper_extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function router_getClientRect(offsets) {
  return router_popper_extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function router_getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (router_isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = router_getScroll(element, 'top');
      var scrollLeft = router_getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? router_getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = router_getStyleComputedProperty(element);
    horizScrollbar -= router_getBordersSize(styles, 'x');
    vertScrollbar -= router_getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return router_getClientRect(result);
}

function router_getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = router_isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = router_getBoundingClientRect(children);
  var parentRect = router_getBoundingClientRect(parent);
  var scrollParent = router_getScrollParent(children);

  var styles = router_getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = router_getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = router_includeScroll(offsets, parent);
  }

  return offsets;
}

function router_getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = router_getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? router_getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? router_getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return router_getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function router_isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (router_getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  var parentNode = router_getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return router_isFixed(parentNode);
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function router_getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || router_isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && router_getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function router_getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? router_getFixedPositionOffsetParent(popper) : router_findCommonOffsetParent(popper, router_getReferenceNode(reference));

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = router_getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = router_getScrollParent(router_getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = router_getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !router_isFixed(offsetParent)) {
      var _getWindowSizes = router_getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function router_getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = router_getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return router_popper_extends({
      key: key
    }, rects[key], {
      area: router_getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function router_getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? router_getFixedPositionOffsetParent(popper) : router_findCommonOffsetParent(popper, router_getReferenceNode(reference));
  return router_getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function router_getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function router_getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function router_getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = router_getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[router_getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function router_find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function router_popper_findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = router_find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function router_runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, router_popper_findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && router_popper_isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = router_getClientRect(data.offsets.popper);
      data.offsets.reference = router_getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function router_popper_update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = router_getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = router_computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = router_getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = router_runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function router_isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function router_getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function router_destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (router_isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[router_getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function router_getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function router_attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    router_attachToScrollParents(router_getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function router_setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  router_getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = router_getScrollParent(reference);
  router_attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function router_enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = router_setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function router_removeEventListeners(reference, state) {
  // Remove resize event listener on window
  router_getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function router_disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = router_removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function router_isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function router_setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && router_isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function router_setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function router_applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  router_setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  router_setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    router_setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function router_applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = router_getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = router_computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  router_setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
function router_getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);

  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;

  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var router_isFirefox = router_isBrowser && /Firefox/i.test(navigator.userAgent);

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = router_find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = router_getOffsetParent(data.instance.popper);
  var offsetParentRect = router_getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  var offsets = router_getRoundedOffsets(data, window.devicePixelRatio < 2 || !router_isFirefox);

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = router_getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = router_popper_extends({}, attributes, data.attributes);
  data.styles = router_popper_extends({}, styles, data.styles);
  data.arrowStyles = router_popper_extends({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function router_isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = router_find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!router_isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = router_getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = router_getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = router_getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, router_popper_defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), router_popper_defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function router_getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var router_placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var router_validPlacements = router_placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function router_clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = router_validPlacements.indexOf(placement);
  var arr = router_validPlacements.slice(index + 1).concat(router_validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var router_BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (router_isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = router_getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = router_getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case router_BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case router_BEHAVIORS.CLOCKWISE:
      flipOrder = router_clockwise(placement);
      break;
    case router_BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = router_clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = router_getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;

    // flips variation if reference element overflows boundaries
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    // flips variation if popper content overflows boundaries
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);

    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = router_getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = router_popper_extends({}, data.offsets.popper, router_getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = router_runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function router_toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = router_getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function router_parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(router_find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return router_toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (router_isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function router_offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (router_isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = router_parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || router_getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = router_getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = router_getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = router_getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return router_popper_defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return router_popper_defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = router_popper_extends({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: router_popper_defineProperty({}, side, reference[side]),
      end: router_popper_defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = router_popper_extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_hide(data) {
  if (!router_isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = router_find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function router_inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = router_getOppositePlacement(placement);
  data.offsets.popper = router_getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var router_modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',
    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,
    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: router_inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: router_applyStyle,
    /** @prop {Function} */
    onLoad: router_applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var router_Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: router_modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var router_Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    router_classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = router_debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = router_popper_extends({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(router_popper_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = router_popper_extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return router_popper_extends({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && router_popper_isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  router_createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return router_popper_update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return router_destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return router_enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return router_disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


router_Popper.Utils = (typeof window !== 'undefined' ? window : __webpack_require__.g).PopperUtils;
router_Popper.placements = router_placements;
router_Popper.Defaults = router_Defaults;

/* harmony default export */ const router_popper = (router_Popper);
//# sourceMappingURL=popper.js.map

;// ./node_modules/reactstrap/node_modules/react-popper/lib/esm/Popper.js










var router_initialStyle = {
  position: 'absolute',
  top: 0,
  left: 0,
  opacity: 0,
  pointerEvents: 'none'
};
var router_initialArrowStyle = {};
var router_InnerPopper =
/*#__PURE__*/
function (_React$Component) {
  router_inheritsLoose(InnerPopper, _React$Component);

  function InnerPopper() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "state", {
      data: undefined,
      placement: undefined
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "popperInstance", void 0);

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "popperNode", null);

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "arrowNode", null);

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "setPopperNode", function (popperNode) {
      if (!popperNode || _this.popperNode === popperNode) return;
      router_setRef(_this.props.innerRef, popperNode);
      _this.popperNode = popperNode;

      _this.updatePopperInstance();
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "setArrowNode", function (arrowNode) {
      _this.arrowNode = arrowNode;
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "updateStateModifier", {
      enabled: true,
      order: 900,
      fn: function fn(data) {
        var placement = data.placement;

        _this.setState({
          data: data,
          placement: placement
        });

        return data;
      }
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "getOptions", function () {
      return {
        placement: _this.props.placement,
        eventsEnabled: _this.props.eventsEnabled,
        positionFixed: _this.props.positionFixed,
        modifiers: router_extends({}, _this.props.modifiers, {
          arrow: router_extends({}, _this.props.modifiers && _this.props.modifiers.arrow, {
            enabled: !!_this.arrowNode,
            element: _this.arrowNode
          }),
          applyStyle: {
            enabled: false
          },
          updateStateModifier: _this.updateStateModifier
        })
      };
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "getPopperStyle", function () {
      return !_this.popperNode || !_this.state.data ? router_initialStyle : router_extends({
        position: _this.state.data.offsets.popper.position
      }, _this.state.data.styles);
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "getPopperPlacement", function () {
      return !_this.state.data ? undefined : _this.state.placement;
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "getArrowStyle", function () {
      return !_this.arrowNode || !_this.state.data ? router_initialArrowStyle : _this.state.data.arrowStyles;
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "getOutOfBoundariesState", function () {
      return _this.state.data ? _this.state.data.hide : undefined;
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "destroyPopperInstance", function () {
      if (!_this.popperInstance) return;

      _this.popperInstance.destroy();

      _this.popperInstance = null;
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "updatePopperInstance", function () {
      _this.destroyPopperInstance();

      var _assertThisInitialize = (0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)),
          popperNode = _assertThisInitialize.popperNode;

      var referenceElement = _this.props.referenceElement;
      if (!referenceElement || !popperNode) return;
      _this.popperInstance = new router_popper(referenceElement, popperNode, _this.getOptions());
    });

    (0,router_defineProperty/* default */.A)((0,router_assertThisInitialized/* default */.A)((0,router_assertThisInitialized/* default */.A)(_this)), "scheduleUpdate", function () {
      if (_this.popperInstance) {
        _this.popperInstance.scheduleUpdate();
      }
    });

    return _this;
  }

  var _proto = InnerPopper.prototype;

  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    // If the Popper.js options have changed, update the instance (destroy + create)
    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed || !router_deep_equal_default()(this.props.modifiers, prevProps.modifiers, {
      strict: true
    })) {
      // develop only check that modifiers isn't being updated needlessly
      if (false) {}

      this.updatePopperInstance();
    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {
      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
    } // A placement difference in state means popper determined a new placement
    // apart from the props value. By the time the popper element is rendered with
    // the new position Popper has already measured it, if the place change triggers
    // a size change it will result in a misaligned popper. So we schedule an update to be sure.


    if (prevState.placement !== this.state.placement) {
      this.scheduleUpdate();
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    router_setRef(this.props.innerRef, null);
    this.destroyPopperInstance();
  };

  _proto.render = function render() {
    return router_unwrapArray(this.props.children)({
      ref: this.setPopperNode,
      style: this.getPopperStyle(),
      placement: this.getPopperPlacement(),
      outOfBoundaries: this.getOutOfBoundariesState(),
      scheduleUpdate: this.scheduleUpdate,
      arrowProps: {
        ref: this.setArrowNode,
        style: this.getArrowStyle()
      }
    });
  };

  return InnerPopper;
}(router_external_React_.Component);

(0,router_defineProperty/* default */.A)(router_InnerPopper, "defaultProps", {
  placement: 'bottom',
  eventsEnabled: true,
  referenceElement: undefined,
  positionFixed: false
});

var router_Popper_placements = router_popper.placements;

function router_Popper_Popper(_ref) {
  var referenceElement = _ref.referenceElement,
      props = router_objectWithoutPropertiesLoose(_ref, ["referenceElement"]);

  return router_external_React_.createElement(router_ManagerReferenceNodeContext.Consumer, null, function (referenceNode) {
    return router_external_React_.createElement(router_InnerPopper, router_extends({
      referenceElement: referenceElement !== undefined ? referenceElement : referenceNode
    }, props));
  });
}
;// ./node_modules/reactstrap/es/DropdownMenu.js




var router_DropdownMenu_excluded = ["className", "cssModule", "right", "tag", "flip", "modifiers", "persist", "positionFixed", "container"];

function router_DropdownMenu_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function router_DropdownMenu_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { router_DropdownMenu_ownKeys(Object(source), true).forEach(function (key) { (0,router_defineProperty/* default */.A)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { router_DropdownMenu_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }








var router_DropdownMenu_propTypes = {
  tag: router_tagPropType,
  children: (router_prop_types_default()).node.isRequired,
  right: (router_prop_types_default()).bool,
  flip: (router_prop_types_default()).bool,
  modifiers: (router_prop_types_default()).object,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  persist: (router_prop_types_default()).bool,
  positionFixed: (router_prop_types_default()).bool,
  container: router_targetPropType
};
var router_DropdownMenu_defaultProps = {
  tag: 'div',
  flip: true
};
var router_noFlipModifier = {
  flip: {
    enabled: false
  }
};
var router_directionPositionMap = {
  up: 'top',
  left: 'left',
  right: 'right',
  down: 'bottom'
};

var router_DropdownMenu = /*#__PURE__*/function (_React$Component) {
  router_inheritsLoose(DropdownMenu, _React$Component);

  function DropdownMenu() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = DropdownMenu.prototype;

  _proto.getRole = function getRole() {
    if (this.context.menuRole === 'listbox') {
      return 'listbox';
    }

    return 'menu';
  };

  _proto.render = function render() {
    var _this = this;

    var _this$props = this.props,
        className = _this$props.className,
        cssModule = _this$props.cssModule,
        right = _this$props.right,
        tag = _this$props.tag,
        flip = _this$props.flip,
        modifiers = _this$props.modifiers,
        persist = _this$props.persist,
        positionFixed = _this$props.positionFixed,
        container = _this$props.container,
        attrs = router_objectWithoutPropertiesLoose(_this$props, router_DropdownMenu_excluded);

    var classes = router_mapToCssModules(router_classnames_default()(className, 'dropdown-menu', {
      'dropdown-menu-right': right,
      show: this.context.isOpen
    }), cssModule);
    var Tag = tag;

    if (persist || this.context.isOpen && !this.context.inNavbar) {
      var position1 = router_directionPositionMap[this.context.direction] || 'bottom';
      var position2 = right ? 'end' : 'start';
      var poperPlacement = position1 + "-" + position2;
      var poperModifiers = !flip ? router_DropdownMenu_objectSpread(router_DropdownMenu_objectSpread({}, modifiers), router_noFlipModifier) : modifiers;
      var popperPositionFixed = !!positionFixed;
      var popper = /*#__PURE__*/router_external_React_default().createElement(router_Popper_Popper, {
        placement: poperPlacement,
        modifiers: poperModifiers,
        positionFixed: popperPositionFixed
      }, function (_ref) {
        var ref = _ref.ref,
            style = _ref.style,
            placement = _ref.placement;

        var combinedStyle = router_DropdownMenu_objectSpread(router_DropdownMenu_objectSpread({}, _this.props.style), style);

        var handleRef = function handleRef(tagRef) {
          // Send the ref to `react-popper`
          ref(tagRef); // Send the ref to the parent Dropdown so that clicks outside
          // it will cause it to close

          var onMenuRef = _this.context.onMenuRef;
          if (onMenuRef) onMenuRef(tagRef);
        };

        return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({
          tabIndex: "-1",
          role: _this.getRole(),
          ref: handleRef
        }, attrs, {
          style: combinedStyle,
          "aria-hidden": !_this.context.isOpen,
          className: classes,
          "x-placement": placement
        }));
      });

      if (container) {
        return /*#__PURE__*/router_external_ReactDOM_default().createPortal(popper, router_getTarget(container));
      } else {
        return popper;
      }
    }

    return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({
      tabIndex: "-1",
      role: this.getRole()
    }, attrs, {
      "aria-hidden": !this.context.isOpen,
      className: classes,
      "x-placement": attrs.placement
    }));
  };

  return DropdownMenu;
}((router_external_React_default()).Component);

;
router_DropdownMenu.propTypes = router_DropdownMenu_propTypes;
router_DropdownMenu.defaultProps = router_DropdownMenu_defaultProps;
router_DropdownMenu.contextType = router_DropdownContext;
/* harmony default export */ const router_es_DropdownMenu = (router_DropdownMenu);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/keyring/components/KeyringSelect.scss
var router_KeyringSelect = __webpack_require__(529);
;// ./src/app/keyring/components/KeyringSelect.scss

      
      
      
      
      
      
      
      
      

var router_KeyringSelect_options = {};

router_KeyringSelect_options.styleTagTransform = (router_styleTagTransform_default());
router_KeyringSelect_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_KeyringSelect_options.insert = router_insertBySelector_default().bind(null, "head");
router_KeyringSelect_options.domAPI = (router_styleDomAPI_default());
router_KeyringSelect_options.insertStyleElement = (router_insertStyleElement_default());

var router_KeyringSelect_update = router_injectStylesIntoStyleTag_default()(router_KeyringSelect/* default */.A, router_KeyringSelect_options);




       /* harmony default export */ const router_components_KeyringSelect = (router_KeyringSelect/* default */.A && router_KeyringSelect/* default */.A.locals ? router_KeyringSelect/* default */.A.locals : undefined);

;// ./src/app/keyring/components/KeyringSelect.js
/**
 * Copyright (C) 2015-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */









router_register(['keyring_main', 'preferred']);
class router_KeyringSelect_KeyringSelect extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      names: {},
      dropdownOpen: false
    };
    this.toggle = this.toggle.bind(this);
  }
  componentDidMount() {
    this.fetchKeyringEmails();
  }
  componentDidUpdate(prevProps) {
    if (Object.keys(this.props.keyringAttr).length !== Object.keys(prevProps.keyringAttr).length) {
      this.fetchKeyringEmails();
    }
  }
  componentWillUnmount() {
    this.setState({
      names: {}
    });
  }
  async fetchKeyringEmails() {
    const names = {};
    const keyringIds = Object.keys(this.props.keyringAttr);
    await Promise.all(keyringIds.map(async keyringId => {
      names[keyringId] = await this.formatKeyringEmail(keyringId);
    }));
    this.setState({
      names
    });
  }
  getKeyringName(keyringId) {
    let name;
    if (keyringId === router_MAIN_KEYRING_ID) {
      name = router_map.keyring_main;
      if (!this.props.prefs.general.prefer_gnupg) {
        name = `${name} (${router_map.preferred})`;
      }
    } else if (keyringId === router_GNUPG_KEYRING_ID) {
      name = 'GnuPG';
      if (this.props.prefs.general.prefer_gnupg) {
        name = `${name} (${router_map.preferred})`;
      }
    } else {
      name = keyringId.split(router_KEYRING_DELIMITER)[0];
    }
    return name;
  }
  getKeyringEmail(keyringId) {
    return this.state.names[keyringId] || '...';
  }
  async formatKeyringEmail(keyringId) {
    const fingerprint = this.props.keyringAttr[keyringId].default_key;
    let email = false;
    try {
      const keyDetails = await router_port.send('getKeyDetails', {
        keyringId,
        fingerprint
      });
      email = keyDetails.users[0].userId;
    } catch (error) {
      email = false;
    }
    if (!email) {
      return keyringId.split(router_KEYRING_DELIMITER)[1];
    }
    return email;
  }
  getKeyringThumbnail(keyringId) {
    if (keyringId === router_MAIN_KEYRING_ID) {
      return '../../../img/Mailvelope/keyring_main.svg';
    }
    if (keyringId === router_GNUPG_KEYRING_ID) {
      return '../../../img/gnupg-icon48.png';
    }
    if (this.props.keyringAttr[keyringId].logo_data_url) {
      return this.props.keyringAttr[keyringId].logo_data_url;
    }
    return '../../../img/Mailvelope/keyring.svg';
  }
  toggle() {
    this.setState(prevState => ({
      dropdownOpen: !prevState.dropdownOpen
    }));
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, Object.keys(this.props.keyringAttr).length > 1 && this.props.prefs && /*#__PURE__*/router_external_React_default().createElement(router_es_Dropdown, {
      id: "keyringSelect",
      isOpen: this.state.dropdownOpen,
      toggle: this.toggle
    }, /*#__PURE__*/router_external_React_default().createElement(router_es_DropdownToggle, {
      className: "btn-light d-flex justify-content-between align-items-center text-left px-2",
      caret: true
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      src: this.getKeyringThumbnail(this.props.keyringId),
      style: {
        objectFit: 'contain',
        width: '32px',
        height: 'auto',
        maxHeight: '32px'
      }
    }), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "ml-2 flex-grow-1 d-inline-block"
    }, /*#__PURE__*/router_external_React_default().createElement("h5", {
      className: "d-block mb-1"
    }, this.getKeyringName(this.props.keyringId)), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "d-block mb-0 small"
    }, this.getKeyringEmail(this.props.keyringId)))), /*#__PURE__*/router_external_React_default().createElement(router_es_DropdownMenu, null, Object.keys(this.props.keyringAttr).map((keyringId, index) => {
      const keyringName = this.getKeyringName(keyringId);
      const keyringEmail = this.getKeyringEmail(keyringId);
      return /*#__PURE__*/router_external_React_default().createElement(router_Link, {
        key: index,
        to: "/keyring",
        onClick: () => this.props.onChange(keyringId),
        tabIndex: "0",
        className: "dropdown-item text-decoration-none px-2 d-flex align-items-center",
        role: "menuitem"
      }, /*#__PURE__*/router_external_React_default().createElement("img", {
        src: this.getKeyringThumbnail(keyringId),
        style: {
          objectFit: 'contain',
          width: '32px',
          height: 'auto',
          maxHeight: '32px'
        }
      }), /*#__PURE__*/router_external_React_default().createElement("div", {
        className: "ml-2 flex-grow-1 d-inline-block mr-auto"
      }, /*#__PURE__*/router_external_React_default().createElement("h5", {
        className: "d-block mb-1"
      }, keyringName), /*#__PURE__*/router_external_React_default().createElement("p", {
        className: "d-block mb-0 small"
      }, keyringEmail)), keyringId !== router_MAIN_KEYRING_ID && keyringId !== router_GNUPG_KEYRING_ID && this.props.onDelete && /*#__PURE__*/router_external_React_default().createElement("button", {
        type: "button",
        onClick: e => {
          e.preventDefault();
          e.stopPropagation();
          this.props.onDelete(keyringId, keyringName);
        },
        className: "btn btn-secondary mx-2"
      }, /*#__PURE__*/router_external_React_default().createElement("span", {
        className: "icon icon-delete",
        "aria-hidden": "true"
      })));
    }))));
  }
}
router_KeyringSelect_KeyringSelect.propTypes = {
  keyringId: (router_prop_types_default()).string,
  keyringAttr: (router_prop_types_default()).object,
  prefs: (router_prop_types_default()).object,
  onChange: (router_prop_types_default()).func.isRequired,
  onDelete: (router_prop_types_default()).func
};
router_KeyringSelect_KeyringSelect.defaultProps = {
  keyringAttr: {}
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/keyring/KeyGrid.scss
var router_KeyGrid = __webpack_require__(5002);
;// ./src/app/keyring/KeyGrid.scss

      
      
      
      
      
      
      
      
      

var router_KeyGrid_options = {};

router_KeyGrid_options.styleTagTransform = (router_styleTagTransform_default());
router_KeyGrid_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_KeyGrid_options.insert = router_insertBySelector_default().bind(null, "head");
router_KeyGrid_options.domAPI = (router_styleDomAPI_default());
router_KeyGrid_options.insertStyleElement = (router_insertStyleElement_default());

var router_KeyGrid_update = router_injectStylesIntoStyleTag_default()(router_KeyGrid/* default */.A, router_KeyGrid_options);




       /* harmony default export */ const router_keyring_KeyGrid = (router_KeyGrid/* default */.A && router_KeyGrid/* default */.A.locals ? router_KeyGrid/* default */.A.locals : undefined);

;// ./src/app/keyring/KeyGrid.js
/**
 * Copyright (C) 2012-2017 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */














router_register(['form_import', 'key_gen_generate', 'key_import_search_btn', 'keygrid_all_keys', 'keygrid_creation_date_short', 'keygrid_default_label', 'keygrid_delete_confirmation', 'keygrid_export', 'keygrid_export_title', 'keygrid_generate_title', 'keygrid_import_title', 'keygrid_import_search_title', 'keygrid_keyid', 'keygrid_public_keys', 'keygrid_refresh', 'keygrid_refresh_title', 'keygrid_sort_type', 'keygrid_user_email', 'keygrid_user_name', 'keyring_backup', 'keyring_public_private', 'keyring_remove_dialog_title']);
class router_KeyGrid_KeyGrid extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.rowRefs = {};
    const {
      keyId
    } = props.match.params;
    this.state = {
      locale: undefined,
      keyTypeFilter: 'allkeys',
      selectedKey: null,
      activeKey: keyId ? keyId : null,
      activeKeyring: null,
      keyringBackup: null,
      action: '',
      showExportModal: false,
      showDeleteKeyModal: false,
      showDeleteKeyringModal: false
    };
    this.onHiddenModal = this.onHiddenModal.bind(this);
    this.deleteKeyring = this.deleteKeyring.bind(this);
  }
  componentDidMount() {
    this.scrollToKey();
  }
  componentDidUpdate(prevProps) {
    if (this.props.match.params.keyId !== prevProps.match.params.keyId) {
      this.setState({
        activeKey: this.props.match.params.keyId
      });
    }
    this.scrollToKey();
  }
  scrollToKey() {
    if (this.state.activeKey && this.rowRefs[this.state.activeKey]) {
      window.scrollTo({
        top: this.rowRefs[this.state.activeKey].offsetTop,
        behavior: 'smooth'
      });
    }
  }
  handleChangeKeyTypeFilter(e) {
    this.setState({
      activeKey: null,
      keyTypeFilter: e.target.value
    });
  }
  handleKeyPress(e, index) {
    if (e.key === 'Enter') {
      this.showKeyDetails(index);
    }
  }

  /**
   * @param  {string} type key type 'public' or 'private'
   * @return {bool}      true if key should be filtered out
   */
  filterKey(type) {
    const filter = this.state.keyTypeFilter;
    return filter === 'publickeys' && type !== 'public' || filter === 'keypairs' && type !== 'private';
  }
  showKeyDetails(index) {
    this.setState({
      selectedKey: index
    });
  }
  onHiddenModal() {
    if (this.state.action === 'deleteKey') {
      this.deleteKeyEntry();
    }
    this.setState({
      showDeleteKeyModal: false,
      activeKey: null,
      action: ''
    });
  }
  deleteKeyEntry() {
    const key = this.props.keys.find(key => key.keyId === this.state.activeKey);
    this.props.onDeleteKey(key.fingerprint, key.type);
  }
  deleteKeyring() {
    const keyringId = this.state.activeKeyring.id;
    this.setState({
      showDeleteKeyringModal: false
    }, () => this.props.onDeleteKeyring(keyringId));
  }
  openExportKeyringDialog() {
    let keys = [];
    let all = false;
    let type = 'pub';
    switch (this.state.keyTypeFilter) {
      case 'allkeys':
        all = true;
        type = 'all';
        break;
      case 'publickeys':
        keys = this.props.keys.filter(key => key.type === 'public');
        break;
      case 'keypairs':
        keys = this.props.keys.filter(key => key.type === 'private');
        type = 'all';
        break;
      default:
        //console.log('unknown filter');
        break;
    }
    this.setState({
      activeKey: null,
      showExportModal: true,
      keyringBackup: {
        keyFprs: keys.map(key => key.fingerprint),
        all,
        type
      }
    });
  }
  getKeyDetails() {
    const activeKeyDetails = this.props.keys.find(key => key.keyId === this.state.activeKey);
    return /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      type: "info",
      className: "mb-4 flex-shrink-1"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: `icon icon-${activeKeyDetails.type === 'public' ? 'key' : 'key-pair'} mr-1`,
      style: {
        fontSize: '1.25rem'
      }
    }), /*#__PURE__*/router_external_React_default().createElement("span", {
      style: {
        fontSize: '1rem',
        fontWeight: 500
      }
    }, activeKeyDetails.name), " ", `<${activeKeyDetails.email}> #${activeKeyDetails.keyId}`);
  }
  render() {
    if (this.state.selectedKey !== null) {
      return /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: `/keyring/key/${this.state.selectedKey}`
      });
    }
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-body"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-title d-flex flex-wrap align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("h1", {
      className: "flex-shrink-0 mr-auto"
    }, router_map.keyring_header), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "flex-shrink-0"
    }, /*#__PURE__*/router_external_React_default().createElement(router_KeyringSelect_KeyringSelect, {
      keyringId: this.context.keyringId,
      keyringAttr: this.props.keyringAttr,
      onChange: this.props.onChangeKeyring,
      onDelete: (keyringId, keyringName) => this.setState({
        showDeleteKeyringModal: true,
        activeKeyring: {
          id: keyringId,
          name: keyringName
        }
      }),
      prefs: this.props.prefs
    }))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group btn-toolbar justify-content-between",
      role: "toolbar",
      "aria-label": "Toolbar with button groups"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      className: "btn btn-secondary",
      to: "/keyring/generate",
      replace: true,
      tabIndex: "0",
      title: router_map.keygrid_generate_title
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-add",
      "aria-hidden": "true"
    }), " ", router_map.key_gen_generate), /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      className: "btn btn-secondary",
      to: "/keyring/import",
      replace: true,
      tabIndex: "0",
      title: router_map.keygrid_import_title
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-download",
      "aria-hidden": "true"
    }), " ", router_map.form_import), /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      className: `btn btn-secondary ${this.context.demail ? 'd-none' : ''}`,
      to: "/keyring/import/search",
      replace: true,
      tabIndex: "0",
      title: router_map.keygrid_import_search_title
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-search",
      "aria-hidden": "true"
    }), " ", router_map.key_import_search_btn), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.openExportKeyringDialog(),
      className: "btn btn-secondary",
      title: router_map.keygrid_export_title
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-upload",
      "aria-hidden": "true"
    }), " ", router_map.keygrid_export), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.props.onRefreshKeyring,
      className: "btn btn-secondary",
      title: router_map.keygrid_refresh_title
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-refresh",
      "aria-hidden": "true"
    }), " ", router_map.keygrid_refresh)), /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("label", {
      htmlFor: "keyringFilterBtn",
      className: "keyringFilterLabel mr-1"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-filter",
      "aria-hidden": "true"
    }), " ", router_map.keygrid_sort_type, ":"), /*#__PURE__*/router_external_React_default().createElement("select", {
      value: this.state.keyTypeFilter,
      onChange: e => this.handleChangeKeyTypeFilter(e),
      className: "custom-select d-inline-block w-auto",
      id: "keyringFilterBtn"
    }, /*#__PURE__*/router_external_React_default().createElement("option", {
      value: "allkeys"
    }, router_map.keygrid_all_keys), /*#__PURE__*/router_external_React_default().createElement("option", {
      value: "publickeys"
    }, router_map.keygrid_public_keys), /*#__PURE__*/router_external_React_default().createElement("option", {
      value: "keypairs"
    }, router_map.keyring_public_private)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "table-responsive table-responsive-custom"
    }, /*#__PURE__*/router_external_React_default().createElement("table", {
      className: "table table-custom table-hover",
      id: "keyRingTable"
    }, /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", null), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_name), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_email), /*#__PURE__*/router_external_React_default().createElement("th", {
      style: {
        minWidth: '140px'
      }
    }, router_map.keygrid_keyid), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_creation_date_short), /*#__PURE__*/router_external_React_default().createElement("th", null))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, this.props.keys.map((key, index) => !this.filterKey(key.type) && /*#__PURE__*/router_external_React_default().createElement("tr", {
      className: this.state.activeKey === key.keyId ? 'table-active' : '',
      ref: ref => this.rowRefs[key.keyId] = ref,
      key: index,
      onClick: () => this.showKeyDetails(key.fingerprint),
      onKeyPress: e => this.handleKeyPress(e, key.fingerprint),
      tabIndex: "0",
      "aria-haspopup": "true"
    }, /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: `icon icon-${key.type === 'public' ? 'key' : 'key-pair'}`,
      style: {
        fontSize: '1.25rem'
      }
    })), /*#__PURE__*/router_external_React_default().createElement("td", null, /*#__PURE__*/router_external_React_default().createElement("strong", {
      className: "mr-2"
    }, key.name), this.props.defaultKeyFpr === key.fingerprint && /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "badge badge-info text-nowrap",
      "aria-hidden": "true"
    }, router_map.keygrid_default_label)), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "emailCell"
    }, key.email), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "monospaced"
    }, key.keyId), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "monospaced"
    }, router_formatDateWithLocale(key.crDate)), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center text-nowrap"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "actions"
    }, !(this.context.gnupg && key.type === 'private') && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: e => {
        e.stopPropagation();
        this.setState({
          showDeleteKeyModal: true,
          activeKey: key.keyId
        });
      },
      className: "btn btn-secondary keyDeleteBtn"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-delete",
      "aria-hidden": "true"
    })), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-right",
      "aria-hidden": "true"
    })))))))), this.props.spinner && /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0
    }), /*#__PURE__*/router_external_React_default().createElement(router_SimpleDialog, {
      isOpen: this.state.showDeleteKeyModal,
      toggle: () => this.setState(prevState => ({
        showDeleteKeyModal: !prevState.showDeleteKeyModal
      })),
      onHide: this.onHiddenModal,
      title: router_map.key_remove_dialog_title,
      onOk: () => this.setState({
        action: 'deleteKey',
        showDeleteKeyModal: false
      }),
      onCancel: () => this.setState({
        showDeleteKeyModal: false
      })
    }, /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "mb-2"
    }, router_map.keygrid_delete_confirmation), this.state.activeKey && this.getKeyDetails()), /*#__PURE__*/router_external_React_default().createElement(router_SimpleDialog, {
      isOpen: this.state.showDeleteKeyringModal,
      toggle: () => this.setState(prevState => ({
        showDeleteKeyringModal: !prevState.showDeleteKeyringModal
      })),
      onHide: () => this.setState({
        activeKeyring: null
      }),
      title: router_map.keyring_remove_dialog_title,
      message: router_get('keyring_confirm_deletion', this.state.activeKeyring && this.state.activeKeyring.name),
      onOk: this.deleteKeyring,
      onCancel: () => this.setState({
        showDeleteKeyringModal: false
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.showExportModal,
      toggle: () => this.setState(prevState => ({
        showExportModal: !prevState.showExportModal
      })),
      size: "medium",
      title: router_map.keyring_backup,
      hideFooter: true
    }, /*#__PURE__*/router_external_React_default().createElement(router_KeyringOptions.Consumer, null, ({
      keyringId
    }) => /*#__PURE__*/router_external_React_default().createElement(router_KeyExport, {
      showArmored: false,
      fileNameEditable: true,
      keyringId: keyringId,
      keyFprs: this.state.keyringBackup.keyFprs,
      keyName: "keyring",
      all: this.state.keyringBackup.all,
      type: this.state.keyringBackup.type,
      publicOnly: this.context.gnupg,
      onClose: () => this.setState({
        showExportModal: false
      })
    }))));
  }
}
router_KeyGrid_KeyGrid.contextType = router_KeyringOptions;
router_KeyGrid_KeyGrid.propTypes = {
  keys: (router_prop_types_default()).array,
  defaultKeyFpr: (router_prop_types_default()).string,
  keyringAttr: (router_prop_types_default()).object,
  prefs: (router_prop_types_default()).object,
  onChangeKeyring: (router_prop_types_default()).func.isRequired,
  onDeleteKeyring: (router_prop_types_default()).func.isRequired,
  onChangeDefaultKey: (router_prop_types_default()).func.isRequired,
  onDeleteKey: (router_prop_types_default()).func,
  onRefreshKeyring: (router_prop_types_default()).func,
  spinner: (router_prop_types_default()).bool,
  location: (router_prop_types_default()).object,
  match: (router_prop_types_default()).object
};
;// ./src/app/keyring/components/KeyStatus.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




router_register(['keygrid_status_valid', 'keygrid_status_invalid', 'keygrid_status_revoked', 'keygrid_status_expired']);
function router_KeyStatus({
  status,
  className = ''
}) {
  let labelClass;
  let labelText;
  switch (status) {
    case 3:
      labelClass = 'success';
      labelText = router_map.keygrid_status_valid;
      break;
    case 2:
      labelClass = 'warning';
      labelText = router_map.keygrid_status_revoked;
      break;
    case 1:
      labelClass = 'warning';
      labelText = router_map.keygrid_status_expired;
      break;
    default:
      labelClass = 'danger';
      labelText = router_map.keygrid_status_invalid;
  }
  return /*#__PURE__*/router_external_React_default().createElement("span", {
    className: `${className} text-nowrap`
  }, /*#__PURE__*/router_external_React_default().createElement("span", {
    className: `icon icon-marker text-${labelClass}`,
    "aria-hidden": "true"
  }), " ", labelText);
}
router_KeyStatus.propTypes = {
  status: (router_prop_types_default()).number,
  className: (router_prop_types_default()).string
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./src/app/keyring/components/KeyUsers.css
var router_KeyUsers = __webpack_require__(7924);
;// ./src/app/keyring/components/KeyUsers.css

      
      
      
      
      
      
      
      
      

var router_KeyUsers_options = {};

router_KeyUsers_options.styleTagTransform = (router_styleTagTransform_default());
router_KeyUsers_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_KeyUsers_options.insert = router_insertBySelector_default().bind(null, "head");
router_KeyUsers_options.domAPI = (router_styleDomAPI_default());
router_KeyUsers_options.insertStyleElement = (router_insertStyleElement_default());

var router_KeyUsers_update = router_injectStylesIntoStyleTag_default()(router_KeyUsers/* default */.A, router_KeyUsers_options);




       /* harmony default export */ const router_components_KeyUsers = (router_KeyUsers/* default */.A && router_KeyUsers/* default */.A.locals ? router_KeyUsers/* default */.A.locals : undefined);

;// ./src/app/keyring/components/KeyUsers.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */








router_register(['keyusers_title', 'keyusers_add_btn', 'keyusers_add_btn_title', 'keyusers_keyserver', 'keyusers_keyserver_sync', 'keyusers_keyserver_not', 'keyusers_keyserver_unverified', 'keygrid_user_primary', 'keygrid_user_name', 'keygrid_user_email', 'keygrid_userid_signatures', 'keygrid_validity_status']);
class router_KeyUsers_KeyUsers extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      selectedUser: null,
      allowSetPrimaryUser: false
    };
  }
  handleKeyPress(e, id) {
    if (e.key === 'Enter') {
      this.showUserDetails(e, id);
    }
  }
  showUserDetails(e, id) {
    if (e.target.nodeName !== 'INPUT') {
      this.setState({
        selectedUser: id
      });
    }
  }
  sortUsers(a, b) {
    const n = a.id - b.id;
    if (n != 0) {
      return n;
    }
    return b.isPrimary ? 0 : -1;
  }
  getKeyServerSyncLabel({
    remote,
    verified
  }) {
    const data = {
      labelClass: 'danger',
      statusText: router_map.keyusers_keyserver_not
    };
    if (remote) {
      if (verified) {
        data.labelClass = 'success';
        data.statusText = router_map.keyusers_keyserver_sync;
      } else {
        data.labelClass = 'warning';
        data.statusText = router_map.keyusers_keyserver_unverified;
      }
    }
    return /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "text-nowrap"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: `icon icon-marker text-${data.labelClass}`,
      "aria-hidden": "true"
    }), " ", data.statusText);
  }
  render() {
    const showKeyServerStatus = this.props.users.some(user => user.remote);
    if (this.state.selectedUser !== null) {
      return /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: `/keyring/key/${this.props.keyFpr}/user/${this.state.selectedUser}`
      });
    }
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: `keyUsers ${this.props.className || ''}`
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card card-clean-table"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-header d-flex align-items-center justify-content-between flex-wrap"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", {
      className: "my-2 my-md-0"
    }, router_map.keyusers_title), !this.context.gnupg && this.props.keyType !== 'public' && this.props.keyValidity && /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      to: `/keyring/key/${this.props.keyFpr}/user/add`,
      className: "btn btn-sm btn-secondary",
      replace: true,
      tabIndex: "0",
      title: router_map.keyusers_add_btn_title
    }, router_map.keyusers_add_btn)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "table-responsive"
    }, /*#__PURE__*/router_external_React_default().createElement("table", {
      className: "table table-custom table-hover mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "text-center"
    }, router_map.keygrid_user_primary), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_name), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_email), /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "text-center"
    }, router_map.keygrid_validity_status), showKeyServerStatus && /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "text-center"
    }, router_map.keyusers_keyserver), /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "text-center"
    }, router_map.keygrid_userid_signatures), /*#__PURE__*/router_external_React_default().createElement("th", null))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, this.props.users.sort(this.sortUsers).map(user => /*#__PURE__*/router_external_React_default().createElement("tr", {
      key: user.id,
      onClick: e => this.showUserDetails(e, user.id),
      onKeyPress: e => this.handleKeyPress(e, user.id),
      tabIndex: "0",
      "aria-haspopup": "true"
    }, /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, this.props.keyType === 'private' && this.state.allowSetPrimaryUser ? /*#__PURE__*/router_external_React_default().createElement("label", null, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "radio",
      onChange: e => this.props.onChangePrimaryUser(e.target.value),
      name: "isPrimaryUser",
      value: user.id,
      checked: user.isPrimary
    })) : /*#__PURE__*/router_external_React_default().createElement("span", {
      className: `${user.isPrimary && 'icon icon-checkmark'}`,
      "aria-hidden": "true"
    })), /*#__PURE__*/router_external_React_default().createElement("td", null, /*#__PURE__*/router_external_React_default().createElement("strong", null, user.name)), /*#__PURE__*/router_external_React_default().createElement("td", null, user.email), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement(router_KeyStatus, {
      status: user.status
    })), showKeyServerStatus && /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, this.getKeyServerSyncLabel(user)), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, user.signatures.length), /*#__PURE__*/router_external_React_default().createElement("td", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "actions"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-right",
      "aria-hidden": "true"
    }))))))))));
  }
}
router_KeyUsers_KeyUsers.contextType = router_KeyringOptions;
router_KeyUsers_KeyUsers.propTypes = {
  className: (router_prop_types_default()).string,
  users: (router_prop_types_default()).array,
  keyType: (router_prop_types_default()).string,
  keyFpr: (router_prop_types_default()).string,
  keyValidity: (router_prop_types_default()).bool,
  onChangePrimaryUser: (router_prop_types_default()).func
};
;// ./node_modules/date-fns/parseISO.mjs


/**
 * The {@link parseISO} function options.
 */

/**
 * @name parseISO
 * @category Common Helpers
 * @summary Parse ISO string
 *
 * @description
 * Parse the given string in ISO 8601 format and return an instance of Date.
 *
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 *
 * If the argument isn't a string, the function cannot parse the string or
 * the values are invalid, it returns Invalid Date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param argument - The value to convert
 * @param options - An object with options
 *
 * @returns The parsed date in the local time zone
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * const result = parseISO('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert string '+02014101' to date,
 * // if the additional number of digits in the extended year format is 1:
 * const result = parseISO('+02014101', { additionalDigits: 1 })
 * //=> Fri Apr 11 2014 00:00:00
 */
function router_parseISO(argument, options) {
  const additionalDigits = options?.additionalDigits ?? 2;
  const dateStrings = router_splitDateString(argument);

  let date;
  if (dateStrings.date) {
    const parseYearResult = router_parseYear(dateStrings.date, additionalDigits);
    date = router_parseDate(parseYearResult.restDateString, parseYearResult.year);
  }

  if (!date || isNaN(date.getTime())) {
    return new Date(NaN);
  }

  const timestamp = date.getTime();
  let time = 0;
  let offset;

  if (dateStrings.time) {
    time = router_parseTime(dateStrings.time);
    if (isNaN(time)) {
      return new Date(NaN);
    }
  }

  if (dateStrings.timezone) {
    offset = router_parseTimezone(dateStrings.timezone);
    if (isNaN(offset)) {
      return new Date(NaN);
    }
  } else {
    const dirtyDate = new Date(timestamp + time);
    // JS parsed string assuming it's in UTC timezone
    // but we need it to be parsed in our timezone
    // so we use utc values to build date in our timezone.
    // Year values from 0 to 99 map to the years 1900 to 1999
    // so set year explicitly with setFullYear.
    const result = new Date(0);
    result.setFullYear(
      dirtyDate.getUTCFullYear(),
      dirtyDate.getUTCMonth(),
      dirtyDate.getUTCDate(),
    );
    result.setHours(
      dirtyDate.getUTCHours(),
      dirtyDate.getUTCMinutes(),
      dirtyDate.getUTCSeconds(),
      dirtyDate.getUTCMilliseconds(),
    );
    return result;
  }

  return new Date(timestamp + time + offset);
}

const router_patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/,
};

const router_dateRegex =
  /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
const router_timeRegex =
  /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
const router_timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;

function router_splitDateString(dateString) {
  const dateStrings = {};
  const array = dateString.split(router_patterns.dateTimeDelimiter);
  let timeString;

  // The regex match should only return at maximum two array elements.
  // [date], [time], or [date, time].
  if (array.length > 2) {
    return dateStrings;
  }

  if (/:/.test(array[0])) {
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (router_patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(router_patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(
        dateStrings.date.length,
        dateString.length,
      );
    }
  }

  if (timeString) {
    const token = router_patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], "");
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }

  return dateStrings;
}

function router_parseYear(dateString, additionalDigits) {
  const regex = new RegExp(
    "^(?:(\\d{4}|[+-]\\d{" +
      (4 + additionalDigits) +
      "})|(\\d{2}|[+-]\\d{" +
      (2 + additionalDigits) +
      "})$)",
  );

  const captures = dateString.match(regex);
  // Invalid ISO-formatted year
  if (!captures) return { year: NaN, restDateString: "" };

  const year = captures[1] ? parseInt(captures[1]) : null;
  const century = captures[2] ? parseInt(captures[2]) : null;

  // either year or century is null, not both
  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length),
  };
}

function router_parseDate(dateString, year) {
  // Invalid ISO-formatted year
  if (year === null) return new Date(NaN);

  const captures = dateString.match(router_dateRegex);
  // Invalid ISO-formatted string
  if (!captures) return new Date(NaN);

  const isWeekDate = !!captures[4];
  const dayOfYear = router_parseDateUnit(captures[1]);
  const month = router_parseDateUnit(captures[2]) - 1;
  const day = router_parseDateUnit(captures[3]);
  const week = router_parseDateUnit(captures[4]);
  const dayOfWeek = router_parseDateUnit(captures[5]) - 1;

  if (isWeekDate) {
    if (!router_validateWeekDate(year, week, dayOfWeek)) {
      return new Date(NaN);
    }
    return router_dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    const date = new Date(0);
    if (
      !router_validateDate(year, month, day) ||
      !router_validateDayOfYearDate(year, dayOfYear)
    ) {
      return new Date(NaN);
    }
    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}

function router_parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}

function router_parseTime(timeString) {
  const captures = timeString.match(router_timeRegex);
  if (!captures) return NaN; // Invalid ISO-formatted time

  const hours = router_parseTimeUnit(captures[1]);
  const minutes = router_parseTimeUnit(captures[2]);
  const seconds = router_parseTimeUnit(captures[3]);

  if (!router_validateTime(hours, minutes, seconds)) {
    return NaN;
  }

  return (
    hours * router_millisecondsInHour + minutes * router_millisecondsInMinute + seconds * 1000
  );
}

function router_parseTimeUnit(value) {
  return (value && parseFloat(value.replace(",", "."))) || 0;
}

function router_parseTimezone(timezoneString) {
  if (timezoneString === "Z") return 0;

  const captures = timezoneString.match(router_timezoneRegex);
  if (!captures) return 0;

  const sign = captures[1] === "+" ? -1 : 1;
  const hours = parseInt(captures[2]);
  const minutes = (captures[3] && parseInt(captures[3])) || 0;

  if (!router_validateTimezone(hours, minutes)) {
    return NaN;
  }

  return sign * (hours * router_millisecondsInHour + minutes * router_millisecondsInMinute);
}

function router_dayOfISOWeekYear(isoWeekYear, week, day) {
  const date = new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  const fourthOfJanuaryDay = date.getUTCDay() || 7;
  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

// Validation functions

// February is null to handle the leap year (using ||)
const router_daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

function router_isLeapYearIndex(year) {
  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
}

function router_validateDate(year, month, date) {
  return (
    month >= 0 &&
    month <= 11 &&
    date >= 1 &&
    date <= (router_daysInMonths[month] || (router_isLeapYearIndex(year) ? 29 : 28))
  );
}

function router_validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (router_isLeapYearIndex(year) ? 366 : 365);
}

function router_validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}

function router_validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }

  return (
    seconds >= 0 &&
    seconds < 60 &&
    minutes >= 0 &&
    minutes < 60 &&
    hours >= 0 &&
    hours < 25
  );
}

function router_validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_parseISO = ((/* unused pure expression or super */ null && (router_parseISO)));

;// ./node_modules/date-fns/addDays.mjs



/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of days to be added.
 *
 * @returns The new date with the days added
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * const result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */
function router_addDays(date, amount) {
  const _date = router_toDate(date);
  if (isNaN(amount)) return router_constructFrom(date, NaN);
  if (!amount) {
    // If 0 days, no-op to avoid changing times in the hour before end of DST
    return _date;
  }
  _date.setDate(_date.getDate() + amount);
  return _date;
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_addDays = ((/* unused pure expression or super */ null && (router_addDays)));

;// ./node_modules/date-fns/addMonths.mjs



/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of months to be added.
 *
 * @returns The new date with the months added
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * const result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 *
 * // Add one month to 30 January 2023:
 * const result = addMonths(new Date(2023, 0, 30), 1)
 * //=> Tue Feb 28 2023 00:00:00
 */
function router_addMonths(date, amount) {
  const _date = router_toDate(date);
  if (isNaN(amount)) return router_constructFrom(date, NaN);
  if (!amount) {
    // If 0 months, no-op to avoid changing times in the hour before end of DST
    return _date;
  }
  const dayOfMonth = _date.getDate();

  // The JS Date object supports date math by accepting out-of-bounds values for
  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
  // want except that dates will wrap around the end of a month, meaning that
  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
  // we'll default to the end of the desired month by adding 1 to the desired
  // month and using a date of 0 to back up one day to the end of the desired
  // month.
  const endOfDesiredMonth = router_constructFrom(date, _date.getTime());
  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);
  const daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
  } else {
    // Otherwise, we now know that setting the original day-of-month value won't
    // cause an overflow, so set the desired day-of-month. Note that we can't
    // just set the date of `endOfDesiredMonth` because that object may have had
    // its time changed in the unusual case where where a DST transition was on
    // the last day of the month and its local time was in the hour skipped or
    // repeated next to a DST transition.  So we use `date` instead which is
    // guaranteed to still have the original time.
    _date.setFullYear(
      endOfDesiredMonth.getFullYear(),
      endOfDesiredMonth.getMonth(),
      dayOfMonth,
    );
    return _date;
  }
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_addMonths = ((/* unused pure expression or super */ null && (router_addMonths)));

;// ./node_modules/date-fns/addYears.mjs


/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of years to be added.
 *
 * @returns The new date with the years added
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * const result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */
function router_addYears(date, amount) {
  return router_addMonths(date, amount * 12);
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_addYears = ((/* unused pure expression or super */ null && (router_addYears)));

// EXTERNAL MODULE: ./node_modules/react-datepicker/dist/react-datepicker.min.js
var router_react_datepicker_min = __webpack_require__(9386);
var router_react_datepicker_min_default = /*#__PURE__*/__webpack_require__.n(router_react_datepicker_min);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/react-datepicker/dist/react-datepicker.css
var router_react_datepicker = __webpack_require__(774);
;// ./node_modules/react-datepicker/dist/react-datepicker.css

      
      
      
      
      
      
      
      
      

var router_react_datepicker_options = {};

router_react_datepicker_options.styleTagTransform = (router_styleTagTransform_default());
router_react_datepicker_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_react_datepicker_options.insert = router_insertBySelector_default().bind(null, "head");
router_react_datepicker_options.domAPI = (router_styleDomAPI_default());
router_react_datepicker_options.insertStyleElement = (router_insertStyleElement_default());

var router_react_datepicker_update = router_injectStylesIntoStyleTag_default()(router_react_datepicker/* default */.A, router_react_datepicker_options);




       /* harmony default export */ const router_dist_react_datepicker = (router_react_datepicker/* default */.A && router_react_datepicker/* default */.A.locals ? router_react_datepicker/* default */.A.locals : undefined);

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/keyring/components/DatePicker.scss
var router_DatePicker = __webpack_require__(2034);
;// ./src/app/keyring/components/DatePicker.scss

      
      
      
      
      
      
      
      
      

var router_DatePicker_options = {};

router_DatePicker_options.styleTagTransform = (router_styleTagTransform_default());
router_DatePicker_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_DatePicker_options.insert = router_insertBySelector_default().bind(null, "head");
router_DatePicker_options.domAPI = (router_styleDomAPI_default());
router_DatePicker_options.insertStyleElement = (router_insertStyleElement_default());

var router_DatePicker_update = router_injectStylesIntoStyleTag_default()(router_DatePicker/* default */.A, router_DatePicker_options);




       /* harmony default export */ const router_components_DatePicker = (router_DatePicker/* default */.A && router_DatePicker/* default */.A.locals ? router_DatePicker/* default */.A.locals : undefined);

;// ./src/app/keyring/components/DatePicker.js
/**
 * Copyright (C) 2016-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */







class router_CustomInput extends (router_external_React_default()).Component {
  // eslint-disable-line react/prefer-stateless-function
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "input-group"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "text",
      className: "form-control border-right-0",
      value: this.props.value,
      placeholder: this.props.placeholder,
      disabled: this.props.disabled,
      readOnly: true
    }), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "input-group-append"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: `input-group-text border-left-0 bg-white ${this.props.value ? '' : 'd-none'}`
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "form-control-clear icon icon-close",
      onClick: this.props.onClearDate,
      "aria-hidden": "true"
    })), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-secondary",
      onClick: this.props.onClick,
      disabled: this.props.disabled
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-calender"
    }))));
  }
}
router_CustomInput.propTypes = {
  value: (router_prop_types_default()).string,
  onClick: (router_prop_types_default()).func,
  onClearDate: (router_prop_types_default()).func,
  placeholder: (router_prop_types_default()).string,
  disabled: (router_prop_types_default()).bool
};
function router_DatePicker_DatePicker({
  value,
  onChange,
  placeholder,
  minDate,
  maxDate,
  disabled
}) {
  const locale = router_getDefaultLocale();
  (0,router_react_datepicker_min.registerLocale)(locale.code, locale);
  // ReactDatePicker maps placeholderText to placeholder prop of customInput
  return /*#__PURE__*/router_external_React_default().createElement((router_react_datepicker_min_default()), {
    customInput: /*#__PURE__*/router_external_React_default().createElement(router_CustomInput, {
      onClearDate: () => onChange(null)
    }),
    selected: value,
    showMonthDropdown: true,
    showYearDropdown: true,
    forceShowMonthNavigation: false,
    minDate: minDate,
    maxDate: maxDate,
    locale: locale,
    dateFormat: "P",
    dropdownMode: "select",
    onChange: onChange,
    placeholderText: placeholder,
    scrollableYearDropdown: true,
    startDate: minDate,
    disabled: disabled
  });
}
router_DatePicker_DatePicker.propTypes = {
  value: (router_prop_types_default()).object,
  onChange: (router_prop_types_default()).func.isRequired,
  placeholder: (router_prop_types_default()).string,
  minDate: (router_prop_types_default()).object,
  maxDate: (router_prop_types_default()).object,
  disabled: (router_prop_types_default()).bool
};
;// ./src/components/util/DefinePassword.js
/**
 * Copyright (C) 2016-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




router_register(['key_gen_pwd', 'key_gen_pwd_empty', 'key_gen_pwd_reenter', 'key_gen_pwd_unequal', 'key_gen_pwd_match']);
class router_DefinePassword extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      passwordCheck: ''
    };
    this.handleChange = this.handleChange.bind(this);
    this.retypeCheck = this.retypeCheck.bind(this);
  }
  componentDidMount() {
    if (this.props.focus) {
      this.pwdInput.focus();
    }
  }
  componentDidUpdate(prevProps) {
    if (this.props.value !== prevProps.value) {
      if (this.props.value === '') {
        this.setState({
          passwordCheck: ''
        }, () => this.props.onChange({
          target: {
            id: 'passwordCheck',
            error: false
          }
        }));
      } else {
        this.retypeCheck(this.state.passwordCheck);
      }
    }
  }
  handleChange(event) {
    const target = event.target;
    this.retypeCheck(target.value);
  }
  retypeCheck(value) {
    const error = this.props.value !== value && this.props.value.length;
    this.setState({
      passwordCheck: value
    }, () => this.props.onChange({
      target: {
        id: 'passwordCheck',
        error
      }
    }));
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("label", {
      htmlFor: "password",
      className: this.props.hideLabels ? 'sr-only' : ''
    }, router_map.key_gen_pwd), /*#__PURE__*/router_external_React_default().createElement("input", {
      ref: pwdInput => this.pwdInput = pwdInput,
      value: this.props.value,
      onChange: this.props.onChange,
      onPaste: e => {
        e.preventDefault();
        this.props.onChange({
          target: {
            type: 'password',
            id: 'password',
            value: e.clipboardData.getData('Text')
          }
        });
      },
      type: "password",
      className: `form-control ${this.props.errors.password ? ' is-invalid' : ''} text-monospace`,
      id: "password",
      disabled: this.props.disabled,
      placeholder: this.props.hideLabels ? router_map.key_gen_pwd : ''
    }), this.props.errors.password && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "invalid-feedback"
    }, this.props.errors.password.message !== '' ? this.props.errors.password.message : router_map.key_gen_pwd_empty)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("label", {
      htmlFor: "passwordCheck",
      className: this.props.hideLabels ? 'sr-only' : ''
    }, router_map.key_gen_pwd_reenter), /*#__PURE__*/router_external_React_default().createElement("input", {
      value: this.state.passwordCheck,
      onChange: this.handleChange,
      onPaste: e => this.props.onChange({
        target: {
          type: 'password',
          id: 'passwordCheck',
          value: e.clipboardData.getData('Text')
        }
      }),
      type: "password",
      className: `form-control ${this.props.errors.passwordCheck ? 'is-invalid' : ''} text-monospace`,
      id: "passwordCheck",
      disabled: this.props.disabled,
      placeholder: this.props.hideLabels ? router_map.key_gen_pwd_reenter : ''
    }), this.props.errors.passwordCheck && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "invalid-feedback"
    }, router_map.key_gen_pwd_unequal)));
  }
}
router_DefinePassword.propTypes = {
  value: (router_prop_types_default()).string.isRequired,
  focus: (router_prop_types_default()).bool,
  onChange: (router_prop_types_default()).func.isRequired,
  disabled: (router_prop_types_default()).bool,
  errors: (router_prop_types_default()).object,
  hideLabels: (router_prop_types_default()).bool
};
router_DefinePassword.defaultProps = {
  focus: false,
  hideLabels: false
};
;// ./src/app/keyring/components/KeySelect.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['keygrid_primary_key', 'keygrid_subkey']);
class router_KeySelect extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      selectedIndex: props.selectedIndex,
      dropdownOpen: false
    };
    this.handleClick = this.handleClick.bind(this);
    this.toggle = this.toggle.bind(this);
  }
  handleClick(selectedIndex) {
    this.props.onChange(selectedIndex);
    this.setState({
      selectedIndex
    });
    this.toggle();
  }
  toggle() {
    this.setState(prevState => ({
      dropdownOpen: !prevState.dropdownOpen
    }));
  }
  render() {
    const selectedKey = this.props.keys[this.state.selectedIndex];
    return /*#__PURE__*/router_external_React_default().createElement(router_es_Dropdown, {
      isOpen: this.state.dropdownOpen,
      toggle: this.toggle
    }, /*#__PURE__*/router_external_React_default().createElement(router_es_DropdownToggle, {
      size: "sm",
      className: "d-flex align-items-center",
      caret: true
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "mr-auto"
    }, this.state.selectedIndex === 0 ? /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "font-weight-bolder"
    }, router_map.keygrid_primary_key) : router_map.keygrid_subkey), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "text-right mx-1"
    }, selectedKey.keyId)), /*#__PURE__*/router_external_React_default().createElement(router_es_DropdownMenu, {
      className: "py-1",
      style: {
        fontSize: '0.765rem'
      }
    }, /*#__PURE__*/router_external_React_default().createElement("a", {
      className: "dropdown-item d-flex align-items-center",
      onClick: () => this.handleClick(0),
      style: {
        cursor: 'pointer',
        paddingLeft: '0.625rem',
        paddingRight: '0.625rem'
      }
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "mr-auto font-weight-bolder"
    }, router_map.keygrid_primary_key), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "text-right ml-1 mr-3"
    }, this.props.keys[0].keyId)), this.props.keys.length > 1 && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "dropdown-divider my-1"
    }), this.props.keys.length > 1 && this.props.keys.filter((key, index) => index > 0).map((key, index) => /*#__PURE__*/router_external_React_default().createElement("a", {
      key: index + 1,
      className: "dropdown-item d-flex align-items-center",
      onClick: () => this.handleClick(index + 1),
      style: {
        cursor: 'pointer',
        paddingLeft: '0.625rem',
        paddingRight: '0.625rem'
      }
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "mr-auto"
    }, router_map.keygrid_subkey), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "text-right ml-1 mr-3"
    }, key.keyId)))));
  }
}
router_KeySelect.propTypes = {
  keys: (router_prop_types_default()).array,
  selectedIndex: (router_prop_types_default()).number,
  onChange: (router_prop_types_default()).func.isRequired
};
router_KeySelect.defaultProps = {
  selectedIndex: 0
};
;// ./src/app/keyring/components/KeyDetails.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */














router_register(['alert_header_warning', 'change_link', 'dialog_cancel_btn', 'dialog_save_btn', 'keydetails_change_exp_date_dialog_note', 'keydetails_change_exp_date_dialog_title', 'keydetails_change_pwd_dialog_old', 'keydetails_change_pwd_dialog_title', 'keydetails_creation_date', 'keydetails_expiration_date', 'keydetails_key_not_expire', 'keydetails_password', 'keydetails_title', 'keygrid_algorithm', 'keygrid_key_fingerprint', 'keygrid_key_length', 'keygrid_key_not_expire', 'keygrid_keyid', 'keygrid_validity_status', 'pwd_dialog_wrong_pwd']);
class router_KeyDetails extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    const keys = this.getAllKeys(props.keyDetails);
    const defaultKeyIdx = 0;
    const normalizedExDate = this.normalizeDate(keys[defaultKeyIdx].exDate);
    this.state = {
      showExDateModal: false,
      showPwdModal: false,
      action: '',
      keys,
      selectedKeyIdx: defaultKeyIdx,
      exDateInput: normalizedExDate,
      keyExpirationTime: normalizedExDate,
      passwordCurrent: '',
      password: '',
      errors: {}
    };
    this.handleChange = this.handleChange.bind(this);
    this.handleChangeKey = this.handleChangeKey.bind(this);
    this.handleChangeExDate = this.handleChangeExDate.bind(this);
    this.handleChangePwd = this.handleChangePwd.bind(this);
    this.validateChangePwd = this.validateChangePwd.bind(this);
    this.cleanUpPwdData = this.cleanUpPwdData.bind(this);
    this.handleHiddenModal = this.handleHiddenModal.bind(this);
  }
  componentDidUpdate(prevProps) {
    if (this.props.keyDetails !== prevProps.keyDetails) {
      this.setState({
        keys: this.getAllKeys(this.props.keyDetails)
      });
    }
  }
  normalizeDate(date) {
    return date !== false ? router_parseISO(date) : null;
  }
  getAllKeys({
    status,
    algorithm,
    bitLength,
    crDate,
    exDate,
    fingerprint,
    keyId,
    subkeys
  }) {
    return [{
      status,
      crDate,
      exDate,
      keyId,
      algorithm,
      bitLength,
      fingerprint
    }, ...subkeys];
  }
  handleChange(event) {
    const target = event.target;
    this.setState(({
      errors: err
    }) => {
      const {
        [target.id]: deleted,
        ...errors
      } = err;
      if (target.error) {
        errors[target.id] = new Error();
      }
      return {
        [target.id]: target.value,
        errors
      };
    });
  }
  handleChangeKey(selectedKeyIdx) {
    this.setState(prevState => {
      const normalizedExDate = this.normalizeDate(prevState.keys[selectedKeyIdx].exDate);
      return {
        selectedKeyIdx,
        exDateInput: normalizedExDate,
        keyExpirationTime: normalizedExDate
      };
    });
  }
  async handleChangeExDate() {
    const isoTimeString = this.state.keyExpirationTime !== null ? this.state.keyExpirationTime.toISOString() : false;
    if (this.state.keys[this.state.selectedKeyIdx].exDate !== isoTimeString) {
      try {
        await this.props.onChangeExpDate(isoTimeString);
        this.setState(prevSate => ({
          exDateInput: prevSate.keyExpirationTime
        }));
      } catch (error) {
        if (error.code !== 'PWD_DIALOG_CANCEL') {
          throw error;
        }
      } finally {
        this.setState(prevSate => ({
          keyExpirationTime: prevSate.exDateInput
        }));
      }
    }
  }
  async validateChangePwd() {
    const errors = {
      ...this.state.errors
    };
    const pwdIsValid = await this.props.onValidateKeyPwd(this.state.passwordCurrent);
    if (!pwdIsValid) {
      errors.passwordCurrent = new Error();
    }
    if (!this.state.password.length) {
      errors.password = new Error();
    }
    if (Object.keys(errors).length) {
      this.setState({
        errors
      });
      return;
    }
    this.setState({
      action: 'setPwd',
      showPwdModal: false
    });
  }
  async handleChangePwd() {
    try {
      await this.props.onChangePwd(this.state.passwordCurrent, this.state.password);
    } catch (error) {
      if (error.code !== 'PWD_DIALOG_CANCEL') {
        throw error;
      }
    }
  }
  cleanUpPwdData() {
    this.setState({
      showPwdModal: false,
      password: '',
      passwordCurrent: '',
      errors: {}
    });
  }
  async handleHiddenModal() {
    switch (this.state.action) {
      case 'setExDate':
        await this.handleChangeExDate();
        break;
      case 'setPwd':
        await this.handleChangePwd();
    }
    this.cleanUpPwdData();
  }
  render() {
    const selectedKey = this.state.keys[this.state.selectedKeyIdx];
    const tomorrow = router_addDays(new Date(), 1);
    const farFuture = router_addYears(tomorrow, 80);
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "keyDetails"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card card-clean"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-header d-flex align-items-center justify-content-between flex-wrap"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", {
      className: "my-2 my-sm-0"
    }, router_map.keydetails_title), /*#__PURE__*/router_external_React_default().createElement(router_KeySelect, {
      keys: this.state.keys,
      selectedKeyIdx: this.state.selectedKeyIdx,
      onChange: index => this.handleChangeKey(index)
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-body pb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-lg-5"
    }, /*#__PURE__*/router_external_React_default().createElement("dl", {
      className: "row d-flex align-items-center mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-md-4 col-xl-3 mb-2 text-nowrap"
    }, router_map.keygrid_validity_status), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-md-8 col-xl-9"
    }, /*#__PURE__*/router_external_React_default().createElement(router_KeyStatus, {
      status: selectedKey.status
    })), /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-4 col-xl-3 mb-2 text-nowrap"
    }, router_map.keydetails_creation_date), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-md-8 col-xl-9"
    }, router_formatDateWithLocale(selectedKey.crDate)), /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-4 col-xl-3 mb-2 text-nowrap"
    }, router_map.keydetails_expiration_date), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-md-8 col-xl-9"
    }, !this.context.gnupg && this.props.keyDetails.type !== 'public' && this.state.selectedKeyIdx === 0 ? /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "input-group input-group-sm",
      style: {
        width: '155px'
      }
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "text",
      readOnly: true,
      className: "form-control",
      value: this.state.exDateInput !== null ? router_formatDateWithLocale(this.state.exDateInput) : router_map.keydetails_key_not_expire
    }), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "input-group-append"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      onClick: () => this.setState({
        showExDateModal: true
      }),
      className: "btn btn-secondary",
      type: "button",
      disabled: !this.props.keyDetails.validity
    }, router_map.change_link))) : /*#__PURE__*/router_external_React_default().createElement("div", null, selectedKey.exDate ? router_formatDateWithLocale(selectedKey.exDate) : router_map.keydetails_key_not_expire)), this.props.keyDetails.type !== 'public' && /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-md-4 col-xl-3 mb-2 text-nowrap"
    }, router_map.keydetails_password), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-md-8 col-xl-9"
    }, !this.context.gnupg && this.state.selectedKeyIdx === 0 ? /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "input-group input-group-sm",
      style: {
        width: '155px'
      }
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "password",
      readOnly: true,
      className: "form-control text-monospace",
      value: "********"
    }), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "input-group-append"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      onClick: () => this.setState({
        showPwdModal: true
      }),
      className: "btn btn-secondary",
      type: "button",
      disabled: !this.props.keyDetails.validity
    }, router_map.change_link))) : /*#__PURE__*/router_external_React_default().createElement("div", null, "********"))))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-lg-7"
    }, /*#__PURE__*/router_external_React_default().createElement("dl", {
      className: "row d-flex align-items-center mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-md-4 col-xl-3 mb-2 text-nowrap"
    }, router_map.keygrid_keyid), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-md-8 col-xl-9"
    }, selectedKey.keyId), /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-md-4 col-xl-3 mb-2 text-nowrap"
    }, router_map.keygrid_algorithm), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-md-8 col-xl-9"
    }, selectedKey.algorithm), /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-md-4 col-xl-3 mb-2 text-nowrap"
    }, router_map.keygrid_key_length), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-md-8 col-xl-9"
    }, selectedKey.bitLength), /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-md-4 col-xl-3 mb-2 text-nowrap"
    }, router_map.keygrid_key_fingerprint), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-md-8 col-xl-9"
    }, router_formatFpr(selectedKey.fingerprint))))))), /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.showExDateModal,
      toggle: () => this.setState(prevState => ({
        showExDateModal: !prevState.showExDateModal
      })),
      size: "medium",
      title: router_map.keydetails_change_exp_date_dialog_title,
      hideFooter: true,
      onHide: this.handleHiddenModal
    }, /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement(router_DatePicker_DatePicker, {
      value: this.state.keyExpirationTime,
      onChange: date => this.handleChange({
        target: {
          id: 'keyExpirationTime',
          value: date
        }
      }),
      placeholder: router_map.keygrid_key_not_expire,
      minDate: tomorrow,
      maxDate: farFuture,
      disabled: false
    })), /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      type: "warning",
      header: router_map.alert_header_warning
    }, router_map.keydetails_change_exp_date_dialog_note), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-6"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-secondary btn-block",
      onClick: () => this.setState({
        showExDateModal: false
      })
    }, router_map.dialog_cancel_btn)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-6"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        action: 'setExDate',
        showExDateModal: false
      }),
      className: "btn btn-primary btn-block"
    }, router_map.dialog_save_btn))))), /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.showPwdModal,
      toggle: () => this.setState(prevState => ({
        showPwdModal: !prevState.showPwdModal
      })),
      size: "small",
      title: router_map.keydetails_change_pwd_dialog_title,
      hideFooter: true,
      onHide: this.handleHiddenModal
    }, /*#__PURE__*/router_external_React_default().createElement("form", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("label", {
      htmlFor: "passwordCurrent"
    }, router_map.keydetails_change_pwd_dialog_old), /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "password",
      onChange: this.handleChange,
      className: `form-control ${this.state.errors.passwordCurrent ? 'is-invalid' : ''} text-monospace`,
      id: "passwordCurrent"
    }), this.state.errors.passwordCurrent && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "invalid-feedback"
    }, router_map.pwd_dialog_wrong_pwd)), /*#__PURE__*/router_external_React_default().createElement(router_DefinePassword, {
      value: this.state.password,
      errors: this.state.errors,
      onChange: this.handleChange,
      disabled: this.state.success
    }), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-6"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-secondary btn-block",
      onClick: () => this.setState({
        showPwdModal: false
      })
    }, router_map.dialog_cancel_btn)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-6"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.validateChangePwd,
      className: "btn btn-primary btn-block"
    }, router_map.dialog_save_btn))))));
  }
}
router_KeyDetails.contextType = router_KeyringOptions;
router_KeyDetails.propTypes = {
  keyDetails: (router_prop_types_default()).object.isRequired,
  onChangeExpDate: (router_prop_types_default()).func,
  onValidateKeyPwd: (router_prop_types_default()).func,
  onChangePwd: (router_prop_types_default()).func
};
;// ./src/app/keyring/components/DefaultKeyButton.js
/**
 * Copyright (C) 2016 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




router_register(['keygrid_default_label', 'key_set_as_default', 'key_default_active_btn_title', 'key_default_disabled_btn_title', 'key_default_inactive_btn_title']);
function router_DefaultKeyButton(props) {
  return /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, props.isDefault ? /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    className: `btn btn-info ${props.className || ''}`,
    disabled: true,
    title: router_map.key_default_active_btn_title
  }, router_map.keygrid_default_label) : props.disabled ? /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    className: `btn btn-secondary ${props.className || ''}`,
    disabled: true,
    title: router_map.key_default_disabled_btn_title
  }, router_map.key_set_as_default) : /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    className: `btn btn-info ${props.className || ''}`,
    onClick: props.onClick,
    title: router_map.key_default_inactive_btn_title
  }, router_map.key_set_as_default));
}
router_DefaultKeyButton.propTypes = {
  className: (router_prop_types_default()).string,
  isDefault: (router_prop_types_default()).bool.isRequired,
  onClick: (router_prop_types_default()).func,
  disabled: (router_prop_types_default()).bool
};
;// ./src/app/keyring/Key.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */
















router_register(['keyring_header', 'key_remove_btn', 'key_export_btn', 'key_revoke_btn', 'key_remove_btn_title', 'key_export_btn_title', 'key_revoke_btn_title', 'key_keyserver_sync', 'key_keyserver_not', 'key_keyserver_mod', 'key_keyserver_upload', 'key_keyserver_update', 'key_keyserver_remove', 'key_keyserver_remove_btn', 'key_keyserver_upload_btn', 'key_keyserver_update_btn', 'key_keyserver_resend_btn', 'key_remove_dialog_title', 'key_export_dialog_title', 'key_revoke_dialog_title', 'key_revoke_dialog_description', 'key_revoke_dialog_confirm', 'key_revoke_dialog_confirm']);
class router_Key extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      loading: true,
      processing: false,
      syncAction: false,
      showDeleteModal: false,
      showExportModal: false,
      showRevokeModal: false,
      action: '',
      exit: false,
      keyDetails: {
        ...props.keyData,
        users: [],
        subkeys: []
      },
      isDefault: props.defaultKeyFpr === props.keyData.fingerprint
    };
    this.handleDelete = this.handleDelete.bind(this);
    this.handleDefaultClick = this.handleDefaultClick.bind(this);
    this.handleRevoke = this.handleRevoke.bind(this);
    this.handleSetExDate = this.handleSetExDate.bind(this);
    this.handleChangePwd = this.handleChangePwd.bind(this);
    this.handleHiddenModal = this.handleHiddenModal.bind(this);
    this.validateKeyPassword = this.validateKeyPassword.bind(this);
    this.handleKeyServerSync = this.handleKeyServerSync.bind(this);
    this.getKeyServerSyncAlert = this.getKeyServerSyncAlert.bind(this);
  }
  componentDidMount() {
    this.getKeyDetails(this.context);
  }
  componentDidUpdate(prevProps) {
    if (this.props.keyData !== prevProps.keyData) {
      this.getKeyDetails(this.context);
    }
  }
  async getKeyDetails({
    keyringId,
    demail
  }) {
    const keyDetails = await router_port.send('getKeyDetails', {
      fingerprint: this.state.keyDetails.fingerprint,
      keyringId
    });
    let keyServerSync = false;
    if (this.state.keyDetails.type === 'private') {
      keyServerSync = await router_port.send('get-keyserver-sync', {
        fingerprint: this.state.keyDetails.fingerprint,
        keyringId
      });
      keyDetails.users = keyDetails.users.map(user => {
        const remote = keyServerSync.userIds[user.email];
        if (typeof remote !== 'undefined') {
          user.remote = true;
          user.verified = remote;
        } else {
          user.remote = false;
        }
        return user;
      });
    }
    this.setState({
      loading: false,
      keyDetails: {
        keyServerSync: demail ? false : keyServerSync,
        ...this.props.keyData,
        ...keyDetails
      }
    });
  }
  handleDefaultClick() {
    this.props.onChangeDefaultKey(this.state.keyDetails.fingerprint);
    this.setState({
      isDefault: true
    });
  }
  handleDelete() {
    this.setState({
      exit: true
    }, () => this.props.onDeleteKey(this.state.keyDetails.fingerprint, this.state.keyDetails.type));
  }
  async validateKeyPassword(password) {
    return router_port.send('validate-key-password', {
      fingerprint: this.state.keyDetails.fingerprint,
      keyringId: this.context.keyringId,
      password
    });
  }
  async handleRevoke() {
    this.setState({
      processing: true
    });
    try {
      await router_port.send('revokeKey', {
        fingerprint: this.state.keyDetails.fingerprint,
        keyringId: this.context.keyringId
      });
      this.props.onKeyringChange();
    } finally {
      this.setState({
        processing: false,
        action: ''
      });
    }
  }
  async handleSetExDate(newExDateISOString) {
    this.setState({
      processing: true
    });
    try {
      await router_port.send('set-key-expiry-date', {
        fingerprint: this.state.keyDetails.fingerprint,
        keyringId: this.context.keyringId,
        newExDateISOString
      });
      this.props.onKeyringChange();
    } catch (e) {
      console.log('Setting new expiry date failed.', e);
    } finally {
      this.setState({
        processing: false
      });
    }
  }
  async handleChangePwd(currentPassword, password) {
    this.setState({
      processing: true
    });
    try {
      await router_port.send('set-key-password', {
        fingerprint: this.state.keyDetails.fingerprint,
        keyringId: this.context.keyringId,
        currentPassword,
        password
      });
      this.props.onKeyringChange();
    } finally {
      this.setState({
        processing: false
      });
    }
  }
  async handleHiddenModal() {
    switch (this.state.action) {
      case 'delete':
        this.handleDelete();
        break;
      case 'revoke':
        await this.handleRevoke();
    }
  }
  async handleKeyServerSync({
    sync
  }) {
    this.setState({
      processing: true
    });
    try {
      let emails = [];
      if (sync === 'update') {
        emails = this.state.keyDetails.users.filter(({
          remote
        }) => remote).map(({
          email
        }) => email);
        sync = true;
      }
      await router_port.send('sync-keyserver', {
        emails,
        fingerprint: this.state.keyDetails.fingerprint,
        keyringId: this.context.keyringId,
        sync
      });
    } catch (e) {
      /* e.g. keyserver not available */
      console.log(e);
    }
    this.setState(prevState => ({
      syncAction: sync ? prevState.keyDetails.keyServerSync.status ? 'update' : 'upload' : 'remove',
      processing: false
    }));
  }
  getKeyServerSyncAlert() {
    let data;
    if (!this.state.syncAction) {
      switch (this.state.keyDetails.keyServerSync.status) {
        case 'sync':
          data = {
            type: 'success',
            text: router_map.key_keyserver_sync
          };
          break;
        case 'mod':
          data = {
            type: 'warning',
            text: router_map.key_keyserver_mod,
            btnText: router_map.key_keyserver_update_btn,
            handler: {
              sync: 'update'
            }
          };
          break;
        default:
          data = {
            type: 'danger',
            text: router_map.key_keyserver_not,
            btnText: router_map.key_keyserver_upload_btn,
            handler: {
              sync: true
            }
          };
      }
    } else {
      switch (this.state.syncAction) {
        case 'upload':
          data = {
            type: 'warning',
            text: router_map.key_keyserver_upload,
            btnText: router_map.key_keyserver_resend_btn,
            handler: {
              sync: true
            }
          };
          break;
        case 'update':
          data = {
            type: 'warning',
            text: router_map.key_keyserver_update
          };
          break;
        case 'remove':
          data = {
            type: 'warning',
            text: router_map.key_keyserver_remove,
            btnText: router_map.key_keyserver_resend_btn,
            handler: {
              sync: false
            }
          };
          break;
      }
    }
    return /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      type: data.type,
      className: "mb-3"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "flex-shrink-1 mr-4"
    }, data.text), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar flex-md-shrink-0 flex-grow-1"
    }, this.state.keyDetails.validity && data.btnText && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.handleKeyServerSync(data.handler),
      className: "btn btn-secondary mb-md-0"
    }, data.btnText), this.state.keyDetails.keyServerSync.status && !this.state.syncAction && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.handleKeyServerSync({
        sync: false
      }),
      className: "btn btn-secondary mb-md-0"
    }, router_map.key_keyserver_remove_btn))));
  }
  render() {
    if (this.state.exit) {
      return /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: "/keyring"
      });
    }
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-body key"
    }, /*#__PURE__*/router_external_React_default().createElement("nav", {
      "aria-label": "breadcrumb"
    }, /*#__PURE__*/router_external_React_default().createElement("ol", {
      className: "breadcrumb bg-transparent p-0"
    }, /*#__PURE__*/router_external_React_default().createElement("li", {
      className: "breadcrumb-item"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      to: "/keyring",
      onClick: this.props.onKeyringChange,
      replace: true,
      tabIndex: "0"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-left",
      "aria-hidden": "true"
    }), " ", router_map.keyring_header)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-title d-flex align-items-center justify-content-between flex-wrap"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "d-inline-flex align-items-center"
    }, this.state.keyDetails.name, " ", /*#__PURE__*/router_external_React_default().createElement(router_KeyStatus, {
      className: "small ml-2",
      status: this.state.keyDetails.status
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar"
    }, (!this.context.gnupg || this.state.keyDetails.type === 'public') && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        showDeleteModal: true
      }),
      className: "btn btn-secondary",
      title: router_map.key_remove_btn_title
    }, router_map.key_remove_btn), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        showExportModal: true
      }),
      className: "btn btn-secondary",
      title: router_map.key_export_btn_title
    }, router_map.key_export_btn), !this.context.gnupg && this.state.keyDetails.type !== 'public' && /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        showRevokeModal: true
      }),
      className: "btn btn-secondary",
      disabled: !this.state.keyDetails.validity,
      title: router_map.key_revoke_btn_title
    }, router_map.key_revoke_btn), /*#__PURE__*/router_external_React_default().createElement(router_DefaultKeyButton, {
      onClick: this.handleDefaultClick,
      isDefault: this.state.isDefault,
      disabled: !this.state.keyDetails.validDefaultKey
    })))), this.state.loading ? /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0
    }) : /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement(router_KeyUsers_KeyUsers, {
      className: "mb-3",
      keyFpr: this.props.match.params.keyFpr,
      keyType: this.state.keyDetails.type,
      keyValidity: this.state.keyDetails.validity,
      users: this.state.keyDetails.users,
      onChangePrimaryUser: userIdx => this.handleSetPrimaryUser(userIdx)
    }), this.state.keyDetails.keyServerSync && this.getKeyServerSyncAlert(), /*#__PURE__*/router_external_React_default().createElement(router_KeyDetails, {
      keyDetails: this.state.keyDetails,
      onChangeExpDate: this.handleSetExDate,
      onValidateKeyPwd: this.validateKeyPassword,
      onChangePwd: this.handleChangePwd
    })), /*#__PURE__*/router_external_React_default().createElement(router_SimpleDialog, {
      isOpen: this.state.showDeleteModal,
      toggle: () => this.setState(prevState => ({
        showDeleteModal: !prevState.showDeleteModal
      })),
      onHide: this.handleHiddenModal,
      title: router_map.key_remove_dialog_title,
      message: router_map.keygrid_delete_confirmation,
      onOk: () => this.setState({
        action: 'delete',
        showDeleteModal: false
      }),
      onCancel: () => this.setState({
        showDeleteModal: false
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_SimpleDialog, {
      isOpen: this.state.showRevokeModal,
      toggle: () => this.setState(prevState => ({
        showRevokeModal: !prevState.showRevokeModal
      })),
      onHide: this.handleHiddenModal,
      title: router_map.key_revoke_dialog_title,
      onOk: () => this.setState({
        action: 'revoke',
        showRevokeModal: false
      }),
      onCancel: () => this.setState({
        showRevokeModal: false
      })
    }, /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.key_revoke_dialog_description), /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement("strong", null, router_map.key_revoke_dialog_confirm))), /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.showExportModal,
      toggle: () => this.setState(prevState => ({
        showExportModal: !prevState.showExportModal
      })),
      size: "medium",
      title: router_map.key_export_dialog_title,
      hideFooter: true
    }, /*#__PURE__*/router_external_React_default().createElement(router_KeyExport, {
      keyringId: this.context.keyringId,
      keyFprs: [this.state.keyDetails.fingerprint],
      keyName: this.state.keyDetails.name,
      publicOnly: this.context.gnupg,
      onClose: () => this.setState({
        showExportModal: false
      })
    })), this.state.processing && /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      fullscreen: true,
      delay: 0
    }));
  }
}
router_Key.contextType = router_KeyringOptions;
router_Key.propTypes = {
  keyData: (router_prop_types_default()).object,
  getKeyDetails: (router_prop_types_default()).func,
  defaultKeyFpr: (router_prop_types_default()).string,
  onChangeDefaultKey: (router_prop_types_default()).func,
  onKeyringChange: (router_prop_types_default()).func,
  onDeleteKey: (router_prop_types_default()).func,
  match: (router_prop_types_default()).object
};
;// ./src/app/keyring/components/NameAddrInput.js
/**
 * Copyright (C) 2016-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['keygrid_user_name', 'key_gen_name_help', 'keygrid_user_email', 'key_gen_invalid_email', 'key_gen_demail', 'nameaddrinput_error_name_empty', 'nameaddrinput_error_email_exists']);
function router_NameAddrInput({
  name,
  email,
  onChange,
  disabled,
  errors = {}
}) {
  return /*#__PURE__*/router_external_React_default().createElement(router_KeyringOptions.Consumer, null, ({
    demail
  }) => /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "form-group"
  }, /*#__PURE__*/router_external_React_default().createElement("label", {
    htmlFor: "name"
  }, router_map.keygrid_user_name), /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "text",
    value: name,
    className: `form-control ${errors.name ? 'is-invalid' : ''}`,
    id: "name",
    onChange: onChange,
    disabled: disabled,
    "aria-describedby": "nameHelpBlock"
  }), errors.name ? /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "invalid-feedback"
  }, router_map.nameaddrinput_error_name_empty) : /*#__PURE__*/router_external_React_default().createElement("small", {
    id: "nameHelpBlock",
    className: "form-text text-muted"
  }, router_map.key_gen_name_help)), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "form-group"
  }, /*#__PURE__*/router_external_React_default().createElement("label", {
    htmlFor: "email"
  }, demail ? router_map.key_gen_demail : router_map.keygrid_user_email), /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "text",
    value: email,
    className: `form-control ${errors.email ? 'is-invalid' : ''}`,
    id: "email",
    onChange: onChange,
    disabled: disabled || demail
  }), errors.email && /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "invalid-feedback"
  }, errors.email && errors.email.exists ? router_map.nameaddrinput_error_email_exists : router_map.key_gen_invalid_email))));
}
router_NameAddrInput.propTypes = {
  name: (router_prop_types_default()).string,
  email: (router_prop_types_default()).string,
  onChange: (router_prop_types_default()).func.isRequired,
  disabled: (router_prop_types_default()).bool,
  errors: (router_prop_types_default()).object
};
;// ./src/app/keyring/components/UserSignatures.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['usersignatures_title', 'keygrid_user_name', 'keygrid_user_email', 'keygrid_creation_date_short', 'keygrid_keyid', 'keygrid_signer_unknown']);
function router_UserSignatures({
  signatures
}) {
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "userSignatures"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card card-clean-table"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-header"
  }, /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.usersignatures_title)), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "table-responsive"
  }, /*#__PURE__*/router_external_React_default().createElement("table", {
    className: "table table-custom mb-0"
  }, /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_name), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_email), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_creation_date_short), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_keyid))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, signatures.map((signature, index) => /*#__PURE__*/router_external_React_default().createElement("tr", {
    key: index
  }, /*#__PURE__*/router_external_React_default().createElement("td", null, signature.signer.name !== null ? signature.signer.name : router_map.keygrid_signer_unknown), /*#__PURE__*/router_external_React_default().createElement("td", null, signature.signer.email !== null ? signature.signer.email : router_map.keygrid_signer_unknown), /*#__PURE__*/router_external_React_default().createElement("td", null, router_formatDateWithLocale(signature.crDate)), /*#__PURE__*/router_external_React_default().createElement("td", null, signature.keyId))))))));
}
router_UserSignatures.propTypes = {
  signatures: (router_prop_types_default()).array
};
;// ./src/app/keyring/User.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */















router_register(['alert_header_warning', 'key_keyserver_resend_btn', 'key_keyserver_upload_btn', 'keydetails_creation_date', 'keydetails_expiration_date', 'keygrid_user_email', 'keygrid_user_name', 'keygrid_validity_status', 'user_create_btn', 'user_create_title', 'user_keyserver_not', 'user_keyserver_remove_btn', 'user_keyserver_resend_confirmation_btn', 'user_keyserver_sync', 'user_keyserver_unverified', 'user_remove_btn', 'user_remove_btn_title', 'user_remove_dialog_confirmation', 'user_remove_dialog_keyserver_warning', 'user_remove_dialog_title', 'user_revoke_btn', 'user_revoke_btn_title', 'user_revoke_dialog_confirmation', 'user_revoke_dialog_description', 'user_revoke_dialog_title', 'user_title']);
class router_User extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      loading: true,
      processing: false,
      syncAction: false,
      showDetails: false,
      exit: false,
      showDeleteModal: false,
      showRevokeModal: false,
      action: '',
      errors: {},
      userEmails: [],
      user: {
        name: '',
        email: ''
      },
      keyDetails: {
        ...props.keyData
      }
    };
    this.handleDelete = this.handleDelete.bind(this);
    this.handleChange = this.handleChange.bind(this);
    this.handleAdd = this.handleAdd.bind(this);
    this.handleRevoke = this.handleRevoke.bind(this);
    this.handleHiddenModal = this.handleHiddenModal.bind(this);
    this.handleKeyServerSync = this.handleKeyServerSync.bind(this);
  }
  componentDidMount() {
    this.getKeyDetails(this.context);
  }
  componentDidUpdate(prevProps) {
    if (this.props.keyData !== prevProps.keyData) {
      this.getKeyDetails(this.context);
    }
  }
  async getKeyDetails({
    keyringId
  }) {
    let user;
    let allowToRemove = false;
    let allowToRevoke = false;
    const keyDetails = await router_port.send('getKeyDetails', {
      fingerprint: this.state.keyDetails.fingerprint,
      keyringId
    });
    if (this.props.match.params.userIdx !== 'add') {
      const {
        signatures,
        userId,
        name,
        email,
        status
      } = keyDetails.users.find(user => user.id == this.props.match.params.userIdx);
      allowToRemove = (keyDetails.users.filter(user => user.status === router_PGP_KEYSTATUS_VALID).length > 1 || status < router_PGP_KEYSTATUS_VALID) && this.state.keyDetails.status === router_PGP_KEYSTATUS_VALID;
      allowToRevoke = keyDetails.users.filter(user => user.status === router_PGP_KEYSTATUS_VALID).length > 1 && status === router_PGP_KEYSTATUS_VALID;
      user = {
        signatures,
        userId,
        name,
        email,
        status
      };
      if (this.state.keyDetails.type === 'private') {
        const keyServerSync = await router_port.send('get-keyserver-sync', {
          fingerprint: this.state.keyDetails.fingerprint,
          keyringId
        });
        const userIdRemoteStatus = keyServerSync.userIds[user.email];
        if (typeof userIdRemoteStatus !== 'undefined') {
          user.remote = true;
          user.verified = userIdRemoteStatus;
        } else {
          user.remote = false;
        }
      }
    }
    this.setState(prevState => ({
      allowToRemove,
      allowToRevoke,
      loading: false,
      userEmails: keyDetails.users.map(user => user.email),
      user: user ? user : prevState.user,
      keyDetails: {
        ...prevState.keyDetails
      }
    }));
  }
  handleChange(event) {
    const target = event.target;
    this.setState(({
      errors: err,
      user
    }) => {
      const {
        [target.id]: deleted,
        ...errors
      } = err;
      return {
        user: {
          ...user,
          [target.id]: target.value
        },
        errors
      };
    });
  }
  async handleAdd() {
    const errors = {};
    if (this.state.user.name.trim() === '') {
      errors.name = new Error();
    }
    const validEmail = router_checkEmail(this.state.user.email);
    if (!validEmail) {
      errors.email = {
        invalid: new Error()
      };
    } else {
      if (this.state.userEmails.includes(this.state.user.email)) {
        errors.email = {
          exists: new Error()
        };
      }
    }
    if (Object.keys(errors).length) {
      this.setState({
        errors
      });
      return;
    }
    this.setState({
      processing: true
    });
    try {
      await router_port.send('add-user', {
        fingerprint: this.state.keyDetails.fingerprint,
        user: this.state.user,
        keyringId: this.context.keyringId
      });
      this.setState({
        exit: true
      }, () => this.props.onKeyringChange());
    } catch (error) {
      if (error.code !== 'PWD_DIALOG_CANCEL') {
        throw error;
      }
      this.setState({
        processing: false
      });
    }
  }
  async handleDelete() {
    this.setState({
      processing: true
    });
    try {
      await router_port.send('remove-user', {
        fingerprint: this.state.keyDetails.fingerprint,
        userId: this.state.user.userId,
        keyringId: this.context.keyringId
      });
      if (this.state.user.remote) {
        await this.handleKeyServerSync({
          sync: false
        });
      }
      this.setState({
        exit: true
      }, () => this.props.onKeyringChange());
    } catch (e) {
      this.setState({
        processing: false
      });
      throw e;
    }
  }
  async handleRevoke() {
    this.setState({
      processing: true
    });
    try {
      await router_port.send('revoke-user', {
        fingerprint: this.state.keyDetails.fingerprint,
        userId: this.state.user.userId,
        keyringId: this.context.keyringId
      });
      this.props.onKeyringChange();
    } catch (error) {
      if (error.code !== 'PWD_DIALOG_CANCEL') {
        throw error;
      }
    } finally {
      this.setState({
        processing: false
      });
    }
  }
  async handleHiddenModal() {
    switch (this.state.action) {
      case 'delete':
        await this.handleDelete();
        break;
      case 'revoke':
        await this.handleRevoke();
    }
  }
  async handleKeyServerSync({
    sync
  }) {
    this.setState({
      processing: true
    });
    try {
      await router_port.send('sync-keyserver', {
        emails: [this.state.user.email],
        fingerprint: this.state.keyDetails.fingerprint,
        keyringId: this.context.keyringId,
        sync
      });
    } catch (e) {
      // e.g. keyserver not available
      console.log(e);
    }
    this.setState({
      syncAction: sync ? 'upload' : 'remove',
      processing: false
    });
  }
  getKeyServerSyncAlert() {
    let data;
    if (!this.state.syncAction) {
      if (this.state.user.remote) {
        if (this.state.user.verified) {
          data = {
            type: 'success',
            text: router_map.user_keyserver_sync
          };
        } else {
          data = {
            type: 'warning',
            text: router_map.user_keyserver_unverified,
            btnText: router_map.user_keyserver_resend_confirmation_btn,
            handler: {
              sync: true
            }
          };
        }
      } else {
        data = {
          type: 'danger',
          text: router_map.user_keyserver_not,
          btnText: router_map.key_keyserver_upload_btn,
          handler: {
            sync: true
          }
        };
      }
    } else {
      if (this.state.syncAction === 'upload') {
        data = {
          type: 'warning',
          text: router_get('user_keyserver_upload', this.state.user.email),
          btnText: router_map.key_keyserver_resend_btn,
          handler: {
            sync: true
          }
        };
      } else {
        data = {
          type: 'warning',
          text: router_get('user_keyserver_remove', this.state.user.email),
          btnText: router_map.key_keyserver_resend_btn,
          handler: {
            sync: false
          }
        };
      }
    }
    return /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      type: data.type
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "flex-shrink-1 mr-4"
    }, data.text), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar flex-md-shrink-0 flex-grow-1"
    }, this.state.keyDetails.validity && data.btnText && (this.state.user.remote || this.state.user.status === router_PGP_KEYSTATUS_VALID) && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.handleKeyServerSync(data.handler),
      className: "btn btn-secondary mb-md-0"
    }, data.btnText), this.state.user.remote && !this.state.syncAction && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.handleKeyServerSync({
        sync: false
      }),
      className: "btn btn-secondary mb-md-0"
    }, router_map.user_keyserver_remove_btn))));
  }
  render() {
    if (this.state.exit) {
      return /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: `/keyring/key/${this.props.match.params.keyFpr}`
      });
    }
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-body user"
    }, /*#__PURE__*/router_external_React_default().createElement("nav", {
      "aria-label": "breadcrumb"
    }, /*#__PURE__*/router_external_React_default().createElement("ol", {
      className: "breadcrumb bg-transparent p-0"
    }, /*#__PURE__*/router_external_React_default().createElement("li", {
      className: "breadcrumb-item"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      to: `/keyring/key/${this.props.match.params.keyFpr}`,
      replace: true,
      tabIndex: "0"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-left",
      "aria-hidden": "true"
    }), " ", this.state.keyDetails.name)))), this.state.loading ? /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0
    }) : /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-title d-flex align-items-center justify-content-between flex-wrap"
    }, this.props.match.params.userIdx !== 'add' ? /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "d-inline-flex align-items-center"
    }, router_map.user_title, " ", /*#__PURE__*/router_external_React_default().createElement(router_KeyStatus, {
      className: "small ml-2",
      status: this.state.user.status
    })) : /*#__PURE__*/router_external_React_default().createElement("h2", null, router_map.user_create_title), this.state.keyDetails.type !== 'public' && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar"
    }, this.props.match.params.userIdx === 'add' && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.handleAdd,
      className: "btn btn-secondary"
    }, router_map.user_create_btn), !this.context.gnupg && this.props.match.params.userIdx !== 'add' && /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        showDeleteModal: true
      }),
      className: "btn btn-secondary",
      disabled: !this.state.allowToRemove,
      title: router_map.user_remove_btn_title
    }, router_map.user_remove_btn), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        showRevokeModal: true
      }),
      className: "btn btn-secondary",
      disabled: !this.state.allowToRevoke,
      title: router_map.user_revoke_btn_title
    }, router_map.user_revoke_btn)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-6"
    }, this.props.match.params.userIdx === 'add' ? /*#__PURE__*/router_external_React_default().createElement("form", null, /*#__PURE__*/router_external_React_default().createElement(router_NameAddrInput, {
      name: this.state.user.name || '',
      email: this.state.user.email || '',
      onChange: this.handleChange,
      errors: this.state.errors
    })) : /*#__PURE__*/router_external_React_default().createElement("dl", {
      className: "row d-flex align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-sm-3 mb-2"
    }, router_map.keygrid_user_name), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-sm-9"
    }, this.state.user.name), /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-sm-3 mb-2"
    }, router_map.keygrid_user_email), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-sm-9"
    }, this.state.user.email)))), this.props.match.params.userIdx !== 'add' && this.state.keyDetails.type !== 'public' && this.getKeyServerSyncAlert(), this.state.user.signatures && /*#__PURE__*/router_external_React_default().createElement(router_UserSignatures, {
      signatures: this.state.user.signatures
    })), this.state.processing && /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      fullscreen: true,
      delay: 0
    }), /*#__PURE__*/router_external_React_default().createElement(router_SimpleDialog, {
      isOpen: this.state.showDeleteModal,
      toggle: () => this.setState(prevState => ({
        showDeleteModal: !prevState.showDeleteModal
      })),
      onHide: this.handleHiddenModal,
      title: router_map.user_remove_dialog_title,
      onOk: () => this.setState({
        action: 'delete',
        showDeleteModal: false
      }),
      onCancel: () => this.setState({
        showDeleteModal: false
      })
    }, /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.user_remove_dialog_confirmation), this.state.user.remote && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      type: "warning",
      header: router_map.alert_header_warning
    }, router_map.user_remove_dialog_keyserver_warning)), /*#__PURE__*/router_external_React_default().createElement(router_SimpleDialog, {
      isOpen: this.state.showRevokeModal,
      toggle: () => this.setState(prevState => ({
        showRevokeModal: !prevState.showRevokeModal
      })),
      onHide: this.handleHiddenModal,
      title: router_map.user_revoke_dialog_title,
      onOk: () => this.setState({
        action: 'revoke',
        showRevokeModal: false
      }),
      onCancel: () => this.setState({
        showRevokeModal: false
      })
    }, /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.user_revoke_dialog_description), /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement("strong", null, router_map.user_revoke_dialog_confirmation))));
  }
}
router_User.contextType = router_KeyringOptions;
router_User.propTypes = {
  onKeyringChange: (router_prop_types_default()).func,
  keyData: (router_prop_types_default()).object,
  match: (router_prop_types_default()).object
};
;// ./node_modules/reactstrap/es/TabContext.js

/**
 * TabContext
 * {
 *  activeTabId: PropTypes.any
 * }
 */

var router_TabContext = /*#__PURE__*/router_external_React_default().createContext({});
;// ./node_modules/reactstrap/es/TabContent.js







var router_TabContent_propTypes = {
  tag: router_tagPropType,
  activeTab: (router_prop_types_default()).any,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object
};
var router_TabContent_defaultProps = {
  tag: 'div'
};

var router_TabContent = /*#__PURE__*/function (_Component) {
  router_inheritsLoose(TabContent, _Component);

  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if (prevState.activeTab !== nextProps.activeTab) {
      return {
        activeTab: nextProps.activeTab
      };
    }

    return null;
  };

  function TabContent(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      activeTab: _this.props.activeTab
    };
    return _this;
  }

  var _proto = TabContent.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        className = _this$props.className,
        cssModule = _this$props.cssModule,
        Tag = _this$props.tag;
    var attributes = router_omit(this.props, Object.keys(router_TabContent_propTypes));
    var classes = router_mapToCssModules(router_classnames_default()('tab-content', className), cssModule);
    return /*#__PURE__*/router_external_React_default().createElement(router_TabContext.Provider, {
      value: {
        activeTabId: this.state.activeTab
      }
    }, /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, attributes, {
      className: classes
    })));
  };

  return TabContent;
}(router_external_React_.Component);

/* harmony default export */ const router_es_TabContent = (router_TabContent);
router_TabContent.propTypes = router_TabContent_propTypes;
router_TabContent.defaultProps = router_TabContent_defaultProps;
;// ./node_modules/reactstrap/es/TabPane.js


var router_TabPane_excluded = ["className", "cssModule", "tabId", "tag"];





var router_TabPane_propTypes = {
  tag: router_tagPropType,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  tabId: (router_prop_types_default()).any
};
var router_TabPane_defaultProps = {
  tag: 'div'
};
function router_TabPane(props) {
  var className = props.className,
      cssModule = props.cssModule,
      tabId = props.tabId,
      Tag = props.tag,
      attributes = router_objectWithoutPropertiesLoose(props, router_TabPane_excluded);

  var getClasses = function getClasses(activeTabId) {
    return router_mapToCssModules(router_classnames_default()('tab-pane', className, {
      active: tabId === activeTabId
    }), cssModule);
  };

  return /*#__PURE__*/router_external_React_default().createElement(router_TabContext.Consumer, null, function (_ref) {
    var activeTabId = _ref.activeTabId;
    return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, attributes, {
      className: getClasses(activeTabId)
    }));
  });
}
router_TabPane.propTypes = router_TabPane_propTypes;
router_TabPane.defaultProps = router_TabPane_defaultProps;
;// ./src/lib/file.js
/**
 * Copyright (C) 2016 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




/**
 * @param {File} file
 * @param {Number} file.size
 * @returns {boolean}
 */
function router_isOversize(file) {
  return file.size >= router_MAX_FILE_UPLOAD_SIZE;
}

/**
 * @param {File} file
 * @param {Number} file.lastModified
 * @param {Date} file.lastModifiedDate
 * @param {String} file.name
 * @param {Number} file.size
 * @param {String} file.type
 * @param {String} file.webkitRelativePath
 * @param {Funtion} onLoadEnd
 * @returns {Promise<Object, Error>}
 */
function router_readUploadFile(file, onLoadEnd) {
  return new Promise((resolve, reject) => {
    const fileReader = new FileReader();
    fileReader.onload = function () {
      resolve({
        content: this.result,
        id: router_getUUID(),
        name: file.name,
        size: file.size,
        type: file.type
      });
    };
    fileReader.onloadend = onLoadEnd;
    fileReader.onabort = function (evt) {
      reject(evt);
    };
    fileReader.readAsDataURL(file);
  });
}
function router_extractFileNameWithoutExt(fileName) {
  const indexOfDot = fileName.lastIndexOf('.');
  if (indexOfDot > 0) {
    // case: regular
    return fileName.substring(0, indexOfDot);
  } else {
    return fileName;
  }
}
function router_extractFileExtension(fileName) {
  const lastindexDot = fileName.lastIndexOf('.');
  if (lastindexDot <= 0) {
    // no extension
    return '';
  } else {
    return fileName.substring(lastindexDot + 1, fileName.length).toLowerCase().trim();
  }
}
class router_FileUpload {
  constructor() {
    // flag to monitor upload-in-progress status
    this.numUploadsInProgress = 0;
    // buffer for actions after upload finished
    this.actions = null;
  }
  readFile(file) {
    this.numUploadsInProgress++;
    return router_readUploadFile(file, this.onLoadEnd).catch(error => {
      this.onLoadEnd();
      throw error;
    });
  }
  inProgress() {
    return this.actions !== null;
  }
  registerAction(fn) {
    if (typeof fn !== 'function') {
      throw new Error('Wrong parameter type, register only functions as actions');
    }
    this.action = fn;
  }
  onLoadEnd() {
    this.numUploadsInProgress--;
    if (this.numUploadsInProgress === 0 && this.actions) {
      this.action();
      this.action = null;
    }
  }
}
;// ./src/app/keyring/components/KeySearch.js
/**
 * Copyright (C) 2016 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */








router_register(['change_link', 'key_import_search_btn', 'key_import_search_disabled', 'key_import_search_disabled_descr', 'key_import_search_invalid', 'key_import_search_not_found', 'key_import_search_not_found_header', 'key_import_search_ph', 'settings_keyserver']);
const router_KEY_ID_REGEX = /^(0x)?([0-9a-f]{16})$/;
const router_FINGERPRINT_REGEX = /^(0x)?([0-9a-f]{40})$/;
function router_KeySearch(props) {
  const [query, setQuery] = (0,router_external_React_.useState)('');
  const [invalid, setInvalid] = (0,router_external_React_.useState)(false);
  const [notFound, setNotFound] = (0,router_external_React_.useState)(false);
  function handleInputChange(event) {
    setQuery(event.target.value);
    setInvalid(false);
    setNotFound(false);
  }
  async function handleKeySearch(event) {
    event.preventDefault();
    let search = query.replaceAll(/\s/g, '').toLowerCase();
    setQuery(search);
    if (router_checkEmail(search)) {
      search = {
        email: search
      };
    } else if (router_KEY_ID_REGEX.test(search)) {
      search = {
        keyId: search
      };
    } else if (router_FINGERPRINT_REGEX.test(search)) {
      search = {
        fingerprint: search
      };
    } else {
      setInvalid(true);
      return;
    }
    const key = await router_port.send('key-lookup', {
      query: search,
      latest: true,
      externalOnly: true
    });
    if (!key) {
      setNotFound(true);
      return;
    }
    props.onKeyFound(key);
  }
  const noKeySource = props.sourceLabels.length === 0;
  return /*#__PURE__*/router_external_React_default().createElement("form", {
    onSubmit: handleKeySearch
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "form-group"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "input-group"
  }, /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "text",
    className: `form-control ${invalid || notFound ? 'is-invalid' : ''}`,
    value: query,
    placeholder: router_map.key_import_search_ph,
    "aria-describedby": "keySearchInputHelpBlock",
    onChange: handleInputChange,
    autoFocus: true,
    disabled: noKeySource
  }), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "input-group-append"
  }, /*#__PURE__*/router_external_React_default().createElement("button", {
    className: "btn btn-primary",
    type: "submit",
    disabled: noKeySource
  }, router_map.key_import_search_btn))), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: invalid ? 'invalid-feedback d-block' : 'd-none'
  }, router_map.key_import_search_invalid)), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "form-group"
  }, notFound && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
    header: router_map.key_import_search_not_found_header,
    type: "danger",
    className: "mb-0"
  }, router_map.key_import_search_not_found)), /*#__PURE__*/router_external_React_default().createElement("div", {
    id: "keySearchInputHelpBlock",
    className: "form-text text-muted"
  }, /*#__PURE__*/router_external_React_default().createElement("u", null, router_map.settings_keyserver), " ", /*#__PURE__*/router_external_React_default().createElement("small", null, "(", /*#__PURE__*/router_external_React_default().createElement(router_Link, {
    to: "/settings/key-server"
  }, /*#__PURE__*/router_external_React_default().createElement("em", null, router_map.change_link)), ")"), /*#__PURE__*/router_external_React_default().createElement("ul", {
    className: "mb-0"
  }, props.sourceLabels.map((source, index) => /*#__PURE__*/router_external_React_default().createElement("li", {
    key: index
  }, /*#__PURE__*/router_external_React_default().createElement("a", {
    target: "_blank",
    rel: "noopener noreferrer",
    href: source.url
  }, source.label))), noKeySource && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
    header: router_map.key_import_search_disabled,
    type: "warning",
    className: "mb-0"
  }, router_map.key_import_search_disabled_descr))));
}
router_KeySearch.propTypes = {
  onKeyFound: (router_prop_types_default()).func.isRequired,
  sourceLabels: (router_prop_types_default()).array.isRequired
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/util/FilePanel.scss
var router_FilePanel = __webpack_require__(5465);
;// ./src/components/util/FilePanel.scss

      
      
      
      
      
      
      
      
      

var router_FilePanel_options = {};

router_FilePanel_options.styleTagTransform = (router_styleTagTransform_default());
router_FilePanel_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_FilePanel_options.insert = router_insertBySelector_default().bind(null, "head");
router_FilePanel_options.domAPI = (router_styleDomAPI_default());
router_FilePanel_options.insertStyleElement = (router_insertStyleElement_default());

var router_FilePanel_update = router_injectStylesIntoStyleTag_default()(router_FilePanel/* default */.A, router_FilePanel_options);




       /* harmony default export */ const router_util_FilePanel = (router_FilePanel/* default */.A && router_FilePanel/* default */.A.locals ? router_FilePanel/* default */.A.locals : undefined);

;// ./src/components/util/FilePanel.js
/**
 * Copyright (C) 2017-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */







router_register(['decrypt_open_viewer_btn_title', 'editor_remove_upload', 'file_invalid_signed', 'file_not_signed', 'file_signed', 'key_export_dialog_copy_to_clipboard']);
class router_FileUploadPanel extends (router_external_React_default()).Component {
  componentDidUpdate(prevProps) {
    if (this.props.files !== prevProps.files) {
      this.panel.scrollIntoView(false);
    }
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "file-panel d-flex flex-wrap align-items-center",
      ref: node => this.panel = node
    }, this.props.files.map(file => /*#__PURE__*/router_external_React_default().createElement(router_FileUploadElement, {
      key: file.id,
      file: file,
      onRemove: this.props.onRemoveFile
    })));
  }
}
router_FileUploadPanel.propTypes = {
  files: (router_prop_types_default()).array,
  onRemoveFile: (router_prop_types_default()).func
};
function router_FileUploadElement({
  file,
  onRemove
}) {
  const fileExt = router_extractFileExtension(file.name);
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "file-element",
    id: file.id,
    title: file.name
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "file-header"
  }, (fileExt === 'asc' || fileExt === 'gpg') && /*#__PURE__*/router_external_React_default().createElement("img", {
    src: "../../img/Mailvelope/logo_signet.svg",
    width: "28",
    height: "28"
  }), fileExt && /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "file-extension"
  }, fileExt), /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "file-name"
  }, router_extractFileNameWithoutExt(file.name)), onRemove && /*#__PURE__*/router_external_React_default().createElement("span", {
    title: router_map.editor_remove_upload,
    className: "icon icon-close",
    onClick: () => onRemove(file.id)
  })));
}
router_FileUploadElement.propTypes = {
  file: (router_prop_types_default()).object,
  // {id, name}
  secureIcon: (router_prop_types_default()).bool,
  onRemove: (router_prop_types_default()).func
};
function router_FileDownloadPanel(props) {
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: `file-panel ${props.className || 'd-flex flex-wrap align-items-center'}`
  }, props.files.map(file => /*#__PURE__*/router_external_React_default().createElement(router_FileDownloadElement, {
    key: file.id,
    file: file,
    onClick: props.onClickFile,
    onCopyToClipboard: props.onCopyToClipboard
  })));
}
router_FileDownloadPanel.propTypes = {
  className: (router_prop_types_default()).string,
  files: (router_prop_types_default()).array,
  // {id, name}
  onClickFile: (router_prop_types_default()).func,
  onCopyToClipboard: (router_prop_types_default()).func
};
function router_FileDownloadElement({
  file,
  onClick,
  onCopyToClipboard
}) {
  const fileExt = router_extractFileExtension(file.name);
  const fileName = router_extractFileNameWithoutExt(file.name);
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "file-element"
  }, /*#__PURE__*/router_external_React_default().createElement("a", {
    className: "file-header",
    onClick: onClick,
    title: file.name,
    download: file.name,
    href: file.objectURL || '#'
  }, (fileExt === 'asc' || fileExt === 'gpg' || fileExt === 'pgp') && /*#__PURE__*/router_external_React_default().createElement("img", {
    src: "../../img/Mailvelope/logo_signet.svg",
    width: "28",
    height: "28"
  }), /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "file-extension"
  }, fileExt), /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "file-name"
  }, fileName), file.objectURL && /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "icon icon-download"
  }), file.onShowPopup && /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    className: "icon-btn ml-1",
    title: router_map.decrypt_open_viewer_btn_title,
    onClick: e => {
      e.preventDefault();
      file.onShowPopup();
    }
  }, /*#__PURE__*/router_external_React_default().createElement("img", {
    src: "../../img/Mailvelope/logo_signet.svg",
    width: "14",
    height: "14"
  })), file.content && /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    className: "icon-btn ml-1",
    title: router_map.key_export_dialog_copy_to_clipboard,
    onClick: e => {
      e.preventDefault();
      onCopyToClipboard(file.content);
    }
  }, /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "icon icon-copy"
  }))), file.content && /*#__PURE__*/router_external_React_default().createElement("textarea", {
    className: "form-control",
    value: file.content,
    rows: 6,
    spellCheck: "false",
    autoComplete: "off",
    readOnly: true
  }), file.signer && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
    className: "mt-2 mb-0 align-self-start",
    type: file.signer.type
  }, file.signer.label));
}
router_FileDownloadElement.propTypes = {
  file: (router_prop_types_default()).object,
  // {id, name, objectURL}
  onClick: (router_prop_types_default()).func,
  onCopyToClipboard: (router_prop_types_default()).func
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/util/FileUpload.scss
var router_util_FileUpload = __webpack_require__(380);
;// ./src/components/util/FileUpload.scss

      
      
      
      
      
      
      
      
      

var router_FileUpload_options = {};

router_FileUpload_options.styleTagTransform = (router_styleTagTransform_default());
router_FileUpload_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_FileUpload_options.insert = router_insertBySelector_default().bind(null, "head");
router_FileUpload_options.domAPI = (router_styleDomAPI_default());
router_FileUpload_options.insertStyleElement = (router_insertStyleElement_default());

var router_FileUpload_update = router_injectStylesIntoStyleTag_default()(router_util_FileUpload/* default */.A, router_FileUpload_options);




       /* harmony default export */ const router_components_util_FileUpload = (router_util_FileUpload/* default */.A && router_util_FileUpload/* default */.A.locals ? router_util_FileUpload/* default */.A.locals : undefined);

;// ./src/components/util/FileUpload.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */






router_register(['upload_help', 'upload_attachment', 'upload_drop']);
class router_FileUpload_FileUpload extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      dragging: false
    };
    this.handleClickUpload = this.handleClickUpload.bind(this);
    this.handleDragEnter = this.handleDragEnter.bind(this);
    this.handleDragLeave = this.handleDragLeave.bind(this);
    this.handleDrop = this.handleDrop.bind(this);
  }
  componentDidMount() {
    this.dragCounter = 0;
  }
  handleClickUpload() {
    this.fileInput.click();
    if (this.props.onClickUpload) {
      this.props.onClickUpload();
    }
  }
  handleDragEnter(e) {
    e.preventDefault();
    this.dragCounter++;
    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {
      this.setState({
        dragging: true
      });
    }
  }
  handleDragLeave(e) {
    e.preventDefault();
    this.dragCounter--;
    if (this.dragCounter > 0) {
      return;
    }
    this.setState({
      dragging: false
    });
  }
  handleDrop(e) {
    e.preventDefault();
    this.setState({
      dragging: false
    });
    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {
      this.props.onChangeFileInput(e.dataTransfer.files);
      e.dataTransfer.clearData();
      this.dragCounter = 0;
    }
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "fileUpload w-100",
      onDragEnter: this.handleDragEnter,
      onDragLeave: this.handleDragLeave,
      onDragOver: e => e.preventDefault(),
      onDrop: this.handleDrop
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "area d-flex flex-column justify-content-center align-items-center overflow-auto"
    }, this.props.files.length > 0 && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "align-items-start align-self-stretch"
    }, /*#__PURE__*/router_external_React_default().createElement(router_FileUploadPanel, {
      files: this.props.files,
      onRemoveFile: this.props.onRemoveFile
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex justify-content-center align-items-center align-self-stretch"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "text-muted font-italic mr-3"
    }, router_map.upload_help), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.handleClickUpload,
      className: "btn btn-sm btn-secondary"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.upload_attachment)), /*#__PURE__*/router_external_React_default().createElement("input", {
      ref: node => this.fileInput = node,
      type: "file",
      accept: this.props.filter ? this.props.filter.join(',') : '*',
      className: "add-file-input d-none",
      multiple: "multiple",
      onChange: e => this.props.onChangeFileInput(e.target.files)
    }))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: `overlay d-flex justify-content-center align-items-center ${this.state.dragging ? 'active' : ''}`
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "text-muted font-italic"
    }, router_map.upload_drop)));
  }
}
router_FileUpload_FileUpload.propTypes = {
  filter: (router_prop_types_default()).array,
  // [.asc, .gpg]
  files: (router_prop_types_default()).array,
  // {id, name}
  onRemoveFile: (router_prop_types_default()).func,
  onClickUpload: (router_prop_types_default()).func,
  onChangeFileInput: (router_prop_types_default()).func
};
;// ./src/app/keyring/KeyImport.js
/**
 * Copyright (C) 2016-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */















const router_PUBLIC_KEY_REGEX = /-----BEGIN PGP PUBLIC KEY BLOCK-----[\s\S]+?-----END PGP PUBLIC KEY BLOCK-----/g;
const router_PRIVATE_KEY_REGEX = /-----BEGIN PGP PRIVATE KEY BLOCK-----[\s\S]+?-----END PGP PRIVATE KEY BLOCK-----/g;
const router_MAX_KEY_IMPORT_SIZE = 10000000;
router_register(['alert_header_error', 'alert_header_success', 'alert_header_warning', 'file_read_error', 'form_back', 'form_confirm', 'form_confirm', 'form_import', 'form_import', 'form_import', 'form_import', 'key_import_bulk_success', 'key_import_contacts_import_btn', 'key_import_default_description', 'key_import_default_description_plural', 'key_import_error', 'key_import_exception', 'key_import_file_label', 'key_import_from_text_btn', 'key_import_from_text_label', 'key_import_invalid_text', 'key_import_number_of_failed', 'key_import_search_btn', 'key_import_search_found', 'key_import_search_found_source', 'key_import_search_found_modified', 'key_import_textarea', 'key_import_textarea', 'key_import_too_big', 'keygrid_key_fingerprint', 'keygrid_keyid', 'keygrid_user_email', 'keygrid_user_name', 'keyring_confirm_keys', 'keyring_import_description', 'keyring_import_keys', 'keyring_import_search_description', 'keyring_import_search_keys']);
class router_KeyImport extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      armoredKeys: [],
      errors: [],
      files: [],
      keys: [],
      textImport: '',
      showTextInput: false,
      waiting: false,
      import: false,
      showImportModal: false,
      redirect: false,
      activeTab: 'import',
      keyRegSourceLabels: [],
      keySourceName: '',
      keyLastModified: null
    };
    this.handleHiddenModal = this.handleHiddenModal.bind(this);
  }
  async componentDidMount() {
    this.fileUpload = new router_FileUpload();
    // key import push scenario
    if (/\/push$/.test(this.props.location.pathname)) {
      const armored = await router_getAppDataSlot();
      this.handlePreviewImport(armored);
    }
    if (/\/search$/.test(this.props.location.pathname)) {
      this.toggleTab('lookup');
    }
    const keyRegSourceLabels = await router_port.send('keyreg-source-labels', {
      externalOnly: true
    });
    this.setState({
      keyRegSourceLabels
    });
  }
  async handlePreviewImport(armored, keySource = {}) {
    this.setState({
      waiting: true,
      alert: [],
      keySourceName: '',
      ...keySource
    });
    const armoreds = [];
    if (armored) {
      armoreds.push(armored);
    }
    if (this.state.textImport !== '') {
      armoreds.push(this.state.textImport);
    }
    if (this.state.files) {
      for (const file of this.state.files) {
        armoreds.push(router_dataURL2str(file.content));
      }
    }
    try {
      let armoredKeys = [];
      let errors = [];
      for (const armored of armoreds) {
        if (armored.length > router_MAX_KEY_IMPORT_SIZE) {
          throw {
            message: router_map.key_import_too_big,
            type: 'error'
          };
        }
        // find all public and private keys in the textbox
        const publicKeys = armored.match(router_PUBLIC_KEY_REGEX);
        const privateKeys = armored.match(router_PRIVATE_KEY_REGEX);
        if (publicKeys) {
          publicKeys.forEach(pub => {
            pub = router_normalizeArmored(pub);
            armoredKeys.push({
              type: 'public',
              armored: pub
            });
          });
        }
        if (privateKeys) {
          privateKeys.forEach(priv => {
            priv = router_normalizeArmored(priv);
            armoredKeys.push({
              type: 'private',
              armored: priv
            });
          });
        }
        if (!publicKeys && !privateKeys) {
          errors.push({
            msg: router_map.key_import_invalid_text
          });
        }
      }
      let keys = [];
      if (armoredKeys.length) {
        const {
          keys: validKeys,
          errors: err,
          armoreds: validArmoreds
        } = await router_port.send('read-amored-keys', {
          armoredKeys
        });
        keys = validKeys;
        armoredKeys = validArmoreds;
        errors = [...errors, ...err];
      }
      if (!keys.length && errors.length) {
        let hideDelay = 5000;
        for (const {
          msg,
          code
        } of errors) {
          this.props.onNotification({
            id: Date.now(),
            header: router_map.alert_header_error,
            message: code ? router_get(code.toLowerCase(), [msg]) : msg,
            type: 'error',
            hideDelay
          });
          hideDelay += 1000;
        }
        return;
      }
      this.setState({
        armoredKeys,
        keys,
        errors,
        showImportModal: true
      });
    } catch (error) {
      console.log('Error on key import preview:', error);
      this.props.onNotification({
        id: Date.now(),
        header: router_map.key_import_error,
        message: error.type === 'error' ? error.message : router_map.key_import_exception,
        type: 'error'
      });
    } finally {
      this.setState({
        waiting: false
      });
    }
  }
  async handleImport() {
    const alert = [];
    this.setState({
      waiting: true,
      alert: []
    });
    try {
      const result = await router_port.send('importKeys', {
        keyringId: this.context.keyringId,
        keys: this.state.armoredKeys
      });
      result.forEach(imported => {
        let header;
        const {
          message
        } = imported;
        let {
          type
        } = imported;
        switch (imported.type) {
          case 'success':
            header = router_map.alert_header_success;
            break;
          case 'error':
            header = router_map.key_import_error;
            type = 'danger';
            break;
        }
        alert.push({
          header,
          message,
          type
        });
      });
      const succeeded = alert.filter(({
        type
      }) => type === 'success');
      if (this.props.onKeyringChange) {
        await this.props.onKeyringChange();
      }
      let hideDelay = 5000;
      if (succeeded.length <= 5) {
        for (const {
          header,
          message
        } of succeeded) {
          this.props.onNotification({
            id: Date.now(),
            header,
            message,
            type: 'success',
            hideDelay
          });
          hideDelay += 1000;
        }
      } else {
        this.props.onNotification({
          id: Date.now(),
          message: /*#__PURE__*/router_external_React_default().createElement("strong", null, `${succeeded.length} ${router_map.key_import_bulk_success}`),
          type: 'success',
          hideDelay
        });
        hideDelay += 1000;
      }
      for (const {
        header,
        message
      } of alert.filter(({
        type
      }) => type !== 'success')) {
        this.props.onNotification({
          id: Date.now(),
          header,
          message,
          type: 'error',
          hideDelay
        });
        hideDelay += 1000;
      }
      this.setState({
        redirect: true,
        amoredKeys: [],
        keys: [],
        textImport: ''
      });
    } catch (error) {
      console.log('Error on key import:', error);
      this.props.onNotification({
        id: Date.now(),
        header: router_map.key_import_error,
        message: error.type === 'error' ? error.message : router_map.key_import_exception,
        type: 'error'
      });
      this.setState({
        waiting: false
      });
    }
  }
  async handleKeyFound(key) {
    this.handlePreviewImport(key.armored, {
      keySourceName: key.source,
      keyLastModified: new Date(key.lastModified)
    });
  }
  handleAddFile(files) {
    files = Array.from(files);
    const filesSize = files.reduce((total, file) => total + file.size, 0);
    const uploadedSize = this.state.files.reduce((total, file) => total + file.size, 0);
    const currentAttachmentsSize = uploadedSize + filesSize;
    if (currentAttachmentsSize > router_MAX_KEY_IMPORT_SIZE) {
      this.props.onNotification({
        id: Date.now(),
        header: router_map.alert_header_error,
        message: `${router_map.key_import_too_big} ${Math.floor(router_MAX_KEY_IMPORT_SIZE / (1024 * 1024))}MB.`,
        type: 'error'
      });
      return;
    }
    for (const file of files) {
      try {
        this.addFile(file);
      } catch (error) {
        this.setErrorNotification(error, file.name, 'upload');
      }
    }
  }
  addFile(file) {
    if (router_isOversize(file)) {
      throw new Error(router_map.encrypt_upload_file_warning_too_big);
    }
    this.fileUpload.readFile(file).then(file => this.setState(prevState => ({
      files: [...prevState.files, file]
    })));
  }
  handleRemoveFile(id) {
    this.setState(prevState => ({
      files: prevState.files.filter(file => file.id !== id)
    }));
  }
  setErrorNotification(error, filename = '', source = 'import') {
    const notification = {
      id: Date.now(),
      type: 'error',
      message: error.message
    };
    if (source === 'import') {
      notification.header = filename ? router_get('decrypt_file_error_header', [filename]) : router_map.decrypt_text_error_header;
    } else {
      notification.header = router_get('file_read_error', [filename]);
    }
    if (error.code === 'NO_KEY_FOUND') {
      notification.hideDelay = 5500;
    }
    this.setState(prevState => ({
      notifications: [...prevState.notifications, notification]
    }));
  }
  handleHiddenModal() {
    if (this.state.import) {
      this.handleImport();
    } else {
      this.setState({
        keys: [],
        armoredKeys: [],
        textImport: ''
      });
    }
  }
  toggleTab(tab) {
    if (this.state.activeTab !== tab) {
      this.setState({
        activeTab: tab,
        textImport: '',
        files: []
      });
    }
  }
  render() {
    if (this.state.redirect) {
      return /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: "/keyring/display/"
      });
    }
    const keySource = this.state.keyRegSourceLabels.find(source => source.name === this.state.keySourceName);
    return /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "keyImport card-body"
    }, /*#__PURE__*/router_external_React_default().createElement("nav", {
      "aria-label": "breadcrumb"
    }, /*#__PURE__*/router_external_React_default().createElement("ol", {
      className: "breadcrumb bg-transparent p-0"
    }, /*#__PURE__*/router_external_React_default().createElement("li", {
      className: "breadcrumb-item"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      to: "/keyring",
      replace: true,
      tabIndex: "0"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-left",
      "aria-hidden": "true"
    }), " ", router_map.keyring_header)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-title d-flex flex-wrap align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("h1", {
      className: "flex-shrink-0 mr-auto"
    }, this.state.activeTab === 'import' ? router_map.keyring_import_keys : router_map.keyring_import_search_keys)), /*#__PURE__*/router_external_React_default().createElement(router_es_TabContent, {
      className: "mt-4",
      activeTab: this.state.activeTab
    }, /*#__PURE__*/router_external_React_default().createElement(router_TabPane, {
      tabId: "import"
    }, /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.keyring_import_description), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-5"
    }, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.key_import_file_label), /*#__PURE__*/router_external_React_default().createElement(router_FileUpload_FileUpload, {
      files: this.state.files,
      filter: ['.asc', '.gpg'],
      onRemoveFile: id => this.handleRemoveFile(id),
      onChangeFileInput: files => this.handleAddFile(files)
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, !this.state.showTextInput ? /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex justify-content-center"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        showTextInput: true
      }),
      className: "btn btn-secondary"
    }, router_map.key_import_from_text_btn)) : /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.key_import_from_text_label), /*#__PURE__*/router_external_React_default().createElement("textarea", {
      id: "textImport",
      className: "form-control mb-0",
      value: this.state.textImport,
      onChange: event => this.setState({
        textImport: event.target.value
      }),
      rows: 8,
      autoFocus: true,
      spellCheck: "false",
      autoComplete: "off"
    }))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group d-flex justify-content-end"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.handlePreviewImport(),
      className: "btn btn-primary",
      disabled: !this.state.files.length && !this.state.textImport
    }, router_map.key_import_contacts_import_btn))), /*#__PURE__*/router_external_React_default().createElement(router_TabPane, {
      tabId: "lookup"
    }, /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.keyring_import_search_description), /*#__PURE__*/router_external_React_default().createElement(router_KeySearch, {
      onKeyFound: key => this.handleKeyFound(key),
      sourceLabels: this.state.keyRegSourceLabels
    })))), /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.showImportModal,
      toggle: () => this.setState(prevState => ({
        showImportModal: !prevState.showImportModal
      })),
      size: "large",
      title: this.state.keys.length > 1 ? router_get('keyring_confirm_keys_plural', [this.state.keys.length]) : router_map.keyring_confirm_keys,
      onHide: this.handleHiddenModal,
      footer: /*#__PURE__*/router_external_React_default().createElement("div", {
        className: "modal-footer border-0 pt-0"
      }, /*#__PURE__*/router_external_React_default().createElement("div", {
        className: "btn-bar"
      }, /*#__PURE__*/router_external_React_default().createElement("button", {
        type: "button",
        onClick: () => this.setState({
          showImportModal: false
        }),
        className: "btn btn-secondary"
      }, router_map.form_cancel), /*#__PURE__*/router_external_React_default().createElement("button", {
        type: "button",
        onClick: () => this.setState({
          import: true,
          showImportModal: false
        }),
        className: "btn btn-primary"
      }, router_map.form_confirm)))
    }, this.state.keySourceName && /*#__PURE__*/router_external_React_default().createElement("div", null, router_map.key_import_search_found, /*#__PURE__*/router_external_React_default().createElement("ul", null, /*#__PURE__*/router_external_React_default().createElement("li", null, router_map.key_import_search_found_source, " ", /*#__PURE__*/router_external_React_default().createElement("strong", {
      key: "1"
    }, /*#__PURE__*/router_external_React_default().createElement("a", {
      target: "_blank",
      rel: "noopener noreferrer",
      href: keySource.url
    }, keySource.label))), /*#__PURE__*/router_external_React_default().createElement("li", null, router_map.key_import_search_found_modified, " ", /*#__PURE__*/router_external_React_default().createElement("strong", {
      key: "0"
    }, this.state.keyLastModified.toLocaleDateString())))), /*#__PURE__*/router_external_React_default().createElement("p", null, this.state.keys.length > 1 ? router_map.key_import_default_description_plural : router_map.key_import_default_description), this.state.errors.length > 0 && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      header: router_map.alert_header_warning,
      type: "danger"
    }, this.state.errors.length > 1 ? router_get('key_import_number_of_failed_plural', [this.state.errors.length]) : router_map.key_import_number_of_failed), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "table-responsive",
      style: {
        maxHeight: '360px'
      }
    }, /*#__PURE__*/router_external_React_default().createElement("table", {
      className: "table table-custom table-sm"
    }, /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", null), /*#__PURE__*/router_external_React_default().createElement("th", {
      style: {
        minWidth: '140px'
      }
    }, router_map.keygrid_keyid), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_name), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_email), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_key_fingerprint))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, this.state.keys.map((key, keyIndex) => key.users.map((user, userIndex) => /*#__PURE__*/router_external_React_default().createElement("tr", {
      key: `${keyIndex}${userIndex}`,
      tabIndex: "0",
      "aria-haspopup": "true",
      className: userIndex === 0 && key.users.length > 1 ? 'accent' : ''
    }, /*#__PURE__*/router_external_React_default().createElement("td", {
      className: `text-center ${userIndex !== 0 ? 'border-top-0' : ''}`
    }, userIndex === 0 && /*#__PURE__*/router_external_React_default().createElement("span", {
      className: `icon icon-${key.type === 'public' ? 'key' : 'key-pair'}`,
      style: {
        fontSize: '1.25rem'
      }
    })), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: `monospaced text-nowrap ${userIndex !== 0 ? 'border-top-0' : ''}`
    }, userIndex === 0 ? key.keyId : ''), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: userIndex !== 0 ? 'border-top-0' : ''
    }, user.name), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: `emailCell ${userIndex !== 0 ? 'border-top-0' : ''}`
    }, user.email), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: `monospaced text-muted ${userIndex !== 0 ? 'border-top-0' : ''}`,
      style: {
        maxWidth: '150px',
        lineHeight: 1
      }
    }, /*#__PURE__*/router_external_React_default().createElement("small", null, userIndex === 0 ? router_formatFpr(key.fingerprint) : ''))))))))), this.state.waiting && /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      fullscreen: true,
      delay: 0
    }));
  }
}
router_KeyImport.contextType = router_KeyringOptions;
router_KeyImport.propTypes = {
  onKeyringChange: (router_prop_types_default()).func,
  onNotification: (router_prop_types_default()).func,
  location: (router_prop_types_default()).object
};
;// ./node_modules/date-fns/getUnixTime.mjs


/**
 * @name getUnixTime
 * @category Timestamp Helpers
 * @summary Get the seconds timestamp of the given date.
 *
 * @description
 * Get the seconds timestamp of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The timestamp
 *
 * @example
 * // Get the timestamp of 29 February 2012 11:45:05 CET:
 * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))
 * //=> 1330512305
 */
function router_getUnixTime(date) {
  return Math.trunc(+router_toDate(date) / 1000);
}

// Fallback for modularized imports:
/* harmony default export */ const router_date_fns_getUnixTime = ((/* unused pure expression or super */ null && (router_getUnixTime)));

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./src/app/keyring/components/AdvancedExpand.css
var router_AdvancedExpand = __webpack_require__(3981);
;// ./src/app/keyring/components/AdvancedExpand.css

      
      
      
      
      
      
      
      
      

var router_AdvancedExpand_options = {};

router_AdvancedExpand_options.styleTagTransform = (router_styleTagTransform_default());
router_AdvancedExpand_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_AdvancedExpand_options.insert = router_insertBySelector_default().bind(null, "head");
router_AdvancedExpand_options.domAPI = (router_styleDomAPI_default());
router_AdvancedExpand_options.insertStyleElement = (router_insertStyleElement_default());

var router_AdvancedExpand_update = router_injectStylesIntoStyleTag_default()(router_AdvancedExpand/* default */.A, router_AdvancedExpand_options);




       /* harmony default export */ const router_components_AdvancedExpand = (router_AdvancedExpand/* default */.A && router_AdvancedExpand/* default */.A.locals ? router_AdvancedExpand/* default */.A.locals : undefined);

;// ./src/app/keyring/components/AdvancedExpand.js
/**
 * Copyright (C) 2016-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */







router_register(['key_gen_advanced_btn']);
class router_AdvancedExpand_AdvancedExpand extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      collapse: false
    };
    this.toggle = this.toggle.bind(this);
  }
  toggle() {
    this.setState(state => ({
      collapse: !state.collapse
    }));
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: `btn btn-primary ${this.state.collapse ? 'key-advanced-open' : 'key-advanced-closed'}`,
      onClick: this.toggle
    }, router_map.key_gen_advanced_btn)), /*#__PURE__*/router_external_React_default().createElement(router_es_Collapse, {
      isOpen: this.state.collapse
    }, /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      type: "info"
    }, this.props.children)));
  }
}
router_AdvancedExpand_AdvancedExpand.propTypes = {
  children: (router_prop_types_default()).node.isRequired
};
;// ./src/app/keyring/components/AdvKeyGenOptions.js
/**
 * Copyright (C) 2016 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */







router_register(['keygrid_algorithm', 'keygrid_default_label', 'key_gen_key_size', 'key_gen_experimental', 'key_gen_expiration', 'key_gen_future_default', 'keygrid_key_not_expire']);
function router_AdvKeyGenOptions({
  value: {
    keyAlgo,
    keySize,
    keyExpirationTime
  },
  onChange,
  disabled
}) {
  const context = router_external_React_default().useContext(router_KeyringOptions);
  const tomorrow = router_addDays(new Date(), 1);
  const farFuture = router_addYears(tomorrow, 80);
  const handleDateChange = date => onChange({
    target: {
      id: 'keyExpirationTime',
      value: date
    }
  });
  const keyAlgos = [/*#__PURE__*/router_external_React_default().createElement("option", {
    value: "rsa",
    key: 0
  }, "RSA"), /*#__PURE__*/router_external_React_default().createElement("option", {
    value: "ecc",
    key: 1
  }, "ECC - Curve25519")];
  const gpgKeyAlgos = [/*#__PURE__*/router_external_React_default().createElement("option", {
    value: "default",
    key: 0
  }, router_map.keygrid_default_label), /*#__PURE__*/router_external_React_default().createElement("option", {
    value: "future-default",
    key: 1
  }, `${router_map.key_gen_future_default} (${router_map.key_gen_experimental})`)];
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "adv-key-gen-options"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "form-group"
  }, /*#__PURE__*/router_external_React_default().createElement("label", {
    htmlFor: "keyAlgo"
  }, router_map.keygrid_algorithm), /*#__PURE__*/router_external_React_default().createElement("select", {
    id: "keyAlgo",
    value: keyAlgo,
    onChange: onChange,
    className: "custom-select",
    disabled: disabled
  }, context.gnupg ? gpgKeyAlgos : keyAlgos)), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: `form-group ${keyAlgo === 'rsa' && !context.gnupg ? '' : 'd-none'}`
  }, /*#__PURE__*/router_external_React_default().createElement("label", {
    htmlFor: "keySize"
  }, /*#__PURE__*/router_external_React_default().createElement("span", {
    htmlFor: "keySize"
  }, router_map.key_gen_key_size), "\xA0(", /*#__PURE__*/router_external_React_default().createElement("span", null, "Bit"), ")"), /*#__PURE__*/router_external_React_default().createElement("select", {
    id: "keySize",
    value: keySize,
    onChange: onChange,
    className: "custom-select",
    disabled: disabled
  }, /*#__PURE__*/router_external_React_default().createElement("option", {
    value: "2048"
  }, "2048 Bit"), /*#__PURE__*/router_external_React_default().createElement("option", {
    value: "4096"
  }, "4096 Bit"))), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "form-group key-expiration-group"
  }, /*#__PURE__*/router_external_React_default().createElement("label", {
    htmlFor: "keyExpirationTime"
  }, router_map.key_gen_expiration), /*#__PURE__*/router_external_React_default().createElement(router_DatePicker_DatePicker, {
    id: "keyExpirationTime",
    value: keyExpirationTime,
    onChange: handleDateChange,
    placeholder: router_map.keygrid_key_not_expire,
    minDate: tomorrow,
    maxDate: farFuture,
    disabled: disabled
  })));
}
router_AdvKeyGenOptions.propTypes = {
  value: (router_prop_types_default()).object.isRequired,
  onChange: (router_prop_types_default()).func.isRequired,
  disabled: (router_prop_types_default()).bool
};
;// ./src/app/keyring/GenerateKey.js
/**
 * Copyright (C) 2016-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */














router_register(['alert_header_success', 'form_back', 'form_clear', 'keyring_generate_key', 'key_gen_generate', 'key_gen_another', 'key_gen_upload', 'key_gen_success', 'key_gen_wait_header', 'key_gen_wait_info', 'learn_more_link']);
class router_GenerateKey extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = this.getInitialState();
    this.handleChange = this.handleChange.bind(this);
    this.handleGenerate = this.handleGenerate.bind(this);
    this.generateKey = this.generateKey.bind(this);
  }
  componentDidMount() {
    this.setState(this.getInitialState(this.context));
  }
  getInitialState({
    gnupg = false,
    demail = false
  } = {}) {
    return {
      name: this.props.defaultName,
      email: this.props.defaultEmail,
      keyAlgo: gnupg ? 'default' : 'rsa',
      keySize: '4096',
      keyExpirationTime: gnupg ? router_addYears(router_startOfDay(new Date()), 2) : null,
      password: '',
      mveloKeyServerUpload: demail ? false : true,
      generating: false,
      // key generation in progress
      errors: {},
      // form errors
      key: null,
      // generated key
      modified: false
    };
  }
  handleChange(event) {
    let value;
    const target = event.target;
    switch (target.type) {
      case 'checkbox':
        value = target.checked;
        break;
      default:
        value = target.value;
    }
    this.setState(({
      errors: err
    }) => {
      const {
        [target.id]: deleted,
        ...errors
      } = err;
      if (target.error) {
        errors[target.id] = new Error();
      }
      return {
        [target.id]: value,
        errors,
        modified: true
      };
    });
  }
  handleGenerate() {
    const errors = {
      ...this.state.errors
    };
    const validEmail = router_checkEmail(this.state.email);
    if (!validEmail) {
      errors.email = new Error();
    }
    if (!this.context.gnupg) {
      if (!this.state.password.length) {
        errors.password = new Error();
      }
    }
    if (Object.keys(errors).length) {
      this.setState({
        errors
      });
      return;
    }
    this.setState({
      generating: true
    });
  }
  async generateKey() {
    const parameters = {
      keyAlgo: this.state.keyAlgo,
      numBits: this.state.keySize,
      passphrase: this.state.password,
      uploadPublicKey: this.state.mveloKeyServerUpload
    };
    parameters.userIds = [{
      fullName: this.state.name,
      email: this.state.email
    }];
    if (this.state.keyExpirationTime) {
      parameters.keyExpirationTime = Math.abs(router_getUnixTime(this.state.keyExpirationTime) - router_getUnixTime(router_startOfDay(new Date())));
    }
    try {
      const newKey = await router_port.send('generateKey', {
        parameters,
        keyringId: this.context.keyringId
      });
      if (this.props.onKeyringChange) {
        await this.props.onKeyringChange();
      }
      this.setState({
        key: newKey
      }, () => this.props.onNotification({
        id: Date.now(),
        header: router_map.alert_header_success,
        message: router_map.key_gen_success,
        type: 'success'
      }));
    } catch (error) {
      this.setState({
        generating: false,
        modified: false
      }, () => this.props.onNotification({
        id: Date.now(),
        header: router_map.key_gen_error,
        message: error.message,
        type: 'error'
      }));
    }
  }
  render() {
    if (this.state.key) {
      return /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: `/keyring/display/${this.state.key.keyId}`
      });
    }
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: `card-body ${this.state.generating ? 'busy' : ''}`
    }, /*#__PURE__*/router_external_React_default().createElement("nav", {
      "aria-label": "breadcrumb"
    }, /*#__PURE__*/router_external_React_default().createElement("ol", {
      className: "breadcrumb bg-transparent p-0"
    }, /*#__PURE__*/router_external_React_default().createElement("li", {
      className: "breadcrumb-item"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      to: "/keyring",
      replace: true,
      tabIndex: "0"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-left",
      "aria-hidden": "true"
    }), " ", router_map.keyring_header)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-title d-flex flex-wrap align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("h1", {
      className: "flex-shrink-0 mr-auto"
    }, router_map.keyring_generate_key)), /*#__PURE__*/router_external_React_default().createElement("form", {
      className: "form",
      autoComplete: "off"
    }, /*#__PURE__*/router_external_React_default().createElement(router_NameAddrInput, {
      name: this.state.name,
      email: this.state.email,
      onChange: this.handleChange,
      errors: this.state.errors
    }), /*#__PURE__*/router_external_React_default().createElement(router_AdvancedExpand_AdvancedExpand, null, /*#__PURE__*/router_external_React_default().createElement(router_AdvKeyGenOptions, {
      value: this.state,
      onChange: this.handleChange
    })), !this.context.gnupg && /*#__PURE__*/router_external_React_default().createElement(router_DefinePassword, {
      value: this.state.password,
      errors: this.state.errors,
      onChange: this.handleChange
    }), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: `form-group custom-control custom-checkbox ${this.context.demail ? 'd-none' : ''}`
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      checked: this.state.mveloKeyServerUpload,
      onChange: this.handleChange,
      type: "checkbox",
      id: "mveloKeyServerUpload"
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "mveloKeyServerUpload"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.key_gen_upload), ". ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://keys.mailvelope.com",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.learn_more_link))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group d-flex justify-content-end"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.handleGenerate,
      disabled: Object.keys(this.state.errors).length || !this.state.modified,
      className: "btn btn-primary"
    }, router_map.key_gen_generate))), /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.generating,
      title: router_map.key_gen_wait_header,
      onShow: this.generateKey,
      keyboard: false,
      hideFooter: true,
      onHide: () => this.setState({
        generating: false
      })
    }, /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "progress mb-3"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "progress-bar progress-bar-striped progress-bar-animated w-100",
      role: "progressbar",
      "aria-valuenow": "100",
      "aria-valuemin": "0",
      "aria-valuemax": "100"
    })), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "text-muted"
    }, router_map.key_gen_wait_info))));
  }
}
router_GenerateKey.contextType = router_KeyringOptions;
router_GenerateKey.propTypes = {
  defaultName: (router_prop_types_default()).string,
  defaultEmail: (router_prop_types_default()).string,
  onKeyringChange: (router_prop_types_default()).func,
  onNotification: (router_prop_types_default()).func
};
router_GenerateKey.defaultProps = {
  defaultName: '',
  defaultEmail: ''
};
;// ./src/app/keyring/KeyringSetup.js
/**
 * Copyright (C) 2015-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */







router_register(['general_openpgp_preferences', 'gnupg_connection', 'keyring_available_settings', 'keyring_setup', 'keyring_setup_no_keypair_heading', 'keyring_setup_no_keypair', 'keyring_setup_generate_key', 'keyring_setup_generate_key_explanation', 'keyring_setup_generate_key', 'keyring_setup_import_key', 'keyring_setup_import_key_explanation', 'keyring_setup_import_key']);
function router_KeyringSetup({
  hasPrivateKey,
  keyringAttr,
  onChangeKeyring,
  prefs
}) {
  const context = router_external_React_default().useContext(router_KeyringOptions);
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-body"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "card-title d-flex flex-wrap align-items-center"
  }, /*#__PURE__*/router_external_React_default().createElement("h1", {
    className: "flex-shrink-0 mr-auto"
  }, router_map.keyring_setup), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "flex-shrink-0"
  }, /*#__PURE__*/router_external_React_default().createElement(router_KeyringSelect_KeyringSelect, {
    keyringId: context.keyringId,
    keyringAttr: keyringAttr,
    onChange: onChangeKeyring,
    prefs: prefs
  }))), /*#__PURE__*/router_external_React_default().createElement("form", {
    className: "form"
  }, /*#__PURE__*/router_external_React_default().createElement("p", {
    className: `alert alert-warning keyring_setup_message ${hasPrivateKey ? '' : 'active'}`
  }, /*#__PURE__*/router_external_React_default().createElement("strong", null, router_map.keyring_setup_no_keypair_heading), /*#__PURE__*/router_external_React_default().createElement("br", null), /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.keyring_setup_no_keypair)), /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.keyring_setup_generate_key), /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.keyring_setup_generate_key_explanation), /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
    to: "/keyring/generate",
    className: "btn btn-primary"
  }, router_map.keyring_setup_generate_key)), /*#__PURE__*/router_external_React_default().createElement("hr", null), /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.keyring_setup_import_key), /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.keyring_setup_import_key_explanation), /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
    to: "/keyring/import",
    className: "btn btn-primary"
  }, router_map.keyring_setup_import_key)), /*#__PURE__*/router_external_React_default().createElement("hr", null), /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.gnupg_connection), /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.keyring_available_settings, " ", /*#__PURE__*/router_external_React_default().createElement(router_Link, {
    to: "/settings/general"
  }, router_map.general_openpgp_preferences))));
}
router_KeyringSetup.propTypes = {
  hasPrivateKey: (router_prop_types_default()).bool,
  keyringAttr: (router_prop_types_default()).object,
  prefs: (router_prop_types_default()).object,
  onChangeKeyring: (router_prop_types_default()).func.isRequired
};
;// ./node_modules/reactstrap/es/Toast.js



var router_Toast_excluded = ["className", "cssModule", "tag", "isOpen", "children", "transition", "fade", "innerRef"];

function router_Toast_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function router_Toast_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { router_Toast_ownKeys(Object(source), true).forEach(function (key) { (0,router_defineProperty/* default */.A)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { router_Toast_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }






var router_Toast_propTypes = {
  children: (router_prop_types_default()).node,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  fade: (router_prop_types_default()).bool,
  isOpen: (router_prop_types_default()).bool,
  tag: router_tagPropType,
  transition: router_prop_types_default().shape(router_es_Fade.propTypes),
  innerRef: router_prop_types_default().oneOfType([(router_prop_types_default()).object, (router_prop_types_default()).string, (router_prop_types_default()).func])
};
var router_Toast_defaultProps = {
  isOpen: true,
  tag: 'div',
  fade: true,
  transition: router_Toast_objectSpread(router_Toast_objectSpread({}, router_es_Fade.defaultProps), {}, {
    unmountOnExit: true
  })
};

function router_Toast(props) {
  var className = props.className,
      cssModule = props.cssModule,
      Tag = props.tag,
      isOpen = props.isOpen,
      children = props.children,
      transition = props.transition,
      fade = props.fade,
      innerRef = props.innerRef,
      attributes = router_objectWithoutPropertiesLoose(props, router_Toast_excluded);

  var classes = router_mapToCssModules(router_classnames_default()(className, 'toast'), cssModule);

  var toastTransition = router_Toast_objectSpread(router_Toast_objectSpread(router_Toast_objectSpread({}, router_es_Fade.defaultProps), transition), {}, {
    baseClass: fade ? transition.baseClass : '',
    timeout: fade ? transition.timeout : 0
  });

  return /*#__PURE__*/router_external_React_default().createElement(router_es_Fade, router_extends({}, attributes, toastTransition, {
    tag: Tag,
    className: classes,
    in: isOpen,
    role: "alert",
    innerRef: innerRef
  }), children);
}

router_Toast.propTypes = router_Toast_propTypes;
router_Toast.defaultProps = router_Toast_defaultProps;
/* harmony default export */ const router_es_Toast = (router_Toast);
;// ./node_modules/reactstrap/es/ToastHeader.js


var router_ToastHeader_excluded = ["className", "cssModule", "children", "toggle", "tag", "wrapTag", "closeAriaLabel", "charCode", "close", "tagClassName", "icon"];




var router_ToastHeader_propTypes = {
  tag: router_tagPropType,
  icon: router_prop_types_default().oneOfType([(router_prop_types_default()).string, (router_prop_types_default()).node]),
  wrapTag: router_tagPropType,
  toggle: (router_prop_types_default()).func,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  children: (router_prop_types_default()).node,
  closeAriaLabel: (router_prop_types_default()).string,
  charCode: router_prop_types_default().oneOfType([(router_prop_types_default()).string, (router_prop_types_default()).number]),
  close: (router_prop_types_default()).object
};
var router_ToastHeader_defaultProps = {
  tag: 'strong',
  wrapTag: 'div',
  tagClassName: 'mr-auto',
  closeAriaLabel: 'Close',
  charCode: 215
};

var router_ToastHeader = function ToastHeader(props) {
  var closeButton;
  var icon;

  var className = props.className,
      cssModule = props.cssModule,
      children = props.children,
      toggle = props.toggle,
      Tag = props.tag,
      WrapTag = props.wrapTag,
      closeAriaLabel = props.closeAriaLabel,
      charCode = props.charCode,
      close = props.close,
      tagClassName = props.tagClassName,
      iconProp = props.icon,
      attributes = router_objectWithoutPropertiesLoose(props, router_ToastHeader_excluded);

  var classes = router_mapToCssModules(router_classnames_default()(className, 'toast-header'), cssModule);

  if (!close && toggle) {
    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;
    closeButton = /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: toggle,
      className: router_mapToCssModules('close', cssModule),
      "aria-label": closeAriaLabel
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      "aria-hidden": "true"
    }, closeIcon));
  }

  if (typeof iconProp === "string") {
    icon = /*#__PURE__*/router_external_React_default().createElement("svg", {
      className: router_mapToCssModules("rounded text-" + iconProp),
      width: "20",
      height: "20",
      xmlns: "http://www.w3.org/2000/svg",
      preserveAspectRatio: "xMidYMid slice",
      focusable: "false",
      role: "img"
    }, /*#__PURE__*/router_external_React_default().createElement("rect", {
      fill: "currentColor",
      width: "100%",
      height: "100%"
    }));
  } else if (iconProp) {
    icon = iconProp;
  }

  return /*#__PURE__*/router_external_React_default().createElement(WrapTag, router_extends({}, attributes, {
    className: classes
  }), icon, /*#__PURE__*/router_external_React_default().createElement(Tag, {
    className: router_mapToCssModules(router_classnames_default()(tagClassName, {
      "ml-2": icon != null
    }), cssModule)
  }, children), close || closeButton);
};

router_ToastHeader.propTypes = router_ToastHeader_propTypes;
router_ToastHeader.defaultProps = router_ToastHeader_defaultProps;
/* harmony default export */ const router_es_ToastHeader = (router_ToastHeader);
;// ./node_modules/reactstrap/es/ToastBody.js


var router_ToastBody_excluded = ["className", "cssModule", "innerRef", "tag"];




var router_ToastBody_propTypes = {
  tag: router_tagPropType,
  className: (router_prop_types_default()).string,
  cssModule: (router_prop_types_default()).object,
  innerRef: router_prop_types_default().oneOfType([(router_prop_types_default()).object, (router_prop_types_default()).string, (router_prop_types_default()).func])
};
var router_ToastBody_defaultProps = {
  tag: 'div'
};

var router_ToastBody = function ToastBody(props) {
  var className = props.className,
      cssModule = props.cssModule,
      innerRef = props.innerRef,
      Tag = props.tag,
      attributes = router_objectWithoutPropertiesLoose(props, router_ToastBody_excluded);

  var classes = router_mapToCssModules(router_classnames_default()(className, 'toast-body'), cssModule);
  return /*#__PURE__*/router_external_React_default().createElement(Tag, router_extends({}, attributes, {
    className: classes,
    ref: innerRef
  }));
};

router_ToastBody.propTypes = router_ToastBody_propTypes;
router_ToastBody.defaultProps = router_ToastBody_defaultProps;
/* harmony default export */ const router_es_ToastBody = (router_ToastBody);
;// ./src/components/util/Toast.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





/**
 * Alert
 */
function router_Toast_Toast({
  className,
  isOpen,
  transition,
  toggle,
  header,
  type,
  children: message
}) {
  return /*#__PURE__*/router_external_React_default().createElement(router_es_Toast, {
    className: `${className || ''} ${type || ''}`,
    isOpen: isOpen,
    transition: transition
  }, header && /*#__PURE__*/router_external_React_default().createElement(router_es_ToastHeader, {
    toggle: toggle,
    icon: type && /*#__PURE__*/router_external_React_default().createElement("span", {
      "aria-hidden": "true",
      className: `icon-svg icon-svg-${type === 'success' ? 'positive' : 'negative'} flex-shrink-0`
    })
  }, header), /*#__PURE__*/router_external_React_default().createElement(router_es_ToastBody, {
    className: `d-flex align-items-center ${toggle && !header ? 'dismissable' : ''}`
  }, toggle && !header && type && /*#__PURE__*/router_external_React_default().createElement("span", {
    "aria-hidden": "true",
    className: `icon-svg icon-svg-${type === 'success' ? 'positive' : 'negative'} flex-shrink-0`
  }), message, " ", toggle && !header && /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    onClick: toggle,
    className: "close ml-auto",
    "aria-label": "Close"
  }, /*#__PURE__*/router_external_React_default().createElement("span", {
    "aria-hidden": "true",
    className: "icon icon-close flex-shrink-0 ml-3"
  }))));
}
router_Toast_Toast.propTypes = {
  className: (router_prop_types_default()).string,
  isOpen: (router_prop_types_default()).bool,
  transition: router_prop_types_default().shape(router_es_Fade.propTypes),
  toggle: (router_prop_types_default()).func,
  header: (router_prop_types_default()).string,
  type: router_prop_types_default().oneOf(['success', 'error']),
  children: (router_prop_types_default()).node.isRequired
};
router_Toast_Toast.defaultProps = {
  isOpen: true
};
;// ./src/components/util/Notifications.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





class router_Notifications extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      queue: []
    };
  }
  componentDidUpdate() {
    const newItems = [];
    for (const item of this.props.items) {
      if (!this.state.queue.find(existingItem => existingItem.id === item.id)) {
        newItems.unshift({
          ...item,
          show: true
        });
      }
    }
    if (newItems.length) {
      this.setState(prevState => ({
        queue: newItems.concat(prevState.queue)
      }));
    }
  }
  hideNotification(id, timeout = 0) {
    setTimeout(() => {
      this.setState(prevState => {
        const queue = [...prevState.queue];
        queue[queue.findIndex(item => item.id === id)].show = false;
        return {
          queue
        };
      });
    }, timeout);
  }
  render() {
    if (!this.state.queue.length) {
      return null;
    }
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "toastWrapper"
    }, this.state.queue.map(item => /*#__PURE__*/router_external_React_default().createElement(router_Toast_Toast, {
      isOpen: item.show,
      key: item.id,
      toggle: () => this.hideNotification(item.id, 0),
      type: item.type,
      transition: {
        unmountOnExit: true,
        timeout: this.props.transitionTime,
        onEntered: () => this.hideNotification(item.id, item.hideDelay ? item.hideDelay : this.props.hideDelay)
      }
    }, item.link ? /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      className: "text-reset text-decoration-none",
      onClick: () => this.hideNotification(item.id, 0),
      to: `${item.link}`,
      role: "button"
    }, item.header ? /*#__PURE__*/router_external_React_default().createElement("strong", {
      className: "strong"
    }, item.header) : '', " ", item.message) : /*#__PURE__*/router_external_React_default().createElement("span", null, item.header ? /*#__PURE__*/router_external_React_default().createElement("strong", {
      className: "strong"
    }, item.header) : '', " ", item.message))));
  }
}
router_Notifications.propTypes = {
  items: (router_prop_types_default()).array,
  // {id, [type], [link], [header], message}
  transitionTime: (router_prop_types_default()).number,
  hideDelay: (router_prop_types_default()).number
};
router_Notifications.defaultProps = {
  transitionTime: 150,
  hideDelay: 3500
};
;// ./src/app/keyring/Keyring.js
function router_Keyring_extends() { return router_Keyring_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, router_Keyring_extends.apply(null, arguments); }
/**
 * Copyright (C) 2018 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */
















router_register(['keyring_header']);
const router_DEMAIL_SUFFIX = 'de-mail.de';
class router_Keyring extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    // get URL parameter
    const query = new URLSearchParams(document.location.search);
    const keyringId = query.get('krid') || '';
    const name = query.get('fname') || '';
    const email = query.get('email') || '';
    this.state = {
      keyringId,
      name,
      email,
      keyringAttr: undefined,
      // keyring meta data
      defaultKeyFpr: '',
      // active keyring: fingerprint of default key
      hasPrivateKey: false,
      // active keyring: has private key
      demail: false,
      // active keyring: is keyring from de-mail provider
      gnupg: false,
      // active keyring: is the GnuPG keyring
      keys: [],
      // active keyring: keys
      keysLoading: true,
      // active keyring: waiting for loading of keys
      notifications: []
    };
    this.handleChangeKeyring = this.handleChangeKeyring.bind(this);
    this.handleDeleteKeyring = this.handleDeleteKeyring.bind(this);
    this.handleDeleteKey = this.handleDeleteKey.bind(this);
    this.handleChangeDefaultKey = this.handleChangeDefaultKey.bind(this);
    this.handleRefreshKeyring = this.handleRefreshKeyring.bind(this);
    this.loadKeyring = this.loadKeyring.bind(this);
  }
  async componentDidMount() {
    await this.initActiveKeyring();
    await this.loadKeyring();
  }
  setStateAsync(state) {
    return new Promise(resolve => this.setState(state, resolve));
  }
  async initActiveKeyring() {
    if (this.state.keyringId) {
      return;
    }
    const keyringId = await router_port.send('get-active-keyring');
    await this.setStateAsync({
      keyringId: keyringId || router_MAIN_KEYRING_ID
    });
  }
  async loadKeyring() {
    /* eslint-disable react/no-access-state-in-setstate */
    const keyringAttr = await router_port.send('get-all-keyring-attr');
    const keyringId = keyringAttr[this.state.keyringId] ? this.state.keyringId : router_MAIN_KEYRING_ID;
    const defaultKeyFpr = keyringAttr[keyringId].default_key || '';
    const demail = keyringId.includes(router_DEMAIL_SUFFIX);
    const gnupg = keyringId === router_GNUPG_KEYRING_ID;
    // propagate state change to backend
    router_port.emit('set-active-keyring', {
      keyringId
    });
    let keys = await router_port.send('getKeys', {
      keyringId
    });
    keys = keys.sort((a, b) => a.name.localeCompare(b.name));
    const hasPrivateKey = keys.some(key => key.type === 'private');
    /* eslint-enable react/no-access-state-in-setstate */
    this.setState({
      keyringId,
      defaultKeyFpr,
      demail,
      gnupg,
      keyringAttr,
      hasPrivateKey,
      keys,
      keysLoading: false
    });
  }
  async handleChangeKeyring(keyringId) {
    await this.setStateAsync({
      keyringId,
      keysLoading: true
    });
    await this.loadKeyring();
  }
  async handleDeleteKeyring(keyringId) {
    await router_port.send('delete-keyring', {
      keyringId
    });
    await this.loadKeyring();
  }
  async handleChangeDefaultKey(keyFpr) {
    await router_port.send('set-keyring-attr', {
      keyringId: this.state.keyringId,
      keyringAttr: {
        default_key: keyFpr
      }
    });
    this.setState({
      defaultKeyFpr: keyFpr
    });
  }
  async handleDeleteKey(fingerprint, type) {
    await router_port.send('removeKey', {
      fingerprint,
      type,
      keyringId: this.state.keyringId
    });
    this.loadKeyring();
  }
  async handleRefreshKeyring() {
    if (this.state.gnupg) {
      this.setState({
        keysLoading: true
      });
      await router_port.send('reload-keystore', {
        keyringId: this.state.keyringId
      });
    }
    this.loadKeyring();
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement(router_KeyringOptions.Provider, {
      value: {
        keyringId: this.state.keyringId,
        demail: this.state.demail,
        gnupg: this.state.gnupg
      }
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "jumbotron"
    }, /*#__PURE__*/router_external_React_default().createElement("section", {
      className: "card"
    }, !this.state.keyringId || this.state.keysLoading ? /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0
    }) : /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      exact: true,
      path: "/keyring",
      render: () => this.state.keys.length ? /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: "/keyring/display"
      }) : /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: "/keyring/setup"
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      exact: true,
      path: "/keyring/key/:keyFpr",
      render: props => /*#__PURE__*/router_external_React_default().createElement(router_Key, router_Keyring_extends({}, props, {
        keyData: this.state.keys.find(key => key.fingerprint === props.match.params.keyFpr),
        defaultKeyFpr: this.state.defaultKeyFpr,
        onChangeDefaultKey: this.handleChangeDefaultKey,
        onDeleteKey: this.handleDeleteKey,
        onKeyringChange: this.loadKeyring
      }))
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      exact: true,
      path: "/keyring/key/:keyFpr/user/:userIdx",
      render: props => /*#__PURE__*/router_external_React_default().createElement(router_User, router_Keyring_extends({}, props, {
        keyData: this.state.keys.find(key => key.fingerprint === props.match.params.keyFpr),
        onKeyringChange: this.loadKeyring
      }))
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/keyring/display/:keyId?",
      render: props => /*#__PURE__*/router_external_React_default().createElement(router_KeyGrid_KeyGrid, router_Keyring_extends({
        keys: this.state.keys
      }, props, {
        keyringAttr: this.state.keyringAttr,
        onChangeKeyring: this.handleChangeKeyring,
        onDeleteKeyring: this.handleDeleteKeyring,
        prefs: this.props.prefs,
        defaultKeyFpr: this.state.defaultKeyFpr,
        onChangeDefaultKey: this.handleChangeDefaultKey,
        onDeleteKey: this.handleDeleteKey,
        onRefreshKeyring: this.handleRefreshKeyring,
        spinner: this.state.keysLoading
      }))
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/keyring/import",
      render: ({
        location
      }) => /*#__PURE__*/router_external_React_default().createElement(router_KeyImport, {
        onKeyringChange: this.loadKeyring,
        onNotification: notification => this.setState({
          notifications: [notification]
        }),
        location: location
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/keyring/generate",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_GenerateKey, {
        onKeyringChange: this.loadKeyring,
        onNotification: notification => this.setState({
          notifications: [notification]
        }),
        defaultName: this.state.name,
        defaultEmail: this.state.email
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/keyring/setup",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_KeyringSetup, {
        hasPrivateKey: this.state.hasPrivateKey,
        keyringAttr: this.state.keyringAttr,
        onChangeKeyring: this.handleChangeKeyring,
        prefs: this.props.prefs
      })
    })))), /*#__PURE__*/router_external_React_default().createElement(router_Notifications, {
      items: this.state.notifications,
      hideDelay: 5000
    })));
  }
}
router_Keyring.propTypes = {
  prefs: (router_prop_types_default()).object,
  location: (router_prop_types_default()).object
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/editor/components/RecipientInput.scss
var router_RecipientInput = __webpack_require__(2004);
;// ./src/components/editor/components/RecipientInput.scss

      
      
      
      
      
      
      
      
      

var router_RecipientInput_options = {};

router_RecipientInput_options.styleTagTransform = (router_styleTagTransform_default());
router_RecipientInput_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_RecipientInput_options.insert = router_insertBySelector_default().bind(null, "head");
router_RecipientInput_options.domAPI = (router_styleDomAPI_default());
router_RecipientInput_options.insertStyleElement = (router_insertStyleElement_default());

var router_RecipientInput_update = router_injectStylesIntoStyleTag_default()(router_RecipientInput/* default */.A, router_RecipientInput_options);




       /* harmony default export */ const router_components_RecipientInput = (router_RecipientInput/* default */.A && router_RecipientInput/* default */.A.locals ? router_RecipientInput/* default */.A.locals : undefined);

;// ./src/components/editor/components/RecipientInput.js
/**
 * Copyright (C) 2016 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */

/**
 * Parts of the recipient input is based on Hoodiecrow (MIT License)
 * Copyright (c) 2014 Whiteout Networks GmbH.
 * See https://github.com/tanx/hoodiecrow/blob/master/LICENSE
 */







/* global angular */

router_register(['editor_key_has_extra_msg', 'editor_key_not_found', 'editor_key_not_found_msg']);

/*
  reference to props of RecipientInput will be shared with Angular controller
  this structure is not immutable, recipients will be received as {email},
  but RecipientInputCtrl will modify recipients to {email, keys}
 */
const router_contrCompStack = [];
class router_RecipientInput_RecipientInput extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.id = router_getUUID();
  }
  propsOnStack() {
    // store props on stack for Angular
    this.ctrlLink = {
      props: this.props
    };
    router_contrCompStack.push(this.ctrlLink);
  }
  componentDidMount() {
    // load editor module dependencies
    angular.module('recipientInput', ['ngTagsInput']).config((tagsInputConfigProvider, $locationProvider) => {
      // activate monitoring of placeholder option
      tagsInputConfigProvider.setActiveInterpolation('tagsInput', {
        placeholder: true
      });
      $locationProvider.hashPrefix('');
    });
    // attach ctrl to editor module
    angular.module('recipientInput').controller('RecipientInputCtrl', router_RecipientInputCtrl);
    this.propsOnStack();
    // bootstrap angular
    angular.bootstrap(document.getElementById(this.id), ['recipientInput']);
    if (this.ctrlLink.props.recipients.length) {
      this.ctrlLink.rInputCtrl.recipients = this.ctrlLink.props.recipients;
      this.ctrlLink.rInputCtrl.update();
    }
  }
  shouldComponentUpdate(nextProps) {
    this.ctrlLink.props = nextProps;
    this.ctrlLink.rInputCtrl.recipients = this.ctrlLink.props.recipients;
    // only update input controller if recipients or keys change
    if (this.props.recipients !== nextProps.recipients || this.props.keys !== nextProps.keys || this.props.extraKey !== nextProps.extraKey) {
      this.ctrlLink.rInputCtrl.update();
    }
    // no re-rendering of component due to Angular
    return false;
  }
  render() {
    const contrAttr = node => {
      node.setAttribute('ng-controller', 'RecipientInputCtrl as rInput');
      node.setAttribute('ng-class', "{'has-error': rInput.hasError}");
    };
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: this.id,
      className: "recipients-input",
      ref: node => node && contrAttr(node)
    }, /*#__PURE__*/router_external_React_default().createElement("tags-input", {
      "ng-model": "rInput.recipients",
      type: "email",
      "key-property": "displayId",
      "allowed-tags-pattern": "[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}",
      spellcheck: "false",
      tabindex: "0",
      "add-on-space": "true",
      "add-on-enter": "true",
      "enable-editing-last-tag": "true",
      "display-property": "displayId",
      "on-tag-added": "rInput.verify($tag)",
      "on-tag-removed": "rInput.checkEncryptStatus()"
    }, /*#__PURE__*/router_external_React_default().createElement("auto-complete", {
      source: "rInput.autocomplete($query)",
      "min-length": "1"
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "alert alert-danger ng-hide mb-0",
      role: "alert",
      ref: node => node && node.setAttribute('ng-show', 'rInput.hasError')
    }, /*#__PURE__*/router_external_React_default().createElement("strong", null, router_map.editor_key_not_found), " ", /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.editor_key_not_found_msg)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "alert alert-info ng-hide mb-0",
      role: "alert",
      ref: node => node && node.setAttribute('ng-show', 'rInput.hasExtraKey')
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.editor_key_has_extra_msg)));
  }
}
router_RecipientInput_RecipientInput.propTypes = {
  extraKey: (router_prop_types_default()).bool,
  hideErrorMsg: (router_prop_types_default()).bool,
  keys: (router_prop_types_default()).array,
  onAutoLocate: (router_prop_types_default()).func,
  onChangeRecipient: (router_prop_types_default()).func,
  recipients: (router_prop_types_default()).array
};

/**
 * Angular controller for the recipient input
 */
class router_RecipientInputCtrl {
  constructor($timeout) {
    this._timeout = $timeout;
    this.compLink = router_contrCompStack.pop();
    this.recipients = this.compLink.props.recipients;
    this.compLink.rInputCtrl = this;
  }
  update() {
    this._timeout(() => {
      // trigger $scope.$digest() after async call
      this.recipients.forEach(this.verify.bind(this));
      this.checkEncryptStatus();
    });
  }

  /**
   * Verifies a recipient after input, gets their key, colors the
   * input tag accordingly and checks if encryption is possible.
   * @param  {Object} recipient   The recipient object
   */
  verify(recipient) {
    if (!recipient) {
      return;
    }
    if (recipient.email) {
      // display only address from autocomplete
      recipient.displayId = recipient.email;
    } else {
      // set address after manual input
      recipient.email = recipient.displayId;
    }
    // lookup key in local cache
    recipient.key = this.getKey(recipient);
    if (recipient.key) {
      recipient.fingerprint = recipient.key.fingerprint;
    }
    if (recipient.key || recipient.checkedServer) {
      // color tag only if a local key was found, or after server lookup
      this.colorTag(recipient);
      this.checkEncryptStatus();
    } else {
      // no local key found ... lookup on the server
      this.autoLocate(recipient);
    }
  }

  /**
   * Finds the recipient's corresponding public key and sets it
   * on the 'key' attribute on the recipient object.
   * @param  {Object} recipient   The recipient object
   * @return {Object}             The key object (undefined if none found)
   */
  getKey(recipient) {
    return this.compLink.props.keys.find(key => {
      const fprMatch = recipient.fingerprint && key.fingerprint === recipient.fingerprint;
      const emailMatch = key.email && key.email.toLowerCase() === recipient.email.toLowerCase();
      return fprMatch && emailMatch || emailMatch;
    });
  }

  /**
   * Color the recipient's input tag depending on
   * whether they have a key or not.
   * @param  {Object} recipient   The recipient object
   */
  colorTag(recipient) {
    this._timeout(() => {
      // wait for html tag to appear
      const tags = document.querySelectorAll('tags-input li.tag-item');
      for (const tag of tags) {
        if (tag.textContent.indexOf(recipient.email) !== -1) {
          tag.classList.remove('tag-success', 'tag-info', 'tag-danger');
          if (recipient.key) {
            tag.classList.add('tag-success');
          } else {
            tag.classList.add(`tag-${this.compLink.props.extraKey ? 'info' : 'danger'}`);
          }
        }
      }
    });
  }

  /**
   * Checks if all recipients have a public key and prevents encryption
   * if one of them does not have a key.
   */
  checkEncryptStatus() {
    const hasError = this.recipients.some(r => !r.key) && !this.compLink.props.extraKey;
    this.hasError = hasError && !this.compLink.props.hideErrorMsg;
    this.hasExtraKey = this.compLink.props.extraKey;
    this.compLink.props.onChangeRecipient && this.compLink.props.onChangeRecipient({
      hasError
    });
  }

  /**
   * Do a search with the autoLocate module
   * if a key was not found in the local keyring.
   * @param  {Object} recipient   The recipient object
   * @return {undefined}
   */
  autoLocate(recipient) {
    recipient.checkedServer = true;
    this.compLink.props.onAutoLocate(recipient);
  }

  /**
   * Queries the local cache of key objects to find a matching user ID
   * @param  {String} query   The autocomplete query
   * @return {Array}          A list of filtered items that match the query
   */
  autocomplete(query) {
    const cache = this.compLink.props.keys.map(key => ({
      email: key.email,
      fingerprint: key.fingerprint,
      displayId: `${key.userId} - ${key.keyId}`
    }));
    // filter by display ID and ignore duplicates
    return cache.filter(i => i.displayId.toLowerCase().includes(query.toLowerCase()) && !this.recipients.some(recipient => recipient.email === i.email));
  }
}

// workaround to prevent "Error: class constructors must be invoked with |new|" in Firefox
// https://github.com/angular/angular.js/issues/14240
router_RecipientInputCtrl.$$ngIsClass = true;
;// ./src/components/editor/components/PlainText.js
/**
 * Copyright (C) 2017 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




class router_PlainText extends (router_external_React_default()).PureComponent {
  constructor(props) {
    super(props);
    this.sandbox = null;
    this.textarea = null;
  }
  componentDidUpdate(prevProps) {
    // if default value is set after rendering, set manually
    if (this.textarea && prevProps.defaultValue !== this.props.defaultValue) {
      this.textarea.value = this.props.defaultValue;
      this.textarea.selectionStart = 0;
      this.textarea.selectionEnd = 0;
    }
  }
  getValue() {
    return this.textarea.value;
  }
  createPlainText() {
    const textarea = /*#__PURE__*/router_external_React_default().createElement("textarea", {
      defaultValue: this.props.defaultValue,
      className: "form-control",
      rows: 12,
      autoFocus: true,
      onChange: event => this.props.onChange(event.target.value),
      onBlur: this.props.onBlur,
      onMouseUp: this.props.onMouseUp,
      ref: node => this.textarea = node,
      style: {
        width: '100%',
        height: '100%',
        marginBottom: 0,
        color: 'black',
        resize: 'none',
        lineHeight: 1.5
      }
    });
    const sandboxDoc = this.sandbox.contentDocument;
    const content = sandboxDoc.querySelector('#root');
    router_external_ReactDOM_default().render(textarea, content);
    this.props.onLoad && this.props.onLoad();
  }
  render() {
    const sandboxContent = `
      <!DOCTYPE html>
      <html style="height: 100%">
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
          <link rel="stylesheet" href="../../main.css">
        </head>
        <body style="overflow: hidden; margin: 0; height: 100%; background-color: transparent">
         <div id="root" style="height: 100%; padding: 0.2rem">
         </div>
        </body>
      </html>
    `;
    return /*#__PURE__*/router_external_React_default().createElement("iframe", {
      sandbox: "allow-same-origin allow-scripts",
      srcDoc: sandboxContent,
      frameBorder: 0,
      style: {
        display: 'block',
        height: '100%',
        overflowY: 'hidden'
      },
      ref: node => this.sandbox = node,
      onLoad: () => this.createPlainText()
    });
  }
}
router_PlainText.propTypes = {
  defaultValue: (router_prop_types_default()).string,
  onChange: (router_prop_types_default()).func.isRequired,
  onBlur: (router_prop_types_default()).func,
  onMouseUp: (router_prop_types_default()).func,
  onLoad: (router_prop_types_default()).func
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/encrypt/Encrypt.scss
var router_Encrypt = __webpack_require__(8716);
;// ./src/app/encrypt/Encrypt.scss

      
      
      
      
      
      
      
      
      

var router_Encrypt_options = {};

router_Encrypt_options.styleTagTransform = (router_styleTagTransform_default());
router_Encrypt_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_Encrypt_options.insert = router_insertBySelector_default().bind(null, "head");
router_Encrypt_options.domAPI = (router_styleDomAPI_default());
router_Encrypt_options.insertStyleElement = (router_insertStyleElement_default());

var router_Encrypt_update = router_injectStylesIntoStyleTag_default()(router_Encrypt/* default */.A, router_Encrypt_options);




       /* harmony default export */ const router_encrypt_Encrypt = (router_Encrypt/* default */.A && router_Encrypt/* default */.A.locals ? router_Encrypt/* default */.A.locals : undefined);

;// ./src/app/encrypt/Encrypt.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */
















router_register(['alert_header_error', 'change_link', 'editor_encrypt_button', 'editor_label_attachments', 'editor_label_message', 'editor_label_recipient', 'encrypt_change_signer_dialog_signer_label', 'encrypt_change_signer_dialog_title', 'encrypt_download_all_button', 'encrypt_encrypted_files_label', 'encrypt_encrypted_for_label', 'encrypt_file_error_header', 'encrypt_header', 'encrypt_header_success', 'encrypt_no_signer_info', 'encrypt_remove_signer_btn', 'encrypt_signed_as_label', 'encrypt_signer_info', 'encrypt_text_encryption_btn', 'encrypt_text_error_header', 'encrypt_upload_file_warning_too_big', 'file_read_error', 'form_back', 'notification_text_copy_to_clipboard', 'upload_quota_exceeded_warning']);
class router_Encrypt_Encrypt extends (router_external_React_default()).Component {
  constructor() {
    super();
    this.state = {
      initializing: true,
      waiting: false,
      keyringId: '',
      keys: [],
      recipients: [],
      recipientsError: false,
      signingKey: null,
      selectedSigningKeyFpr: null,
      signingKeys: [],
      signMsg: false,
      showSigningKeyModal: false,
      files: [],
      showTextInput: false,
      message: '',
      defaultPlainText: '',
      encrypted: [],
      notifications: []
    };
    this.handleChangeSigningKey = this.handleChangeSigningKey.bind(this);
    this.handleDownloadAll = this.handleDownloadAll.bind(this);
    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);
  }
  componentDidMount() {
    this.init();
    this.fileUpload = new router_FileUpload();
  }
  async init() {
    await this.initKeys();
    const keyringId = await router_port.send('get-active-keyring');
    const defaultKeyFpr = await router_port.send('get-default-key-fpr', {
      keyringId
    });
    const {
      general
    } = await router_port.send('get-prefs');
    this.setState(prevState => ({
      keyringId,
      defaultKeyFpr,
      signingKey: general.auto_sign_msg ? prevState.keys.find(key => key.fingerprint === defaultKeyFpr) : null,
      initializing: false
    }));
  }
  async initKeys() {
    const keys = await router_port.send('get-all-key-data');
    this.setState({
      keys
    });
  }
  async handleAutoLocate({
    email
  }) {
    await router_port.send('key-lookup', {
      query: {
        email
      },
      keyringId: this.state.keyringId,
      importKey: true
    });
    await this.initKeys();
  }
  async handleEncrypt() {
    this.setState(prevState => ({
      defaultPlainText: prevState.message,
      waiting: true
    }));
    if (this.state.files.length > 0) {
      await this.encryptFiles(this.state.files, this.state.recipients);
    }
    if (this.state.message !== '') {
      await this.encryptMessage(this.state.message, this.state.recipients);
    }
    this.setState({
      waiting: false
    });
  }
  handleBack() {
    this.setState(prevState => ({
      encrypted: [],
      recipients: [...prevState.recipients]
    }));
  }
  setErrorNotification(error, filename = '', source = 'encrypt') {
    const notification = {
      id: Date.now(),
      type: 'error',
      message: error.message
    };
    if (source === 'encrypt') {
      notification.header = filename ? router_get('encrypt_file_error_header', [filename]) : router_map.encrypt_text_error_header;
    } else {
      notification.header = router_get('file_read_error', [filename]);
    }
    this.setState(prevState => ({
      notifications: [...prevState.notifications, notification]
    }));
  }
  async encryptMessage(message, recipients) {
    try {
      const encrypted = await router_port.send('encrypt-message', {
        data: message,
        keyringId: this.state.keyringId,
        encryptionKeyFprs: recipients.map(r => r.fingerprint),
        signingKeyFpr: this.state.signingKey ? this.state.signingKey.fingerprint : '',
        uiLogSource: 'security_log_encrypt_ui',
        noCache: false,
        armor: true,
        allKeyrings: true
      });
      this.setState(prevState => ({
        encrypted: [...prevState.encrypted, this.createFileObject({
          content: encrypted,
          filename: 'text.txt',
          mimeType: 'text/plain'
        })]
      }));
    } catch (error) {
      this.setErrorNotification(error);
    }
  }
  encryptFiles(plainFiles, recipients) {
    return Promise.all(plainFiles.map(async plainFile => {
      try {
        const fileExt = router_extractFileExtension(plainFile.name);
        const encrypted = await router_port.send('encrypt-file', {
          plainFile,
          keyringId: this.state.keyringId,
          encryptionKeyFprs: recipients.map(r => r.fingerprint),
          signingKeyFpr: this.state.signingKey ? this.state.signingKey.fingerprint : '',
          uiLogSource: 'security_log_encrypt_ui',
          noCache: false,
          armor: fileExt === 'txt',
          allKeyrings: true
        });
        this.setState(prevState => ({
          encrypted: [...prevState.encrypted, this.createFileObject({
            content: encrypted,
            filename: plainFile.name,
            mimeType: 'application/octet-stream'
          })]
        }));
      } catch (error) {
        this.setErrorNotification(error, plainFile.name);
      }
    }));
  }
  createFileObject({
    content,
    filename,
    mimeType
  }) {
    // set MIME type fix to application/octet-stream as other types can be exploited in Chrome
    mimeType = 'application/octet-stream';
    const file = {
      id: router_getUUID()
    };
    if (router_extractFileExtension(filename) === 'txt') {
      file.name = `${filename}.asc`;
      file.content = content;
    } else {
      file.name = `${filename}.gpg`;
    }
    const blob = new Blob([router_str2ab(content)], {
      type: mimeType
    });
    file.objectURL = window.URL.createObjectURL(blob);
    return file;
  }
  async handleChangeSigningKey() {
    const signingKeys = await router_port.send('get-signing-keys', {
      keyringId: this.state.keyringId
    });
    this.setState(prevState => ({
      signingKeys,
      selectedSigningKeyFpr: prevState.signingKey ? prevState.signingKey.fingerprint : prevState.defaultKeyFpr,
      showSigningKeyModal: true
    }));
  }
  handleAddFile(files) {
    files = Array.from(files);
    const filesSize = files.reduce((total, file) => total + file.size, 0);
    const uploadedSize = this.state.files.reduce((total, file) => total + file.size, 0);
    const currentAttachmentsSize = uploadedSize + filesSize;
    if (currentAttachmentsSize > router_MAX_FILE_UPLOAD_SIZE) {
      this.setState({
        notifications: [{
          id: Date.now(),
          header: router_map.alert_header_error,
          message: `${router_map.upload_quota_exceeded_warning} ${Math.floor(router_MAX_FILE_UPLOAD_SIZE / (1024 * 1024))}MB.`,
          type: 'error'
        }]
      });
      return;
    }
    for (const file of files) {
      try {
        this.addFile(file);
      } catch (error) {
        this.setErrorNotification(error, file.name, 'upload');
      }
    }
  }
  addFile(file) {
    if (router_isOversize(file)) {
      throw new Error(router_map.encrypt_upload_file_warning_too_big);
    }
    this.fileUpload.readFile(file).then(file => this.setState(prevState => ({
      files: [...prevState.files, file]
    })));
  }
  handleRemoveFile(id) {
    this.setState(prevState => ({
      files: prevState.files.filter(file => file.id !== id)
    }));
  }
  handleDownloadAll() {
    const fileElements = this.fileDownloadElements.getElementsByClassName('file-header');
    for (const fileElement of fileElements) {
      setTimeout(() => fileElement.click(), 50);
    }
  }
  handleCopyToClipboard(text) {
    const temporay = document.createElement('textarea');
    document.body.appendChild(temporay);
    temporay.value = text;
    temporay.select();
    document.execCommand('copy');
    document.body.removeChild(temporay);
    this.setState({
      notifications: [{
        id: Date.now(),
        message: router_map.notification_text_copy_to_clipboard,
        hideDelay: 2500
      }]
    });
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "encrypt jumbotron"
    }, /*#__PURE__*/router_external_React_default().createElement("section", {
      className: "card"
    }, this.state.initializing ? /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0
    }) : /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-body"
    }, this.state.encrypted.length > 0 && /*#__PURE__*/router_external_React_default().createElement("nav", {
      "aria-label": "breadcrumb"
    }, /*#__PURE__*/router_external_React_default().createElement("ol", {
      className: "breadcrumb bg-transparent p-0"
    }, /*#__PURE__*/router_external_React_default().createElement("li", {
      className: "breadcrumb-item"
    }, /*#__PURE__*/router_external_React_default().createElement("a", {
      onClick: () => this.handleBack()
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-left",
      "aria-hidden": "true"
    }), " ", router_map.encrypt_header)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-title d-flex flex-wrap align-items-center w-100"
    }, /*#__PURE__*/router_external_React_default().createElement("h1", {
      className: "flex-shrink-0 mr-auto"
    }, !this.state.encrypted.length ? router_map.encrypt_header : router_map.encrypt_header_success), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "flex-shrink-0"
    }, !this.state.encrypted.length && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      disabled: this.state.recipientsError || !this.state.recipients.length || !this.state.files.length && this.state.message === '',
      onClick: () => this.handleEncrypt(),
      className: "btn btn-primary"
    }, router_map.editor_encrypt_button), this.state.encrypted.length > 1 && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.handleDownloadAll,
      className: "btn btn-primary"
    }, router_map.encrypt_download_all_button))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: this.state.encrypted.length ? 'd-none' : ''
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.editor_label_recipient), /*#__PURE__*/router_external_React_default().createElement(router_RecipientInput_RecipientInput, {
      keys: this.state.keys,
      recipients: this.state.recipients,
      onChangeRecipient: ({
        hasError
      }) => this.setState({
        recipientsError: hasError
      }),
      onAutoLocate: recipient => this.handleAutoLocate(recipient)
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-5"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      className: "mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "flex-shrink-1 mr-4"
    }, this.state.signingKey ? router_get('encrypt_signer_info', [this.state.signingKey.email]) : router_map.encrypt_no_signer_info), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar flex-md-shrink-0 flex-grow-1"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.handleChangeSigningKey,
      className: "btn btn-secondary mb-md-0"
    }, router_map.change_link), this.state.signingKey && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        signingKey: null
      }),
      className: "btn btn-secondary mb-md-0"
    }, router_map.encrypt_remove_signer_btn))))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-5"
    }, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.editor_label_attachments), /*#__PURE__*/router_external_React_default().createElement(router_FileUpload_FileUpload, {
      files: this.state.files,
      onRemoveFile: id => this.handleRemoveFile(id),
      onChangeFileInput: files => this.handleAddFile(files)
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, !this.state.showTextInput ? /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex justify-content-center"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        showTextInput: true
      }),
      className: "btn btn-secondary"
    }, router_map.encrypt_text_encryption_btn)) : /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.editor_label_message), /*#__PURE__*/router_external_React_default().createElement("div", {
      style: {
        margin: '-0.2rem'
      }
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "plain-text w-100 h-100 overflow-hidden"
    }, /*#__PURE__*/router_external_React_default().createElement(router_PlainText, {
      ref: node => this.plainText = node,
      defaultValue: this.state.defaultPlainText,
      onChange: () => this.setState({
        message: this.plainText.getValue()
      })
    })))))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: this.state.encrypted.length ? '' : 'd-none'
    }, /*#__PURE__*/router_external_React_default().createElement("dl", {
      className: "row"
    }, /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-sm-4 col-md-3 col-lg-2 mb-2 text-nowrap"
    }, router_map.encrypt_encrypted_for_label), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-sm-8 col-md-9 col-lg-10"
    }, this.state.recipients.map(recipient => recipient.email).join(', ')), this.state.signingKey && /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("dt", {
      className: "col-sm-4 col-md-3 col-lg-2 mb-2 text-nowrap"
    }, router_map.encrypt_signed_as_label), /*#__PURE__*/router_external_React_default().createElement("dd", {
      className: "col-sm-8 col-md-9 col-lg-10"
    }, `${this.state.signingKey.name} (${this.state.signingKey.email})`))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.encrypt_encrypted_files_label), /*#__PURE__*/router_external_React_default().createElement("div", {
      ref: ref => this.fileDownloadElements = ref
    }, /*#__PURE__*/router_external_React_default().createElement(router_FileDownloadPanel, {
      className: "d-inline-flex flex-column align-items-start",
      files: this.state.encrypted,
      onCopyToClipboard: this.handleCopyToClipboard
    }))))), this.state.waiting && /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0,
      fullscreen: true
    })), /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.showSigningKeyModal,
      toggle: () => this.setState(prevState => ({
        showSigningKeyModal: !prevState.showSigningKeyModal
      })),
      title: router_map.encrypt_change_signer_dialog_title,
      hideFooter: true
    }, /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.encrypt_change_signer_dialog_signer_label), /*#__PURE__*/router_external_React_default().createElement("select", {
      className: "custom-select",
      value: this.state.selectedSigningKeyFpr ? this.state.selectedSigningKeyFpr : this.state.defaultKeyFpr,
      onChange: event => this.setState({
        selectedSigningKeyFpr: event.target.value
      })
    }, this.state.signingKeys.map(key => /*#__PURE__*/router_external_React_default().createElement("option", {
      value: key.fingerprint,
      key: key.fingerprint
    }, `${key.userId} - ${key.keyId}`)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-6"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-secondary btn-block",
      onClick: () => this.setState({
        showSigningKeyModal: false
      })
    }, router_map.dialog_cancel_btn)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-6"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState(prevState => ({
        signingKey: prevState.signingKeys.find(key => key.fingerprint === prevState.selectedSigningKeyFpr),
        showSigningKeyModal: false
      })),
      className: "btn btn-primary btn-block"
    }, router_map.change_link)))))), /*#__PURE__*/router_external_React_default().createElement(router_Notifications, {
      items: !this.state.waiting ? this.state.notifications : []
    }));
  }
}
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/decrypt/Decrypt.scss
var router_Decrypt = __webpack_require__(5624);
;// ./src/app/decrypt/Decrypt.scss

      
      
      
      
      
      
      
      
      

var router_Decrypt_options = {};

router_Decrypt_options.styleTagTransform = (router_styleTagTransform_default());
router_Decrypt_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_Decrypt_options.insert = router_insertBySelector_default().bind(null, "head");
router_Decrypt_options.domAPI = (router_styleDomAPI_default());
router_Decrypt_options.insertStyleElement = (router_insertStyleElement_default());

var router_Decrypt_update = router_injectStylesIntoStyleTag_default()(router_Decrypt/* default */.A, router_Decrypt_options);




       /* harmony default export */ const router_decrypt_Decrypt = (router_Decrypt/* default */.A && router_Decrypt/* default */.A.locals ? router_Decrypt/* default */.A.locals : undefined);

;// ./src/app/decrypt/Decrypt.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */












router_register(['alert_header_error', 'decrypt_decrypted_files_label', 'decrypt_file_error_header', 'decrypt_header', 'decrypt_header_success', 'decrypt_text_area_label', 'decrypt_text_decryption_btn', 'decrypt_text_error_header', 'editor_encrypt_button', 'editor_label_attachments', 'encrypt_download_all_button', 'file_read_error', 'form_back', 'notification_text_copy_to_clipboard', 'signer_unknown', 'text_decrypt_button', 'upload_quota_exceeded_warning']);
class router_Decrypt_Decrypt extends (router_external_React_default()).Component {
  constructor() {
    super();
    this.state = {
      initializing: false,
      waiting: false,
      files: [],
      showTextInput: false,
      message: '',
      decrypted: [],
      notifications: []
    };
    this.handleDownloadAll = this.handleDownloadAll.bind(this);
    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);
  }
  componentDidMount() {
    this.fileUpload = new router_FileUpload();
  }
  async handleDecrypt() {
    this.setState({
      waiting: true
    });
    if (this.state.files.length > 0) {
      await this.decryptFiles(this.state.files);
    }
    if (this.state.message !== '') {
      await this.decryptMessage(this.state.message);
    }
    this.setState({
      waiting: false
    });
  }
  handleBack() {
    this.setState({
      decrypted: []
    });
  }
  async decryptMessage(message) {
    try {
      const armored = router_normalizeArmored(message, /-----BEGIN PGP MESSAGE-----[\s\S]+?-----END PGP MESSAGE-----/);
      const {
        data,
        signatures
      } = await router_port.send('decrypt-message', {
        armored,
        uiLogSource: 'security_log_decrypt_ui'
      });
      const content = router_encodeUtf8(data);
      const signer = await this.getSignerDetails(signatures);
      this.setState(prevState => ({
        decrypted: [...prevState.decrypted, this.createFileObject({
          content,
          armored: message,
          filename: 'text.txt',
          signer,
          mimeType: 'text/plain'
        })]
      }));
    } catch (error) {
      this.setErrorNotification(error);
    }
  }
  decryptFiles(encryptedFiles) {
    return Promise.all(encryptedFiles.map(async encryptedFile => {
      try {
        const {
          data: content,
          filename,
          signatures
        } = await router_port.send('decrypt-file', {
          encryptedFile,
          uiLogSource: 'security_log_decrypt_ui'
        });
        const signer = await this.getSignerDetails(signatures);
        this.setState(prevState => ({
          decrypted: [...prevState.decrypted, this.createFileObject({
            content,
            filename,
            signer,
            mimeType: 'application/octet-stream'
          })]
        }));
      } catch (error) {
        this.setErrorNotification(error, encryptedFile.name);
      }
    }));
  }
  setErrorNotification(error, filename = '', source = 'decrypt') {
    const notification = {
      id: Date.now(),
      type: 'error',
      message: error.message
    };
    if (source === 'decrypt') {
      notification.header = filename ? router_get('decrypt_file_error_header', [filename]) : router_map.decrypt_text_error_header;
    } else {
      notification.header = router_get('file_read_error', [filename]);
    }
    if (error.code === 'NO_KEY_FOUND') {
      notification.hideDelay = 5500;
    }
    this.setState(prevState => ({
      notifications: [...prevState.notifications, notification]
    }));
  }
  async getSignerDetails(signatures) {
    if (!signatures.length) {
      return {
        label: router_map.file_not_signed,
        type: 'info'
      };
    }
    const signature = signatures[0];
    const keyId = signature.keyId ? signature.keyId : signature.fingerprint.substring(signature.fingerprint.length - 16);
    if (signature.valid === null) {
      return {
        label: `${router_get('file_signed', router_map.signer_unknown)} (${router_map.keygrid_keyid} ${keyId.toUpperCase()})`,
        type: 'warning'
      };
    }
    if (signature.valid) {
      const {
        name = router_map.signer_unknown
      } = signature.keyDetails || {};
      return {
        label: `${router_get('file_signed', name)} (${router_map.keygrid_keyid} ${keyId.toUpperCase()})`,
        type: 'success'
      };
    } else {
      return {
        label: router_map.file_invalid_signed,
        type: 'danger'
      };
    }
  }
  createFileObject({
    content,
    filename,
    signer,
    mimeType,
    armored
  }) {
    const file = {
      id: router_getUUID(),
      name: filename,
      signer
    };
    if (armored) {
      file.onShowPopup = () => this.handleOpenDecryptMessagePopup(armored);
    }
    // set MIME type fix to application/octet-stream as other types can be exploited in Chrome
    mimeType = 'application/octet-stream';
    const blob = new Blob([typeof content === 'string' ? router_str2ab(content) : content], {
      type: mimeType
    });
    file.objectURL = window.URL.createObjectURL(blob);
    return file;
  }
  async handleOpenDecryptMessagePopup(armored) {
    await router_port.send('decrypt-message-init');
    router_port.emit('decrypt-message-popup', {
      armored
    });
  }
  handleAddFile(files) {
    files = Array.from(files);
    const filesSize = files.reduce((total, file) => total + file.size, 0);
    const uploadedSize = this.state.files.reduce((total, file) => total + file.size, 0);
    const currentAttachmentsSize = uploadedSize + filesSize;
    if (currentAttachmentsSize > router_MAX_FILE_UPLOAD_SIZE) {
      this.setState({
        notifications: [{
          id: Date.now(),
          header: router_map.alert_header_error,
          message: `${router_map.upload_quota_exceeded_warning} ${Math.floor(router_MAX_FILE_UPLOAD_SIZE / (1024 * 1024))}MB.`,
          type: 'error'
        }]
      });
      return;
    }
    for (const file of files) {
      try {
        this.addFile(file);
      } catch (error) {
        this.setErrorNotification(error, file.name, 'upload');
      }
    }
  }
  addFile(file) {
    if (router_isOversize(file)) {
      throw new Error(router_map.encrypt_upload_file_warning_too_big);
    }
    this.fileUpload.readFile(file).then(file => this.setState(prevState => ({
      files: [...prevState.files, file]
    })));
  }
  handleRemoveFile(id) {
    this.setState(prevState => ({
      files: prevState.files.filter(file => file.id !== id)
    }));
  }
  handleDownloadAll() {
    const fileElements = this.fileDownloadElements.getElementsByClassName('file-header');
    for (const fileElement of fileElements) {
      setTimeout(() => fileElement.click(), 50);
    }
  }
  handleCopyToClipboard(text) {
    const temporay = document.createElement('textarea');
    document.body.appendChild(temporay);
    temporay.value = text;
    temporay.select();
    document.execCommand('copy');
    document.body.removeChild(temporay);
    this.setState({
      notifications: [{
        id: Date.now(),
        message: router_map.notification_text_copy_to_clipboard,
        hideDelay: 2500
      }]
    });
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "decrypt jumbotron"
    }, /*#__PURE__*/router_external_React_default().createElement("section", {
      className: "card"
    }, this.state.initializing ? /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0
    }) : /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-body"
    }, this.state.decrypted.length > 0 && /*#__PURE__*/router_external_React_default().createElement("nav", {
      "aria-label": "breadcrumb"
    }, /*#__PURE__*/router_external_React_default().createElement("ol", {
      className: "breadcrumb bg-transparent p-0"
    }, /*#__PURE__*/router_external_React_default().createElement("li", {
      className: "breadcrumb-item"
    }, /*#__PURE__*/router_external_React_default().createElement("a", {
      onClick: () => this.handleBack()
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-left",
      "aria-hidden": "true"
    }), " ", router_map.decrypt_header)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-title d-flex flex-wrap align-items-center w-100"
    }, /*#__PURE__*/router_external_React_default().createElement("h1", {
      className: "flex-shrink-0 mr-auto"
    }, !this.state.decrypted.length ? router_map.decrypt_header : router_map.decrypt_header_success), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "flex-shrink-0"
    }, !this.state.decrypted.length && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      disabled: this.state.files.length === 0 && this.state.message === '',
      onClick: () => this.handleDecrypt(),
      className: "btn btn-primary"
    }, router_map.text_decrypt_button), this.state.decrypted.length > 1 && /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.handleDownloadAll,
      className: "btn btn-primary"
    }, router_map.encrypt_download_all_button))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: this.state.decrypted.length ? 'd-none' : ''
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-5"
    }, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.editor_label_attachments), /*#__PURE__*/router_external_React_default().createElement(router_FileUpload_FileUpload, {
      files: this.state.files,
      filter: ['.asc', '.gpg'],
      onRemoveFile: id => this.handleRemoveFile(id),
      onChangeFileInput: files => this.handleAddFile(files)
    })), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, !this.state.showTextInput ? /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex justify-content-center"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState({
        showTextInput: true
      }),
      className: "btn btn-secondary"
    }, router_map.decrypt_text_decryption_btn)) : /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.decrypt_text_area_label), /*#__PURE__*/router_external_React_default().createElement("textarea", {
      className: "form-control mb-0",
      value: this.state.message,
      onChange: event => this.setState({
        message: event.target.value
      }),
      rows: 8,
      autoFocus: true,
      spellCheck: "false",
      autoComplete: "off"
    })))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: this.state.decrypted.length ? '' : 'd-none'
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("label", null, router_map.decrypt_decrypted_files_label), /*#__PURE__*/router_external_React_default().createElement("div", {
      ref: ref => this.fileDownloadElements = ref
    }, /*#__PURE__*/router_external_React_default().createElement(router_FileDownloadPanel, {
      className: "d-inline-flex flex-column align-items-start",
      files: this.state.decrypted,
      onCopyToClipboard: this.handleCopyToClipboard
    }))))), this.state.waiting && /*#__PURE__*/router_external_React_default().createElement(router_Spinner_Spinner, {
      delay: 0,
      fullscreen: true
    }))), /*#__PURE__*/router_external_React_default().createElement(router_Notifications, {
      items: !this.state.waiting ? this.state.notifications : []
    }));
  }
}
;// ./src/components/util/Trans.js


function router_Trans(props) {
  return /*#__PURE__*/router_external_React_default().createElement("span", null, props.id.split(/(<\d>.*?<\/\d>)/).map(value => {
    const tags = value.match(/(<(\d)>(.*?)<\/\d>)/);
    if (tags) {
      const comp = props.components[tags[2]];
      return /*#__PURE__*/router_external_React_default().cloneElement(comp, null, comp.props.children || tags[3]);
    } else {
      return value;
    }
  }));
}
router_Trans.propTypes = {
  id: (router_prop_types_default()).string,
  components: (router_prop_types_default()).array
};
;// ./src/app/settings/General.js
/**
 * Copyright (C) 2012-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['form_cancel', 'form_save', 'general_default_key_always', 'general_default_key_auto_sign', 'general_gnupg_check_availability', 'general_gnupg_installed_question', 'general_gnupg_not_available', 'general_gnupg_prefer', 'general_openpgp_current', 'general_openpgp_prefer', 'general_openpgp_preferences', 'general_prefer_gnupg_note', 'keygrid_default_key', 'settings_general']);
class router_General extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      auto_add_primary: false,
      auto_sign_msg: false,
      prefer_gnupg: false,
      modified: false,
      nativeMessaging: true
    };
    this.handleCheck = this.handleCheck.bind(this);
    this.handleSave = this.handleSave.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
  }
  componentDidMount() {
    this.loadPrefs();
    chrome.permissions.contains({
      permissions: ['nativeMessaging']
    }, nativeMessaging => this.setState({
      nativeMessaging
    }));
  }
  async loadPrefs() {
    const {
      general
    } = await router_port.send('get-prefs');
    this.setState({
      auto_add_primary: general.auto_add_primary,
      auto_sign_msg: general.auto_sign_msg,
      prefer_gnupg: general.prefer_gnupg,
      modified: false
    });
  }
  handleCheck({
    target
  }) {
    this.setState({
      [target.name]: target.checked,
      modified: true
    });
  }
  async handleSave() {
    const update = {
      general: {
        auto_add_primary: this.state.auto_add_primary,
        auto_sign_msg: this.state.auto_sign_msg,
        prefer_gnupg: this.state.prefer_gnupg
      }
    };
    await router_port.send('set-prefs', {
      prefs: update
    });
    this.setState({
      modified: false
    });
  }
  handleCancel() {
    this.loadPrefs();
  }
  handlePreferGnuPG(prefer_gnupg) {
    this.setState(prevState => ({
      prefer_gnupg,
      modified: prevState.modified || prevState.prefer_gnupg !== prefer_gnupg
    }));
  }
  requestNativeMessagingPermission() {
    chrome.permissions.request({
      permissions: ['nativeMessaging']
    }, nativeMessaging => this.setState({
      nativeMessaging
    }));
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "general"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "mb-4"
    }, router_map.settings_general), /*#__PURE__*/router_external_React_default().createElement("form", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.keygrid_default_key), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      id: "auto_add_primary",
      name: "auto_add_primary",
      checked: this.state.auto_add_primary,
      onChange: this.handleCheck
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "auto_add_primary"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.general_default_key_always))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      id: "auto_sign_msg",
      name: "auto_sign_msg",
      checked: this.state.auto_sign_msg,
      onChange: this.handleCheck
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "auto_sign_msg"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.general_default_key_auto_sign)))), /*#__PURE__*/router_external_React_default().createElement(router_AppOptions.Consumer, null, ({
      gnupg
    }) => /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.general_openpgp_preferences), /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.general_openpgp_current, " ", /*#__PURE__*/router_external_React_default().createElement("b", null, gnupg && this.state.prefer_gnupg ? 'GnuPG' : 'OpenPGP.js')), this.state.nativeMessaging ? gnupg ? /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "mr-3"
    }, router_map.general_openpgp_prefer), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-group btn-group-sm",
      role: "group"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.handlePreferGnuPG(false),
      className: `btn btn-${this.state.prefer_gnupg ? 'secondary' : 'primary'}`
    }, "OpenPGP.js"), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.handlePreferGnuPG(true),
      className: `btn btn-${!this.state.prefer_gnupg ? 'secondary' : 'primary'}`
    }, "GnuPG"))), /*#__PURE__*/router_external_React_default().createElement("small", {
      className: "form-text text-muted"
    }, router_map.general_prefer_gnupg_note)) : /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "alert alert-info",
      role: "alert"
    }, /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("strong", null, router_map.general_gnupg_not_available)), /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.general_gnupg_installed_question,
      components: [/*#__PURE__*/router_external_React_default().createElement("a", {
        key: "0",
        href: "https://www.gnupg.org/download/index.html",
        target: "_blank",
        rel: "noopener noreferrer",
        className: "btn btn-secondary btn-sm my-1",
        role: "button"
      }), /*#__PURE__*/router_external_React_default().createElement("button", {
        key: "1",
        type: "button",
        onClick: () => chrome.runtime.reload(),
        className: "btn btn-secondary btn-sm"
      }), /*#__PURE__*/router_external_React_default().createElement("a", {
        key: "2",
        href: "https://github.com/mailvelope/mailvelope/wiki/Mailvelope-GnuPG-integration",
        target: "_blank",
        rel: "noopener noreferrer"
      })]
    })))) : /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "mr-2"
    }, router_map.general_gnupg_prefer), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.requestNativeMessagingPermission(),
      className: "btn btn-secondary btn-sm"
    }, router_map.general_gnupg_check_availability)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.handleSave,
      className: "btn btn-primary",
      disabled: !this.state.modified
    }, router_map.form_save), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: this.handleCancel,
      className: "btn btn-secondary",
      disabled: !this.state.modified
    }, router_map.form_cancel))));
  }
}
;// ./src/app/settings/Security.js
/**
 * Copyright (C) 2012-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */






router_register(['form_cancel', 'form_save', 'reload_tab', 'security_cache_header', 'security_cache_help', 'security_cache_off', 'security_cache_on', 'security_cache_time', 'security_display_decrypted', 'security_display_inline', 'security_display_popup', 'security_hide_armored_head', 'security_openpgp_header', 'settings_security']);
class router_Security extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      display_decrypted: 'inline',
      password_cache: true,
      password_timeout: 30,
      hide_armored_header: false,
      modified: false,
      errors: {}
    };
    this.handleChange = this.handleChange.bind(this);
    this.handleSave = this.handleSave.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
  }
  componentDidMount() {
    this.loadPrefs();
  }
  async loadPrefs() {
    const {
      security
    } = await router_port.send('get-prefs');
    this.setState({
      display_decrypted: security.display_decrypted,
      password_cache: security.password_cache,
      password_timeout: security.password_timeout,
      hide_armored_header: security.hide_armored_header
    });
  }
  handleChange(event) {
    const target = event.target;
    this.setState(({
      errors: err
    }) => {
      const {
        [target.name]: deleted,
        ...errors
      } = err;
      return {
        [target.name]: target.type === 'checkbox' ? target.checked : router_str2bool(target.value),
        modified: true,
        errors
      };
    });
  }
  async handleSave() {
    const pwdTimeout = this.validatePwdTimeout();
    if (pwdTimeout !== false) {
      const update = {
        security: {
          display_decrypted: this.state.display_decrypted,
          password_cache: this.state.password_cache,
          password_timeout: pwdTimeout,
          hide_armored_header: this.state.hide_armored_header
        }
      };
      await router_port.send('set-prefs', {
        prefs: update
      });
      this.setState({
        password_timeout: pwdTimeout,
        modified: false
      }, () => this.props.onSetNotification({
        message: router_map.reload_tab
      }));
    }
  }
  validatePwdTimeout() {
    // password timeout betweet 1-999
    const timeout = parseInt(this.state.password_timeout);
    if (isNaN(timeout) || timeout < 1 || timeout > 999) {
      this.setState({
        errors: {
          password_timeout: new Error()
        }
      });
      return false;
    }
    return timeout;
  }
  handleCancel() {
    this.loadPrefs();
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "security"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "mb-4"
    }, router_map.settings_security), /*#__PURE__*/router_external_React_default().createElement("form", {
      className: "form"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.security_cache_header), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-inline"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-radio custom-control-inline mr-2"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "radio",
      name: "password_cache",
      id: "pwdCacheRadios1",
      value: "true",
      checked: this.state.password_cache,
      onChange: this.handleChange,
      className: "custom-control-input"
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "pwdCacheRadios1"
    }, router_map.security_cache_on)), /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "text",
      maxLength: "3",
      id: "pwdCacheTime",
      name: "password_timeout",
      value: this.state.password_timeout,
      style: {
        width: '50px'
      },
      onChange: this.handleChange,
      className: `form-control mr-2 text-right ${this.state.errors.password_timeout ? 'is-invalid' : ''}`
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "my-1 mr-2",
      htmlFor: "pwdCacheTime"
    }, router_map.security_cache_time), this.state.errors.password_timeout && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "invalid-feedback mb-2"
    }, router_map.security_cache_help)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-radio custom-control-inline mr-2"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "radio",
      name: "password_cache",
      id: "pwdCacheRadios2",
      value: "false",
      checked: !this.state.password_cache,
      onChange: this.handleChange,
      className: "custom-control-input"
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "pwdCacheRadios2"
    }, router_map.security_cache_off))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.security_display_decrypted), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-radio"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "radio",
      name: "display_decrypted",
      id: "decryptRadios2",
      value: "popup",
      checked: this.state.display_decrypted === 'popup',
      onChange: this.handleChange,
      className: "custom-control-input"
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "decryptRadios2"
    }, router_map.security_display_popup)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-radio"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      type: "radio",
      name: "display_decrypted",
      id: "decryptRadios1",
      value: "inline",
      checked: this.state.display_decrypted === 'inline',
      onChange: this.handleChange,
      className: "custom-control-input"
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "decryptRadios1"
    }, router_map.security_display_inline))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.security_openpgp_header), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      checked: this.state.hide_armored_header,
      onChange: this.handleChange,
      id: "hideArmoredHeader",
      name: "hide_armored_header"
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "hideArmoredHeader"
    }, router_map.security_hide_armored_head))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      id: "secBtnSave",
      className: "btn btn-primary",
      onClick: this.handleSave,
      disabled: !this.state.modified || Object.keys(this.state.errors).length
    }, router_map.form_save), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-secondary",
      onClick: this.handleCancel,
      disabled: !this.state.modified
    }, router_map.form_cancel))));
  }
}
router_Security.propTypes = {
  onSetNotification: (router_prop_types_default()).func
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/settings/SecurityBackground.scss
var router_SecurityBackground = __webpack_require__(8747);
;// ./src/app/settings/SecurityBackground.scss

      
      
      
      
      
      
      
      
      

var router_SecurityBackground_options = {};

router_SecurityBackground_options.styleTagTransform = (router_styleTagTransform_default());
router_SecurityBackground_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_SecurityBackground_options.insert = router_insertBySelector_default().bind(null, "head");
router_SecurityBackground_options.domAPI = (router_styleDomAPI_default());
router_SecurityBackground_options.insertStyleElement = (router_insertStyleElement_default());

var router_SecurityBackground_update = router_injectStylesIntoStyleTag_default()(router_SecurityBackground/* default */.A, router_SecurityBackground_options);




       /* harmony default export */ const router_settings_SecurityBackground = (router_SecurityBackground/* default */.A && router_SecurityBackground/* default */.A.locals ? router_SecurityBackground/* default */.A.locals : undefined);

;// ./src/app/settings/SecurityBackground.js
/**
 * Copyright (C) 2012-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */







router_register(['settings_security_background', 'security_background_text', 'security_background_icons_text', 'security_background_color_text', 'form_save', 'form_cancel']);
class router_SecurityBackground_SecurityBackground extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      bgIcon: '',
      bgColor: '',
      modified: false
    };
    this.handleSave = this.handleSave.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
  }
  componentDidMount() {
    this.loadPrefs();
  }
  async loadPrefs() {
    const prefs = await router_port.send('get-prefs');
    this.setState({
      bgIcon: prefs.security.bgIcon,
      bgColor: prefs.security.bgColor
    });
  }
  handleClickBgIcon(icon) {
    if (this.state.bgIcon !== icon) {
      this.setState({
        bgIcon: icon,
        modified: true
      });
    }
  }
  handleClickColorIcon(color) {
    if (this.state.bgColor !== color) {
      this.setState({
        bgColor: color,
        modified: true
      });
    }
  }
  async handleSave() {
    const update = {
      security: {
        bgIcon: this.state.bgIcon,
        bgColor: this.state.bgColor,
        personalized: true
      }
    };
    await this.props.onChangePrefs(update);
    router_port.emit('security-background-update');
    this.setState({
      modified: false
    });
  }
  handleCancel() {
    this.loadPrefs();
    this.setState({
      modified: false
    });
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "securityBackground"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "mb-4"
    }, router_map.settings_security_background), /*#__PURE__*/router_external_React_default().createElement("form", {
      className: "form"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-4",
      id: "securityTokenPanel"
    }, /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.security_background_text), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "lead"
    }, /*#__PURE__*/router_external_React_default().createElement("b", null, router_map.security_background_icons_text)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "securityBgContainer",
      className: "d-flex flex-wrap"
    }, Object.keys(router_common_namespaceObject.L).map(index => /*#__PURE__*/router_external_React_default().createElement("a", {
      key: index,
      className: `securityBgLink ${this.state.bgIcon === index ? 'active' : ''}`,
      tabIndex: "0",
      onClick: () => this.handleClickBgIcon(index)
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: `securityBgItem symbol ${router_common_namespaceObject.L[index]}`
    }))))), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "lead"
    }, /*#__PURE__*/router_external_React_default().createElement("b", null, router_map.security_background_color_text)), /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "securityBgContainer",
      className: "d-flex flex-wrap"
    }, Object.keys(router_common_namespaceObject.J).map(index => /*#__PURE__*/router_external_React_default().createElement("a", {
      key: index,
      className: `securityBgLink ${this.state.bgColor === index ? 'active' : ''}`,
      tabIndex: "0",
      onClick: () => this.handleClickColorIcon(index)
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: `securityBgItem color ${index}`
    })))))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      id: "secBtnSave",
      onClick: this.handleSave,
      className: "btn btn-primary",
      disabled: !this.state.modified
    }, router_map.form_save), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      id: "secBtnCancel",
      onClick: this.handleCancel,
      className: "btn btn-secondary",
      disabled: !this.state.modified
    }, router_map.form_cancel))));
  }
}
router_SecurityBackground_SecurityBackground.propTypes = {
  onChangePrefs: (router_prop_types_default()).func.isRequired
};
;// ./src/app/settings/components/watchListEditor.js
/**
 * Copyright (C) 2016 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['alert_invalid_domainmatchpattern_warning', 'alert_no_domainmatchpattern_warning', 'form_cancel', 'form_ok', 'keygrid_delete', 'watchlist_expose_api', 'watchlist_record_title', 'watchlist_title_active', 'watchlist_title_frame', 'watchlist_title_https_only', 'watchlist_title_scan', 'watchlist_title_site']);
function router_WatchListEditor(props) {
  return /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
    isOpen: props.isOpen,
    toggle: props.toggle,
    title: router_map.watchlist_record_title,
    onHide: props.onHide,
    footer: /*#__PURE__*/router_external_React_default().createElement(router_EditorFooter, {
      onAddMatchPattern: props.onAddMatchPattern,
      onSave: props.onSave,
      onCancel: props.onCancel
    })
  }, props.site && /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("form", {
    role: "form"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "form-group"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "custom-control custom-switch"
  }, /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "checkbox",
    className: "custom-control-input",
    onChange: e => props.onChangeSite('active', e.target.checked),
    id: "switchWebSite",
    checked: props.site.active
  }), /*#__PURE__*/router_external_React_default().createElement("label", {
    className: "custom-control-label",
    htmlFor: "switchWebSite"
  }, router_map.watchlist_title_active))), /*#__PURE__*/router_external_React_default().createElement("div", null, /*#__PURE__*/router_external_React_default().createElement("label", {
    htmlFor: "webSiteName"
  }, router_map.watchlist_title_site), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "d-flex flex-wrap align-items-center align-content-stretch"
  }, /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "text",
    value: props.site.site,
    onChange: e => props.onChangeSite('site', e.target.value),
    className: "form-group form-control w-auto flex-grow-1 mr-2",
    id: "webSiteName",
    placeholder: "e.g. GMX or GMail"
  }), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "form-group custom-control custom-switch"
  }, /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "checkbox",
    className: "custom-control-input",
    onChange: e => props.onChangeSite('https_only', e.target.checked),
    id: "switchHttpsOnly",
    checked: props.site.https_only
  }), /*#__PURE__*/router_external_React_default().createElement("label", {
    className: "custom-control-label text-nowrap",
    htmlFor: "switchHttpsOnly"
  }, router_map.watchlist_title_https_only)))), /*#__PURE__*/router_external_React_default().createElement("table", {
    className: "table table-custom table-sm table-hover border-bottom-0 mb-0",
    id: "watchList"
  }, /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.watchlist_title_scan), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.watchlist_title_frame), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.watchlist_expose_api), /*#__PURE__*/router_external_React_default().createElement("th", null))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, props.site.frames.map((frame, index) => /*#__PURE__*/router_external_React_default().createElement("tr", {
    key: index
  }, /*#__PURE__*/router_external_React_default().createElement("td", null, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "custom-control custom-switch"
  }, /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "checkbox",
    className: "custom-control-input",
    onChange: e => props.onChangeFrame({
      scan: e.target.checked
    }, index),
    id: `frame_scan${index}`,
    checked: frame.scan
  }), /*#__PURE__*/router_external_React_default().createElement("label", {
    className: "custom-control-label",
    htmlFor: `frame_scan${index}`
  }))), /*#__PURE__*/router_external_React_default().createElement("td", {
    className: "w-100"
  }, /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "text",
    value: frame.frame,
    onChange: e => props.onChangeFrame({
      frame: e.target.value
    }, index),
    className: `form-control matchPatternName w-100 ${props.errors[`frame${index}`] ? 'is-invalid' : ''}`,
    placeholder: "e.g.: *.gmx.de"
  }), /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "invalid-feedback"
  }, router_map.alert_invalid_domainmatchpattern_warning)), /*#__PURE__*/router_external_React_default().createElement("td", null, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "custom-control custom-switch"
  }, /*#__PURE__*/router_external_React_default().createElement("input", {
    type: "checkbox",
    className: "custom-control-input",
    onChange: e => props.onChangeFrame({
      api: e.target.checked
    }, index),
    id: `frame_api${index}`,
    checked: frame.api
  }), /*#__PURE__*/router_external_React_default().createElement("label", {
    className: "custom-control-label",
    htmlFor: `frame_api${index}`
  }))), /*#__PURE__*/router_external_React_default().createElement("td", {
    className: "text-right"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "actions"
  }, /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    onClick: () => props.onDeleteMatchPattern(index),
    className: "btn btn-sm btn-secondary deleteMatchPatternBtn text-nowrap"
  }, /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "icon icon-delete",
    "aria-hidden": "true"
  })))))))), props.errors.frames && /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "invalid-feedback d-block"
  }, router_map.alert_no_domainmatchpattern_warning))));
}
router_WatchListEditor.propTypes = {
  site: (router_prop_types_default()).object,
  onAddMatchPattern: (router_prop_types_default()).func,
  onDeleteMatchPattern: (router_prop_types_default()).func,
  onHide: (router_prop_types_default()).func,
  onCancel: (router_prop_types_default()).func,
  toggle: (router_prop_types_default()).func,
  hide: (router_prop_types_default()).bool,
  onSave: (router_prop_types_default()).func,
  onChangeSite: (router_prop_types_default()).func,
  onChangeFrame: (router_prop_types_default()).func,
  isOpen: (router_prop_types_default()).bool,
  errors: (router_prop_types_default()).object
};
function router_EditorFooter(props) {
  return /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "modal-footer"
  }, /*#__PURE__*/router_external_React_default().createElement("div", {
    className: "d-flex w-100"
  }, /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    onClick: props.onAddMatchPattern,
    className: "btn btn-secondary mr-auto"
  }, /*#__PURE__*/router_external_React_default().createElement("span", {
    className: "icon icon-add",
    "aria-hidden": "true"
  }), " ", router_map.watchlist_title_frame), /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    onClick: props.onCancel,
    className: "btn btn-secondary mr-1"
  }, router_map.form_cancel), /*#__PURE__*/router_external_React_default().createElement("button", {
    type: "button",
    onClick: props.onSave,
    className: "btn btn-primary"
  }, router_map.form_ok)));
}
router_EditorFooter.propTypes = {
  onAddMatchPattern: (router_prop_types_default()).func,
  onSave: (router_prop_types_default()).func,
  onCancel: (router_prop_types_default()).func
};
;// ./src/app/settings/WatchList.js
/**
 * Copyright (C) 2012-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */







router_register(['keygrid_delete', 'settings_watchlist', 'watchlist_command_create', 'watchlist_command_edit', 'watchlist_delete_confirmation', 'watchlist_remove_dialog_title', 'watchlist_title_active', 'watchlist_title_site']);
class router_WatchList extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      watchList: [],
      editorSite: null,
      editorIndex: null,
      modified: false,
      showEditor: false,
      errors: {}
    };
    this.handleChangeSite = this.handleChangeSite.bind(this);
    this.handleChangeFrame = this.handleChangeFrame.bind(this);
    this.handleDeleteWatchListEntry = this.handleDeleteWatchListEntry.bind(this);
  }
  componentDidMount() {
    this.loadWatchList().then(() => {
      // watchlist push scenario
      if (/\/push$/.test(this.props.location.pathname)) {
        router_getAppDataSlot().then(site => this.addToWatchList(site));
      }
    });
  }
  loadWatchList() {
    return router_port.send('getWatchList').then(watchList => this.setState({
      watchList
    }));
  }
  saveWatchListData() {
    router_port.emit('set-watch-list', {
      data: this.state.watchList
    });
  }
  showWatchListEditor(index) {
    this.setState(prevState => ({
      editorSite: this.copySite(prevState.watchList[index]),
      editorIndex: index,
      showEditor: true
    }));
  }
  copySite(site) {
    const copy = {
      ...site
    };
    copy.frames = [...(site.frames || [])];
    return copy;
  }
  handleDeleteWatchListEntry() {
    this.setState(prevState => {
      const newList = [...prevState.watchList];
      newList.splice(prevState.editorIndex, 1);
      return {
        watchList: newList,
        showDeleteModal: false
      };
    }, () => this.saveWatchListData());
  }
  addWatchListEntry() {
    this.setState(prevState => ({
      editorSite: {
        site: '',
        active: true,
        https_only: true,
        frames: [{
          scan: true,
          frame: '',
          api: false
        }]
      },
      editorIndex: prevState.watchList.length,
      showEditor: true
    }));
  }

  /* Watchlist Editor Handlers */

  handleHideWatchListEditor() {
    this.setState({
      editorSite: null,
      editorIndex: null,
      modified: false
    });
  }
  static validFrame(input) {
    return /^(\*\.)?((\w+(-+\w+)*\.)+(\w{2,})|localhost)(:\d{1,5})?$/.test(input);
  }
  handleSaveWatchListEditor() {
    const errors = {};
    for (const [index, value] of this.state.editorSite.frames.entries()) {
      if (!router_WatchList.validFrame(value.frame)) {
        errors[`frame${index}`] = new Error();
      }
    }
    if (this.state.editorSite.frames.length < 1) {
      errors.frames = new Error();
    }
    if (Object.keys(errors).length) {
      this.setState({
        errors
      });
      return;
    }
    this.setState(prevState => {
      const newList = [...prevState.watchList];
      newList[prevState.editorIndex] = prevState.editorSite;
      return {
        watchList: newList,
        showEditor: false
      };
    }, () => this.saveWatchListData());
  }
  handleChangeSite(key, value) {
    this.modifyEditorSite(site => site[key] = value);
  }
  handleChangeFrame(change, index) {
    this.modifyEditorSite(site => {
      if (!site.frames[index]) {
        site.frames[index] = {};
      }
      Object.assign(site.frames[index], change);
    });
  }
  modifyEditorSite(modify) {
    this.setState(prevState => {
      const site = this.copySite(prevState.editorSite);
      modify(site);
      return {
        editorSite: site,
        modified: true,
        errors: {}
      };
    });
  }
  handleAddMatchPattern() {
    this.modifyEditorSite(site => site.frames.push({
      scan: true,
      frame: '',
      api: false
    }));
  }
  handleDeleteMatchPattern(index) {
    this.modifyEditorSite(site => site.frames.splice(index, 1));
  }
  addToWatchList({
    domain,
    protocol,
    port
  }) {
    if (domain.startsWith('www.')) {
      domain = domain.slice(4);
    }
    const hostAndPort = `${domain}${port ? `:${port}` : ''}`;
    this.setState(prevState => {
      let watchListIndex;
      const site = prevState.watchList.find((site, index) => {
        watchListIndex = index;
        return site.site === hostAndPort;
      });
      if (site) {
        return {
          editorSite: this.copySite(site),
          editorIndex: watchListIndex,
          modified: false,
          showEditor: true
        };
      } else {
        return {
          editorSite: {
            site: hostAndPort,
            active: true,
            https_only: protocol === 'https' ? true : false,
            frames: [{
              scan: true,
              frame: `*.${hostAndPort}`,
              api: false
            }]
          },
          editorIndex: prevState.watchList.length,
          modified: true,
          showEditor: true
        };
      }
    });
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "watchlist"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "mb-4"
    }, router_map.settings_watchlist), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.addWatchListEntry(),
      className: "btn btn-secondary"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-add",
      "aria-hidden": "true"
    }), " ", router_map.watchlist_command_create)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "table-responsive"
    }, /*#__PURE__*/router_external_React_default().createElement("table", {
      className: "table table-hover table-custom mb-0",
      id: "watchListTable"
    }, /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "text-center"
    }, router_map.watchlist_title_active), /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "w-100"
    }, router_map.watchlist_title_site), /*#__PURE__*/router_external_React_default().createElement("th", null))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, this.state.watchList.map((site, index) => /*#__PURE__*/router_external_React_default().createElement("tr", {
      key: index,
      onClick: () => this.showWatchListEditor(index)
    }, /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: `icon icon-marker text-${site.active ? 'success' : 'danger'}`,
      "aria-hidden": "true"
    })), /*#__PURE__*/router_external_React_default().createElement("td", null, site.site), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "actions"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: e => {
        e.stopPropagation();
        this.setState({
          showDeleteModal: true,
          editorIndex: index
        });
      },
      className: "btn btn-secondary"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-delete",
      "aria-hidden": "true"
    })), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-right",
      "aria-hidden": "true"
    })))))))), /*#__PURE__*/router_external_React_default().createElement(router_SimpleDialog, {
      isOpen: this.state.showDeleteModal,
      toggle: () => this.setState(prevState => ({
        showDeleteModal: !prevState.showDeleteModal
      })),
      onHide: () => this.setState({
        editorIndex: null
      }),
      title: router_map.watchlist_remove_dialog_title,
      message: router_map.watchlist_delete_confirmation,
      onOk: this.handleDeleteWatchListEntry,
      onCancel: () => this.setState({
        showDeleteModal: false
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_WatchListEditor, {
      isOpen: this.state.showEditor,
      toggle: () => this.setState(prevState => ({
        showEditor: !prevState.showEditor
      })),
      site: this.state.editorSite,
      errors: this.state.errors,
      onHide: () => this.handleHideWatchListEditor(),
      onCancel: () => this.setState({
        showEditor: false,
        errors: {}
      }),
      onSave: () => this.handleSaveWatchListEditor(),
      onChangeSite: this.handleChangeSite,
      onChangeFrame: this.handleChangeFrame,
      onAddMatchPattern: () => this.handleAddMatchPattern(),
      onDeleteMatchPattern: index => this.handleDeleteMatchPattern(index)
    }));
  }
}
router_WatchList.propTypes = {
  location: (router_prop_types_default()).object
};
;// ./src/app/settings/SecurityLog.js
/**
 * Copyright (C) 2014-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */




router_register(['settings_security_log', 'security_log_text', 'security_log_timestamp', 'security_log_source', 'security_log_action']);
class router_SecurityLog extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      secLog: []
    };
    this.autoRefresh = 0;
  }
  componentDidMount() {
    this.updateSecurityLog();
    this.autoRefresh = window.setInterval(() => this.updateSecurityLog(), 2000);
  }
  componentWillUnmount() {
    window.clearInterval(this.autoRefresh);
  }
  updateSecurityLog() {
    router_port.send('get-ui-log', {
      securityLogLength: this.state.secLog.length
    }).then(secLog => this.setState(prevState => ({
      secLog: secLog.reverse().concat(prevState.secLog)
    })));
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "securityLog"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "mb-4"
    }, router_map.settings_security_log), /*#__PURE__*/router_external_React_default().createElement("p", null, router_map.security_log_text), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "table-responsive"
    }, /*#__PURE__*/router_external_React_default().createElement("table", {
      className: "table table-hover table-custom mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.security_log_timestamp), /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "w-25"
    }, router_map.security_log_source), /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "w-50"
    }, router_map.security_log_action))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, this.state.secLog.map(log => /*#__PURE__*/router_external_React_default().createElement("tr", {
      key: log.timestamp
    }, /*#__PURE__*/router_external_React_default().createElement("td", {
      title: log.timestamp
    }, new Date(log.timestamp).toLocaleTimeString()), /*#__PURE__*/router_external_React_default().createElement("td", null, log.sourcei18n), /*#__PURE__*/router_external_React_default().createElement("td", null, log.typei18n)))))));
  }
}
;// ./src/app/settings/keyserver.js
/**
 * Copyright (C) 2016-2021 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */

/**
 * @fileOverview Implements the key server configuration ui in the
 * settings dialog
 */





router_register(['alert_header_warning', 'alert_header_error', 'form_cancel', 'form_save', 'keyserver_additionals_label', 'keyserver_autocrypt_lookup', 'keyserver_key_binding_header', 'keyserver_key_binding_label', 'keyserver_oks_lookup', 'keyserver_tofu_lookup', 'keyserver_verifying_servers', 'keyserver_wkd_lookup', 'learn_more_link', 'settings_keyserver']);
function router_initialState({
  prefs
}) {
  let autocrypt_lookup = false;
  let key_binding = false;
  let mvelo_tofu_lookup = false;
  let oks_lookup = false;
  let wkd_lookup = false;
  if (prefs) {
    autocrypt_lookup = prefs.keyserver.autocrypt_lookup;
    key_binding = prefs.keyserver.key_binding;
    mvelo_tofu_lookup = prefs.keyserver.mvelo_tofu_lookup;
    oks_lookup = prefs.keyserver.oks_lookup;
    wkd_lookup = prefs.keyserver.wkd_lookup;
  }
  return {
    autocrypt_lookup,
    key_binding,
    modified: false,
    mvelo_tofu_lookup,
    oks_lookup,
    previousPrefs: prefs,
    wkd_lookup
  };
}
class router_KeyServer extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = router_initialState(props);
    this.handleCheck = this.handleCheck.bind(this);
  }
  static getDerivedStateFromProps(props, state) {
    // reset state if prefs change
    if (props.prefs !== state.previousPrefs) {
      return router_initialState(props);
    }
    return null;
  }
  handleCheck(event) {
    const target = event.target;
    this.setState({
      [target.name]: target.checked,
      modified: true
    });
  }

  /**
   * Save the key server settings.
   */
  async handleSave() {
    const update = {
      keyserver: {
        autocrypt_lookup: this.state.autocrypt_lookup,
        key_binding: this.state.key_binding,
        mvelo_tofu_lookup: this.state.mvelo_tofu_lookup,
        oks_lookup: this.state.oks_lookup,
        wkd_lookup: this.state.wkd_lookup
      }
    };
    await this.props.onChangePrefs(update);
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "keyserver"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "mb-4"
    }, router_map.settings_keyserver), /*#__PURE__*/router_external_React_default().createElement("form", {
      className: "form mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.keyserver_verifying_servers), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      id: "keyserverTOFULookup",
      name: "mvelo_tofu_lookup",
      checked: this.state.mvelo_tofu_lookup,
      onChange: this.handleCheck
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "keyserverTOFULookup"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.keyserver_tofu_lookup), ". ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://www.mailvelope.com/faq#key_server",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.learn_more_link))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      id: "oksLookup",
      name: "oks_lookup",
      checked: this.state.oks_lookup,
      onChange: this.handleCheck
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "oksLookup"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.keyserver_oks_lookup,
      components: [/*#__PURE__*/router_external_React_default().createElement("a", {
        key: "0",
        href: "https://keys.openpgp.org",
        target: "_blank",
        rel: "noopener noreferrer"
      })]
    })), "."))), /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.keyserver_additionals_label), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      id: "keyserverWKDLookup",
      name: "wkd_lookup",
      checked: this.state.wkd_lookup,
      onChange: this.handleCheck
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "keyserverWKDLookup"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.keyserver_wkd_lookup), ". ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://www.mailvelope.com/faq#web_key_directory",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.learn_more_link))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      id: "keyserverAutocryptLookup",
      name: "autocrypt_lookup",
      checked: this.state.autocrypt_lookup,
      onChange: this.handleCheck
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "keyserverAutocryptLookup"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.keyserver_autocrypt_lookup), ". ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://www.mailvelope.com/faq#autocrypt",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.learn_more_link)))), /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.keyserver_key_binding_header), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      id: "keyserverKeyBinding",
      name: "key_binding",
      checked: this.state.key_binding,
      onChange: this.handleCheck
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "keyserverKeyBinding"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.keyserver_key_binding_label), ". ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://www.mailvelope.com/faq#key_binding",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.learn_more_link)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.handleSave(),
      className: "btn btn-primary",
      disabled: !this.state.modified
    }, router_map.form_save), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.setState(router_initialState(this.props)),
      className: "btn btn-secondary",
      disabled: !this.state.modified
    }, router_map.form_cancel))));
  }
}
router_KeyServer.propTypes = {
  prefs: (router_prop_types_default()).object,
  onChangePrefs: (router_prop_types_default()).func.isRequired
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/settings/Provider.scss
var router_Provider = __webpack_require__(3636);
;// ./src/app/settings/Provider.scss

      
      
      
      
      
      
      
      
      

var router_Provider_options = {};

router_Provider_options.styleTagTransform = (router_styleTagTransform_default());
router_Provider_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_Provider_options.insert = router_insertBySelector_default().bind(null, "head");
router_Provider_options.domAPI = (router_styleDomAPI_default());
router_Provider_options.insertStyleElement = (router_insertStyleElement_default());

var router_Provider_update = router_injectStylesIntoStyleTag_default()(router_Provider/* default */.A, router_Provider_options);




       /* harmony default export */ const router_settings_Provider = (router_Provider/* default */.A && router_Provider/* default */.A.locals ? router_Provider/* default */.A.locals : undefined);

;// ./src/app/settings/Provider.js
/**
 * Copyright (C) 2012-2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */











const router_GMAIL_SCOPE_READONLY = 'https://www.googleapis.com/auth/gmail.readonly';
const router_GMAIL_SCOPE_SEND = 'https://www.googleapis.com/auth/gmail.send';
const router_MV_PRODUCT_PAGE_URL = 'https://www.mailvelope.com/products?referrer=mailvelope-extension';
router_register(['alert_header_error', 'alert_header_important', 'alert_header_notice', 'alert_header_warning', 'dialog_popup_close', 'keygrid_user_email', 'keygrid_refresh', 'learn_more_link', 'provider_gmail_auth', 'provider_gmail_auth_cancel_btn', 'provider_gmail_auth_readonly', 'provider_gmail_auth_send', 'provider_gmail_auth_table_title', 'provider_gmail_dialog_auth_google_signin', 'provider_gmail_dialog_auth_intro', 'provider_gmail_dialog_auth_outro', 'provider_gmail_dialog_description', 'provider_gmail_dialog_gsuite_alert', 'provider_gmail_dialog_privacy_policy', 'provider_gmail_dialog_title', 'provider_gmail_integration', 'provider_gmail_integration_info', 'provider_gmail_integration_warning', 'provider_gmail_licensing_dialog_business_btn_info', 'provider_gmail_licensing_dialog_business_btn_price_info', 'provider_gmail_licensing_dialog_deactivate_btn', 'provider_gmail_licensing_dialog_para_1', 'provider_gmail_licensing_dialog_para_2', 'provider_gmail_licensing_dialog_para_3', 'provider_gmail_licensing_dialog_test_btn', 'provider_gmail_licensing_dialog_title', 'provider_gmail_licensing_table_caption', 'provider_gmail_licensing_table_title', 'settings_provider', 'watchlist_title_scan']);
const router_GMAIL_MATCH_PATTERN = '*.mail.google.com';
class router_Provider_Provider extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      gmail: false,
      // Gmail registered in authorized domains
      gmail_integration: false,
      gmail_authorized_emails: [],
      email: '',
      legacyGsuite: false,
      scopes: [],
      gmailCtrlId: '',
      watchList: null
    };
    this.handleGmailSwitch = this.handleGmailSwitch.bind(this);
    this.handleTestAPI = this.handleTestAPI.bind(this);
  }
  async componentDidMount() {
    await this.loadPrefs();
    if (/\/auth$/.test(this.props.location.pathname)) {
      const data = await router_getAppDataSlot();
      this.openOAuthDialog(data);
    } else if (/\/license$/.test(this.props.location.pathname)) {
      let {
        email
      } = (await router_getAppDataSlot()) || {};
      if (email) {
        sessionStorage.setItem('license-email', email);
      } else {
        email = sessionStorage.getItem('license-email');
      }
      this.checkLicense(email);
    }
  }
  async checkLicense(email) {
    if (!email) {
      return;
    }
    try {
      await router_port.send('check-license', {
        email
      });
      await this.loadAuthorisations();
    } catch (error) {
      this.setState({
        showLicenseModal: true
      });
    }
  }
  openOAuthDialog({
    email,
    legacyGsuite,
    scopes,
    gmailCtrlId
  }) {
    this.setState({
      showAuthModal: true,
      email,
      legacyGsuite,
      scopes,
      gmailCtrlId
    });
  }
  async getAuthorization() {
    try {
      const {
        email,
        legacyGsuite,
        scopes,
        gmailCtrlId
      } = this.state;
      await router_port.send('authorize-gmail', {
        email,
        legacyGsuite,
        scopes,
        gmailCtrlId
      });
      await this.loadAuthorisations();
    } catch (error) {
      this.props.onSetNotification({
        header: router_map.alert_header_warning,
        message: error.message,
        type: 'error',
        hideDelay: 10000
      });
    } finally {
      this.setState({
        showAuthModal: false
      });
    }
  }
  getAuthText(authorisation) {
    let text;
    switch (authorisation) {
      case router_GMAIL_SCOPE_READONLY:
        text = router_map.provider_gmail_auth_readonly;
        break;
      case router_GMAIL_SCOPE_SEND:
        text = router_map.provider_gmail_auth_send;
        break;
      default:
        text = '';
    }
    return text;
  }
  async loadPrefs() {
    const {
      provider
    } = await router_port.send('get-prefs');
    const gmail = await this.verifyHost(router_GMAIL_MATCH_PATTERN);
    this.setState({
      gmail,
      gmail_integration: provider.gmail_integration
    });
    await this.loadAuthorisations();
  }
  async verifyHost(host) {
    if (!this.state.watchList) {
      await this.loadWatchList();
    }
    const regex = new RegExp(router_matchPattern2RegExString(host));
    const match = this.state.watchList.some(({
      active,
      frames
    }) => active && frames.some(({
      scan,
      frame
    }) => scan && regex.test(frame)));
    return match;
  }
  async loadAuthorisations() {
    let gmailOAuthTokens = await router_port.send('get-oauth-tokens', {
      provider: 'gmail'
    });
    if (gmailOAuthTokens) {
      gmailOAuthTokens = Object.keys(gmailOAuthTokens).map(key => ({
        ...gmailOAuthTokens[key],
        email: key
      }));
    } else {
      gmailOAuthTokens = [];
    }
    this.setState({
      gmail_authorized_emails: gmailOAuthTokens
    });
  }
  async loadWatchList() {
    const watchList = await router_port.send('getWatchList');
    return new Promise(resolve => this.setState({
      watchList
    }, resolve));
  }
  async removeAuthorisation(email) {
    await router_port.send('remove-oauth-token', {
      provider: 'gmail',
      email
    });
    await this.loadAuthorisations();
  }
  handleTestAPI() {
    this.setState({
      showLicenseModal: false
    });
    window.open(`${router_MV_PRODUCT_PAGE_URL}&plan=mailvelope-business`, '_blank', 'noreferrer');
  }
  handleGmailSwitch({
    target
  }) {
    this.setState({
      [target.name]: target.checked
    }, () => this.handleSave());
  }
  async handleSave() {
    const update = {
      provider: {
        gmail_integration: this.state.gmail_integration
      }
    };
    await router_port.send('set-prefs', {
      prefs: update
    });
  }
  handleCancel() {
    this.loadPrefs();
  }
  authModal() {
    return /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.showAuthModal,
      toggle: () => this.setState(prevState => ({
        showAuthModal: !prevState.showAuthModal
      })),
      size: "medium",
      title: router_map.provider_gmail_dialog_title,
      footer: /*#__PURE__*/router_external_React_default().createElement("div", {
        className: "modal-footer justify-content-between"
      }, /*#__PURE__*/router_external_React_default().createElement("button", {
        type: "button",
        className: "btn btn-secondary",
        onClick: () => this.setState({
          showAuthModal: false,
          gmail_integration: false
        }, () => this.handleSave())
      }, router_map.dialog_popup_close), this.googleSignInButton())
    }, /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.provider_gmail_dialog_description), " ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://www.mailvelope.com/faq#gmail_permissions",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.learn_more_link)), !this.state.legacyGsuite && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      type: "warning",
      header: router_map.alert_header_notice
    }, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.provider_gmail_dialog_gsuite_alert,
      components: [/*#__PURE__*/router_external_React_default().createElement("a", {
        key: "0",
        href: "https://gsuite.google.com/",
        target: "_blank",
        rel: "noopener noreferrer"
      }), /*#__PURE__*/router_external_React_default().createElement("a", {
        key: "1",
        href: router_MV_PRODUCT_PAGE_URL,
        target: "_blank",
        rel: "noopener noreferrer"
      })]
    })), /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.provider_gmail_dialog_auth_intro,
      components: [/*#__PURE__*/router_external_React_default().createElement("strong", {
        key: "0"
      }, this.state.email)]
    })), /*#__PURE__*/router_external_React_default().createElement("ul", null, this.state.scopes.map((entry, index) => /*#__PURE__*/router_external_React_default().createElement("li", {
      key: index
    }, this.getAuthText(entry)))), /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.provider_gmail_dialog_auth_outro,
      components: [/*#__PURE__*/router_external_React_default().createElement("strong", {
        key: "0"
      }, this.state.email)]
    })), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "text-muted text-right mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("small", null, /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://www.mailvelope.com/en/privacy-policy",
      className: "text-reset",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.provider_gmail_dialog_privacy_policy)))));
  }
  googleSignInButton() {
    return /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "gSignInButton gSignInButtonBlue",
      onClick: () => this.getAuthorization()
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "gSignInButtonContentWrapper"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "gSignInButtonIcon"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      width: "18px",
      height: "18px",
      className: "gSignInButtonSvg",
      src: "../../../img/btn_google_sign_in.svg"
    })), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "gSignInButtonContents"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.provider_gmail_dialog_auth_google_signin))));
  }
  licenseModal() {
    return /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      isOpen: this.state.showLicenseModal,
      toggle: () => this.setState(prevState => ({
        showLicenseModal: !prevState.showLicenseModal
      })),
      size: "large",
      title: router_map.provider_gmail_licensing_dialog_title,
      footer: /*#__PURE__*/router_external_React_default().createElement("div", {
        className: "modal-footer"
      }, /*#__PURE__*/router_external_React_default().createElement("button", {
        type: "button",
        onClick: () => this.setState({
          showLicenseModal: false,
          gmail_integration: false
        }, () => this.handleSave()),
        className: "btn btn-secondary flex-grow-1"
      }, router_map.provider_gmail_licensing_dialog_deactivate_btn), /*#__PURE__*/router_external_React_default().createElement("button", {
        type: "button",
        className: "btn btn-primary flex-grow-1",
        onClick: this.handleTestAPI
      }, router_map.provider_gmail_licensing_dialog_test_btn))
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "licensing-dialog"
    }, /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.provider_gmail_licensing_dialog_para_1,
      components: [/*#__PURE__*/router_external_React_default().createElement("strong", {
        key: "0"
      })]
    })), /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.provider_gmail_licensing_dialog_para_2,
      components: [/*#__PURE__*/router_external_React_default().createElement("strong", {
        key: "0"
      }), /*#__PURE__*/router_external_React_default().createElement("strong", {
        key: "1"
      })]
    })), /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.provider_gmail_licensing_dialog_para_3,
      components: [/*#__PURE__*/router_external_React_default().createElement("strong", {
        key: "0"
      })]
    })), /*#__PURE__*/router_external_React_default().createElement("a", {
      className: "btn btn-light d-flex align-items-center justify-content-between",
      href: router_MV_PRODUCT_PAGE_URL,
      target: "_blank",
      rel: "noopener noreferrer"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      className: "mr-2",
      src: "../img/Mailvelope/product-business.svg",
      role: "presentation"
    }), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex flex-column align-items-start mr-2"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", null, "Business"), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "text-muted"
    }, router_map.provider_gmail_licensing_dialog_business_btn_info)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex flex-column justify-content-center align-items-center mr-2"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "price-tag"
    }, "3 \u20AC"), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "price-info text-muted"
    }, router_map.provider_gmail_licensing_dialog_business_btn_price_info)), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-arrow-right"
    }))));
  }
  render() {
    const gmail_authorized_gsuite = this.state.gmail_authorized_emails.filter(entry => entry.gsuite);
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "provider"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "mb-4"
    }, router_map.settings_provider), /*#__PURE__*/router_external_React_default().createElement("form", null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-switch"
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      disabled: !this.state.gmail,
      type: "checkbox",
      id: "gmail_integration",
      name: "gmail_integration",
      checked: this.state.gmail_integration,
      onChange: this.handleGmailSwitch
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "gmail_integration"
    }, /*#__PURE__*/router_external_React_default().createElement("span", null, router_map.provider_gmail_integration))), !this.state.gmail && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      className: "mt-2",
      type: "warning",
      header: router_map.alert_header_warning
    }, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.provider_gmail_integration_warning,
      components: [/*#__PURE__*/router_external_React_default().createElement("strong", {
        key: "0"
      }, router_GMAIL_MATCH_PATTERN), /*#__PURE__*/router_external_React_default().createElement(router_Link, {
        key: "1",
        to: "/settings/watchlist"
      }, router_map.dashboard_link_manage_domains)]
    })), this.state.gmail && /*#__PURE__*/router_external_React_default().createElement(router_Alert, {
      className: "mt-2",
      type: "info",
      header: router_map.alert_header_important
    }, router_map.provider_gmail_integration_info, " ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://www.mailvelope.com/faq#gmail_permissions",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.learn_more_link)), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "lead mt-3"
    }, router_map.provider_gmail_auth_table_title), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "table-responsive"
    }, /*#__PURE__*/router_external_React_default().createElement("table", {
      className: "table table-provider table-custom mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_email), /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.provider_gmail_auth), /*#__PURE__*/router_external_React_default().createElement("th", null))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, this.state.gmail_authorized_emails.map((entry, index) => /*#__PURE__*/router_external_React_default().createElement("tr", {
      key: index
    }, /*#__PURE__*/router_external_React_default().createElement("td", null, entry.email), /*#__PURE__*/router_external_React_default().createElement("td", null, entry.scope.split(' ').map(val => this.getAuthText(val)).filter(val => val !== '').join(', ')), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "actions"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.removeAuthorisation(entry.email),
      className: "btn btn-sm btn-secondary"
    }, router_map.provider_gmail_auth_cancel_btn)))))))), gmail_authorized_gsuite.length > 0 && /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "lead mt-3"
    }, router_map.provider_gmail_licensing_table_title), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "table-responsive"
    }, /*#__PURE__*/router_external_React_default().createElement("table", {
      className: "table table-provider table-custom mb-0"
    }, /*#__PURE__*/router_external_React_default().createElement("caption", null, /*#__PURE__*/router_external_React_default().createElement(router_Trans, {
      id: router_map.provider_gmail_licensing_table_caption,
      components: [/*#__PURE__*/router_external_React_default().createElement("a", {
        key: "0",
        href: "https://gsuite.google.com/",
        target: "_blank",
        rel: "noopener noreferrer"
      }), /*#__PURE__*/router_external_React_default().createElement("a", {
        key: "1",
        href: router_MV_PRODUCT_PAGE_URL,
        target: "_blank",
        rel: "noopener noreferrer"
      })]
    })), /*#__PURE__*/router_external_React_default().createElement("thead", null, /*#__PURE__*/router_external_React_default().createElement("tr", null, /*#__PURE__*/router_external_React_default().createElement("th", null, router_map.keygrid_user_email), /*#__PURE__*/router_external_React_default().createElement("th", {
      className: "text-center"
    }, router_map.watchlist_title_scan), /*#__PURE__*/router_external_React_default().createElement("th", null))), /*#__PURE__*/router_external_React_default().createElement("tbody", null, gmail_authorized_gsuite.map((entry, index) => /*#__PURE__*/router_external_React_default().createElement("tr", {
      key: index
    }, /*#__PURE__*/router_external_React_default().createElement("td", null, entry.email), entry.mvelo_license_issued ? /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "badge badge-pill badge-success"
    }, "Mailvelope Business")) : entry.legacyGsuite ? /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "badge badge-pill badge-success"
    }, "G Suite legacy free")) : /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-marker text-danger",
      "aria-hidden": "true"
    })), /*#__PURE__*/router_external_React_default().createElement("td", {
      className: "text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "actions"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      onClick: () => this.checkLicense(entry.email),
      className: "btn btn-sm btn-secondary",
      disabled: entry.mvelo_license_issued || entry.legacyGsuite ? true : ''
    }, router_map.keygrid_refresh))))))))))), this.authModal(), this.licenseModal());
  }
}
router_Provider_Provider.propTypes = {
  location: (router_prop_types_default()).object,
  onSetNotification: (router_prop_types_default()).func
};
// EXTERNAL MODULE: ./node_modules/clean-insights-sdk/dist/index.js
var router_dist = __webpack_require__(617);
;// ./src/lib/analytics.js
/**
 * Copyright (C) 2022 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */


const router_ONBOARDING_CAMPAIGN = 'onboarding';
const router_BEGIN = 'Load Extension';
const router_ADD_KEY = 'Added Key';
const router_COMMUNICATION = 'Communication';
const router_KEYSERVER_ADDRESS = 'noreply@mailvelope.com';
const router_ciActive = false;
const router_TRACKTYPES = {
  FIRST_PER_ACTION: 'first per action',
  FIRST_PER_NAME: 'first per name'
};
const router_ONBOARDING_CATEGORY = 'onboarding';
const router_ONBOARDING_STEPS = [{
  name: router_BEGIN,
  trackType: router_TRACKTYPES.FIRST_PER_ACTION
}, {
  name: router_ADD_KEY,
  trackType: router_TRACKTYPES.FIRST_PER_ACTION
}, {
  name: router_COMMUNICATION,
  trackType: router_TRACKTYPES.FIRST_PER_NAME
}];
const router_SELECTED_FOR_EXPERIMENT_KEY = 'Selected for Onboarding Experiment';
const router_PERCENT_OF_ONBOARDERS_TO_PROMPT = 1;

// Add basic K:V storage so we can keep timestamps and deduplicate actions.
class router_BrowserStoreWithKV extends router_dist/* BrowserStore */.SQ {
  constructor() {
    super();
    const data = this.load();
    if (data && data.kv) {
      this.kv = data.kv;
    } else {
      this.kv = {};
    }
  }
  set(key, value) {
    this.kv[key] = value;
  }
  get(key) {
    return this.kv[key];
  }
}
let router_store;
let router_ci;
function router_initAnalytics() {
  if (!router_ciActive) {
    return;
  }
  router_store = new router_BrowserStoreWithKV();
  router_ci = new CleanInsights({
    'server': 'https://metrics.cleaninsights.org/cleaninsights.php',
    'siteId': 22,
    'persistEveryNTimes': 1,
    'campaigns': {
      [router_ONBOARDING_CAMPAIGN]: {
        'start': '2024-03-01T00:00:00-00:00',
        'end': '2024-12-31T23:59:59-00:00',
        'aggregationPeriodLength': 1,
        // days
        'numberOfPeriods': 30
      }
    }
  }, router_store);
  // By calling this when the extension is initialized, we can make sure we flush the last events out.
  router_ci.persistAndSend();
}
function router_binInto10sIncrements(milliseconds) {
  return Math.floor(milliseconds / (10 * 1000)) * 10;
}
function router_getStep(action) {
  return router_ONBOARDING_STEPS.find(step => step.name === action);
}
function router_getPrecedingStep(action) {
  const index = router_ONBOARDING_STEPS.indexOf(router_getStep(action));
  return index > 0 ? router_ONBOARDING_STEPS[index - 1] : null;
}

/* Record that an onboarding step was completed and how long it's been since the first time the
 * previous action was completed.
 *
 * Pre-requisite actions are listed in ONBOARDING_STEPS.  Names capture the specific mechanism
 * used to perform the action e.g. "Generate" or "Import".  The same action will be recorded once
 * for each unique name.
 */
function router_recordOnboardingStep(action, name) {
  if (!router_ciActive) {
    return;
  }
  const this_step_performed_at = Date.now();
  const last_step = router_getPrecedingStep(action);
  const last_step_timestamp = last_step && router_store.get(last_step.name);
  let elapsed = null;
  if (last_step_timestamp) {
    elapsed = this_step_performed_at - last_step_timestamp; // Report seconds, not milliseconds.
    elapsed = router_binInto10sIncrements(elapsed);
  }
  if (router_store.get(action) === undefined) {
    // Save the timestamp of the first time this action was performed.
    router_store.set(action, this_step_performed_at);
  } else if (router_getStep(action).trackType === router_TRACKTYPES.FIRST_PER_ACTION) {
    return;
  }
  // Never record a category, action, name tuple more than once.
  const can_tuple = [router_ONBOARDING_CATEGORY, action, name];
  if (!router_store.get(can_tuple)) {
    router_ci.measureEvent(router_ONBOARDING_CATEGORY, action, router_ONBOARDING_CAMPAIGN, name, elapsed);
    router_store.set(can_tuple, true);
    router_ci.persist();
  }
}

/* Decide once whether the user is selected for the experiment.  If they're selected and
 * haven't yet responded to the consent dialog, show it.
 */
function router_shouldSeeConsentDialog() {
  if (!router_ciActive) {
    return;
  }
  let selected = router_store.get(router_SELECTED_FOR_EXPERIMENT_KEY);
  if (selected === undefined) {
    selected = Math.random() < router_PERCENT_OF_ONBOARDERS_TO_PROMPT / 100;
    router_store.set(router_SELECTED_FOR_EXPERIMENT_KEY, selected);
    router_ci.persist();
  }
  const hasResponded = router_ci.stateOfCampaign(router_ONBOARDING_CAMPAIGN) !== ConsentState.unknown;
  return selected && !hasResponded;
}
function router_denyCampaign(campaignId) {
  if (!router_ciActive) {
    return;
  }
  return router_ci.denyCampaign(campaignId);
}
function router_isCampaignCurrentlyGranted(campaignId) {
  if (!router_ciActive) {
    return;
  }
  return router_ci.isCampaignCurrentlyGranted(campaignId);
}
function router_grantCampaign(campaignId) {
  if (!router_ciActive) {
    return;
  }
  return router_ci.grantCampaign(campaignId);
}
;// ./src/app/settings/Analytics.js
/**
 * Copyright (C) 2022 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */





router_register(['form_cancel', 'form_save', 'provider_analytics_consent', 'settings_analytics', 'analytics_consent_description', 'analytics_consent_disabled_tooltip']);
class router_Analytics extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.state = {
      onboardingConsent: false,
      modified: false
    };
    this.getCurrentConsents = this.getCurrentConsents.bind(this);
    this.handleChange = this.handleChange.bind(this);
    this.handleSave = this.handleSave.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
  }
  componentDidMount() {
    this.getCurrentConsents();
  }
  getCurrentConsents() {
    router_port.send('get-consent', {
      campaignId: router_ONBOARDING_CAMPAIGN
    }).then(consent => {
      this.setState({
        onboardingConsent: consent
      });
    });
  }
  handleChange(event) {
    const target = event.target;
    this.setState(() => {
      const update = {
        [target.name]: target.checked,
        modified: true
      };
      return update;
    });
  }
  handleSave() {
    if (this.state.onboardingConsent) {
      router_port.emit('grant-consent', {
        campaignId: router_ONBOARDING_CAMPAIGN
      });
    } else {
      router_port.emit('deny-consent', {
        campaignId: router_ONBOARDING_CAMPAIGN
      });
    }
    this.setState({
      modified: false
    });
  }
  handleCancel() {
    this.getCurrentConsents();
    this.setState({
      modified: false
    });
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "analytics"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "mb-4"
    }, router_map.settings_analytics), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "form-group mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("h3", null, router_map.provider_analytics_consent), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "custom-control custom-checkbox",
      title: !this.state.onboardingConsent && !this.state.modified && router_map.analytics_consent_disabled_tooltip
    }, /*#__PURE__*/router_external_React_default().createElement("input", {
      className: "custom-control-input",
      type: "checkbox",
      checked: this.state.onboardingConsent,
      disabled: !this.state.onboardingConsent && !this.state.modified,
      onChange: this.handleChange,
      id: "onboardingConsent",
      name: "onboardingConsent"
    }), /*#__PURE__*/router_external_React_default().createElement("label", {
      className: "custom-control-label",
      htmlFor: "onboardingConsent"
    }, router_map.analytics_consent_description, " ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://www.mailvelope.com/faq#analytics",
      target: "_blank",
      rel: "noopener noreferrer"
    }, router_map.learn_more_link)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "btn-bar"
    }, /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      id: "secBtnSave",
      className: "btn btn-primary",
      onClick: this.handleSave,
      disabled: !this.state.modified
    }, router_map.form_save), /*#__PURE__*/router_external_React_default().createElement("button", {
      type: "button",
      className: "btn btn-secondary",
      onClick: this.handleCancel,
      disabled: !this.state.modified
    }, router_map.form_cancel)));
  }
}
;// ./src/app/settings/Settings.js
/**
 * Copyright (C) 2019 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */















router_register(['settings_analytics', 'settings_general', 'settings_keyserver', 'settings_provider', 'settings_security', 'settings_security_background', 'settings_security_log', 'settings_watchlist']);
class router_Settings extends (router_external_React_default()).Component {
  constructor() {
    super();
    this.state = {
      notifications: []
    };
    this.handleSetNotification = this.handleSetNotification.bind(this);
  }
  handleSetNotification({
    header = null,
    message,
    type = null,
    hideDelay = 5500
  }) {
    const notification = {
      id: Date.now(),
      header,
      message,
      hideDelay,
      type
    };
    this.setState(prevState => ({
      notifications: [...prevState.notifications, notification]
    }));
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement((router_external_React_default()).Fragment, null, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "jumbotron"
    }, /*#__PURE__*/router_external_React_default().createElement("section", {
      className: "card mv-options"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "card-body"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-4 col-lg-3 mb-4"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      role: "navigation"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "nav flex-column nav-pills",
      id: "v-pills-tab",
      role: "tablist",
      "aria-orientation": "vertical"
    }, /*#__PURE__*/router_external_React_default().createElement(router_NavPill, {
      to: "/settings/general"
    }, router_map.settings_general), /*#__PURE__*/router_external_React_default().createElement(router_NavPill, {
      to: "/settings/watchlist"
    }, router_map.settings_watchlist), /*#__PURE__*/router_external_React_default().createElement(router_NavPill, {
      to: "/settings/security"
    }, router_map.settings_security), /*#__PURE__*/router_external_React_default().createElement(router_NavPill, {
      to: "/settings/security-background"
    }, router_map.settings_security_background), /*#__PURE__*/router_external_React_default().createElement(router_NavPill, {
      to: "/settings/provider"
    }, router_map.settings_provider), /*#__PURE__*/router_external_React_default().createElement(router_NavPill, {
      to: "/settings/security-log"
    }, router_map.settings_security_log), /*#__PURE__*/router_external_React_default().createElement(router_NavPill, {
      to: "/settings/key-server"
    }, router_map.settings_keyserver), /*#__PURE__*/router_external_React_default().createElement(router_NavPill, {
      to: "/settings/analytics"
    }, router_map.settings_analytics)))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-8 col-lg-9"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings/general",
      component: router_General
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings/provider",
      render: ({
        location
      }) => /*#__PURE__*/router_external_React_default().createElement(router_Provider_Provider, {
        onSetNotification: this.handleSetNotification,
        location: location
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings/security",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_Security, {
        onSetNotification: this.handleSetNotification
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings/security-background",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_SecurityBackground_SecurityBackground, {
        prefs: this.props.prefs,
        onChangePrefs: this.props.onChangePrefs
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings/watchlist",
      component: router_WatchList
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings/security-log",
      component: router_SecurityLog
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings/key-server",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_KeyServer, {
        prefs: this.props.prefs,
        onChangePrefs: this.props.onChangePrefs
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings/analytics",
      component: router_Analytics
    })))))), /*#__PURE__*/router_external_React_default().createElement(router_Notifications, {
      items: this.state.notifications
    }));
  }
}
router_Settings.propTypes = {
  onChangePrefs: (router_prop_types_default()).func,
  prefs: (router_prop_types_default()).object
};
;// ./src/app/settings/AnalyticsConsent.js
function router_AnalyticsConsent_extends() { return router_AnalyticsConsent_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, router_AnalyticsConsent_extends.apply(null, arguments); }
/**
 * Copyright (C) 2024 Mailvelope GmbH
 * Licensed under the GNU Affero General Public License version 3
 */








router_register(['analytics_interstitial_header', 'analytics_consent_interstitial_message', 'analytics_consent_interstitial_learn_more', 'analytics_consent_interstitial_learn_more_explanation', 'analytics_consent_interstitial_We_Collect_Minimal_Data_Title', 'analytics_consent_interstitial_We_Collect_Minimal_Data', 'analytics_consent_interstitial_We_Respect_your_Choice_Title', 'analytics_consent_interstitial_We_Respect_your_Choice', 'analytics_consent_interstitial_Your_Privacy_is_Preserved_Title', 'analytics_consent_interstitial_Your_Privacy_is_Preserved_Pt1', 'analytics_consent_interstitial_Your_Privacy_is_Preserved_Pt2', 'analytics_consent_interstitial_Faq', 'analytics_consent_interstitial_Btn_Learn_More', 'dialog_no_button', 'dialog_yes_button', 'header_analyticsconsent_modal', 'paragraph_analyticsconsent_modal', 'button_analyticsconsent_modal']);
function router_withHistory(Component) {
  return function WrapperComponent(props) {
    const history = router_useHistory();
    return /*#__PURE__*/router_external_React_default().createElement(Component, router_AnalyticsConsent_extends({}, props, {
      history: history
    }));
  };
}
class router_AnalyticsConsent extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    this.handleSelection = this.handleSelection.bind(this);
    this.toggleExpansion = this.toggleExpansion.bind(this);
    this.toggleModal = this.toggleModal.bind(this);
    this.state = {
      expanded: false,
      showModal: false
    };
  }
  handleSelection(event) {
    const consented = event.target.getAttribute('data-selection') === 'yes';
    if (consented) {
      router_port.emit('grant-consent', {
        campaignId: router_ONBOARDING_CAMPAIGN
      });
    } else {
      router_port.emit('deny-consent', {
        campaignId: router_ONBOARDING_CAMPAIGN
      });
    }
    this.props.history.push('/keyring');
  }
  toggleExpansion() {
    this.setState(prevState => ({
      expanded: !prevState.expanded
    }));
  }
  toggleModal() {
    this.setState(prevState => ({
      showModal: !prevState.showModal
    }));
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "jumbotron"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Modal_Modal, {
      className: "text-center mt-5",
      isOpen: this.state.showModal,
      onHide: this.toggleModal,
      hideHeader: true,
      hideFooter: true
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      className: "img-fluid my-4",
      src: "/img/ic_thankyou.svg"
    }), /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: ""
    }, router_map.header_analyticsconsent_modal), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: ""
    }, router_map.paragraph_analyticsconsent_modal), /*#__PURE__*/router_external_React_default().createElement("button", {
      className: "btn btn-consent mb-4 ",
      type: "button",
      "data-selection": "yes",
      onClick: this.handleSelection
    }, router_map.button_analyticsconsent_modal)), /*#__PURE__*/router_external_React_default().createElement("section", {
      className: "card text-center"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "container"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row justify-content-center"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "round-container my-4 d-flex justify-content-center align-items-center"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      className: "img-fluid",
      src: "/img/hands.svg"
    })))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "container"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row justify-content-center"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-12 mt-2"
    }, /*#__PURE__*/router_external_React_default().createElement("h2", {
      className: "text-center"
    }, router_map.analytics_interstitial_header)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-12 my-2 d-flex justify-content-center"
    }, /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "text-center w-50 mx-2"
    }, router_map.analytics_consent_interstitial_message)), /*#__PURE__*/router_external_React_default().createElement("button", {
      className: "btn btn-consent mx-2",
      type: "button",
      "data-selection": "no",
      onClick: this.handleSelection
    }, router_map.dialog_no_btn), /*#__PURE__*/router_external_React_default().createElement("button", {
      className: "btn btn-consent mx-2",
      type: "button",
      "data-selection": "yes",
      onClick: this.toggleModal
    }, router_map.dialog_yes_btn))), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "accordion-control my-4",
      onClick: this.toggleExpansion
    }, router_map.analytics_consent_interstitial_learn_more, " ", /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "collapse-icon"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      className: "img-fluid",
      src: "/img/arrow.svg"
    }))), /*#__PURE__*/router_external_React_default().createElement("div", {
      id: "learnhow",
      className: `collapse my-4 ${this.state.expanded ? 'show mx-5' : ''}`
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "row mx-5"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-1"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "collapse-icon"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      className: "img-fluid w-100",
      src: "/img/minimaldata.svg"
    }))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-5 text-left"
    }, /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "font-weight-bold  mb-0"
    }, router_map.analytics_consent_interstitial_We_Collect_Minimal_Data_Title), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "text-left"
    }, router_map.analytics_consent_interstitial_We_Collect_Minimal_Data)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-1"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "collapse-icon"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      className: "img-fluid w-100",
      src: "/img/respectChoise.svg"
    }))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-5 text-left"
    }, /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "font-weight-bold  mb-0"
    }, router_map.analytics_consent_interstitial_We_Respect_your_Choice_Title), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "text-left"
    }, router_map.analytics_consent_interstitial_We_Respect_your_Choice)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-1"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "collapse-icon"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      className: "img-fluid w-100",
      src: "/img/privacyReserved.svg"
    }))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-5 text-left"
    }, /*#__PURE__*/router_external_React_default().createElement("p", {
      className: "font-weight-bold  mb-0"
    }, router_map.analytics_consent_interstitial_Your_Privacy_is_Preserved_Title), /*#__PURE__*/router_external_React_default().createElement("p", {
      className: ""
    }, router_map.analytics_consent_interstitial_Your_Privacy_is_Preserved_Pt1, " ", /*#__PURE__*/router_external_React_default().createElement("a", {
      href: "https://cleaninsights.org/",
      target: "_blank",
      rel: "noopener noreferrer"
    }, "Clean Insights"), " ", router_map.analytics_consent_interstitial_Your_Privacy_is_Preserved_Pt2)), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-1"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "collapse-icon"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      className: "img-fluid w-100",
      src: "/img/faqInfo.svg"
    }))), /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "col-md-5 text-left"
    }, /*#__PURE__*/router_external_React_default().createElement("p", {
      className: ""
    }, router_map.analytics_consent_interstitial_Faq), /*#__PURE__*/router_external_React_default().createElement("a", {
      className: "btn btn-consent",
      href: "https://mailvelope.com/faq#analytics",
      target: "_blank",
      rel: "noopener noreferrer",
      role: "button"
    }, router_map.analytics_consent_interstitial_Btn_Learn_More))))));
  }
}
router_AnalyticsConsent.propTypes = {
  history: (router_prop_types_default()).object
};
/* harmony default export */ const router_settings_AnalyticsConsent = (router_withHistory(router_AnalyticsConsent));
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/app/app.scss
var router_app = __webpack_require__(6288);
;// ./src/app/app.scss

      
      
      
      
      
      
      
      
      

var router_app_options = {};

router_app_options.styleTagTransform = (router_styleTagTransform_default());
router_app_options.setAttributes = (router_setAttributesWithoutAttributes_default());
router_app_options.insert = router_insertBySelector_default().bind(null, "head");
router_app_options.domAPI = (router_styleDomAPI_default());
router_app_options.insertStyleElement = (router_insertStyleElement_default());

var router_app_update = router_injectStylesIntoStyleTag_default()(router_app/* default */.A, router_app_options);




       /* harmony default export */ const router_app_app = (router_app/* default */.A && router_app/* default */.A.locals ? router_app/* default */.A.locals : undefined);

;// ./src/app/app.js
/**
 * Mailvelope - secure email with OpenPGP encryption for Webmail
 * Copyright (C) 2012-2018 Mailvelope GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License version 3
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


















router_register(['decrypt_home', 'encrypt_home', 'feature_banner_new_security_background_btn', 'feature_banner_new_security_background_text', 'keyring_header', 'options_docu', 'options_home', 'options_title']);
let router_port; // EventHandler

const router_AppOptions = /*#__PURE__*/router_external_React_default().createContext({
  gnupg: false
});
class router_App extends (router_external_React_default()).Component {
  constructor(props) {
    super(props);
    const query = new URLSearchParams(document.location.search);
    // init messaging
    router_port = router_EventHandler.connect(`app-${this.getId(query)}`);
    router_port.on('terminate', this.terminate);
    router_mapToLocal();
    document.title = router_map.options_title;
    // set initial state
    this.state = {
      prefs: null,
      // global preferences
      gnupg: false,
      // GnuPG installed
      collapse: false,
      terminate: false,
      version: '' // Mailvelope version
    };
    this.handleChangePrefs = this.handleChangePrefs.bind(this);
    this.toggleNavbar = this.toggleNavbar.bind(this);
  }
  getId(query) {
    if (window.top === window.self) {
      // top level frame
      return router_APP_TOP_FRAME_ID;
    } else {
      // embedded frame
      let id = query.get('id');
      if (id === router_APP_TOP_FRAME_ID) {
        id = '';
      }
      return id;
    }
  }
  terminate() {
    this.setState({
      terminate: true
    }, () => this.port.disconnect());
  }
  componentDidMount() {
    router_port.send('get-version').then(version => this.setState({
      version
    }));
    router_port.send('get-prefs').then(prefs => this.setState({
      prefs
    }));
    router_port.send('get-gnupg-status').then(gnupg => this.setState({
      gnupg
    }));
  }
  handleChangePrefs(update) {
    return new Promise(resolve => {
      router_port.send('set-prefs', {
        prefs: update
      }).then(() => router_port.send('get-prefs').then(prefs => this.setState({
        prefs
      }, () => resolve())));
    });
  }
  toggleNavbar() {
    this.setState(state => ({
      collapse: !state.collapse
    }));
  }
  render() {
    return /*#__PURE__*/router_external_React_default().createElement(router_SecurityBG_SecurityBG, {
      port: router_port
    }, /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      exact: true,
      path: "/",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: "/keyring"
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      exact: true,
      path: "/encryption",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: "/encryption/file-encrypt"
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      exact: true,
      path: "/settings",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_Redirect, {
        to: "/settings/general"
      })
    }), /*#__PURE__*/router_external_React_default().createElement("nav", {
      className: "navbar flex-column fixed-top navbar-expand-md navbar-light bg-white"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "container-lg py-2"
    }, /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      to: "/dashboard",
      className: "navbar-brand"
    }, /*#__PURE__*/router_external_React_default().createElement("img", {
      src: "../img/Mailvelope/logo.svg",
      width: "175",
      height: "32",
      className: "d-inline-block align-top",
      alt: ""
    })), /*#__PURE__*/router_external_React_default().createElement("button", {
      className: "navbar-toggler",
      type: "button",
      onClick: this.toggleNavbar,
      "aria-controls": "navbarSupportedContent",
      "aria-expanded": "false",
      "aria-label": "Toggle navigation"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "navbar-toggler-icon"
    })), /*#__PURE__*/router_external_React_default().createElement(router_es_Collapse, {
      isOpen: this.state.collapse,
      className: "navbar-collapse"
    }, /*#__PURE__*/router_external_React_default().createElement("ul", {
      className: "navbar-nav mr-auto"
    }, /*#__PURE__*/router_external_React_default().createElement(router_util_NavLink, {
      to: "/keyring"
    }, router_map.keyring_header), /*#__PURE__*/router_external_React_default().createElement(router_util_NavLink, {
      to: "/encrypt"
    }, router_map.encrypt_home), /*#__PURE__*/router_external_React_default().createElement(router_util_NavLink, {
      to: "/decrypt"
    }, router_map.decrypt_home), /*#__PURE__*/router_external_React_default().createElement(router_util_NavLink, {
      to: "/settings"
    }, router_map.options_home)), /*#__PURE__*/router_external_React_default().createElement("ul", {
      className: "navbar-nav"
    }, /*#__PURE__*/router_external_React_default().createElement("li", {
      className: "nav-item"
    }, /*#__PURE__*/router_external_React_default().createElement("a", {
      className: "nav-link",
      href: "https://www.mailvelope.com/faq",
      target: "_blank",
      rel: "noreferrer noopener",
      tabIndex: "0"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "icon icon-help d-none d-md-inline",
      "aria-hidden": "true"
    }), /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "d-md-none"
    }, router_map.options_docu)))))), this.state.prefs && !this.state.prefs.security.personalized && this.props.location.pathname !== '/settings/security-background' && /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "feature-banner d-flex align-items-center justify-content-center align-self-stretch p-3"
    }, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "mr-3"
    }, router_map.feature_banner_new_security_background_text), /*#__PURE__*/router_external_React_default().createElement(router_Link, {
      to: "/settings/security-background",
      className: "btn btn-sm btn-primary"
    }, router_map.feature_banner_new_security_background_btn))), /*#__PURE__*/router_external_React_default().createElement("main", {
      className: `container-lg ${this.state.prefs && !this.state.prefs.security.personalized && this.props.location.pathname !== '/settings/security-background' ? 'featured' : ''}`,
      role: "main"
    }, /*#__PURE__*/router_external_React_default().createElement(router_AppOptions.Provider, {
      value: {
        gnupg: this.state.gnupg
      }
    }, /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/dashboard",
      component: router_Dashboard_Dashboard
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/keyring",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_Keyring, {
        prefs: this.state.prefs
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/encrypt",
      component: router_Encrypt_Encrypt
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/decrypt",
      component: router_Decrypt_Decrypt
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/settings",
      render: () => /*#__PURE__*/router_external_React_default().createElement(router_Settings, {
        prefs: this.state.prefs,
        onChangePrefs: this.handleChangePrefs
      })
    }), /*#__PURE__*/router_external_React_default().createElement(router_Route, {
      path: "/analytics-consent",
      component: router_settings_AnalyticsConsent
    }))), /*#__PURE__*/router_external_React_default().createElement("footer", {
      className: "container-lg"
    }, /*#__PURE__*/router_external_React_default().createElement("div", {
      className: "d-flex justify-content-between"
    }, /*#__PURE__*/router_external_React_default().createElement("p", null, /*#__PURE__*/router_external_React_default().createElement("span", {
      className: "pr-2"
    }, "\xA9 2024"), /*#__PURE__*/router_external_React_default().createElement("a", {
      className: "text-reset",
      href: "https://mailvelope.com/about",
      target: "_blank",
      rel: "noreferrer noopener",
      tabIndex: "0"
    }, "Mailvelope GmbH")), /*#__PURE__*/router_external_React_default().createElement("p", {
      id: "version",
      className: "d-sm-none d-md-block"
    }, this.state.version))), this.state.terminate && /*#__PURE__*/router_external_React_default().createElement(router_Terminate_Terminate, null));
  }
}
router_App.propTypes = {
  location: (router_prop_types_default()).object
};
/* harmony default export */ const router_src_app_app = (router_withRouter(router_App));

/**
 * Retrieve slot ID from query parameter and get slot data from background
 * @return {Promise.<String>}
 */
function router_getAppDataSlot() {
  const query = new URLSearchParams(document.location.search);
  const slotId = query.get('slotId');
  return router_port.send('get-app-data-slot', {
    slotId
  });
}
;// ./src/app/router.js
/**
 * Mailvelope - secure email with OpenPGP encryption for Webmail
 * Copyright (C) 2017 Mailvelope GmbH
 */





document.addEventListener('DOMContentLoaded', router_init);
function router_init() {
  const root = document.createElement('div');
  router_external_ReactDOM_default().render(/*#__PURE__*/router_external_React_default().createElement(router_HashRouter, null, /*#__PURE__*/router_external_React_default().createElement(router_src_app_app, null)), document.body.appendChild(root));
}
})();

/******/ })()
;